var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__12305__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__12305 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12305__delegate.call(this, array, i, idxs)
    };
    G__12305.cljs$lang$maxFixedArity = 2;
    G__12305.cljs$lang$applyTo = function(arglist__12306) {
      var array = cljs.core.first(arglist__12306);
      arglist__12306 = cljs.core.next(arglist__12306);
      var i = cljs.core.first(arglist__12306);
      var idxs = cljs.core.rest(arglist__12306);
      return G__12305__delegate(array, i, idxs)
    };
    G__12305.cljs$core$IFn$_invoke$arity$variadic = G__12305__delegate;
    return G__12305
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__12307__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__12307 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12307__delegate.call(this, array, idx, idx2, idxv)
    };
    G__12307.cljs$lang$maxFixedArity = 3;
    G__12307.cljs$lang$applyTo = function(arglist__12308) {
      var array = cljs.core.first(arglist__12308);
      arglist__12308 = cljs.core.next(arglist__12308);
      var idx = cljs.core.first(arglist__12308);
      arglist__12308 = cljs.core.next(arglist__12308);
      var idx2 = cljs.core.first(arglist__12308);
      var idxv = cljs.core.rest(arglist__12308);
      return G__12307__delegate(array, idx, idx2, idxv)
    };
    G__12307.cljs$core$IFn$_invoke$arity$variadic = G__12307__delegate;
    return G__12307
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3394__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3394__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3394__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3394__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3394__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3215__auto__ = self__._hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__12310 = null;
  var G__12310__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__12310__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__12310 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12310__2.call(this, self__, coll);
      case 3:
        return G__12310__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12310
}();
cljs.core.Symbol.prototype.apply = function(self__, args12309) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12309.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12312 = coll;
      if(G__12312) {
        if(function() {
          var or__3943__auto__ = G__12312.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12312.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12314 = coll;
      if(G__12314) {
        if(function() {
          var or__3943__auto__ = G__12314.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12314.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12316 = coll;
      if(G__12316) {
        if(function() {
          var or__3943__auto__ = G__12316.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12316.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__12318 = coll;
      if(G__12318) {
        if(function() {
          var or__3943__auto__ = G__12318.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12318.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__12319__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12320 = y;
            var G__12321 = cljs.core.first.call(null, more);
            var G__12322 = cljs.core.next.call(null, more);
            x = G__12320;
            y = G__12321;
            more = G__12322;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12319 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12319__delegate.call(this, x, y, more)
    };
    G__12319.cljs$lang$maxFixedArity = 2;
    G__12319.cljs$lang$applyTo = function(arglist__12323) {
      var x = cljs.core.first(arglist__12323);
      arglist__12323 = cljs.core.next(arglist__12323);
      var y = cljs.core.first(arglist__12323);
      var more = cljs.core.rest(arglist__12323);
      return G__12319__delegate(x, y, more)
    };
    G__12319.cljs$core$IFn$_invoke$arity$variadic = G__12319__delegate;
    return G__12319
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__12324 = nval;
            var G__12325 = n + 1;
            val = G__12324;
            n = G__12325;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12326 = nval;
          var G__12327 = n + 1;
          val__$1 = G__12326;
          n = G__12327;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12328 = nval;
          var G__12329 = n + 1;
          val__$1 = G__12328;
          n = G__12329;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__12330 = nval;
            var G__12331 = n + 1;
            val = G__12330;
            n = G__12331;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12332 = nval;
          var G__12333 = n + 1;
          val__$1 = G__12332;
          n = G__12333;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12334 = nval;
          var G__12335 = n + 1;
          val__$1 = G__12334;
          n = G__12335;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__12337 = x;
  if(G__12337) {
    if(function() {
      var or__3943__auto__ = G__12337.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12337.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__12337.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12337)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__12337)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__12339 = x;
  if(G__12339) {
    if(function() {
      var or__3943__auto__ = G__12339.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12339.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__12339.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12339)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__12339)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function(col, f) {
  return cljs.core.array_reduce.call(null, col, f)
};
cljs.core._reduce["array"] = function(col, f, start) {
  return cljs.core.array_reduce.call(null, col, f, start)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__12340 = sn;
      s = G__12340;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__12341__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__12342 = conj.call(null, coll, x);
          var G__12343 = cljs.core.first.call(null, xs);
          var G__12344 = cljs.core.next.call(null, xs);
          coll = G__12342;
          x = G__12343;
          xs = G__12344;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__12341 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12341__delegate.call(this, coll, x, xs)
    };
    G__12341.cljs$lang$maxFixedArity = 2;
    G__12341.cljs$lang$applyTo = function(arglist__12345) {
      var coll = cljs.core.first(arglist__12345);
      arglist__12345 = cljs.core.next(arglist__12345);
      var x = cljs.core.first(arglist__12345);
      var xs = cljs.core.rest(arglist__12345);
      return G__12341__delegate(coll, x, xs)
    };
    G__12341.cljs$core$IFn$_invoke$arity$variadic = G__12341__delegate;
    return G__12341
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__12346 = cljs.core.next.call(null, s);
      var G__12347 = acc + 1;
      s = G__12346;
      acc = G__12347;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__12349 = coll;
      if(G__12349) {
        if(function() {
          var or__3943__auto__ = G__12349.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12349.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__12350 = cljs.core.next.call(null, coll);
              var G__12351 = n - 1;
              coll = G__12350;
              n = G__12351;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__12352 = cljs.core.next.call(null, coll);
              var G__12353 = n - 1;
              var G__12354 = not_found;
              coll = G__12352;
              n = G__12353;
              not_found = G__12354;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12359 = coll;
        if(G__12359) {
          if(function() {
            var or__3943__auto__ = G__12359.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12359.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__12360 = coll;
                  if(G__12360) {
                    if(function() {
                      var or__3943__auto__ = G__12360.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__12360.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__12360.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12360)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12360)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__12361 = coll;
        if(G__12361) {
          if(function() {
            var or__3943__auto__ = G__12361.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12361.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__12362 = coll;
                  if(G__12362) {
                    if(function() {
                      var or__3943__auto__ = G__12362.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__12362.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__12362.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12362)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12362)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__12365 = o;
        if(G__12365) {
          if(function() {
            var or__3943__auto__ = G__12365.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12365.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__12366 = o;
        if(G__12366) {
          if(function() {
            var or__3943__auto__ = G__12366.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12366.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__12367__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__12368 = ret;
          var G__12369 = cljs.core.first.call(null, kvs);
          var G__12370 = cljs.core.second.call(null, kvs);
          var G__12371 = cljs.core.nnext.call(null, kvs);
          coll = G__12368;
          k = G__12369;
          v = G__12370;
          kvs = G__12371;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__12367 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12367__delegate.call(this, coll, k, v, kvs)
    };
    G__12367.cljs$lang$maxFixedArity = 3;
    G__12367.cljs$lang$applyTo = function(arglist__12372) {
      var coll = cljs.core.first(arglist__12372);
      arglist__12372 = cljs.core.next(arglist__12372);
      var k = cljs.core.first(arglist__12372);
      arglist__12372 = cljs.core.next(arglist__12372);
      var v = cljs.core.first(arglist__12372);
      var kvs = cljs.core.rest(arglist__12372);
      return G__12367__delegate(coll, k, v, kvs)
    };
    G__12367.cljs$core$IFn$_invoke$arity$variadic = G__12367__delegate;
    return G__12367
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__12373__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12374 = ret;
          var G__12375 = cljs.core.first.call(null, ks);
          var G__12376 = cljs.core.next.call(null, ks);
          coll = G__12374;
          k = G__12375;
          ks = G__12376;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__12373 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12373__delegate.call(this, coll, k, ks)
    };
    G__12373.cljs$lang$maxFixedArity = 2;
    G__12373.cljs$lang$applyTo = function(arglist__12377) {
      var coll = cljs.core.first(arglist__12377);
      arglist__12377 = cljs.core.next(arglist__12377);
      var k = cljs.core.first(arglist__12377);
      var ks = cljs.core.rest(arglist__12377);
      return G__12373__delegate(coll, k, ks)
    };
    G__12373.cljs$core$IFn$_invoke$arity$variadic = G__12373__delegate;
    return G__12373
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__12379 = f;
    if(G__12379) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__12379.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__12379.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__12379)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__12379)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__12385 = o;
        if(G__12385) {
          if(function() {
            var or__3943__auto__ = G__12385.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12385.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__12385.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12385)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__12385)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t12386 !== "undefined") {
      }else {
        goog.provide("cljs.core.t12386");
        cljs.core.t12386 = function(meta, o, with_meta, meta12387) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta12387 = meta12387;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t12386.cljs$lang$type = true;
        cljs.core.t12386.cljs$lang$ctorStr = "cljs.core/t12386";
        cljs.core.t12386.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
          return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/t12386")
        };
        cljs.core.t12386.prototype.call = function() {
          var G__12390__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__12390 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__12390__delegate.call(this, self__, args)
          };
          G__12390.cljs$lang$maxFixedArity = 1;
          G__12390.cljs$lang$applyTo = function(arglist__12391) {
            var self__ = cljs.core.first(arglist__12391);
            var args = cljs.core.rest(arglist__12391);
            return G__12390__delegate(self__, args)
          };
          G__12390.cljs$core$IFn$_invoke$arity$variadic = G__12390__delegate;
          return G__12390
        }();
        cljs.core.t12386.prototype.apply = function(self__, args12389) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args12389.slice()))
        };
        cljs.core.t12386.prototype.cljs$core$Fn$ = true;
        cljs.core.t12386.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12388) {
          var self__ = this;
          return self__.meta12387
        };
        cljs.core.t12386.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12388, meta12387__$1) {
          var self__ = this;
          return new cljs.core.t12386(self__.meta, self__.o, self__.with_meta, meta12387__$1)
        };
        cljs.core.__GT_t12386 = function __GT_t12386(meta__$1, o__$1, with_meta__$1, meta12387) {
          return new cljs.core.t12386(meta__$1, o__$1, with_meta__$1, meta12387)
        }
      }
      return new cljs.core.t12386(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__12393 = o;
    if(G__12393) {
      if(function() {
        var or__3943__auto__ = G__12393.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12393.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__12393.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12393)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__12393)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__12394__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__12395 = ret;
          var G__12396 = cljs.core.first.call(null, ks);
          var G__12397 = cljs.core.next.call(null, ks);
          coll = G__12395;
          k = G__12396;
          ks = G__12397;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__12394 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12394__delegate.call(this, coll, k, ks)
    };
    G__12394.cljs$lang$maxFixedArity = 2;
    G__12394.cljs$lang$applyTo = function(arglist__12398) {
      var coll = cljs.core.first(arglist__12398);
      arglist__12398 = cljs.core.next(arglist__12398);
      var k = cljs.core.first(arglist__12398);
      var ks = cljs.core.rest(arglist__12398);
      return G__12394__delegate(coll, k, ks)
    };
    G__12394.cljs$core$IFn$_invoke$arity$variadic = G__12394__delegate;
    return G__12394
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12400 = x;
    if(G__12400) {
      if(function() {
        var or__3943__auto__ = G__12400.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12400.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__12400.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12400)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__12400)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12402 = x;
    if(G__12402) {
      if(function() {
        var or__3943__auto__ = G__12402.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12402.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__12402.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12402)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__12402)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__12404 = x;
  if(G__12404) {
    if(function() {
      var or__3943__auto__ = G__12404.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12404.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__12404.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12404)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__12404)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__12406 = x;
  if(G__12406) {
    if(function() {
      var or__3943__auto__ = G__12406.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12406.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__12406.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12406)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__12406)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__12408 = x;
  if(G__12408) {
    if(function() {
      var or__3943__auto__ = G__12408.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12408.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__12408.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12408)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__12408)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__12410 = x;
    if(G__12410) {
      if(function() {
        var or__3943__auto__ = G__12410.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12410.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__12410.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12410)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__12410)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__12412 = x;
  if(G__12412) {
    if(function() {
      var or__3943__auto__ = G__12412.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12412.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__12412.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12412)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__12412)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__12414 = x;
  if(G__12414) {
    if(function() {
      var or__3943__auto__ = G__12414.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12414.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__12415__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__12415 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12415__delegate.call(this, keyvals)
    };
    G__12415.cljs$lang$maxFixedArity = 0;
    G__12415.cljs$lang$applyTo = function(arglist__12416) {
      var keyvals = cljs.core.seq(arglist__12416);
      return G__12415__delegate(keyvals)
    };
    G__12415.cljs$core$IFn$_invoke$arity$variadic = G__12415__delegate;
    return G__12415
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__12417 = i__$1 + 1;
      var G__12418 = j__$1 + 1;
      var G__12419 = len__$1 - 1;
      i__$1 = G__12417;
      j__$1 = G__12418;
      len__$1 = G__12419;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__12420 = i__$1 - 1;
      var G__12421 = j__$1 - 1;
      var G__12422 = len__$1 - 1;
      i__$1 = G__12420;
      j__$1 = G__12421;
      len__$1 = G__12422;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__12424 = s;
    if(G__12424) {
      if(function() {
        var or__3943__auto__ = G__12424.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12424.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__12424.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12424)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__12424)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__12426 = s;
  if(G__12426) {
    if(function() {
      var or__3943__auto__ = G__12426.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12426.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__12426.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12426)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12426)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__12428 = f;
    if(G__12428) {
      if(function() {
        var or__3943__auto____$1 = G__12428.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__12428.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__12428.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12428)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__12428)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__12429__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__12430 = cljs.core.conj.call(null, s, x__$1);
              var G__12431 = etc;
              s = G__12430;
              xs = G__12431;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__12429 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12429__delegate.call(this, x, y, more)
    };
    G__12429.cljs$lang$maxFixedArity = 2;
    G__12429.cljs$lang$applyTo = function(arglist__12432) {
      var x = cljs.core.first(arglist__12432);
      arglist__12432 = cljs.core.next(arglist__12432);
      var y = cljs.core.first(arglist__12432);
      var more = cljs.core.rest(arglist__12432);
      return G__12429__delegate(x, y, more)
    };
    G__12429.cljs$core$IFn$_invoke$arity$variadic = G__12429__delegate;
    return G__12429
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__12434 = x;
            if(G__12434) {
              if(function() {
                var or__3943__auto__ = G__12434.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__12434.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__12435 = xs;
        var G__12436 = ys;
        var G__12437 = len;
        var G__12438 = n + 1;
        xs = G__12435;
        ys = G__12436;
        len = G__12437;
        n = G__12438;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__12439 = nval;
          var G__12440 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__12439;
          coll__$1 = G__12440;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__12443 = coll;
      if(G__12443) {
        if(function() {
          var or__3943__auto__ = G__12443.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12443.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__12444 = coll;
      if(G__12444) {
        if(function() {
          var or__3943__auto__ = G__12444.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12444.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__12445__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__12445 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12445__delegate.call(this, x, y, more)
    };
    G__12445.cljs$lang$maxFixedArity = 2;
    G__12445.cljs$lang$applyTo = function(arglist__12446) {
      var x = cljs.core.first(arglist__12446);
      arglist__12446 = cljs.core.next(arglist__12446);
      var y = cljs.core.first(arglist__12446);
      var more = cljs.core.rest(arglist__12446);
      return G__12445__delegate(x, y, more)
    };
    G__12445.cljs$core$IFn$_invoke$arity$variadic = G__12445__delegate;
    return G__12445
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__12447__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__12447 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12447__delegate.call(this, x, y, more)
    };
    G__12447.cljs$lang$maxFixedArity = 2;
    G__12447.cljs$lang$applyTo = function(arglist__12448) {
      var x = cljs.core.first(arglist__12448);
      arglist__12448 = cljs.core.next(arglist__12448);
      var y = cljs.core.first(arglist__12448);
      var more = cljs.core.rest(arglist__12448);
      return G__12447__delegate(x, y, more)
    };
    G__12447.cljs$core$IFn$_invoke$arity$variadic = G__12447__delegate;
    return G__12447
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__12449__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__12449 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12449__delegate.call(this, x, y, more)
    };
    G__12449.cljs$lang$maxFixedArity = 2;
    G__12449.cljs$lang$applyTo = function(arglist__12450) {
      var x = cljs.core.first(arglist__12450);
      arglist__12450 = cljs.core.next(arglist__12450);
      var y = cljs.core.first(arglist__12450);
      var more = cljs.core.rest(arglist__12450);
      return G__12449__delegate(x, y, more)
    };
    G__12449.cljs$core$IFn$_invoke$arity$variadic = G__12449__delegate;
    return G__12449
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__12451__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__12451 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12451__delegate.call(this, x, y, more)
    };
    G__12451.cljs$lang$maxFixedArity = 2;
    G__12451.cljs$lang$applyTo = function(arglist__12452) {
      var x = cljs.core.first(arglist__12452);
      arglist__12452 = cljs.core.next(arglist__12452);
      var y = cljs.core.first(arglist__12452);
      var more = cljs.core.rest(arglist__12452);
      return G__12451__delegate(x, y, more)
    };
    G__12451.cljs$core$IFn$_invoke$arity$variadic = G__12451__delegate;
    return G__12451
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__12453__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__12454 = y;
            var G__12455 = cljs.core.first.call(null, more);
            var G__12456 = cljs.core.next.call(null, more);
            x = G__12454;
            y = G__12455;
            more = G__12456;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12453 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12453__delegate.call(this, x, y, more)
    };
    G__12453.cljs$lang$maxFixedArity = 2;
    G__12453.cljs$lang$applyTo = function(arglist__12457) {
      var x = cljs.core.first(arglist__12457);
      arglist__12457 = cljs.core.next(arglist__12457);
      var y = cljs.core.first(arglist__12457);
      var more = cljs.core.rest(arglist__12457);
      return G__12453__delegate(x, y, more)
    };
    G__12453.cljs$core$IFn$_invoke$arity$variadic = G__12453__delegate;
    return G__12453
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__12458__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12459 = y;
            var G__12460 = cljs.core.first.call(null, more);
            var G__12461 = cljs.core.next.call(null, more);
            x = G__12459;
            y = G__12460;
            more = G__12461;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12458 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12458__delegate.call(this, x, y, more)
    };
    G__12458.cljs$lang$maxFixedArity = 2;
    G__12458.cljs$lang$applyTo = function(arglist__12462) {
      var x = cljs.core.first(arglist__12462);
      arglist__12462 = cljs.core.next(arglist__12462);
      var y = cljs.core.first(arglist__12462);
      var more = cljs.core.rest(arglist__12462);
      return G__12458__delegate(x, y, more)
    };
    G__12458.cljs$core$IFn$_invoke$arity$variadic = G__12458__delegate;
    return G__12458
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__12463__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__12464 = y;
            var G__12465 = cljs.core.first.call(null, more);
            var G__12466 = cljs.core.next.call(null, more);
            x = G__12464;
            y = G__12465;
            more = G__12466;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12463 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12463__delegate.call(this, x, y, more)
    };
    G__12463.cljs$lang$maxFixedArity = 2;
    G__12463.cljs$lang$applyTo = function(arglist__12467) {
      var x = cljs.core.first(arglist__12467);
      arglist__12467 = cljs.core.next(arglist__12467);
      var y = cljs.core.first(arglist__12467);
      var more = cljs.core.rest(arglist__12467);
      return G__12463__delegate(x, y, more)
    };
    G__12463.cljs$core$IFn$_invoke$arity$variadic = G__12463__delegate;
    return G__12463
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__12468__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__12469 = y;
            var G__12470 = cljs.core.first.call(null, more);
            var G__12471 = cljs.core.next.call(null, more);
            x = G__12469;
            y = G__12470;
            more = G__12471;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12468 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12468__delegate.call(this, x, y, more)
    };
    G__12468.cljs$lang$maxFixedArity = 2;
    G__12468.cljs$lang$applyTo = function(arglist__12472) {
      var x = cljs.core.first(arglist__12472);
      arglist__12472 = cljs.core.next(arglist__12472);
      var y = cljs.core.first(arglist__12472);
      var more = cljs.core.rest(arglist__12472);
      return G__12468__delegate(x, y, more)
    };
    G__12468.cljs$core$IFn$_invoke$arity$variadic = G__12468__delegate;
    return G__12468
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3116__auto__ = x;
    var y__3117__auto__ = y;
    return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
  };
  var max__3 = function() {
    var G__12473__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3116__auto__ = x;
        var y__3117__auto__ = y;
        return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
      }(), more)
    };
    var G__12473 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12473__delegate.call(this, x, y, more)
    };
    G__12473.cljs$lang$maxFixedArity = 2;
    G__12473.cljs$lang$applyTo = function(arglist__12474) {
      var x = cljs.core.first(arglist__12474);
      arglist__12474 = cljs.core.next(arglist__12474);
      var y = cljs.core.first(arglist__12474);
      var more = cljs.core.rest(arglist__12474);
      return G__12473__delegate(x, y, more)
    };
    G__12473.cljs$core$IFn$_invoke$arity$variadic = G__12473__delegate;
    return G__12473
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3123__auto__ = x;
    var y__3124__auto__ = y;
    return x__3123__auto__ < y__3124__auto__ ? x__3123__auto__ : y__3124__auto__
  };
  var min__3 = function() {
    var G__12475__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3123__auto__ = x;
        var y__3124__auto__ = y;
        return x__3123__auto__ < y__3124__auto__ ? x__3123__auto__ : y__3124__auto__
      }(), more)
    };
    var G__12475 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12475__delegate.call(this, x, y, more)
    };
    G__12475.cljs$lang$maxFixedArity = 2;
    G__12475.cljs$lang$applyTo = function(arglist__12476) {
      var x = cljs.core.first(arglist__12476);
      arglist__12476 = cljs.core.next(arglist__12476);
      var y = cljs.core.first(arglist__12476);
      var more = cljs.core.rest(arglist__12476);
      return G__12475__delegate(x, y, more)
    };
    G__12475.cljs$core$IFn$_invoke$arity$variadic = G__12475__delegate;
    return G__12475
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__12477__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__12477 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12477__delegate.call(this, x, y, more)
    };
    G__12477.cljs$lang$maxFixedArity = 2;
    G__12477.cljs$lang$applyTo = function(arglist__12478) {
      var x = cljs.core.first(arglist__12478);
      arglist__12478 = cljs.core.next(arglist__12478);
      var y = cljs.core.first(arglist__12478);
      var more = cljs.core.rest(arglist__12478);
      return G__12477__delegate(x, y, more)
    };
    G__12477.cljs$core$IFn$_invoke$arity$variadic = G__12477__delegate;
    return G__12477
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__12479__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__12479 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12479__delegate.call(this, x, y, more)
    };
    G__12479.cljs$lang$maxFixedArity = 2;
    G__12479.cljs$lang$applyTo = function(arglist__12480) {
      var x = cljs.core.first(arglist__12480);
      arglist__12480 = cljs.core.next(arglist__12480);
      var y = cljs.core.first(arglist__12480);
      var more = cljs.core.rest(arglist__12480);
      return G__12479__delegate(x, y, more)
    };
    G__12479.cljs$core$IFn$_invoke$arity$variadic = G__12479__delegate;
    return G__12479
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__12481__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__12481 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12481__delegate.call(this, x, y, more)
    };
    G__12481.cljs$lang$maxFixedArity = 2;
    G__12481.cljs$lang$applyTo = function(arglist__12482) {
      var x = cljs.core.first(arglist__12482);
      arglist__12482 = cljs.core.next(arglist__12482);
      var y = cljs.core.first(arglist__12482);
      var more = cljs.core.rest(arglist__12482);
      return G__12481__delegate(x, y, more)
    };
    G__12481.cljs$core$IFn$_invoke$arity$variadic = G__12481__delegate;
    return G__12481
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__12483__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__12483 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12483__delegate.call(this, x, y, more)
    };
    G__12483.cljs$lang$maxFixedArity = 2;
    G__12483.cljs$lang$applyTo = function(arglist__12484) {
      var x = cljs.core.first(arglist__12484);
      arglist__12484 = cljs.core.next(arglist__12484);
      var y = cljs.core.first(arglist__12484);
      var more = cljs.core.rest(arglist__12484);
      return G__12483__delegate(x, y, more)
    };
    G__12483.cljs$core$IFn$_invoke$arity$variadic = G__12483__delegate;
    return G__12483
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__12485__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__12485 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12485__delegate.call(this, x, y, more)
    };
    G__12485.cljs$lang$maxFixedArity = 2;
    G__12485.cljs$lang$applyTo = function(arglist__12486) {
      var x = cljs.core.first(arglist__12486);
      arglist__12486 = cljs.core.next(arglist__12486);
      var y = cljs.core.first(arglist__12486);
      var more = cljs.core.rest(arglist__12486);
      return G__12485__delegate(x, y, more)
    };
    G__12485.cljs$core$IFn$_invoke$arity$variadic = G__12485__delegate;
    return G__12485
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__12487__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__12487 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12487__delegate.call(this, x, y, more)
    };
    G__12487.cljs$lang$maxFixedArity = 2;
    G__12487.cljs$lang$applyTo = function(arglist__12488) {
      var x = cljs.core.first(arglist__12488);
      arglist__12488 = cljs.core.next(arglist__12488);
      var y = cljs.core.first(arglist__12488);
      var more = cljs.core.rest(arglist__12488);
      return G__12487__delegate(x, y, more)
    };
    G__12487.cljs$core$IFn$_invoke$arity$variadic = G__12487__delegate;
    return G__12487
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__12489__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__12489 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12489__delegate.call(this, x, y, more)
    };
    G__12489.cljs$lang$maxFixedArity = 2;
    G__12489.cljs$lang$applyTo = function(arglist__12490) {
      var x = cljs.core.first(arglist__12490);
      arglist__12490 = cljs.core.next(arglist__12490);
      var y = cljs.core.first(arglist__12490);
      var more = cljs.core.rest(arglist__12490);
      return G__12489__delegate(x, y, more)
    };
    G__12489.cljs$core$IFn$_invoke$arity$variadic = G__12489__delegate;
    return G__12489
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__12491__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__12492 = y;
            var G__12493 = cljs.core.first.call(null, more);
            var G__12494 = cljs.core.next.call(null, more);
            x = G__12492;
            y = G__12493;
            more = G__12494;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__12491 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12491__delegate.call(this, x, y, more)
    };
    G__12491.cljs$lang$maxFixedArity = 2;
    G__12491.cljs$lang$applyTo = function(arglist__12495) {
      var x = cljs.core.first(arglist__12495);
      arglist__12495 = cljs.core.next(arglist__12495);
      var y = cljs.core.first(arglist__12495);
      var more = cljs.core.rest(arglist__12495);
      return G__12491__delegate(x, y, more)
    };
    G__12491.cljs$core$IFn$_invoke$arity$variadic = G__12491__delegate;
    return G__12491
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__12496 = n__$1 - 1;
      var G__12497 = cljs.core.next.call(null, xs);
      n__$1 = G__12496;
      xs = G__12497;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__12498__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__12499 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__12500 = cljs.core.next.call(null, more);
            sb = G__12499;
            more = G__12500;
            continue
          }else {
            return sb.toString()
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__12498 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12498__delegate.call(this, x, ys)
    };
    G__12498.cljs$lang$maxFixedArity = 1;
    G__12498.cljs$lang$applyTo = function(arglist__12501) {
      var x = cljs.core.first(arglist__12501);
      var ys = cljs.core.rest(arglist__12501);
      return G__12498__delegate(x, ys)
    };
    G__12498.cljs$core$IFn$_invoke$arity$variadic = G__12498__delegate;
    return G__12498
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__12502) {
    var fmt = cljs.core.first(arglist__12502);
    var args = cljs.core.rest(arglist__12502);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__12503 = cljs.core.next.call(null, xs);
            var G__12504 = cljs.core.next.call(null, ys);
            xs = G__12503;
            ys = G__12504;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__12505_SHARP_, p2__12506_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__12505_SHARP_, cljs.core.hash.call(null, p2__12506_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__12507 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__12508 = cljs.core.next.call(null, s);
      h = G__12507;
      s = G__12508;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__12509 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__12510 = cljs.core.next.call(null, s__$1);
      h = G__12509;
      s__$1 = G__12510;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__12517_12523 = cljs.core.seq.call(null, fn_map);
  var chunk__12518_12524 = null;
  var count__12519_12525 = 0;
  var i__12520_12526 = 0;
  while(true) {
    if(i__12520_12526 < count__12519_12525) {
      var vec__12521_12527 = cljs.core._nth.call(null, chunk__12518_12524, i__12520_12526);
      var key_name_12528 = cljs.core.nth.call(null, vec__12521_12527, 0, null);
      var f_12529 = cljs.core.nth.call(null, vec__12521_12527, 1, null);
      var str_name_12530 = cljs.core.name.call(null, key_name_12528);
      obj[str_name_12530] = f_12529;
      var G__12531 = seq__12517_12523;
      var G__12532 = chunk__12518_12524;
      var G__12533 = count__12519_12525;
      var G__12534 = i__12520_12526 + 1;
      seq__12517_12523 = G__12531;
      chunk__12518_12524 = G__12532;
      count__12519_12525 = G__12533;
      i__12520_12526 = G__12534;
      continue
    }else {
      var temp__4092__auto___12535 = cljs.core.seq.call(null, seq__12517_12523);
      if(temp__4092__auto___12535) {
        var seq__12517_12536__$1 = temp__4092__auto___12535;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12517_12536__$1)) {
          var c__3525__auto___12537 = cljs.core.chunk_first.call(null, seq__12517_12536__$1);
          var G__12538 = cljs.core.chunk_rest.call(null, seq__12517_12536__$1);
          var G__12539 = c__3525__auto___12537;
          var G__12540 = cljs.core.count.call(null, c__3525__auto___12537);
          var G__12541 = 0;
          seq__12517_12523 = G__12538;
          chunk__12518_12524 = G__12539;
          count__12519_12525 = G__12540;
          i__12520_12526 = G__12541;
          continue
        }else {
          var vec__12522_12542 = cljs.core.first.call(null, seq__12517_12536__$1);
          var key_name_12543 = cljs.core.nth.call(null, vec__12522_12542, 0, null);
          var f_12544 = cljs.core.nth.call(null, vec__12522_12542, 1, null);
          var str_name_12545 = cljs.core.name.call(null, key_name_12543);
          obj[str_name_12545] = f_12544;
          var G__12546 = cljs.core.next.call(null, seq__12517_12536__$1);
          var G__12547 = null;
          var G__12548 = 0;
          var G__12549 = 0;
          seq__12517_12523 = G__12546;
          chunk__12518_12524 = G__12547;
          count__12519_12525 = G__12548;
          i__12520_12526 = G__12549;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__12551 = coll;
  if(G__12551) {
    if(function() {
      var or__3943__auto__ = G__12551.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12551.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__12551.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12551)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__12551)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__12552 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__12552;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__12553 = i - 1;
        var G__12554 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__12553;
        r = G__12554;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__12555) {
    var xs = cljs.core.seq(arglist__12555);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__12557 = coll;
      if(G__12557) {
        if(function() {
          var or__3943__auto____$1 = G__12557.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__12557.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__12559 = x;
  if(G__12559) {
    if(function() {
      var or__3943__auto__ = G__12559.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__12559.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__12559.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12559)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__12559)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__12563 = null;
  var G__12563__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__12561 = coll;
        if(G__12561) {
          if(function() {
            var or__3943__auto__ = G__12561.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12561.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__12561.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12561)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12561)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, null)
      }else {
        return null
      }
    }
  };
  var G__12563__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__12562 = coll;
        if(G__12562) {
          if(function() {
            var or__3943__auto__ = G__12562.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__12562.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__12562.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12562)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12562)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, not_found)
      }else {
        return null
      }
    }
  };
  G__12563 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12563__2.call(this, self__, coll);
      case 3:
        return G__12563__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12563
}();
cljs.core.Keyword.prototype.apply = function(self__, args12560) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12560.slice()))
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(function() {
      var and__3941__auto__ = x instanceof cljs.core.Keyword;
      if(and__3941__auto__) {
        return y instanceof cljs.core.Keyword
      }else {
        return and__3941__auto__
      }
    }()) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return new cljs.core.Keyword(null, name, name, null)
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, cljs.core.name.call(null, name), cljs.core.name.call(null, name), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.Keyword(null, name, name, null)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, realized, x, __hash) {
  return new cljs.core.LazySeq(meta, realized, x, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__12565 = s;
    if(G__12565) {
      if(function() {
        var or__3943__auto__ = G__12565.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12565.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__12566 = cljs.core.next.call(null, s__$1);
      s__$1 = G__12566;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_12567 = 0;
  var xs_12568 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_12568) {
      ret[i_12567] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_12568));
      var G__12569 = i_12567 + 1;
      var G__12570 = cljs.core.next.call(null, xs_12568);
      i_12567 = G__12569;
      xs_12568 = G__12570;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12571 = i + 1;
          var G__12572 = cljs.core.next.call(null, s__$1);
          i = G__12571;
          s__$1 = G__12572;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___12573 = size;
      var i_12574 = 0;
      while(true) {
        if(i_12574 < n__3572__auto___12573) {
          a[i_12574] = init_val_or_seq;
          var G__12575 = i_12574 + 1;
          i_12574 = G__12575;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12576 = i + 1;
          var G__12577 = cljs.core.next.call(null, s__$1);
          i = G__12576;
          s__$1 = G__12577;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___12578 = size;
      var i_12579 = 0;
      while(true) {
        if(i_12579 < n__3572__auto___12578) {
          a[i_12579] = init_val_or_seq;
          var G__12580 = i_12579 + 1;
          i_12579 = G__12580;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12581 = i + 1;
          var G__12582 = cljs.core.next.call(null, s__$1);
          i = G__12581;
          s__$1 = G__12582;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___12583 = size;
      var i_12584 = 0;
      while(true) {
        if(i_12584 < n__3572__auto___12583) {
          a[i_12584] = init_val_or_seq;
          var G__12585 = i_12584 + 1;
          i_12584 = G__12585;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__12586 = i + 1;
          var G__12587 = cljs.core.next.call(null, s__$1);
          i = G__12586;
          s__$1 = G__12587;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___12588 = size;
      var i_12589 = 0;
      while(true) {
        if(i_12589 < n__3572__auto___12588) {
          a[i_12589] = init_val_or_seq;
          var G__12590 = i_12589 + 1;
          i_12589 = G__12590;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12591 = cljs.core.next.call(null, s__$1);
        var G__12592 = i - 1;
        var G__12593 = sum + 1;
        s__$1 = G__12591;
        i = G__12592;
        sum = G__12593;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__12594__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__12594 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12594__delegate.call(this, x, y, zs)
    };
    G__12594.cljs$lang$maxFixedArity = 2;
    G__12594.cljs$lang$applyTo = function(arglist__12595) {
      var x = cljs.core.first(arglist__12595);
      arglist__12595 = cljs.core.next(arglist__12595);
      var y = cljs.core.first(arglist__12595);
      var zs = cljs.core.rest(arglist__12595);
      return G__12594__delegate(x, y, zs)
    };
    G__12594.cljs$core$IFn$_invoke$arity$variadic = G__12594__delegate;
    return G__12594
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__12596__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__12596 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12596__delegate.call(this, a, b, c, d, more)
    };
    G__12596.cljs$lang$maxFixedArity = 4;
    G__12596.cljs$lang$applyTo = function(arglist__12597) {
      var a = cljs.core.first(arglist__12597);
      arglist__12597 = cljs.core.next(arglist__12597);
      var b = cljs.core.first(arglist__12597);
      arglist__12597 = cljs.core.next(arglist__12597);
      var c = cljs.core.first(arglist__12597);
      arglist__12597 = cljs.core.next(arglist__12597);
      var d = cljs.core.first(arglist__12597);
      var more = cljs.core.rest(arglist__12597);
      return G__12596__delegate(a, b, c, d, more)
    };
    G__12596.cljs$core$IFn$_invoke$arity$variadic = G__12596__delegate;
    return G__12596
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__12598__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__12598 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12598__delegate.call(this, f, a, b, c, d, args)
    };
    G__12598.cljs$lang$maxFixedArity = 5;
    G__12598.cljs$lang$applyTo = function(arglist__12599) {
      var f = cljs.core.first(arglist__12599);
      arglist__12599 = cljs.core.next(arglist__12599);
      var a = cljs.core.first(arglist__12599);
      arglist__12599 = cljs.core.next(arglist__12599);
      var b = cljs.core.first(arglist__12599);
      arglist__12599 = cljs.core.next(arglist__12599);
      var c = cljs.core.first(arglist__12599);
      arglist__12599 = cljs.core.next(arglist__12599);
      var d = cljs.core.first(arglist__12599);
      var args = cljs.core.rest(arglist__12599);
      return G__12598__delegate(f, a, b, c, d, args)
    };
    G__12598.cljs$core$IFn$_invoke$arity$variadic = G__12598__delegate;
    return G__12598
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__12600) {
    var obj = cljs.core.first(arglist__12600);
    arglist__12600 = cljs.core.next(arglist__12600);
    var f = cljs.core.first(arglist__12600);
    var args = cljs.core.rest(arglist__12600);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__12601__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__12601 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12601__delegate.call(this, x, y, more)
    };
    G__12601.cljs$lang$maxFixedArity = 2;
    G__12601.cljs$lang$applyTo = function(arglist__12602) {
      var x = cljs.core.first(arglist__12602);
      arglist__12602 = cljs.core.next(arglist__12602);
      var y = cljs.core.first(arglist__12602);
      var more = cljs.core.rest(arglist__12602);
      return G__12601__delegate(x, y, more)
    };
    G__12601.cljs$core$IFn$_invoke$arity$variadic = G__12601__delegate;
    return G__12601
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__12603 = pred;
        var G__12604 = cljs.core.next.call(null, coll);
        pred = G__12603;
        coll = G__12604;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__12605 = pred;
        var G__12606 = cljs.core.next.call(null, coll);
        pred = G__12605;
        coll = G__12606;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12607 = null;
    var G__12607__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__12607__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__12607__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__12607__3 = function() {
      var G__12608__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__12608 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__12608__delegate.call(this, x, y, zs)
      };
      G__12608.cljs$lang$maxFixedArity = 2;
      G__12608.cljs$lang$applyTo = function(arglist__12609) {
        var x = cljs.core.first(arglist__12609);
        arglist__12609 = cljs.core.next(arglist__12609);
        var y = cljs.core.first(arglist__12609);
        var zs = cljs.core.rest(arglist__12609);
        return G__12608__delegate(x, y, zs)
      };
      G__12608.cljs$core$IFn$_invoke$arity$variadic = G__12608__delegate;
      return G__12608
    }();
    G__12607 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12607__0.call(this);
        case 1:
          return G__12607__1.call(this, x);
        case 2:
          return G__12607__2.call(this, x, y);
        default:
          return G__12607__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12607.cljs$lang$maxFixedArity = 2;
    G__12607.cljs$lang$applyTo = G__12607__3.cljs$lang$applyTo;
    return G__12607
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12610__delegate = function(args) {
      return x
    };
    var G__12610 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12610__delegate.call(this, args)
    };
    G__12610.cljs$lang$maxFixedArity = 0;
    G__12610.cljs$lang$applyTo = function(arglist__12611) {
      var args = cljs.core.seq(arglist__12611);
      return G__12610__delegate(args)
    };
    G__12610.cljs$core$IFn$_invoke$arity$variadic = G__12610__delegate;
    return G__12610
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12612 = null;
      var G__12612__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__12612__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__12612__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__12612__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__12612__4 = function() {
        var G__12613__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12613 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12613__delegate.call(this, x, y, z, args)
        };
        G__12613.cljs$lang$maxFixedArity = 3;
        G__12613.cljs$lang$applyTo = function(arglist__12614) {
          var x = cljs.core.first(arglist__12614);
          arglist__12614 = cljs.core.next(arglist__12614);
          var y = cljs.core.first(arglist__12614);
          arglist__12614 = cljs.core.next(arglist__12614);
          var z = cljs.core.first(arglist__12614);
          var args = cljs.core.rest(arglist__12614);
          return G__12613__delegate(x, y, z, args)
        };
        G__12613.cljs$core$IFn$_invoke$arity$variadic = G__12613__delegate;
        return G__12613
      }();
      G__12612 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12612__0.call(this);
          case 1:
            return G__12612__1.call(this, x);
          case 2:
            return G__12612__2.call(this, x, y);
          case 3:
            return G__12612__3.call(this, x, y, z);
          default:
            return G__12612__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12612.cljs$lang$maxFixedArity = 3;
      G__12612.cljs$lang$applyTo = G__12612__4.cljs$lang$applyTo;
      return G__12612
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12615 = null;
      var G__12615__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__12615__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__12615__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__12615__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__12615__4 = function() {
        var G__12616__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__12616 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12616__delegate.call(this, x, y, z, args)
        };
        G__12616.cljs$lang$maxFixedArity = 3;
        G__12616.cljs$lang$applyTo = function(arglist__12617) {
          var x = cljs.core.first(arglist__12617);
          arglist__12617 = cljs.core.next(arglist__12617);
          var y = cljs.core.first(arglist__12617);
          arglist__12617 = cljs.core.next(arglist__12617);
          var z = cljs.core.first(arglist__12617);
          var args = cljs.core.rest(arglist__12617);
          return G__12616__delegate(x, y, z, args)
        };
        G__12616.cljs$core$IFn$_invoke$arity$variadic = G__12616__delegate;
        return G__12616
      }();
      G__12615 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12615__0.call(this);
          case 1:
            return G__12615__1.call(this, x);
          case 2:
            return G__12615__2.call(this, x, y);
          case 3:
            return G__12615__3.call(this, x, y, z);
          default:
            return G__12615__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12615.cljs$lang$maxFixedArity = 3;
      G__12615.cljs$lang$applyTo = G__12615__4.cljs$lang$applyTo;
      return G__12615
    }()
  };
  var comp__4 = function() {
    var G__12618__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__12619__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__12620 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__12621 = cljs.core.next.call(null, fs__$2);
              ret = G__12620;
              fs__$2 = G__12621;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__12619 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12619__delegate.call(this, args)
        };
        G__12619.cljs$lang$maxFixedArity = 0;
        G__12619.cljs$lang$applyTo = function(arglist__12622) {
          var args = cljs.core.seq(arglist__12622);
          return G__12619__delegate(args)
        };
        G__12619.cljs$core$IFn$_invoke$arity$variadic = G__12619__delegate;
        return G__12619
      }()
    };
    var G__12618 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12618__delegate.call(this, f1, f2, f3, fs)
    };
    G__12618.cljs$lang$maxFixedArity = 3;
    G__12618.cljs$lang$applyTo = function(arglist__12623) {
      var f1 = cljs.core.first(arglist__12623);
      arglist__12623 = cljs.core.next(arglist__12623);
      var f2 = cljs.core.first(arglist__12623);
      arglist__12623 = cljs.core.next(arglist__12623);
      var f3 = cljs.core.first(arglist__12623);
      var fs = cljs.core.rest(arglist__12623);
      return G__12618__delegate(f1, f2, f3, fs)
    };
    G__12618.cljs$core$IFn$_invoke$arity$variadic = G__12618__delegate;
    return G__12618
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12624__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__12624 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12624__delegate.call(this, args)
      };
      G__12624.cljs$lang$maxFixedArity = 0;
      G__12624.cljs$lang$applyTo = function(arglist__12625) {
        var args = cljs.core.seq(arglist__12625);
        return G__12624__delegate(args)
      };
      G__12624.cljs$core$IFn$_invoke$arity$variadic = G__12624__delegate;
      return G__12624
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12626__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__12626 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12626__delegate.call(this, args)
      };
      G__12626.cljs$lang$maxFixedArity = 0;
      G__12626.cljs$lang$applyTo = function(arglist__12627) {
        var args = cljs.core.seq(arglist__12627);
        return G__12626__delegate(args)
      };
      G__12626.cljs$core$IFn$_invoke$arity$variadic = G__12626__delegate;
      return G__12626
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12628__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__12628 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12628__delegate.call(this, args)
      };
      G__12628.cljs$lang$maxFixedArity = 0;
      G__12628.cljs$lang$applyTo = function(arglist__12629) {
        var args = cljs.core.seq(arglist__12629);
        return G__12628__delegate(args)
      };
      G__12628.cljs$core$IFn$_invoke$arity$variadic = G__12628__delegate;
      return G__12628
    }()
  };
  var partial__5 = function() {
    var G__12630__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12631__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__12631 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__12631__delegate.call(this, args)
        };
        G__12631.cljs$lang$maxFixedArity = 0;
        G__12631.cljs$lang$applyTo = function(arglist__12632) {
          var args = cljs.core.seq(arglist__12632);
          return G__12631__delegate(args)
        };
        G__12631.cljs$core$IFn$_invoke$arity$variadic = G__12631__delegate;
        return G__12631
      }()
    };
    var G__12630 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12630__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__12630.cljs$lang$maxFixedArity = 4;
    G__12630.cljs$lang$applyTo = function(arglist__12633) {
      var f = cljs.core.first(arglist__12633);
      arglist__12633 = cljs.core.next(arglist__12633);
      var arg1 = cljs.core.first(arglist__12633);
      arglist__12633 = cljs.core.next(arglist__12633);
      var arg2 = cljs.core.first(arglist__12633);
      arglist__12633 = cljs.core.next(arglist__12633);
      var arg3 = cljs.core.first(arglist__12633);
      var more = cljs.core.rest(arglist__12633);
      return G__12630__delegate(f, arg1, arg2, arg3, more)
    };
    G__12630.cljs$core$IFn$_invoke$arity$variadic = G__12630__delegate;
    return G__12630
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12634 = null;
      var G__12634__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__12634__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__12634__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__12634__4 = function() {
        var G__12635__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__12635 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12635__delegate.call(this, a, b, c, ds)
        };
        G__12635.cljs$lang$maxFixedArity = 3;
        G__12635.cljs$lang$applyTo = function(arglist__12636) {
          var a = cljs.core.first(arglist__12636);
          arglist__12636 = cljs.core.next(arglist__12636);
          var b = cljs.core.first(arglist__12636);
          arglist__12636 = cljs.core.next(arglist__12636);
          var c = cljs.core.first(arglist__12636);
          var ds = cljs.core.rest(arglist__12636);
          return G__12635__delegate(a, b, c, ds)
        };
        G__12635.cljs$core$IFn$_invoke$arity$variadic = G__12635__delegate;
        return G__12635
      }();
      G__12634 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12634__1.call(this, a);
          case 2:
            return G__12634__2.call(this, a, b);
          case 3:
            return G__12634__3.call(this, a, b, c);
          default:
            return G__12634__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12634.cljs$lang$maxFixedArity = 3;
      G__12634.cljs$lang$applyTo = G__12634__4.cljs$lang$applyTo;
      return G__12634
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12637 = null;
      var G__12637__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12637__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__12637__4 = function() {
        var G__12638__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__12638 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12638__delegate.call(this, a, b, c, ds)
        };
        G__12638.cljs$lang$maxFixedArity = 3;
        G__12638.cljs$lang$applyTo = function(arglist__12639) {
          var a = cljs.core.first(arglist__12639);
          arglist__12639 = cljs.core.next(arglist__12639);
          var b = cljs.core.first(arglist__12639);
          arglist__12639 = cljs.core.next(arglist__12639);
          var c = cljs.core.first(arglist__12639);
          var ds = cljs.core.rest(arglist__12639);
          return G__12638__delegate(a, b, c, ds)
        };
        G__12638.cljs$core$IFn$_invoke$arity$variadic = G__12638__delegate;
        return G__12638
      }();
      G__12637 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12637__2.call(this, a, b);
          case 3:
            return G__12637__3.call(this, a, b, c);
          default:
            return G__12637__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12637.cljs$lang$maxFixedArity = 3;
      G__12637.cljs$lang$applyTo = G__12637__4.cljs$lang$applyTo;
      return G__12637
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12640 = null;
      var G__12640__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__12640__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__12640__4 = function() {
        var G__12641__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__12641 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12641__delegate.call(this, a, b, c, ds)
        };
        G__12641.cljs$lang$maxFixedArity = 3;
        G__12641.cljs$lang$applyTo = function(arglist__12642) {
          var a = cljs.core.first(arglist__12642);
          arglist__12642 = cljs.core.next(arglist__12642);
          var b = cljs.core.first(arglist__12642);
          arglist__12642 = cljs.core.next(arglist__12642);
          var c = cljs.core.first(arglist__12642);
          var ds = cljs.core.rest(arglist__12642);
          return G__12641__delegate(a, b, c, ds)
        };
        G__12641.cljs$core$IFn$_invoke$arity$variadic = G__12641__delegate;
        return G__12641
      }();
      G__12640 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12640__2.call(this, a, b);
          case 3:
            return G__12640__3.call(this, a, b, c);
          default:
            return G__12640__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12640.cljs$lang$maxFixedArity = 3;
      G__12640.cljs$lang$applyTo = G__12640__4.cljs$lang$applyTo;
      return G__12640
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3572__auto___12643 = size;
          var i_12644 = 0;
          while(true) {
            if(i_12644 < n__3572__auto___12643) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_12644, cljs.core._nth.call(null, c, i_12644)));
              var G__12645 = i_12644 + 1;
              i_12644 = G__12645;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3572__auto___12646 = size;
        var i_12647 = 0;
        while(true) {
          if(i_12647 < n__3572__auto___12646) {
            var x_12648 = f.call(null, cljs.core._nth.call(null, c, i_12647));
            if(x_12648 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_12648)
            }
            var G__12649 = i_12647 + 1;
            i_12647 = G__12649;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3572__auto___12650 = size;
          var i_12651 = 0;
          while(true) {
            if(i_12651 < n__3572__auto___12650) {
              var x_12652 = f.call(null, idx + i_12651, cljs.core._nth.call(null, c, i_12651));
              if(x_12652 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_12652)
              }
              var G__12653 = i_12651 + 1;
              i_12651 = G__12653;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__12660__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__12660 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12660__delegate.call(this, x, y, z, args)
        };
        G__12660.cljs$lang$maxFixedArity = 3;
        G__12660.cljs$lang$applyTo = function(arglist__12661) {
          var x = cljs.core.first(arglist__12661);
          arglist__12661 = cljs.core.next(arglist__12661);
          var y = cljs.core.first(arglist__12661);
          arglist__12661 = cljs.core.next(arglist__12661);
          var z = cljs.core.first(arglist__12661);
          var args = cljs.core.rest(arglist__12661);
          return G__12660__delegate(x, y, z, args)
        };
        G__12660.cljs$core$IFn$_invoke$arity$variadic = G__12660__delegate;
        return G__12660
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__12662__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12654_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__12654_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__12654_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__12662 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12662__delegate.call(this, x, y, z, args)
        };
        G__12662.cljs$lang$maxFixedArity = 3;
        G__12662.cljs$lang$applyTo = function(arglist__12663) {
          var x = cljs.core.first(arglist__12663);
          arglist__12663 = cljs.core.next(arglist__12663);
          var y = cljs.core.first(arglist__12663);
          arglist__12663 = cljs.core.next(arglist__12663);
          var z = cljs.core.first(arglist__12663);
          var args = cljs.core.rest(arglist__12663);
          return G__12662__delegate(x, y, z, args)
        };
        G__12662.cljs$core$IFn$_invoke$arity$variadic = G__12662__delegate;
        return G__12662
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__12664__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__12655_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__12655_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__12655_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__12655_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__12664 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12664__delegate.call(this, x, y, z, args)
        };
        G__12664.cljs$lang$maxFixedArity = 3;
        G__12664.cljs$lang$applyTo = function(arglist__12665) {
          var x = cljs.core.first(arglist__12665);
          arglist__12665 = cljs.core.next(arglist__12665);
          var y = cljs.core.first(arglist__12665);
          arglist__12665 = cljs.core.next(arglist__12665);
          var z = cljs.core.first(arglist__12665);
          var args = cljs.core.rest(arglist__12665);
          return G__12664__delegate(x, y, z, args)
        };
        G__12664.cljs$core$IFn$_invoke$arity$variadic = G__12664__delegate;
        return G__12664
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__12666__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__12656_SHARP_) {
            return p1__12656_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__12657_SHARP_) {
            var and__3941__auto__ = p1__12657_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__12657_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__12658_SHARP_) {
            var and__3941__auto__ = p1__12658_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__12658_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__12658_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__12667__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__12659_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__12659_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__12667 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12667__delegate.call(this, x, y, z, args)
          };
          G__12667.cljs$lang$maxFixedArity = 3;
          G__12667.cljs$lang$applyTo = function(arglist__12668) {
            var x = cljs.core.first(arglist__12668);
            arglist__12668 = cljs.core.next(arglist__12668);
            var y = cljs.core.first(arglist__12668);
            arglist__12668 = cljs.core.next(arglist__12668);
            var z = cljs.core.first(arglist__12668);
            var args = cljs.core.rest(arglist__12668);
            return G__12667__delegate(x, y, z, args)
          };
          G__12667.cljs$core$IFn$_invoke$arity$variadic = G__12667__delegate;
          return G__12667
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__12666 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12666__delegate.call(this, p1, p2, p3, ps)
    };
    G__12666.cljs$lang$maxFixedArity = 3;
    G__12666.cljs$lang$applyTo = function(arglist__12669) {
      var p1 = cljs.core.first(arglist__12669);
      arglist__12669 = cljs.core.next(arglist__12669);
      var p2 = cljs.core.first(arglist__12669);
      arglist__12669 = cljs.core.next(arglist__12669);
      var p3 = cljs.core.first(arglist__12669);
      var ps = cljs.core.rest(arglist__12669);
      return G__12666__delegate(p1, p2, p3, ps)
    };
    G__12666.cljs$core$IFn$_invoke$arity$variadic = G__12666__delegate;
    return G__12666
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__12676__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__12676 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12676__delegate.call(this, x, y, z, args)
        };
        G__12676.cljs$lang$maxFixedArity = 3;
        G__12676.cljs$lang$applyTo = function(arglist__12677) {
          var x = cljs.core.first(arglist__12677);
          arglist__12677 = cljs.core.next(arglist__12677);
          var y = cljs.core.first(arglist__12677);
          arglist__12677 = cljs.core.next(arglist__12677);
          var z = cljs.core.first(arglist__12677);
          var args = cljs.core.rest(arglist__12677);
          return G__12676__delegate(x, y, z, args)
        };
        G__12676.cljs$core$IFn$_invoke$arity$variadic = G__12676__delegate;
        return G__12676
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__12678__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__12670_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__12670_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__12670_SHARP_)
              }
            }, args)
          }
        };
        var G__12678 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12678__delegate.call(this, x, y, z, args)
        };
        G__12678.cljs$lang$maxFixedArity = 3;
        G__12678.cljs$lang$applyTo = function(arglist__12679) {
          var x = cljs.core.first(arglist__12679);
          arglist__12679 = cljs.core.next(arglist__12679);
          var y = cljs.core.first(arglist__12679);
          arglist__12679 = cljs.core.next(arglist__12679);
          var z = cljs.core.first(arglist__12679);
          var args = cljs.core.rest(arglist__12679);
          return G__12678__delegate(x, y, z, args)
        };
        G__12678.cljs$core$IFn$_invoke$arity$variadic = G__12678__delegate;
        return G__12678
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__12680__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__12671_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__12671_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__12671_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__12671_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__12680 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12680__delegate.call(this, x, y, z, args)
        };
        G__12680.cljs$lang$maxFixedArity = 3;
        G__12680.cljs$lang$applyTo = function(arglist__12681) {
          var x = cljs.core.first(arglist__12681);
          arglist__12681 = cljs.core.next(arglist__12681);
          var y = cljs.core.first(arglist__12681);
          arglist__12681 = cljs.core.next(arglist__12681);
          var z = cljs.core.first(arglist__12681);
          var args = cljs.core.rest(arglist__12681);
          return G__12680__delegate(x, y, z, args)
        };
        G__12680.cljs$core$IFn$_invoke$arity$variadic = G__12680__delegate;
        return G__12680
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__12682__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__12672_SHARP_) {
            return p1__12672_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__12673_SHARP_) {
            var or__3943__auto__ = p1__12673_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__12673_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__12674_SHARP_) {
            var or__3943__auto__ = p1__12674_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__12674_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__12674_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__12683__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__12675_SHARP_) {
                return cljs.core.some.call(null, p1__12675_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__12683 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12683__delegate.call(this, x, y, z, args)
          };
          G__12683.cljs$lang$maxFixedArity = 3;
          G__12683.cljs$lang$applyTo = function(arglist__12684) {
            var x = cljs.core.first(arglist__12684);
            arglist__12684 = cljs.core.next(arglist__12684);
            var y = cljs.core.first(arglist__12684);
            arglist__12684 = cljs.core.next(arglist__12684);
            var z = cljs.core.first(arglist__12684);
            var args = cljs.core.rest(arglist__12684);
            return G__12683__delegate(x, y, z, args)
          };
          G__12683.cljs$core$IFn$_invoke$arity$variadic = G__12683__delegate;
          return G__12683
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__12682 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12682__delegate.call(this, p1, p2, p3, ps)
    };
    G__12682.cljs$lang$maxFixedArity = 3;
    G__12682.cljs$lang$applyTo = function(arglist__12685) {
      var p1 = cljs.core.first(arglist__12685);
      arglist__12685 = cljs.core.next(arglist__12685);
      var p2 = cljs.core.first(arglist__12685);
      arglist__12685 = cljs.core.next(arglist__12685);
      var p3 = cljs.core.first(arglist__12685);
      var ps = cljs.core.rest(arglist__12685);
      return G__12682__delegate(p1, p2, p3, ps)
    };
    G__12682.cljs$core$IFn$_invoke$arity$variadic = G__12682__delegate;
    return G__12682
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3572__auto___12687 = size;
          var i_12688 = 0;
          while(true) {
            if(i_12688 < n__3572__auto___12687) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_12688)));
              var G__12689 = i_12688 + 1;
              i_12688 = G__12689;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__12690__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__12686_SHARP_) {
        return cljs.core.apply.call(null, f, p1__12686_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__12690 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12690__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12690.cljs$lang$maxFixedArity = 4;
    G__12690.cljs$lang$applyTo = function(arglist__12691) {
      var f = cljs.core.first(arglist__12691);
      arglist__12691 = cljs.core.next(arglist__12691);
      var c1 = cljs.core.first(arglist__12691);
      arglist__12691 = cljs.core.next(arglist__12691);
      var c2 = cljs.core.first(arglist__12691);
      arglist__12691 = cljs.core.next(arglist__12691);
      var c3 = cljs.core.first(arglist__12691);
      var colls = cljs.core.rest(arglist__12691);
      return G__12690__delegate(f, c1, c2, c3, colls)
    };
    G__12690.cljs$core$IFn$_invoke$arity$variadic = G__12690__delegate;
    return G__12690
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12692 = n__$1 - 1;
        var G__12693 = cljs.core.rest.call(null, s);
        n__$1 = G__12692;
        coll__$1 = G__12693;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__12694 = cljs.core.next.call(null, s);
      var G__12695 = cljs.core.next.call(null, lead);
      s = G__12694;
      lead = G__12695;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12696 = pred__$1;
        var G__12697 = cljs.core.rest.call(null, s);
        pred__$1 = G__12696;
        coll__$1 = G__12697;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__12698__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__12698 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12698__delegate.call(this, c1, c2, colls)
    };
    G__12698.cljs$lang$maxFixedArity = 2;
    G__12698.cljs$lang$applyTo = function(arglist__12699) {
      var c1 = cljs.core.first(arglist__12699);
      arglist__12699 = cljs.core.next(arglist__12699);
      var c2 = cljs.core.first(arglist__12699);
      var colls = cljs.core.rest(arglist__12699);
      return G__12698__delegate(c1, c2, colls)
    };
    G__12698.cljs$core$IFn$_invoke$arity$variadic = G__12698__delegate;
    return G__12698
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__12700__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__12700 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__12700__delegate.call(this, f, coll, colls)
    };
    G__12700.cljs$lang$maxFixedArity = 2;
    G__12700.cljs$lang$applyTo = function(arglist__12701) {
      var f = cljs.core.first(arglist__12701);
      arglist__12701 = cljs.core.next(arglist__12701);
      var coll = cljs.core.first(arglist__12701);
      var colls = cljs.core.rest(arglist__12701);
      return G__12700__delegate(f, coll, colls)
    };
    G__12700.cljs$core$IFn$_invoke$arity$variadic = G__12700__delegate;
    return G__12700
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3572__auto___12702 = size;
        var i_12703 = 0;
        while(true) {
          if(i_12703 < n__3572__auto___12702) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_12703)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_12703))
            }else {
            }
            var G__12704 = i_12703 + 1;
            i_12703 = G__12704;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__12705_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__12705_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__12707 = to;
      if(G__12707) {
        if(function() {
          var or__3943__auto__ = G__12707.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12707.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__12708__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__12708 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__12708__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__12708.cljs$lang$maxFixedArity = 4;
    G__12708.cljs$lang$applyTo = function(arglist__12709) {
      var f = cljs.core.first(arglist__12709);
      arglist__12709 = cljs.core.next(arglist__12709);
      var c1 = cljs.core.first(arglist__12709);
      arglist__12709 = cljs.core.next(arglist__12709);
      var c2 = cljs.core.first(arglist__12709);
      arglist__12709 = cljs.core.next(arglist__12709);
      var c3 = cljs.core.first(arglist__12709);
      var colls = cljs.core.rest(arglist__12709);
      return G__12708__delegate(f, c1, c2, c3, colls)
    };
    G__12708.cljs$core$IFn$_invoke$arity$variadic = G__12708__delegate;
    return G__12708
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__12711 = m__$1;
          if(G__12711) {
            if(function() {
              var or__3943__auto__ = G__12711.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__12711.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__12711.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12711)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__12711)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__12712 = sentinel;
            var G__12713 = m__$2;
            var G__12714 = cljs.core.next.call(null, ks__$1);
            sentinel = G__12712;
            m__$1 = G__12713;
            ks__$1 = G__12714;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__12715, v) {
  var vec__12717 = p__12715;
  var k = cljs.core.nth.call(null, vec__12717, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__12717, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__12718, f) {
    var vec__12728 = p__12718;
    var k = cljs.core.nth.call(null, vec__12728, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12728, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__12719, f, a) {
    var vec__12729 = p__12719;
    var k = cljs.core.nth.call(null, vec__12729, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12729, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__12720, f, a, b) {
    var vec__12730 = p__12720;
    var k = cljs.core.nth.call(null, vec__12730, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12730, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__12721, f, a, b, c) {
    var vec__12731 = p__12721;
    var k = cljs.core.nth.call(null, vec__12731, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__12731, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__12733__delegate = function(m, p__12722, f, a, b, c, args) {
      var vec__12732 = p__12722;
      var k = cljs.core.nth.call(null, vec__12732, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__12732, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__12733 = function(m, p__12722, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__12733__delegate.call(this, m, p__12722, f, a, b, c, args)
    };
    G__12733.cljs$lang$maxFixedArity = 6;
    G__12733.cljs$lang$applyTo = function(arglist__12734) {
      var m = cljs.core.first(arglist__12734);
      arglist__12734 = cljs.core.next(arglist__12734);
      var p__12722 = cljs.core.first(arglist__12734);
      arglist__12734 = cljs.core.next(arglist__12734);
      var f = cljs.core.first(arglist__12734);
      arglist__12734 = cljs.core.next(arglist__12734);
      var a = cljs.core.first(arglist__12734);
      arglist__12734 = cljs.core.next(arglist__12734);
      var b = cljs.core.first(arglist__12734);
      arglist__12734 = cljs.core.next(arglist__12734);
      var c = cljs.core.first(arglist__12734);
      var args = cljs.core.rest(arglist__12734);
      return G__12733__delegate(m, p__12722, f, a, b, c, args)
    };
    G__12733.cljs$core$IFn$_invoke$arity$variadic = G__12733__delegate;
    return G__12733
  }();
  update_in = function(m, p__12722, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__12722, f);
      case 4:
        return update_in__4.call(this, m, p__12722, f, a);
      case 5:
        return update_in__5.call(this, m, p__12722, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__12722, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__12722, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__12735 = ll - 5;
      var G__12736 = r;
      ll = G__12735;
      ret = G__12736;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__12737 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__12738 = level - 5;
          node = G__12737;
          level = G__12738;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__12740 = null;
  var G__12740__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__12740__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__12740 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12740__2.call(this, self__, k);
      case 3:
        return G__12740__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12740
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args12739) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12739.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__12741 = j + 1;
              var G__12742 = init__$2;
              j = G__12741;
              init__$1 = G__12742;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__12743 = i + step_init[0];
        i = G__12743;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__12744 = i + 1;
        var G__12745 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__12744;
        out = G__12745;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__12746) {
    var args = cljs.core.seq(arglist__12746);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3116__auto__ = self__.end;
    var y__3117__auto__ = v_pos + 1;
    return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__12748 = null;
  var G__12748__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__12748__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__12748 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12748__2.call(this, self__, k);
      case 3:
        return G__12748__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12748
}();
cljs.core.Subvec.prototype.apply = function(self__, args12747) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12747.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__12749 = meta;
      var G__12750 = v.v;
      var G__12751 = v.start + start;
      var G__12752 = v.start + end;
      var G__12753 = __hash;
      meta = G__12749;
      v = G__12750;
      start = G__12751;
      end = G__12752;
      __hash = G__12753;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__12754 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__12755 = level - 5;
          node = G__12754;
          level = G__12755;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__12757 = null;
  var G__12757__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12757__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12757 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12757__2.call(this, self__, k);
      case 3:
        return G__12757__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12757
}();
cljs.core.TransientVector.prototype.apply = function(self__, args12756) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12756.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__12758 = i + incr;
        i = G__12758;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__12759 = i + 1;
      var G__12760 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__12759;
      out = G__12760;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_12761 = 0;
  while(true) {
    if(i_12761 < l) {
      var k_12762 = ks[i_12761];
      new_obj[k_12762] = obj[k_12762];
      var G__12763 = i_12761 + 1;
      i_12761 = G__12763;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__12766 = null;
  var G__12766__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12766__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12766 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12766__2.call(this, self__, k);
      case 3:
        return G__12766__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12766
}();
cljs.core.ObjMap.prototype.apply = function(self__, args12765) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12765.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__12767 = cljs.core.rest.call(null, keys__$1);
        var G__12768 = init__$2;
        keys__$1 = G__12767;
        init__$1 = G__12768;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__12764_SHARP_) {
      return cljs.core.vector.call(null, p1__12764_SHARP_, self__.strobj[p1__12764_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__12769 = i + 2;
          i = G__12769;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Keyword;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.fqn
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__12770 = i + 2;
          i = G__12770;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__12771 = i + 2;
          i = G__12771;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__12772 = i + 2;
          i = G__12772;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__12773 = i + 2;
          i = G__12773;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(function() {
      var or__3943__auto__ = goog.isString(k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return typeof k === "number"
      }
    }()) {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_12774 = 0;
  while(true) {
    if(i_12774 < l) {
      narr[i_12774] = arr[i_12774];
      var G__12775 = i_12774 + 1;
      i_12774 = G__12775;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__12777 = self__.arr.slice();
          G__12777[idx + 1] = v;
          return G__12777
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__12778 = null;
  var G__12778__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12778__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12778 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12778__2.call(this, self__, k);
      case 3:
        return G__12778__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12778
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args12776) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12776.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__12779 = i + 2;
        var G__12780 = init__$2;
        i = G__12779;
        init__$1 = G__12780;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__12781 = s + 2;
            var G__12782 = d;
            s = G__12781;
            d = G__12782;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__12783 = s + 2;
              var G__12784 = d + 2;
              s = G__12783;
              d = G__12784;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__12785_12787 = self__.arr;
      G__12785_12787.pop();
      G__12785_12787.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__12786 = o;
      if(G__12786) {
        if(function() {
          var or__3943__auto__ = G__12786.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12786.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__12786.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12786)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12786)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__12788 = cljs.core.next.call(null, es);
          var G__12789 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__12788;
          tcoll__$1 = G__12789;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__12790 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__12791 = i + 2;
      out = G__12790;
      i = G__12791;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__12794 = arr.slice();
    G__12794[i] = a;
    return G__12794
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__12795 = arr.slice();
    G__12795[i] = a;
    G__12795[j] = b;
    return G__12795
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__12796 = i + 2;
        var G__12797 = init__$2;
        i = G__12796;
        init__$1 = G__12797;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_12798 = 0;
        var j_12799 = 0;
        while(true) {
          if(i_12798 < 32) {
            if((self__.bitmap >>> i_12798 & 1) === 0) {
              var G__12800 = i_12798 + 1;
              var G__12801 = j_12799;
              i_12798 = G__12800;
              j_12799 = G__12801;
              continue
            }else {
              nodes[i_12798] = !(self__.arr[j_12799] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_12799]), self__.arr[j_12799], self__.arr[j_12799 + 1], added_leaf_QMARK_) : self__.arr[j_12799 + 1];
              var G__12802 = i_12798 + 1;
              var G__12803 = j_12799 + 2;
              i_12798 = G__12802;
              j_12799 = G__12803;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_12804 = 0;
      var j_12805 = 0;
      while(true) {
        if(i_12804 < 32) {
          if((self__.bitmap >>> i_12804 & 1) === 0) {
            var G__12806 = i_12804 + 1;
            var G__12807 = j_12805;
            i_12804 = G__12806;
            j_12805 = G__12807;
            continue
          }else {
            nodes[i_12804] = !(self__.arr[j_12805] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_12805]), self__.arr[j_12805], self__.arr[j_12805 + 1], added_leaf_QMARK_) : self__.arr[j_12805 + 1];
            var G__12808 = i_12804 + 1;
            var G__12809 = j_12805 + 2;
            i_12804 = G__12808;
            j_12805 = G__12809;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__12810 = i + 1;
        var G__12811 = j + 2;
        var G__12812 = bitmap | 1 << i;
        i = G__12810;
        j = G__12811;
        bitmap = G__12812;
        continue
      }else {
        var G__12813 = i + 1;
        var G__12814 = j;
        var G__12815 = bitmap;
        i = G__12813;
        j = G__12814;
        bitmap = G__12815;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__12816 = i + 1;
          var G__12817 = init__$2;
          i = G__12816;
          init__$1 = G__12817;
          continue
        }
      }else {
        var G__12818 = i + 1;
        var G__12819 = init__$1;
        i = G__12818;
        init__$1 = G__12819;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__12820 = i + 2;
        i = G__12820;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__12821 = j + 2;
                j = G__12821;
                continue
              }
            }else {
              var G__12822 = j + 2;
              j = G__12822;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__12823 = j + 1;
              j = G__12823;
              continue
            }
          }else {
            var G__12824 = j + 1;
            j = G__12824;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__12826 = null;
  var G__12826__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12826__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12826 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12826__2.call(this, self__, k);
      case 3:
        return G__12826__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12826
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args12825) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12825.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__12827 = i + 1;
      var G__12828 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__12827;
      out = G__12828;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__12829 = o;
      if(G__12829) {
        if(function() {
          var or__3943__auto__ = G__12829.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__12829.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__12829.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12829)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__12829)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__12830 = cljs.core.next.call(null, es);
          var G__12831 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__12830;
          tcoll__$1 = G__12831;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__12832 = ascending_QMARK_ ? t.left : t.right;
      var G__12833 = cljs.core.conj.call(null, stack__$1, t);
      t = G__12832;
      stack__$1 = G__12833;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__12835 = null;
  var G__12835__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__12835__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__12835 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12835__2.call(this, self__, k);
      case 3:
        return G__12835__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12835
}();
cljs.core.BlackNode.prototype.apply = function(self__, args12834) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12834.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__12837 = null;
  var G__12837__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__12837__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__12837 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12837__2.call(this, self__, k);
      case 3:
        return G__12837__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12837
}();
cljs.core.RedNode.prototype.apply = function(self__, args12836) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12836.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__12839 = null;
  var G__12839__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12839__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12839 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12839__2.call(this, self__, k);
      case 3:
        return G__12839__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12839
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args12838) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12838.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__12840 = t.left;
          t = G__12840;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__12841 = t.right;
            t = G__12841;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__12842 = cljs.core.conj.call(null, stack, t);
              var G__12843 = t.left;
              stack = G__12842;
              t = G__12843;
              continue
            }else {
              var G__12844 = stack;
              var G__12845 = t.right;
              stack = G__12844;
              t = G__12845;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__12846 = cljs.core.conj.call(null, stack, t);
                var G__12847 = t.right;
                stack = G__12846;
                t = G__12847;
                continue
              }else {
                var G__12848 = stack;
                var G__12849 = t.left;
                stack = G__12848;
                t = G__12849;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__12850 = cljs.core.nnext.call(null, in$);
        var G__12851 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__12850;
        out = G__12851;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__12852) {
    var keyvals = cljs.core.seq(arglist__12852);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__12853) {
    var keyvals = cljs.core.seq(arglist__12853);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__12854 = cljs.core.nnext.call(null, kvs);
        kvs = G__12854;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__12855) {
    var keyvals = cljs.core.seq(arglist__12855);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__12856 = cljs.core.nnext.call(null, in$);
        var G__12857 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__12856;
        out = G__12857;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__12858) {
    var keyvals = cljs.core.seq(arglist__12858);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__12859 = cljs.core.nnext.call(null, in$);
        var G__12860 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__12859;
        out = G__12860;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__12861) {
    var comparator = cljs.core.first(arglist__12861);
    var keyvals = cljs.core.rest(arglist__12861);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12862 = self__.mseq;
    if(G__12862) {
      if(function() {
        var or__3943__auto__ = G__12862.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12862.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12862.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12862)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12862)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12863 = self__.mseq;
    if(G__12863) {
      if(function() {
        var or__3943__auto__ = G__12863.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12863.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12863.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12863)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12863)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12864 = self__.mseq;
    if(G__12864) {
      if(function() {
        var or__3943__auto__ = G__12864.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12864.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12864.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12864)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12864)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__12865 = self__.mseq;
    if(G__12865) {
      if(function() {
        var or__3943__auto__ = G__12865.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12865.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__12865.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12865)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__12865)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__12866_SHARP_, p2__12867_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__12866_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__12867_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__12868) {
    var maps = cljs.core.seq(arglist__12868);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__12869) {
    var f = cljs.core.first(arglist__12869);
    var maps = cljs.core.rest(arglist__12869);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__12870 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__12871 = cljs.core.next.call(null, keys);
      ret = G__12870;
      keys = G__12871;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__12874 = null;
  var G__12874__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12874__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12874 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12874__2.call(this, self__, k);
      case 3:
        return G__12874__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12874
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args12873) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12873.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__12872_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12872_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__12875 = i + 2;
        var G__12876 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__12875;
        out = G__12876;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__12878 = null;
  var G__12878__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__12878__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__12878 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12878__2.call(this, self__, k);
      case 3:
        return G__12878__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12878
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args12877) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12877.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__12881 = null;
  var G__12881__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__12881__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__12881 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12881__2.call(this, self__, k);
      case 3:
        return G__12881__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__12881
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args12880) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args12880.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__12879_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__12879_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__3566__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__3566__auto__.length) {
        var G__12882 = i + 1;
        var G__12883 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__12882;
        res = G__12883;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__12884 = cljs.core._next.call(null, in$__$1);
            var G__12885 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__12884;
            out = G__12885;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__12886__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__12886 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12886__delegate.call(this, keys)
    };
    G__12886.cljs$lang$maxFixedArity = 0;
    G__12886.cljs$lang$applyTo = function(arglist__12887) {
      var keys = cljs.core.seq(arglist__12887);
      return G__12886__delegate(keys)
    };
    G__12886.cljs$core$IFn$_invoke$arity$variadic = G__12886__delegate;
    return G__12886
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__12888) {
    var keys = cljs.core.seq(arglist__12888);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__12889) {
    var comparator = cljs.core.first(arglist__12889);
    var keys = cljs.core.rest(arglist__12889);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__12890_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__12890_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__12890_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__12897, seen__$1) {
        while(true) {
          var vec__12898 = p__12897;
          var f = cljs.core.nth.call(null, vec__12898, 0, null);
          var xs__$1 = vec__12898;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__12899 = cljs.core.rest.call(null, s);
              var G__12900 = seen__$1;
              p__12897 = G__12899;
              seen__$1 = G__12900;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__12901 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__12902 = cljs.core.next.call(null, s__$1);
      ret = G__12901;
      s__$1 = G__12902;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__12904 = x;
    if(G__12904) {
      if(function() {
        var or__3943__auto__ = G__12904.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12904.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__12906 = x;
    if(G__12906) {
      if(function() {
        var or__3943__auto__ = G__12906.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__12906.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__12907 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__12908 = cljs.core.next.call(null, ks);
      var G__12909 = cljs.core.next.call(null, vs);
      map = G__12907;
      ks = G__12908;
      vs = G__12909;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__12912__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12910_SHARP_, p2__12911_SHARP_) {
        return max_key.call(null, k, p1__12910_SHARP_, p2__12911_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__12912 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12912__delegate.call(this, k, x, y, more)
    };
    G__12912.cljs$lang$maxFixedArity = 3;
    G__12912.cljs$lang$applyTo = function(arglist__12913) {
      var k = cljs.core.first(arglist__12913);
      arglist__12913 = cljs.core.next(arglist__12913);
      var x = cljs.core.first(arglist__12913);
      arglist__12913 = cljs.core.next(arglist__12913);
      var y = cljs.core.first(arglist__12913);
      var more = cljs.core.rest(arglist__12913);
      return G__12912__delegate(k, x, y, more)
    };
    G__12912.cljs$core$IFn$_invoke$arity$variadic = G__12912__delegate;
    return G__12912
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__12916__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__12914_SHARP_, p2__12915_SHARP_) {
        return min_key.call(null, k, p1__12914_SHARP_, p2__12915_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__12916 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12916__delegate.call(this, k, x, y, more)
    };
    G__12916.cljs$lang$maxFixedArity = 3;
    G__12916.cljs$lang$applyTo = function(arglist__12917) {
      var k = cljs.core.first(arglist__12917);
      arglist__12917 = cljs.core.next(arglist__12917);
      var x = cljs.core.first(arglist__12917);
      arglist__12917 = cljs.core.next(arglist__12917);
      var y = cljs.core.first(arglist__12917);
      var more = cljs.core.rest(arglist__12917);
      return G__12916__delegate(k, x, y, more)
    };
    G__12916.cljs$core$IFn$_invoke$arity$variadic = G__12916__delegate;
    return G__12916
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__12920 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__12920, 0, null);
        var s = vec__12920;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__12921 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__12921, 0, null);
      var s = vec__12921;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__12924 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__12924, 0, null);
        var s = vec__12924;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__12925 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__12925, 0, null);
      var s = vec__12925;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__12926_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__12926_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__12937 = null;
      var G__12937__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__12937__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__12937__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__12937__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__12937__4 = function() {
        var G__12938__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__12938 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12938__delegate.call(this, x, y, z, args)
        };
        G__12938.cljs$lang$maxFixedArity = 3;
        G__12938.cljs$lang$applyTo = function(arglist__12939) {
          var x = cljs.core.first(arglist__12939);
          arglist__12939 = cljs.core.next(arglist__12939);
          var y = cljs.core.first(arglist__12939);
          arglist__12939 = cljs.core.next(arglist__12939);
          var z = cljs.core.first(arglist__12939);
          var args = cljs.core.rest(arglist__12939);
          return G__12938__delegate(x, y, z, args)
        };
        G__12938.cljs$core$IFn$_invoke$arity$variadic = G__12938__delegate;
        return G__12938
      }();
      G__12937 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12937__0.call(this);
          case 1:
            return G__12937__1.call(this, x);
          case 2:
            return G__12937__2.call(this, x, y);
          case 3:
            return G__12937__3.call(this, x, y, z);
          default:
            return G__12937__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12937.cljs$lang$maxFixedArity = 3;
      G__12937.cljs$lang$applyTo = G__12937__4.cljs$lang$applyTo;
      return G__12937
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__12940 = null;
      var G__12940__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__12940__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__12940__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__12940__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__12940__4 = function() {
        var G__12941__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__12941 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12941__delegate.call(this, x, y, z, args)
        };
        G__12941.cljs$lang$maxFixedArity = 3;
        G__12941.cljs$lang$applyTo = function(arglist__12942) {
          var x = cljs.core.first(arglist__12942);
          arglist__12942 = cljs.core.next(arglist__12942);
          var y = cljs.core.first(arglist__12942);
          arglist__12942 = cljs.core.next(arglist__12942);
          var z = cljs.core.first(arglist__12942);
          var args = cljs.core.rest(arglist__12942);
          return G__12941__delegate(x, y, z, args)
        };
        G__12941.cljs$core$IFn$_invoke$arity$variadic = G__12941__delegate;
        return G__12941
      }();
      G__12940 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12940__0.call(this);
          case 1:
            return G__12940__1.call(this, x);
          case 2:
            return G__12940__2.call(this, x, y);
          case 3:
            return G__12940__3.call(this, x, y, z);
          default:
            return G__12940__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12940.cljs$lang$maxFixedArity = 3;
      G__12940.cljs$lang$applyTo = G__12940__4.cljs$lang$applyTo;
      return G__12940
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__12943 = null;
      var G__12943__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__12943__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__12943__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__12943__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__12943__4 = function() {
        var G__12944__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__12944 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__12944__delegate.call(this, x, y, z, args)
        };
        G__12944.cljs$lang$maxFixedArity = 3;
        G__12944.cljs$lang$applyTo = function(arglist__12945) {
          var x = cljs.core.first(arglist__12945);
          arglist__12945 = cljs.core.next(arglist__12945);
          var y = cljs.core.first(arglist__12945);
          arglist__12945 = cljs.core.next(arglist__12945);
          var z = cljs.core.first(arglist__12945);
          var args = cljs.core.rest(arglist__12945);
          return G__12944__delegate(x, y, z, args)
        };
        G__12944.cljs$core$IFn$_invoke$arity$variadic = G__12944__delegate;
        return G__12944
      }();
      G__12943 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12943__0.call(this);
          case 1:
            return G__12943__1.call(this, x);
          case 2:
            return G__12943__2.call(this, x, y);
          case 3:
            return G__12943__3.call(this, x, y, z);
          default:
            return G__12943__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12943.cljs$lang$maxFixedArity = 3;
      G__12943.cljs$lang$applyTo = G__12943__4.cljs$lang$applyTo;
      return G__12943
    }()
  };
  var juxt__4 = function() {
    var G__12946__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__12947 = null;
        var G__12947__0 = function() {
          return cljs.core.reduce.call(null, function(p1__12927_SHARP_, p2__12928_SHARP_) {
            return cljs.core.conj.call(null, p1__12927_SHARP_, p2__12928_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12947__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__12929_SHARP_, p2__12930_SHARP_) {
            return cljs.core.conj.call(null, p1__12929_SHARP_, p2__12930_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12947__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__12931_SHARP_, p2__12932_SHARP_) {
            return cljs.core.conj.call(null, p1__12931_SHARP_, p2__12932_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12947__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__12933_SHARP_, p2__12934_SHARP_) {
            return cljs.core.conj.call(null, p1__12933_SHARP_, p2__12934_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__12947__4 = function() {
          var G__12948__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__12935_SHARP_, p2__12936_SHARP_) {
              return cljs.core.conj.call(null, p1__12935_SHARP_, cljs.core.apply.call(null, p2__12936_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__12948 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__12948__delegate.call(this, x, y, z, args)
          };
          G__12948.cljs$lang$maxFixedArity = 3;
          G__12948.cljs$lang$applyTo = function(arglist__12949) {
            var x = cljs.core.first(arglist__12949);
            arglist__12949 = cljs.core.next(arglist__12949);
            var y = cljs.core.first(arglist__12949);
            arglist__12949 = cljs.core.next(arglist__12949);
            var z = cljs.core.first(arglist__12949);
            var args = cljs.core.rest(arglist__12949);
            return G__12948__delegate(x, y, z, args)
          };
          G__12948.cljs$core$IFn$_invoke$arity$variadic = G__12948__delegate;
          return G__12948
        }();
        G__12947 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__12947__0.call(this);
            case 1:
              return G__12947__1.call(this, x);
            case 2:
              return G__12947__2.call(this, x, y);
            case 3:
              return G__12947__3.call(this, x, y, z);
            default:
              return G__12947__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12947.cljs$lang$maxFixedArity = 3;
        G__12947.cljs$lang$applyTo = G__12947__4.cljs$lang$applyTo;
        return G__12947
      }()
    };
    var G__12946 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__12946__delegate.call(this, f, g, h, fs)
    };
    G__12946.cljs$lang$maxFixedArity = 3;
    G__12946.cljs$lang$applyTo = function(arglist__12950) {
      var f = cljs.core.first(arglist__12950);
      arglist__12950 = cljs.core.next(arglist__12950);
      var g = cljs.core.first(arglist__12950);
      arglist__12950 = cljs.core.next(arglist__12950);
      var h = cljs.core.first(arglist__12950);
      var fs = cljs.core.rest(arglist__12950);
      return G__12946__delegate(f, g, h, fs)
    };
    G__12946.cljs$core$IFn$_invoke$arity$variadic = G__12946__delegate;
    return G__12946
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__12951 = cljs.core.next.call(null, coll);
        coll = G__12951;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__12952 = n - 1;
        var G__12953 = cljs.core.next.call(null, coll);
        n = G__12952;
        coll = G__12953;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__12955 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__12955, 0, null);
  var flags = cljs.core.nth.call(null, vec__12955, 1, null);
  var pattern = cljs.core.nth.call(null, vec__12955, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__12960_12964 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__12961_12965 = null;
  var count__12962_12966 = 0;
  var i__12963_12967 = 0;
  while(true) {
    if(i__12963_12967 < count__12962_12966) {
      var o_12968 = cljs.core._nth.call(null, chunk__12961_12965, i__12963_12967);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_12968, writer, opts);
      var G__12969 = seq__12960_12964;
      var G__12970 = chunk__12961_12965;
      var G__12971 = count__12962_12966;
      var G__12972 = i__12963_12967 + 1;
      seq__12960_12964 = G__12969;
      chunk__12961_12965 = G__12970;
      count__12962_12966 = G__12971;
      i__12963_12967 = G__12972;
      continue
    }else {
      var temp__4092__auto___12973 = cljs.core.seq.call(null, seq__12960_12964);
      if(temp__4092__auto___12973) {
        var seq__12960_12974__$1 = temp__4092__auto___12973;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12960_12974__$1)) {
          var c__3525__auto___12975 = cljs.core.chunk_first.call(null, seq__12960_12974__$1);
          var G__12976 = cljs.core.chunk_rest.call(null, seq__12960_12974__$1);
          var G__12977 = c__3525__auto___12975;
          var G__12978 = cljs.core.count.call(null, c__3525__auto___12975);
          var G__12979 = 0;
          seq__12960_12964 = G__12976;
          chunk__12961_12965 = G__12977;
          count__12962_12966 = G__12978;
          i__12963_12967 = G__12979;
          continue
        }else {
          var o_12980 = cljs.core.first.call(null, seq__12960_12974__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_12980, writer, opts);
          var G__12981 = cljs.core.next.call(null, seq__12960_12974__$1);
          var G__12982 = null;
          var G__12983 = 0;
          var G__12984 = 0;
          seq__12960_12964 = G__12981;
          chunk__12961_12965 = G__12982;
          count__12962_12966 = G__12983;
          i__12963_12967 = G__12984;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__12989 = cljs.core.seq.call(null, ss);
    var chunk__12990 = null;
    var count__12991 = 0;
    var i__12992 = 0;
    while(true) {
      if(i__12992 < count__12991) {
        var s = cljs.core._nth.call(null, chunk__12990, i__12992);
        cljs.core._write.call(null, writer, s);
        var G__12993 = seq__12989;
        var G__12994 = chunk__12990;
        var G__12995 = count__12991;
        var G__12996 = i__12992 + 1;
        seq__12989 = G__12993;
        chunk__12990 = G__12994;
        count__12991 = G__12995;
        i__12992 = G__12996;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__12989);
        if(temp__4092__auto__) {
          var seq__12989__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__12989__$1)) {
            var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__12989__$1);
            var G__12997 = cljs.core.chunk_rest.call(null, seq__12989__$1);
            var G__12998 = c__3525__auto__;
            var G__12999 = cljs.core.count.call(null, c__3525__auto__);
            var G__13000 = 0;
            seq__12989 = G__12997;
            chunk__12990 = G__12998;
            count__12991 = G__12999;
            i__12992 = G__13000;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__12989__$1);
            cljs.core._write.call(null, writer, s);
            var G__13001 = cljs.core.next.call(null, seq__12989__$1);
            var G__13002 = null;
            var G__13003 = 0;
            var G__13004 = 0;
            seq__12989 = G__13001;
            chunk__12990 = G__13002;
            count__12991 = G__13003;
            i__12992 = G__13004;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__13005) {
    var writer = cljs.core.first(arglist__13005);
    var ss = cljs.core.rest(arglist__13005);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__13009 = obj;
              if(G__13009) {
                if(function() {
                  var or__3943__auto__ = G__13009.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__13009.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__13009.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__13009)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__13009)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__13010 = obj;
              if(G__13010) {
                if(function() {
                  var or__3943__auto__ = G__13010.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__13010.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).call(null, opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__13012 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__13012;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__13011 = obj;
                            if(G__13011) {
                              if(function() {
                                var or__3943__auto__ = G__13011.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__13011.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__13011.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__13011)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__13011)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__13017 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__13018 = null;
  var count__13019 = 0;
  var i__13020 = 0;
  while(true) {
    if(i__13020 < count__13019) {
      var obj = cljs.core._nth.call(null, chunk__13018, i__13020);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__13021 = seq__13017;
      var G__13022 = chunk__13018;
      var G__13023 = count__13019;
      var G__13024 = i__13020 + 1;
      seq__13017 = G__13021;
      chunk__13018 = G__13022;
      count__13019 = G__13023;
      i__13020 = G__13024;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13017);
      if(temp__4092__auto__) {
        var seq__13017__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13017__$1)) {
          var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__13017__$1);
          var G__13025 = cljs.core.chunk_rest.call(null, seq__13017__$1);
          var G__13026 = c__3525__auto__;
          var G__13027 = cljs.core.count.call(null, c__3525__auto__);
          var G__13028 = 0;
          seq__13017 = G__13025;
          chunk__13018 = G__13026;
          count__13019 = G__13027;
          i__13020 = G__13028;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__13017__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__13029 = cljs.core.next.call(null, seq__13017__$1);
          var G__13030 = null;
          var G__13031 = 0;
          var G__13032 = 0;
          seq__13017 = G__13029;
          chunk__13018 = G__13030;
          count__13019 = G__13031;
          i__13020 = G__13032;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__13033) {
    var objs = cljs.core.seq(arglist__13033);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__13034) {
    var objs = cljs.core.seq(arglist__13034);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__13035) {
    var objs = cljs.core.seq(arglist__13035);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__13036) {
    var objs = cljs.core.seq(arglist__13036);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__13037) {
    var objs = cljs.core.seq(arglist__13037);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__13038) {
    var objs = cljs.core.seq(arglist__13038);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__13039) {
    var objs = cljs.core.seq(arglist__13039);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__13040) {
    var objs = cljs.core.seq(arglist__13040);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__13041) {
    var fmt = cljs.core.first(arglist__13041);
    var args = cljs.core.rest(arglist__13041);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__13042 = cljs.core.seq.call(null, self__.watches);
  var chunk__13043 = null;
  var count__13044 = 0;
  var i__13045 = 0;
  while(true) {
    if(i__13045 < count__13044) {
      var vec__13046 = cljs.core._nth.call(null, chunk__13043, i__13045);
      var key = cljs.core.nth.call(null, vec__13046, 0, null);
      var f = cljs.core.nth.call(null, vec__13046, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__13048 = seq__13042;
      var G__13049 = chunk__13043;
      var G__13050 = count__13044;
      var G__13051 = i__13045 + 1;
      seq__13042 = G__13048;
      chunk__13043 = G__13049;
      count__13044 = G__13050;
      i__13045 = G__13051;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__13042);
      if(temp__4092__auto__) {
        var seq__13042__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13042__$1)) {
          var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__13042__$1);
          var G__13052 = cljs.core.chunk_rest.call(null, seq__13042__$1);
          var G__13053 = c__3525__auto__;
          var G__13054 = cljs.core.count.call(null, c__3525__auto__);
          var G__13055 = 0;
          seq__13042 = G__13052;
          chunk__13043 = G__13053;
          count__13044 = G__13054;
          i__13045 = G__13055;
          continue
        }else {
          var vec__13047 = cljs.core.first.call(null, seq__13042__$1);
          var key = cljs.core.nth.call(null, vec__13047, 0, null);
          var f = cljs.core.nth.call(null, vec__13047, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__13056 = cljs.core.next.call(null, seq__13042__$1);
          var G__13057 = null;
          var G__13058 = 0;
          var G__13059 = 0;
          seq__13042 = G__13056;
          chunk__13043 = G__13057;
          count__13044 = G__13058;
          i__13045 = G__13059;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__13063__delegate = function(x, p__13060) {
      var map__13062 = p__13060;
      var map__13062__$1 = cljs.core.seq_QMARK_.call(null, map__13062) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13062) : map__13062;
      var validator = cljs.core.get.call(null, map__13062__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__13062__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__13063 = function(x, var_args) {
      var p__13060 = null;
      if(arguments.length > 1) {
        p__13060 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13063__delegate.call(this, x, p__13060)
    };
    G__13063.cljs$lang$maxFixedArity = 1;
    G__13063.cljs$lang$applyTo = function(arglist__13064) {
      var x = cljs.core.first(arglist__13064);
      var p__13060 = cljs.core.rest(arglist__13064);
      return G__13063__delegate(x, p__13060)
    };
    G__13063.cljs$core$IFn$_invoke$arity$variadic = G__13063__delegate;
    return G__13063
  }();
  atom = function(x, var_args) {
    var p__13060 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___13065 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___13065)) {
    var validate_13066 = temp__4092__auto___13065;
    if(cljs.core.truth_(validate_13066.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_13067 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_13067, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__13068__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__13068 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__13068__delegate.call(this, a, f, x, y, z, more)
    };
    G__13068.cljs$lang$maxFixedArity = 5;
    G__13068.cljs$lang$applyTo = function(arglist__13069) {
      var a = cljs.core.first(arglist__13069);
      arglist__13069 = cljs.core.next(arglist__13069);
      var f = cljs.core.first(arglist__13069);
      arglist__13069 = cljs.core.next(arglist__13069);
      var x = cljs.core.first(arglist__13069);
      arglist__13069 = cljs.core.next(arglist__13069);
      var y = cljs.core.first(arglist__13069);
      arglist__13069 = cljs.core.next(arglist__13069);
      var z = cljs.core.first(arglist__13069);
      var more = cljs.core.rest(arglist__13069);
      return G__13068__delegate(a, f, x, y, z, more)
    };
    G__13068.cljs$core$IFn$_invoke$arity$variadic = G__13068__delegate;
    return G__13068
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__13070) {
    var iref = cljs.core.first(arglist__13070);
    arglist__13070 = cljs.core.next(arglist__13070);
    var f = cljs.core.first(arglist__13070);
    var args = cljs.core.rest(arglist__13070);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__13071) {
    var map__13072 = p__13071;
    var map__13072__$1 = cljs.core.seq_QMARK_.call(null, map__13072) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13072) : map__13072;
    var curr_state = map__13072__$1;
    var done = cljs.core.get.call(null, map__13072__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__13074 = k;
    if(G__13074) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__13074.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__13074.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13074)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13074)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = k instanceof cljs.core.Keyword;
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__13082 = x;
      if(G__13082) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__13082.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__13082.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13082)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__13082)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__13083_13089 = cljs.core.seq.call(null, x);
            var chunk__13084_13090 = null;
            var count__13085_13091 = 0;
            var i__13086_13092 = 0;
            while(true) {
              if(i__13086_13092 < count__13085_13091) {
                var vec__13087_13093 = cljs.core._nth.call(null, chunk__13084_13090, i__13086_13092);
                var k_13094 = cljs.core.nth.call(null, vec__13087_13093, 0, null);
                var v_13095 = cljs.core.nth.call(null, vec__13087_13093, 1, null);
                m[cljs.core.key__GT_js.call(null, k_13094)] = clj__GT_js.call(null, v_13095);
                var G__13096 = seq__13083_13089;
                var G__13097 = chunk__13084_13090;
                var G__13098 = count__13085_13091;
                var G__13099 = i__13086_13092 + 1;
                seq__13083_13089 = G__13096;
                chunk__13084_13090 = G__13097;
                count__13085_13091 = G__13098;
                i__13086_13092 = G__13099;
                continue
              }else {
                var temp__4092__auto___13100 = cljs.core.seq.call(null, seq__13083_13089);
                if(temp__4092__auto___13100) {
                  var seq__13083_13101__$1 = temp__4092__auto___13100;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__13083_13101__$1)) {
                    var c__3525__auto___13102 = cljs.core.chunk_first.call(null, seq__13083_13101__$1);
                    var G__13103 = cljs.core.chunk_rest.call(null, seq__13083_13101__$1);
                    var G__13104 = c__3525__auto___13102;
                    var G__13105 = cljs.core.count.call(null, c__3525__auto___13102);
                    var G__13106 = 0;
                    seq__13083_13089 = G__13103;
                    chunk__13084_13090 = G__13104;
                    count__13085_13091 = G__13105;
                    i__13086_13092 = G__13106;
                    continue
                  }else {
                    var vec__13088_13107 = cljs.core.first.call(null, seq__13083_13101__$1);
                    var k_13108 = cljs.core.nth.call(null, vec__13088_13107, 0, null);
                    var v_13109 = cljs.core.nth.call(null, vec__13088_13107, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_13108)] = clj__GT_js.call(null, v_13109);
                    var G__13110 = cljs.core.next.call(null, seq__13083_13101__$1);
                    var G__13111 = null;
                    var G__13112 = 0;
                    var G__13113 = 0;
                    seq__13083_13089 = G__13110;
                    chunk__13084_13090 = G__13111;
                    count__13085_13091 = G__13112;
                    i__13086_13092 = G__13113;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], true))
  };
  var js__GT_clj__2 = function() {
    var G__13134__delegate = function(x, opts) {
      if(function() {
        var G__13124 = cljs.core.IEncodeClojure;
        if(G__13124) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__13124.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__13124.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__13124)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__13124)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__13125 = opts;
          var map__13125__$1 = cljs.core.seq_QMARK_.call(null, map__13125) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13125) : map__13125;
          var keywordize_keys = cljs.core.get.call(null, map__13125__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__13125, map__13125__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3494__auto__ = function(map__13125, map__13125__$1, keywordize_keys, keyfn) {
                          return function iter__13130(s__13131) {
                            return new cljs.core.LazySeq(null, false, function(map__13125, map__13125__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__13131__$1 = s__13131;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__13131__$1);
                                  if(temp__4092__auto__) {
                                    var s__13131__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__13131__$2)) {
                                      var c__3492__auto__ = cljs.core.chunk_first.call(null, s__13131__$2);
                                      var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                                      var b__13133 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                                      if(function() {
                                        var i__13132 = 0;
                                        while(true) {
                                          if(i__13132 < size__3493__auto__) {
                                            var k = cljs.core._nth.call(null, c__3492__auto__, i__13132);
                                            cljs.core.chunk_append.call(null, b__13133, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__13135 = i__13132 + 1;
                                            i__13132 = G__13135;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13133), iter__13130.call(null, cljs.core.chunk_rest.call(null, s__13131__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__13133), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__13131__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__13130.call(null, cljs.core.rest.call(null, s__13131__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__13125, map__13125__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__13125, map__13125__$1, keywordize_keys, keyfn);
                        return iter__3494__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__13125, map__13125__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__13134 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13134__delegate.call(this, x, opts)
    };
    G__13134.cljs$lang$maxFixedArity = 1;
    G__13134.cljs$lang$applyTo = function(arglist__13136) {
      var x = cljs.core.first(arglist__13136);
      var opts = cljs.core.rest(arglist__13136);
      return G__13134__delegate(x, opts)
    };
    G__13134.cljs$core$IFn$_invoke$arity$variadic = G__13134__delegate;
    return G__13134
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__13137__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__13137 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13137__delegate.call(this, args)
    };
    G__13137.cljs$lang$maxFixedArity = 0;
    G__13137.cljs$lang$applyTo = function(arglist__13138) {
      var args = cljs.core.seq(arglist__13138);
      return G__13137__delegate(args)
    };
    G__13137.cljs$core$IFn$_invoke$arity$variadic = G__13137__delegate;
    return G__13137
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__13139 = ret;
        f = G__13139;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__13140__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__13140 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__13140__delegate.call(this, f, args)
    };
    G__13140.cljs$lang$maxFixedArity = 1;
    G__13140.cljs$lang$applyTo = function(arglist__13141) {
      var f = cljs.core.first(arglist__13141);
      var args = cljs.core.rest(arglist__13141);
      return G__13140__delegate(f, args)
    };
    G__13140.cljs$core$IFn$_invoke$arity$variadic = G__13140__delegate;
    return G__13140
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__13142) {
    var f = cljs.core.first(arglist__13142);
    var args = cljs.core.rest(arglist__13142);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__13143 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__13144 = i + 1;
                  ret = G__13143;
                  i = G__13144;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag, td, 
      parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), parent, ta, tag, td)], true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__13145_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__13145_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__13145_SHARP_), cljs.core.second.call(null, p1__13145_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__13146_SHARP_, p2__13147_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__13146_SHARP_, p2__13147_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__13148 = cljs.core.rest.call(null, ps);
          ps = G__13148;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__13149 = cljs.core.rest.call(null, ps);
            ps = G__13149;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__13152) {
    var vec__13153 = p__13152;
    var k = cljs.core.nth.call(null, vec__13153, 0, null);
    var _ = cljs.core.nth.call(null, vec__13153, 1, null);
    var e = vec__13153;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__13154__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__13154 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__13154__delegate.call(this, _, args)
  };
  G__13154.cljs$lang$maxFixedArity = 1;
  G__13154.cljs$lang$applyTo = function(arglist__13155) {
    var _ = cljs.core.first(arglist__13155);
    var args = cljs.core.rest(arglist__13155);
    return G__13154__delegate(_, args)
  };
  G__13154.cljs$core$IFn$_invoke$arity$variadic = G__13154__delegate;
  return G__13154
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, 
  new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, 
  "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("fmi.metolib");
"use strict";
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lodash is required for fi.fmi.metoclient.metolib.Utils!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
fi.fmi.metoclient.metolib.Utils = function() {
  (function() {
    var method;
    var noop = function() {
    };
    var methods = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"];
    var length = methods.length;
    var console = window.console = window.console || {};
    while(length--) {
      method = methods[length];
      if(!console[method]) {
        console[method] = noop
      }
    }
  })();
  (function() {
    if(!jQuery.browser) {
      var matched, browser;
      jQuery.uaMatch = function(ua) {
        ua = ua.toLowerCase();
        var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
        return{browser:match[1] || "", version:match[2] || "0"}
      };
      matched = jQuery.uaMatch(navigator.userAgent);
      browser = {};
      if(matched.browser) {
        browser[matched.browser] = true;
        browser.version = matched.version
      }
      if(browser.chrome) {
        browser.webkit = true
      }else {
        if(browser.webkit) {
          browser.safari = true
        }
      }
      jQuery.browser = browser
    }
  })();
  (function() {
    if(window.XDomainRequest) {
      jQuery.ajaxTransport(function(s) {
        if(s.crossDomain && s.async) {
          if(s.timeout) {
            s.xdrTimeout = s.timeout;
            delete s.timeout
          }
          var xdr;
          return{send:function(_, complete) {
            function callback(status, statusText, responses, responseHeaders) {
              xdr.onload = xdr.onerror = xdr.ontimeout = jQuery.noop;
              xdr = undefined;
              complete(status, statusText, responses, responseHeaders)
            }
            xdr = new XDomainRequest;
            xdr.onload = function() {
              callback(200, "OK", {text:xdr.responseText}, "Content-Type: " + xdr.contentType)
            };
            xdr.onerror = function() {
              callback(404, "Not Found")
            };
            xdr.onprogress = jQuery.noop;
            xdr.ontimeout = function() {
              callback(0, "timeout")
            };
            xdr.timeout = s.xdrTimeout || Number.MAX_VALUE;
            xdr.open(s.type, s.url);
            xdr.send(s.hasContent && s.data || null)
          }, abort:function() {
            if(xdr) {
              xdr.onerror = jQuery.noop;
              xdr.abort()
            }
          }}
        }
      })
    }
  })();
  (function() {
    if(!Date.prototype.toISOString) {
      if(!Date.prototype.toJSON) {
        Date.prototype.toJSON = function(key) {
          var pad = function(n) {
            return n < 10 ? "0" + n : n
          };
          return this.getUTCFullYear() + "-" + pad(this.getUTCMonth() + 1) + "-" + pad(this.getUTCDate()) + "T" + pad(this.getUTCHours()) + ":" + pad(this.getUTCMinutes()) + ":" + pad(this.getUTCSeconds()) + "Z"
        }
      }
      Date.prototype.toISOString = Date.prototype.toJSON
    }
  })();
  function objectLength(object) {
    var length = 0;
    if(object) {
      if(_.isFunction(Object.keys)) {
        length = Object.keys(object).length
      }else {
        for(var key in object) {
          if(object.hasOwnProperty(key)) {
            ++length
          }
        }
      }
    }
    return length
  }
  return{objectLength:function(object) {
    return objectLength(object)
  }, encodeUriComponent:function(str) {
    return str ? encodeURIComponent(str) : str
  }, encodeUri:function(str) {
    return str ? encodeURI(str) : str
  }, sortStringArray:function(strings, createCopy) {
    var sorted;
    if(strings && _.isArray(strings)) {
      if(createCopy) {
        sorted = [];
        _.each(strings, function(element) {
          sorted.push(element)
        })
      }else {
        sorted = strings
      }
      sorted.sort(function(a, b) {
        var ret = 0;
        var strA = a.toLowerCase();
        var strB = b.toLowerCase();
        if(strA < strB) {
          ret = -1
        }else {
          if(strA > strB) {
            ret = 1
          }
        }
        return ret
      })
    }
    return sorted
  }}
}();
if("undefined" === typeof jQuery || !jQuery) {
  throw"ERROR: jQuery is required for fi.fmi.metoclient.metolib.WfsRequestParser!";
}
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lodash is required for fi.fmi.metoclient.metolib.WfsRequestParser!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
if("undefined" === typeof fi.fmi.metoclient.metolib.Utils || !fi.fmi.metoclient.metolib.Utils) {
  throw"ERROR: fi.fmi.metoclient.metolib.Utils is required for fi.fmi.metoclient.metolib.WfsRequestParser!";
}
fi.fmi.metoclient.metolib.WfsRequestParser = function() {
  var myConstants = {REGEX_WHITE_SPACE:/\s+/, EPOCH_TO_MS:1E3, MIN_TO_MS:60 * 1E3, HTTP_METHOD:"GET", DATA_TYPE:"xml", URL_QUERY_PREFIX_BEGIN:"?", URL_QUERY_PREFIX_AND:"\x26", URL_QUERY_FIELD_VALUE_DELIMITER:"\x3d", REQUEST_GET_FEATURE:"request\x3dgetFeature", REQUEST_STORED_QUERY_ID:"\x26storedquery_id\x3d", REQUEST_PARAMETERS:"\x26parameters\x3d", REQUEST_BEGIN:"\x26starttime\x3d", REQUEST_END:"\x26endtime\x3d", REQUEST_TIMESTEP:"\x26timestep\x3d", REQUEST_GEOID:"\x26geoid\x3d", REQUEST_WMO:"\x26wmo\x3d", 
  REQUEST_FMISID:"\x26fmisid\x3d", REQUEST_PLACE:"\x26place\x3d", REQUEST_BBOX:"\x26bbox\x3d", REQUEST_CRS:"\x26crs\x3d", XML_WFS_FEATURE_COLLECTION:"wfs\\:FeatureCollection, FeatureCollection", XML_WFS_MEMBER:"wfs\\:member, member", XML_OMSO_POINT_TIME_SERIES_OBSERVATION:"omso\\:PointTimeSeriesObservation, PointTimeSeriesObservation", XML_OMSO_GRID_SERIES_OBSERVATION:"omso\\:GridSeriesObservation, GridSeriesObservation", XML_OM_PHENOMENON_TIME:"om\\:phenomenonTime, phenomenonTime", XML_GML_TIME_PERIOD:"gml\\:TimePeriod, TimePeriod", 
  XML_GML_BEGIN_POSITION:"gml\\:beginPosition, beginPosition", XML_GML_END_POSITION:"gml\\:endPosition, endPosition", XML_OM_OBSERVED_PROPERTY:"om\\:observedProperty, observedProperty", XML_OM_FEATURE_OF_INTEREST:"om\\:featureOfInterest, featureOfInterest", XML_SAMS_SF_SPATIAL_SAMPLING_FEATURE:"sams\\:SF_SpatialSamplingFeature, SF_SpatialSamplingFeature", XML_SAM_SAMPLED_FEATURE:"sam\\:sampledFeature, sampledFeature", XML_TARGET_LOCATION_COLLECTION:"target\\:LocationCollection, LocationCollection", 
  XML_TARGET_MEMBER:"target\\:member, member", XML_TARGET_LOCATION:"target\\:Location, Location", XML_GML_IDENTIFIER:"gml\\:identifier, identifier", XML_TARGET_REGION:"target\\:region, region", XML_TARGET_COUNTRY:"target\\:country, country", XML_TARGET_TIMEZONE:"target\\:timezone, timezone", XML_TARGET_REPRESENTATIVE_POINT:"target\\:representativePoint, representativePoint", XML_SAMS_SHAPE:"sams\\:shape, shape", XML_GML_MULTI_POINT:"gml\\:MultiPoint, MultiPoint", XML_GML_POINT_MEMBER:"gml\\:pointMember, pointMember", 
  XML_GML_POINT_MEMBERS:"gml\\:pointMembers, pointMembers", XML_GML_POINT:"gml\\:Point, Point", XML_GML_NAME:"gml\\:name, name", XML_GML_POS:"gml\\:pos, pos", XML_OM_RESULT:"om\\:result, result", XML_GMLCOV_MULTI_POINT_COVERAGE:"gmlcov\\:MultiPointCoverage, MultiPointCoverage", XML_GML_DOMAIN_SET:"gml\\:domainSet, domainSet", XML_GMLCOV_SIMPLE_MULTI_POINT:"gmlcov\\:SimpleMultiPoint, SimpleMultiPoint", XML_GMLCOV_POSITIONS:"gmlcov\\:positions, positions", XML_GML_RANGE_SET:"gml\\:rangeSet, rangeSet", 
  XML_GML_DATA_BLOCK:"gml\\:DataBlock, DataBlock", XML_GML_DOUBLE_OR_NIL_REASON_TUPLE_LIST:"gml\\:doubleOrNilReasonTupleList, doubleOrNilReasonTupleList", XML_GMLCOV_RANGE_TYPE:"gmlcov\\:rangeType, rangeType", XML_SWE_DATA_RECORD:"swe\\:DataRecord, DataRecord", XML_SWE_FIELD:"swe\\:field, field", XML_COMPOSITE_OBSERVABLE_PROPERTY:"CompositeObservableProperty", XML_COMPONENT:"component", XML_OBSERVABLE_PROPERTY:"ObservableProperty", XML_LABEL:"label", XML_BASE_PHENOMENON:"basePhenomenon", XML_UOM:"uom", 
  XML_STATISTICAL_MEASURE:"statisticalMeasure", XML_STATISTICAL_MEASURE_INNER:"StatisticalMeasure", XML_STATISTICAL_FUNCTION:"statisticalFunction", XML_AGGREGATION_TIME_PERIOD:"aggregationTimePeriod", XML_ATTR_NAME:"name", XML_ATTR_SRS_DIMENSION:"srsDimension", XML_ATTR_XLINK_HREF:"xlink:href", XML_ATTR_GML_ID:"gml:id", XML_ATTR_CODE_SPACE:"codeSpace", XML_ATTR_CODE_SPACE_NAME:"http://xml.fmi.fi/namespace/locationcode/name", XML_ATTR_CODE_SPACE_WMO:"http://xml.fmi.fi/namespace/locationcode/wmo", 
  XML_ATTR_CODE_SPACE_GEOID:"http://xml.fmi.fi/namespace/locationcode/geoid", XML_ATTR_CODE_SPACE_FMISID:"http://xml.fmi.fi/namespace/stationcode/fmisid", XML_ATTR_UOM:"uom", XML_REF_PREFIX:"#", XML_EXCEPTION_REPORT:"ExceptionReport", XML_EXCEPTION:"Exception", XML_ATTR_EXCEPTION_CODE:"exceptionCode", XML_EXCEPTION_TEXT:"ExceptionText", KEY_ERROR_CODE:"errorCode", KEY_ERROR_TEXT:"errorText", PROPERTY_OBJECT_EMPTY:{label:"", unit:"", phenomenon:"", statisticalFunction:"", statisticalPeriod:""}};
  function parseXml(xml, errors, callback) {
    try {
      var parsedContent = {info:{begin:undefined, end:undefined}, locations:[], positions:{}, gmlcovPositions:{srsDimension:undefined, timeIndex:undefined, contents:[]}, data:[], parameters:[], properties:{}};
      var asyncCounter = 0;
      var incAsyncCounter = function() {
        ++asyncCounter
      };
      var parseXmlCallback = function() {
        if(asyncCounter > 0) {
          --asyncCounter
        }
        if(0 === asyncCounter) {
          asyncCounter = -1;
          handleCallback(callback, finalizeContent(parsedContent, errors), errors)
        }
      };
      parseFeatureCollection(xml, parsedContent, incAsyncCounter, parseXmlCallback, errors);
      if(0 === asyncCounter) {
        parseXmlCallback()
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Error during synchronous data parsing flow!")
      }
      asyncCounter = -1;
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error);
      handleCallback(callback, undefined, errors)
    }
  }
  function finalizeContent(parsedContent, errors) {
    var result = {info:parsedContent.info, parameters:parsedContent.parameters, properties:parsedContent.properties, locations:[]};
    try {
      var srsDimension = parsedContent.gmlcovPositions.srsDimension || 0;
      var gmlcovPositionsContents = parsedContent.gmlcovPositions.contents || [];
      var parametersLength = parsedContent.parameters.length;
      if(srsDimension > 0 && parsedContent.data.length === parametersLength * (gmlcovPositionsContents.length / srsDimension) && parsedContent.locations.length === fi.fmi.metoclient.metolib.Utils.objectLength(parsedContent.positions)) {
        for(var ind = 0;ind < parsedContent.locations.length;++ind) {
          var contentLocation = parsedContent.locations[ind];
          var refId = contentLocation.pointRef;
          var errorStr = "ERROR: Location and position data do not match!";
          if(refId) {
            var position = parsedContent.positions[refId];
            if(position) {
              result.locations.push({info:{id:contentLocation.id || "", geoid:contentLocation.geoid || "", wmo:contentLocation.wmo || "", fmisid:contentLocation.fmisid || "", name:contentLocation.name || position.name || "", region:contentLocation.region || "", country:contentLocation.country || "", timezone:contentLocation.timezone || "", position:position.position || ""}})
            }else {
              throw errorStr;
            }
          }else {
            throw errorStr;
          }
        }
        for(var i = 0;i < gmlcovPositionsContents.length;i += srsDimension) {
          var resultObject = {time:parseInt(gmlcovPositionsContents[i + srsDimension - 1], 10) * myConstants.EPOCH_TO_MS, values:{}};
          for(var j = 0;j < result.parameters.length;++j) {
            var parameter = result.parameters[j];
            if(parameter) {
              resultObject.values[parameter] = parseFloat(parsedContent.data[i / srsDimension * parametersLength + j]);
              if(!result.properties[parameter]) {
                if("undefined" !== typeof console && console) {
                  console.error("ERROR: Server has not provided properties for request parameter!")
                }
                result.properties[parameter] = myConstants.PROPERTY_OBJECT_EMPTY
              }
            }
          }
          for(var k = 0;k < result.locations.length;++k) {
            var matchCount = 0;
            var location = result.locations[k];
            for(var m = 0;m < location.info.position.length;++m) {
              if(location.info.position[m] === gmlcovPositionsContents[i + m]) {
                ++matchCount
              }else {
                break
              }
            }
            if(location.info.position && matchCount === location.info.position.length) {
              if(!location.timeValuePairs) {
                location.timeValuePairs = []
              }
              location.timeValuePairs.push(resultObject);
              break
            }
          }
        }
        handleLocationDuplicates(result.locations)
      }else {
        if(0 !== parsedContent.data.length || 0 !== gmlcovPositionsContents.length) {
          throw"ERROR: Parsed lists do not match!";
        }
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Could not finalize data!")
      }
      result = undefined;
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error)
    }
    return result
  }
  function handleLocationDuplicates(locations) {
    if(locations && locations.length) {
      for(var i = 0;i < locations.length - 1;++i) {
        var currentLocation = locations[i];
        var duplicates = [];
        for(var j = i + 1;j < locations.length;++j) {
          var compLocation = locations[j];
          if(currentLocation.info.position.length === compLocation.info.position.length) {
            var count = currentLocation.info.position.length;
            var match = true;
            for(var k = 0;k < count;++k) {
              if(currentLocation.info.position[k] !== compLocation.info.position[k]) {
                match = false;
                break
              }
            }
            if(match) {
              duplicates.push(compLocation)
            }
          }
        }
        if(duplicates.length) {
          var currentTimeValuePairs = currentLocation.timeValuePairs;
          var correctTimeValuePairsLength = currentTimeValuePairs.length / (duplicates.length + 1);
          for(var ind = 0;ind < duplicates.length;++ind) {
            duplicates[ind].timeValuePairs = currentTimeValuePairs.splice(correctTimeValuePairsLength, correctTimeValuePairsLength)
          }
        }
      }
    }
  }
  function parseFeatureCollection(xmlElement, container, asyncStarted, asyncCallback, errors) {
    if(xmlElement) {
      if(!parseExceptionReport(xmlElement, errors)) {
        jQuery(xmlElement).children(myConstants.XML_WFS_FEATURE_COLLECTION).each(function() {
          parseWfsMember(this, container, asyncStarted, asyncCallback, errors)
        })
      }
    }
  }
  function parseWfsMember(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_WFS_MEMBER).each(function() {
      parseOmsoPointTimeSeriesObservation(this, container, asyncStarted, asyncCallback, errors);
      parseOmsoGridSeriesObservation(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseOmsoPointTimeSeriesObservation(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OMSO_POINT_TIME_SERIES_OBSERVATION).each(function() {
      parseOmPhenomenonTime(this, container.info, asyncStarted, asyncCallback, errors);
      parseOmObservedProperty(this, container.properties, asyncStarted, asyncCallback, errors);
      parseOmFeatureOfInterest(this, container, asyncStarted, asyncCallback, errors);
      parseOmResult(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseOmsoGridSeriesObservation(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OMSO_GRID_SERIES_OBSERVATION).each(function() {
      parseOmPhenomenonTime(this, container.info, asyncStarted, asyncCallback, errors);
      parseOmObservedProperty(this, container.properties, asyncStarted, asyncCallback, errors);
      parseOmFeatureOfInterest(this, container, asyncStarted, asyncCallback, errors);
      parseOmResult(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseOmPhenomenonTime(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_PHENOMENON_TIME).each(function() {
      parseGmlTimePeriod(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlTimePeriod(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_TIME_PERIOD).each(function() {
      parseGmlBeginPosition(this, container, asyncStarted, asyncCallback, errors);
      parseGmlEndPosition(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlBeginPosition(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_BEGIN_POSITION).each(function() {
      var begin = jQuery.trim(jQuery(this).text());
      if(begin) {
        container.begin = new Date(begin)
      }
    })
  }
  function parseGmlEndPosition(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_END_POSITION).each(function() {
      var end = jQuery.trim(jQuery(this).text());
      if(end) {
        container.end = new Date(end)
      }
    })
  }
  function parseOmObservedProperty(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_OBSERVED_PROPERTY).each(function() {
      var url = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_XLINK_HREF));
      if(url) {
        requestXml(url, errors, function(xml, errorContainer) {
          if(!parseExceptionReport(xml, errors)) {
            if(xml) {
              parseCompositeObservableProperty(xml, container, asyncStarted, asyncCallback, errors);
              parseObservableProperty(xml, container, asyncStarted, asyncCallback, errors)
            }
          }
          asyncCallback()
        });
        asyncStarted()
      }
    })
  }
  function parseOmFeatureOfInterest(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_FEATURE_OF_INTEREST).each(function() {
      parseSamsSfSpatialSamplingFeature(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSamsSfSpatialSamplingFeature(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SAMS_SF_SPATIAL_SAMPLING_FEATURE).each(function() {
      parseSamSampledFeature(this, container.locations, asyncStarted, asyncCallback, errors);
      parseSamsShape(this, container.positions, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSamSampledFeature(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SAM_SAMPLED_FEATURE).each(function() {
      parseTargetLocationCollection(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseTargetLocationCollection(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_LOCATION_COLLECTION).each(function() {
      parseTargetMember(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseTargetMember(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_MEMBER).each(function() {
      parseTargetLocation(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseTargetLocation(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_LOCATION).each(function() {
      var location = {};
      parseGmlIdentifier(this, location, asyncStarted, asyncCallback, errors);
      parseGmlNameCodeSpace(this, location, asyncStarted, asyncCallback, errors);
      parseTargetRegion(this, location, asyncStarted, asyncCallback, errors);
      parseTargetCountry(this, location, asyncStarted, asyncCallback, errors);
      parseTargetTimezone(this, location, asyncStarted, asyncCallback, errors);
      parseTargetRepresentativePoint(this, location, asyncStarted, asyncCallback, errors);
      container.push(location)
    })
  }
  function parseGmlIdentifier(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_IDENTIFIER).each(function() {
      container.id = jQuery.trim(jQuery(this).text());
      var codeSpaceValue = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_CODE_SPACE));
      if(myConstants.XML_ATTR_CODE_SPACE_FMISID === codeSpaceValue) {
        container.fmisid = jQuery.trim(jQuery(this).text())
      }
    })
  }
  function parseGmlNameCodeSpace(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_NAME).each(function() {
      var codeSpaceValue = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_CODE_SPACE));
      if(myConstants.XML_ATTR_CODE_SPACE_NAME === codeSpaceValue) {
        container.name = jQuery.trim(jQuery(this).text())
      }else {
        if(myConstants.XML_ATTR_CODE_SPACE_WMO === codeSpaceValue) {
          container.wmo = jQuery.trim(jQuery(this).text())
        }else {
          if(myConstants.XML_ATTR_CODE_SPACE_GEOID === codeSpaceValue) {
            container.geoid = jQuery.trim(jQuery(this).text())
          }
        }
      }
    })
  }
  function parseTargetRegion(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_REGION).each(function() {
      container.region = jQuery.trim(jQuery(this).text())
    })
  }
  function parseTargetCountry(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_COUNTRY).each(function() {
      container.country = jQuery.trim(jQuery(this).text())
    })
  }
  function parseTargetTimezone(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_TIMEZONE).each(function() {
      container.timezone = jQuery.trim(jQuery(this).text())
    })
  }
  function parseTargetRepresentativePoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_REPRESENTATIVE_POINT).each(function() {
      container.pointRef = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_XLINK_HREF));
      if(container.pointRef && container.pointRef.charAt(0) === myConstants.XML_REF_PREFIX) {
        container.pointRef = container.pointRef.slice(1)
      }
    })
  }
  function parseSamsShape(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SAMS_SHAPE).each(function() {
      parseGmlMultiPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlPoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POINT).each(function() {
      var that = this;
      var id = jQuery.trim(jQuery(that).attr(myConstants.XML_ATTR_GML_ID));
      if(id) {
        if(!container[id]) {
          container[id] = {name:"", position:[]}
        }
        var position = container[id];
        parseGmlName(this, position, asyncStarted, asyncCallback, errors);
        parseGmlPos(this, position.position, asyncStarted, asyncCallback, errors)
      }
    })
  }
  function parseGmlMultiPoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_MULTI_POINT).each(function() {
      parseGmlPointMember(this, container, asyncStarted, asyncCallback, errors);
      parseGmlPointMembers(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlPointMember(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POINT_MEMBER).each(function() {
      parseGmlPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlPointMembers(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POINT_MEMBERS).each(function() {
      parseGmlPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlName(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_NAME).each(function() {
      container.name = jQuery.trim(jQuery(this).text())
    })
  }
  function parseGmlPos(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POS).each(function() {
      var content = jQuery.trim(jQuery(this).text());
      if(content) {
        container.push.apply(container, content.split(myConstants.REGEX_WHITE_SPACE))
      }
    })
  }
  function parseOmResult(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_RESULT).each(function() {
      parseGmlcovMultiPointCoverage(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovMultiPointCoverage(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_MULTI_POINT_COVERAGE).each(function() {
      parseGmlDomainSet(this, container, asyncStarted, asyncCallback, errors);
      parseGmlRangeSet(this, container, asyncStarted, asyncCallback, errors);
      parseGmlcovRangeType(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovRangeType(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_RANGE_TYPE).each(function() {
      parseSweDataRecord(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSweDataRecord(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SWE_DATA_RECORD).each(function() {
      parseSweField(this, container.parameters, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSweField(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SWE_FIELD).each(function() {
      var nameAttr = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_NAME));
      if(nameAttr) {
        container.push(nameAttr)
      }
    })
  }
  function parseGmlDomainSet(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_DOMAIN_SET).each(function() {
      parseGmlcovSimpleMultiPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovSimpleMultiPoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_SIMPLE_MULTI_POINT).each(function() {
      var srsDimension = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_SRS_DIMENSION));
      if(srsDimension) {
        srsDimension = parseInt(srsDimension, 10);
        if(srsDimension > 0) {
          container.gmlcovPositions.srsDimension = srsDimension;
          container.gmlcovPositions.timeIndex = srsDimension - 1
        }
      }
      parseGmlcovPositions(this, container.gmlcovPositions.contents, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovPositions(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_POSITIONS).each(function() {
      var content = jQuery.trim(jQuery(this).text());
      if(content) {
        container.push.apply(container, content.split(myConstants.REGEX_WHITE_SPACE))
      }
    })
  }
  function parseGmlRangeSet(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_RANGE_SET).each(function() {
      parseGmlDataBlock(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlDataBlock(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_DATA_BLOCK).each(function() {
      parseGmlDoubleOrNilReasonTupleList(this, container.data, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlDoubleOrNilReasonTupleList(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_DOUBLE_OR_NIL_REASON_TUPLE_LIST).each(function() {
      var content = jQuery.trim(jQuery(this).text());
      if(content) {
        container.push.apply(container, content.split(myConstants.REGEX_WHITE_SPACE))
      }
    })
  }
  function parseExceptionReport(xmlElement, errors) {
    var exceptionFound = false;
    try {
      if(xmlElement) {
        jQuery(xmlElement).children(myConstants.XML_EXCEPTION_REPORT).each(function() {
          exceptionFound = true;
          var error = {};
          errors.push(error);
          parseException(this, error)
        })
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Error while parsing exception data!")
      }
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error)
    }
    return exceptionFound
  }
  function parseException(xmlElement, error) {
    jQuery(xmlElement).children(myConstants.XML_EXCEPTION).each(function() {
      error[myConstants.KEY_ERROR_CODE] = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_EXCEPTION_CODE));
      parseExceptionText(this, error)
    })
  }
  function parseExceptionText(xmlElement, error) {
    jQuery(xmlElement).children(myConstants.XML_EXCEPTION_TEXT).each(function() {
      error[myConstants.KEY_ERROR_TEXT] = jQuery.trim(jQuery(this).text())
    })
  }
  function parseCompositeObservableProperty(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_COMPOSITE_OBSERVABLE_PROPERTY).each(function() {
      parseComponent(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseComponent(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_COMPONENT).each(function() {
      parseObservableProperty(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseObservableProperty(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OBSERVABLE_PROPERTY).each(function() {
      var property = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_GML_ID));
      if(property) {
        var propertyObject = _.clone(myConstants.PROPERTY_OBJECT_EMPTY);
        parseLabel(this, propertyObject, asyncStarted, asyncCallback, errors);
        parseBasePhenomenon(this, propertyObject, asyncStarted, asyncCallback, errors);
        parseUom(this, propertyObject, asyncStarted, asyncCallback, errors);
        parseStatisticalMeasure(this, propertyObject, asyncStarted, asyncCallback, errors);
        container[property] = propertyObject
      }
    })
  }
  function parseLabel(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_LABEL).each(function() {
      container.label = jQuery.trim(jQuery(this).text())
    })
  }
  function parseBasePhenomenon(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_BASE_PHENOMENON).each(function() {
      container.phenomenon = jQuery.trim(jQuery(this).text())
    })
  }
  function parseUom(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_UOM).each(function() {
      container.unit = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_UOM))
    })
  }
  function parseStatisticalMeasure(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_STATISTICAL_MEASURE).each(function() {
      parseStatisticalMeasureInner(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseStatisticalMeasureInner(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_STATISTICAL_MEASURE_INNER).each(function() {
      parseStatisticalFunction(this, container, asyncStarted, asyncCallback, errors);
      parseAggregationTimePeriod(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseStatisticalFunction(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_STATISTICAL_FUNCTION).each(function() {
      container.statisticalFunction = jQuery.trim(jQuery(this).text())
    })
  }
  function parseAggregationTimePeriod(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_AGGREGATION_TIME_PERIOD).each(function() {
      container.statisticalPeriod = jQuery.trim(jQuery(this).text())
    })
  }
  function handleCallback(callback, data, errors) {
    try {
      if(callback) {
        callback(data, errors)
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Callback function error!");
        console.log(e);
        console.log(e.name);
        console.log(e.message);
        console.log(e.stack)
      }
    }
  }
  function requestXml(url, errors, callback) {
    setTimeout(function() {
      jQuery.ajax({type:myConstants.HTTP_METHOD, url:url, dataType:myConstants.DATA_TYPE, success:function(data) {
        handleCallback(callback, data, errors)
      }, error:function(jqXHR, textStatus, errorThrown) {
        var error = {};
        error[myConstants.KEY_ERROR_CODE] = jqXHR.status;
        error[myConstants.KEY_ERROR_TEXT] = errorThrown || textStatus;
        errors.push(error);
        handleCallback(callback, undefined, errors)
      }})
    }, 0)
  }
  function requestAndParseXml(url, callback) {
    var errorContainer = [];
    requestXml(url, errorContainer, function(xml, errors) {
      parseXml(xml, errors, callback)
    })
  }
  function finalizeDataValues(data, pairs, target) {
    if(data && data.parameters && pairs && target) {
      for(var i = 0;i < data.parameters.length;++i) {
        var key = data.parameters[i];
        if(key) {
          var finalizedValues = {property:data.properties[key], timeValuePairs:[]};
          for(var j = 0;j < pairs.length;++j) {
            var pair = pairs[j];
            finalizedValues.timeValuePairs.push({time:pair.time, value:pair.values[key]})
          }
          target[key] = finalizedValues
        }
      }
    }
  }
  function dataCallback(callback, data, errors) {
    var finalizedData;
    try {
      if(data && data.parameters && data.properties) {
        finalizedData = {info:data.info, properties:data.properties, locations:[]};
        if(data.locations && data.locations.length > 0) {
          var locations = data.locations;
          for(var i = 0;i < locations.length;++i) {
            var location = locations[i];
            var locationObject = {info:location.info, data:{}};
            finalizeDataValues(data, location.timeValuePairs, locationObject.data);
            finalizedData.locations.push(locationObject)
          }
        }
      }
    }catch(e) {
      var errorString = "ERROR: Could not finalize data!";
      if("undefined" !== typeof console && console) {
        console.error(errorString)
      }
      finalizedData = undefined;
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error)
    }
    callback(finalizedData, errors)
  }
  function handleQueryExtension(queryExtension) {
    var extension = "";
    if(queryExtension) {
      for(var key in queryExtension) {
        if(queryExtension.hasOwnProperty(key)) {
          extension += fi.fmi.metoclient.metolib.Utils.encodeUriComponent(key);
          extension += myConstants.URL_QUERY_FIELD_VALUE_DELIMITER;
          extension += fi.fmi.metoclient.metolib.Utils.encodeUriComponent(queryExtension[key] || "")
        }
      }
      if(extension) {
        extension = myConstants.URL_QUERY_PREFIX_AND + extension
      }
    }
    return extension
  }
  function getParsedData(url, storedQueryId, requestParameter, begin, end, timestep, numOfTimesteps, denyTimeAdjusting, geoid, wmo, fmisid, sites, bbox, crs, queryExtension, callback) {
    if(!(begin instanceof Date) && !isNaN(begin)) {
      begin = new Date(begin)
    }
    if(!(end instanceof Date) && !isNaN(end)) {
      end = new Date(end)
    }
    if(requestParameter && _.isArray(requestParameter)) {
      requestParameter = requestParameter.join()
    }
    if((undefined === timestep || null === timestep) && numOfTimesteps && numOfTimesteps > 0 && begin instanceof Date && end instanceof Date) {
      timestep = Math.round((end.getTime() - begin.getTime()) / numOfTimesteps)
    }
    var urlCheck = url && _.isString(url);
    var storedQueryCheck = storedQueryId && _.isString(storedQueryId);
    var parameterCheck = requestParameter && _.isString(requestParameter);
    var periodCheck = begin instanceof Date && end instanceof Date && begin.getTime() <= end.getTime() && (!timestep || _.isNumber(timestep));
    var geoidCheck = _.isNumber(geoid) || geoid && _.isString(geoid) || _.isArray(geoid) && geoid.length;
    var wmoCheck = _.isNumber(wmo) || wmo && _.isString(wmo) || _.isArray(wmo) && wmo.length;
    var fmisidCheck = _.isNumber(fmisid) || fmisid && _.isString(fmisid) || _.isArray(fmisid) && fmisid.length;
    var sitesCheck = sites && _.isString(sites) || _.isArray(sites) && sites.length;
    var bboxCheck = bbox && _.isString(bbox);
    var locationGivenCheck = geoidCheck || wmoCheck || fmisidCheck || sitesCheck || bboxCheck;
    var crsCheck = !crs || _.isString(crs);
    if(urlCheck && storedQueryCheck && parameterCheck && periodCheck && locationGivenCheck && crsCheck) {
      if(!denyTimeAdjusting) {
        begin.setTime(adjustBeginTime(timestep, begin).getTime());
        end.setTime(adjustEndTime(timestep, end, begin).getTime())
      }
      var MS_REG = /\.\d+/;
      begin = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(begin.toISOString()).split(MS_REG).join("");
      end = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(end.toISOString()).split(MS_REG).join("");
      var timeStepParameter = "";
      var timestepMinutes = Math.floor(timestep / myConstants.MIN_TO_MS);
      if(timestepMinutes && timestepMinutes > 0) {
        timeStepParameter = myConstants.REQUEST_TIMESTEP + timestepMinutes
      }
      requestParameter = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(requestParameter);
      var ind;
      var geoidParameter = "";
      if(_.isNumber(geoid) || geoid && _.isString(geoid)) {
        geoid = [geoid]
      }
      if(_.isArray(geoid)) {
        for(ind = 0;ind < geoid.length;++ind) {
          var tmpGeoid = geoid[ind];
          if(_.isNumber(tmpGeoid) || tmpGeoid && _.isString(tmpGeoid)) {
            tmpGeoid = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(tmpGeoid);
            geoidParameter += myConstants.REQUEST_GEOID + tmpGeoid
          }
        }
      }
      var wmoParameter = "";
      if(_.isNumber(wmo) || wmo && _.isString(wmo)) {
        wmo = [wmo]
      }
      if(_.isArray(wmo)) {
        for(ind = 0;ind < wmo.length;++ind) {
          var tmpWmo = wmo[ind];
          if(_.isNumber(tmpWmo) || tmpWmo && _.isString(tmpWmo)) {
            tmpWmo = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(tmpWmo);
            wmoParameter += myConstants.REQUEST_WMO + tmpWmo
          }
        }
      }
      var fmisidParameter = "";
      if(_.isNumber(fmisid) || fmisid && _.isString(fmisid)) {
        fmisid = [fmisid]
      }
      if(_.isArray(fmisid)) {
        for(ind = 0;ind < fmisid.length;++ind) {
          var tmpFmisid = fmisid[ind];
          if(_.isNumber(tmpFmisid) || tmpFmisid && _.isString(tmpFmisid)) {
            tmpFmisid = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(tmpFmisid);
            fmisidParameter += myConstants.REQUEST_FMISID + tmpFmisid
          }
        }
      }
      var sitesParameter = "";
      if(sites) {
        if(_.isString(sites)) {
          sites = [sites]
        }
        for(ind = 0;ind < sites.length;++ind) {
          var place = sites[ind];
          if(place && _.isString(place)) {
            place = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(place);
            sitesParameter += myConstants.REQUEST_PLACE + place
          }
        }
      }
      var bboxParameter = "";
      if(bbox) {
        bboxParameter = myConstants.REQUEST_BBOX + fi.fmi.metoclient.metolib.Utils.encodeUriComponent(bbox)
      }
      var crsParameter = "";
      if(crs) {
        crsParameter = myConstants.REQUEST_CRS + fi.fmi.metoclient.metolib.Utils.encodeUriComponent(crs)
      }
      var storedQueryIdParameter = myConstants.REQUEST_STORED_QUERY_ID + fi.fmi.metoclient.metolib.Utils.encodeUriComponent(storedQueryId);
      var urlQueryDelimiter = url.indexOf(myConstants.URL_QUERY_PREFIX_BEGIN) === -1 ? myConstants.URL_QUERY_PREFIX_BEGIN : myConstants.URL_QUERY_PREFIX_AND;
      if(url.length > 0 && (url.indexOf(myConstants.URL_QUERY_PREFIX_BEGIN) === url.length - 1 || url.indexOf(myConstants.URL_QUERY_PREFIX_AND) === url.length - 1)) {
        urlQueryDelimiter = ""
      }
      var urlQueryExtension = handleQueryExtension(queryExtension);
      var requestUrl = url + urlQueryDelimiter + myConstants.REQUEST_GET_FEATURE + storedQueryIdParameter + myConstants.REQUEST_PARAMETERS + requestParameter + myConstants.REQUEST_BEGIN + begin + myConstants.REQUEST_END + end + timeStepParameter + geoidParameter + wmoParameter + fmisidParameter + sitesParameter + bboxParameter + crsParameter + urlQueryExtension;
      requestAndParseXml(requestUrl, callback)
    }else {
      var errorStr = "ERROR: Wrong or missing information for the request!";
      if("undefined" !== typeof console && console) {
        console.error(errorStr)
      }
      throw errorStr;
    }
  }
  function adjustBeginTime(timestep, time) {
    var date;
    if(undefined !== time && null !== time) {
      date = time instanceof Date ? new Date(time.getTime()) : new Date(time);
      date.setMilliseconds(0);
      date.setSeconds(0);
      var timestepMinutes = !timestep ? undefined : Math.floor(timestep / myConstants.MIN_TO_MS);
      if(timestepMinutes) {
        var beginMinutes = date.getMinutes();
        beginMinutes -= beginMinutes % timestepMinutes;
        date.setMinutes(beginMinutes)
      }
    }
    return date
  }
  function adjustEndTime(timestep, end, begin) {
    var date;
    if(undefined !== begin && null !== begin && undefined !== end && null !== end) {
      date = end instanceof Date ? new Date(end.getTime()) : new Date(end);
      var beginDate = adjustBeginTime(timestep, begin);
      if(timestep) {
        var reminder = (date.getTime() - beginDate.getTime()) % timestep;
        if(reminder > 0) {
          date.setTime(date.getTime() + (timestep - reminder))
        }
      }
    }
    return date
  }
  function getData(options) {
    if(options && options.callback) {
      try {
        getParsedData(options.url, options.storedQueryId, options.requestParameter, options.begin, options.end, options.timestep, options.numOfTimesteps, options.denyTimeAdjusting, options.geoid, options.wmo, options.fmisid, options.sites, options.bbox, options.crs, options.queryExtension, function(data, errors) {
          dataCallback(options.callback, data, errors)
        })
      }catch(e) {
        setTimeout(function() {
          if("undefined" !== typeof console && console) {
            console.error("ERROR: Get data error!")
          }
          var error = {};
          error[myConstants.KEY_ERROR_TEXT] = e.toString();
          handleCallback(options.callback, undefined, [error])
        }, 0)
      }
    }else {
      var errorStr = "ERROR: Options object and callback function in it are mandatory!";
      if("undefined" !== typeof console && console) {
        console.error(errorStr)
      }
      throw errorStr;
    }
  }
  return{getData:getData, adjustBeginTime:adjustBeginTime, adjustEndTime:adjustEndTime}
}();
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lo-dash-underscore is required for fi.fmi.metoclient.metolib.SplitterCache!";
}
if("undefined" === typeof async || !async) {
  throw"ERROR: Async is required for fi.fmi.metoclient.metolib.SplitterCache!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
fi.fmi.metoclient.metolib.SplitterCache = function() {
  var checkTaskDef = function(taskDef) {
    var placeholder;
    var startNudge = 0;
    var endNudge = 0;
    if(!_.isObject(taskDef)) {
      throw"taskdef must be an object";
    }
    if(!_.isString(taskDef.service)) {
      throw"taskDef must contain a 'service' property of string type";
    }
    if(!_.isArray(taskDef.location)) {
      if(!_.isString(taskDef.location)) {
        throw"taskDef must contain a 'location' property of either an array or a string type";
      }else {
        placeholder = taskDef.location;
        taskDef.location = [];
        taskDef.location.push(placeholder)
      }
    }
    if(!_.isArray(taskDef.parameter)) {
      if(!_.isString(taskDef.parameter)) {
        throw"taskDef must contain a 'parameter' property of either an array or a string type";
      }else {
        placeholder = taskDef.parameter;
        taskDef.parameter = [];
        taskDef.parameter.push(placeholder)
      }
    }
    if(!_.isNumber(taskDef.resolution)) {
      throw"taskDef must contain a 'resolution' property of numeric type";
    }else {
      if(taskDef.resolution > 0.5) {
        taskDef.resolution = Math.round(taskDef.resolution)
      }else {
        throw"taskDef.resolution must be a positive integer";
      }
    }
    if(!_.isNumber(taskDef.start)) {
      throw"taskDef must contain a 'start' property of numeric type";
    }
    if(_.isNumber(taskDef.pointCount)) {
      if(taskDef.pointCount > 0) {
        taskDef.end = taskDef.start + (taskDef.pointCount - 1) * taskDef.resolution
      }else {
        throw"taskDef.pointCount must be greater than zero";
      }
    }else {
      if(_.isNumber(taskDef.end)) {
        if(taskDef.end < taskDef.start) {
          throw"'end' must be greater than or equal to 'start'";
        }
        endNudge = (taskDef.end - taskDef.start) % taskDef.resolution;
        if(endNudge !== 0) {
          taskDef.end = taskDef.end + (taskDef.resolution - endNudge)
        }
        taskDef.pointCount = (taskDef.end - taskDef.start) / taskDef.resolution + 1
      }else {
        throw"taskDef must contain either 'end' or 'pointCount' property of numeric type";
      }
    }
  };
  var arrayEqualsAnyOrder = function(arr1, arr2) {
    var i = 0;
    if(_.isArray(arr1) && _.isArray(arr2)) {
      if(arr1.length === arr2.length) {
        for(i = 0;i < arr1.length;i++) {
          if(_.indexOf(arr2, arr1[i]) === -1) {
            return false
          }
        }
        return true
      }else {
        return false
      }
    }else {
      if(arr1 === undefined || arr1 === null || arr2 === undefined || arr2 === null) {
        return false
      }else {
        return arr1 === arr2
      }
    }
  };
  var DataBlock = function() {
    var blockCounter = 0;
    var _constructor = function DataBlock(evtDispatcher) {
      var id = null;
      var fetchError = null;
      var fetcher = null;
      var data = null;
      var taskDef = null;
      var age = 0;
      var fetching = false;
      var fetched = false;
      var pinCount = 0;
      var waitingRecycling = false;
      var waitingMerging = false;
      var ready = false;
      var callbacks = [];
      var requestId = 0;
      var dispatcher = evtDispatcher;
      var thisBlock = this;
      function reset() {
        fetchError = null;
        fetcher = null;
        data = null;
        taskDef = null;
        age = 0;
        fetching = false;
        fetched = false;
        pinCount = 0;
        waitingRecycling = false;
        waitingMerging = false;
        ready = false;
        callbacks = []
      }
      this.getId = function() {
        return id
      };
      this.getTaskDef = function() {
        return taskDef
      };
      this.getStart = function() {
        return taskDef !== null ? taskDef.start : undefined
      };
      this.getEnd = function() {
        return taskDef !== null ? taskDef.end : undefined
      };
      this.getPointCount = function() {
        return taskDef !== null ? taskDef.pointCount : undefined
      };
      this.getResolution = function() {
        return taskDef !== null ? taskDef.resolution : undefined
      };
      this.getService = function() {
        return taskDef !== null ? taskDef.service : undefined
      };
      this.getLocation = function() {
        return taskDef !== null ? taskDef.location : undefined
      };
      this.getParameter = function() {
        return taskDef !== null ? taskDef.parameter : undefined
      };
      this.getDataSize = function() {
        return taskDef !== null ? taskDef.pointCount * taskDef.parameter.length * taskDef.location.length : 0
      };
      this.pin = function() {
        if(!waitingRecycling) {
          pinCount++;
          if(dispatcher) {
            dispatcher("blockPinned", thisBlock)
          }
          return pinCount
        }else {
          return null
        }
      };
      this.unpin = function() {
        if(pinCount > 0) {
          pinCount--;
          if(dispatcher) {
            dispatcher("blockUnpinned", thisBlock)
          }
        }
        return pinCount
      };
      this.isPinned = function() {
        return pinCount > 0
      };
      this.getPinCount = function() {
        return pinCount
      };
      this.getRequestId = function() {
        return requestId
      };
      this.isWaitingRecycling = function() {
        return waitingRecycling
      };
      this.isWaitingMerging = function() {
        return waitingMerging
      };
      this.isFetched = function() {
        return fetched
      };
      this.setFetched = function(f) {
        if(f === true) {
          fetched = true
        }else {
          fetched = false
        }
      };
      this.isFetching = function() {
        return fetching
      };
      this.setFetching = function(f) {
        if(f === true) {
          fetching = true
        }else {
          fetching = false
        }
      };
      this.increaseNotUsed = function() {
        age++;
        if(dispatcher) {
          dispatcher("blockAged", thisBlock)
        }
      };
      this.getNotUsedSince = function() {
        return age
      };
      this.fetchFailed = function() {
        return fetchError !== null
      };
      this.markForRecycling = function() {
        waitingRecycling = true;
        if(dispatcher) {
          dispatcher("blockEvicted", thisBlock)
        }
      };
      this.markForMerging = function(merge) {
        if(merge === true) {
          waitingMerging = true;
          if(dispatcher) {
            dispatcher("blockMarkedForMerge", thisBlock)
          }
        }else {
          waitingMerging = false;
          if(dispatcher) {
            dispatcher("blockMergeCancelled", thisBlock)
          }
        }
      };
      this.setData = function(d) {
        data = d
      };
      this.getFetcher = function() {
        return fetcher
      };
      this.recycle = function() {
        reset();
        if(dispatcher) {
          dispatcher("blockRecycled", thisBlock)
        }
      };
      this.prepare = function(taskDefinition, dataFetcher) {
        if(!_.isFunction(dataFetcher)) {
          throw"fetcher must be a function";
        }
        checkTaskDef(taskDefinition);
        reset();
        taskDef = taskDefinition;
        fetcher = dataFetcher;
        ready = true;
        requestId++;
        if(dispatcher) {
          dispatcher("blockPrepared", thisBlock)
        }
      };
      this.getDataAsync = function(callback) {
        var that = this;
        if(!ready) {
          throw"Cannot getData in unprepared state, call prepare first";
        }
        age = 0;
        if(!fetched) {
          if(callback !== undefined && _.isFunction(callback)) {
            callbacks.push(callback)
          }
          if(!fetching) {
            fetching = true;
            fetcher(taskDef, function(err, result) {
              var reqId = that.getRequestId();
              if(err) {
                fetchError = err
              }
              data = result;
              fetched = true;
              if(callbacks.length === 0) {
                fetching = false
              }else {
                async.whilst(function() {
                  var myReqId = that.getRequestId();
                  return reqId === myReqId && callbacks.length > 0
                }, function(notify) {
                  try {
                    var cb = callbacks.pop();
                    cb.call(that, fetchError, data)
                  }catch(ex) {
                    if("undefined" !== typeof console && console) {
                      console.error("Error in block finished callback:" + ex.message)
                    }
                  }finally {
                    notify();
                    fetching = false
                  }
                }, function(err) {
                })
              }
              if(dispatcher) {
                dispatcher("blockProviderFetchFinished", thisBlock)
              }
            });
            if(dispatcher) {
              dispatcher("blockProviderFetchStarted", thisBlock)
            }
          }
        }else {
          if(_.isFunction(callback)) {
            _.defer(function(err, d) {
              if(dispatcher) {
                dispatcher("blockCacheFetchFinished", thisBlock)
              }
              callback(err, d)
            }, fetchError, data);
            if(dispatcher) {
              dispatcher("blockCacheFetchStarted", thisBlock)
            }
          }else {
          }
        }
      };
      id = "id#" + blockCounter++;
      if(dispatcher) {
        dispatcher("blockCreated", thisBlock)
      }
    };
    return _constructor
  }();
  var eventListenerIdCounter = 0;
  var fetcherIdCounter = 0;
  var _constructor = function SplitterCache(properties) {
    var emptyBlockPool = [];
    var cachedBlocks = [];
    var mergedBlocks = [];
    var stepResolutions = [];
    var sideFetchBeforeFactor = 0.5;
    var sideFetchAfterFactor = 1;
    var maxBlockDataPoints = 500;
    var minBlockDataPoints = 20;
    var maxCacheDataSize = 5E4;
    var strictErrorHandling = true;
    var errorFillValue = NaN;
    var fetchers = {};
    var cachedDataSize = 0;
    var cacheHits = 0;
    var cacheMisses = 0;
    var thisCache = this;
    var eventListeners = {blockCreated:{}, blockPrepared:{}, blockProviderFetchStarted:{}, blockProviderFetchFinished:{}, blockCacheFetchStarted:{}, blockCacheFetchFinished:{}, blockPinned:{}, blockUnpinned:{}, blockEvicted:{}, blockRecycled:{}, blockAged:{}, blockMarkedForMerge:{}, blockMergeCancelled:{}, evictStarted:{}, evictFinished:{}, fetchStarted:{}, fetchFinished:{}, cacheCleared:{}, dataProviderAdded:{}, dataProviderRemoved:{}};
    function fireEvent(eventName, eventData) {
      if(eventListeners[eventName] !== undefined) {
        _.each(eventListeners[eventName], function(cb) {
          try {
            cb.call(thisCache, eventData)
          }catch(ex) {
          }
        })
      }
    }
    function addEventListener(eventName, cb) {
      var listenerId = null;
      if(eventListeners[eventName] !== undefined) {
        if(_.isFunction(cb)) {
          listenerId = "id" + eventListenerIdCounter++;
          eventListeners[eventName][listenerId] = cb
        }else {
          throw"Event listener callback is not a function";
        }
      }else {
        throw"Unknown event '" + eventName + "', use one of " + _.reduce(_.keys(eventListeners), function(memo, name, ind) {
          if(ind > 0) {
            memo = memo + ", "
          }
          memo = memo + name;
          return memo
        });
      }
      return listenerId
    }
    function removeEventListener(eventName, listenerId) {
      if(eventListeners[eventName] !== undefined) {
        if(eventListeners[eventName][listenerId] !== undefined) {
          delete eventListeners[eventName][listenerId]
        }
      }else {
        throw"Unknown event '" + eventName + "', use one of " + _.reduce(_.keys(eventListeners), function(memo, name, ind) {
          if(ind > 0) {
            memo = memo + ", "
          }
          memo = memo + name
        });
      }
    }
    function evict(evictList) {
      async.each(evictList, function(toEvict, notify) {
        toEvict.markForRecycling();
        notify()
      }, function(err) {
        if(err && "undefined" !== typeof console && console) {
          console.error(err)
        }
      })
    }
    function mergeBlocks(block1, block2, callback) {
      var newBlock = null;
      var taskDef = {};
      var combinedData = [];
      if(block1.pin() > 0 && block2.pin() > 0) {
        block1.markForMerging(true);
        block2.markForMerging(true);
        newBlock = getDataBlock();
        taskDef = _.clone(block1.getTaskDef());
        taskDef.end = block2.getEnd();
        taskDef.pointCount = block1.getPointCount() + block2.getPointCount();
        newBlock.prepare(taskDef, block1.getFetcher());
        newBlock.setFetching(true);
        fireEvent("blockCacheFetchStarted", newBlock);
        async.parallel({data1:function(cb) {
          block1.getDataAsync(function(err, data) {
            if(err) {
              if("undefined" !== typeof console && console) {
                console.log("Warning: getDataAsync from merged block1 returned error:'" + err + "'")
              }
              cb(err)
            }else {
              fillWith(combinedData, data, taskDef.location, taskDef.parameter, 0, 0, block1.getPointCount(), cb)
            }
          })
        }, data2:function(cb) {
          block2.getDataAsync(function(err, data) {
            if(err) {
              if("undefined" !== typeof console && console) {
                console.log("Warning: getDataAsync from merged block2 returned error:'" + err + "'")
              }
              cb(err)
            }else {
              fillWith(combinedData, data, taskDef.location, taskDef.parameter, block1.getPointCount(), 0, block2.getPointCount(), cb)
            }
          })
        }}, function(err, results) {
          block1.unpin();
          block2.unpin();
          if(!err) {
            block1.markForRecycling();
            block2.markForRecycling();
            newBlock.setData(combinedData);
            newBlock.setFetching(false);
            newBlock.setFetched(true);
            callback(null, newBlock);
            fireEvent("blockCacheFetchFinished", newBlock)
          }else {
            newBlock.reset();
            block1.markForMerging(false);
            block2.markForMerging(false);
            callback(err);
            fireEvent("blockCacheFetchFinished", null)
          }
        })
      }else {
        _.defer(function() {
          callback(new Error("One or both blocks already marked for recycling"))
        })
      }
    }
    function blocksAreContinuous(block1, block2) {
      if(block1.getResolution() === block2.getResolution() && block2.getStart() === block1.getEnd() + block1.getResolution()) {
        return true
      }else {
        return false
      }
    }
    function shouldBlocksBeMerged(block1, block2) {
      if(!block1.fetchFailed() && !block2.fetchFailed() && !block1.isWaitingMerging() && !block2.isWaitingMerging() && (block1.getPointCount() < minBlockDataPoints || block2.getPointCount() < minBlockDataPoints) && blocksAreContinuous(block1, block2) && block1.getPointCount() + block2.getPointCount() < maxBlockDataPoints) {
        return true
      }else {
        return false
      }
    }
    function getDataBlock() {
      var dataBlock;
      if(emptyBlockPool.length > 0) {
        dataBlock = emptyBlockPool.pop()
      }else {
        dataBlock = new DataBlock(fireEvent)
      }
      return dataBlock
    }
    function blockOverlaps(blockStart, blockEnd, start, end) {
      var retval = false;
      if(blockStart === start && blockEnd === end) {
        retval = true
      }else {
        if(blockStart <= end && blockEnd > start) {
          retval = true
        }
      }
      return retval
    }
    function createMissingBlocksBefore(prevBlockEnd, blockStart, fetchStart, fetchEnd, taskDef) {
      var retval = null;
      if(prevBlockEnd === null || prevBlockEnd < blockStart - taskDef.resolution) {
        if(blockStart > fetchStart) {
          if(blockStart >= fetchEnd) {
            if(prevBlockEnd === null) {
              retval = allocateAndPrepareContinuousBlocks(taskDef, fetchStart, fetchEnd)
            }else {
              retval = allocateAndPrepareContinuousBlocks(taskDef, Math.max(prevBlockEnd, fetchStart), fetchEnd)
            }
          }else {
            if(prevBlockEnd === null) {
              retval = allocateAndPrepareContinuousBlocks(taskDef, fetchStart, blockStart - taskDef.resolution)
            }else {
              retval = allocateAndPrepareContinuousBlocks(taskDef, Math.max(prevBlockEnd + taskDef.resolution, fetchStart), blockStart - taskDef.resolution)
            }
          }
        }
      }
      return retval
    }
    function recycleBlock(block) {
      if(block.isPinned()) {
        async.whilst(function() {
          return block.isPinned()
        }, function(notify) {
          setTimeout(notify, 500)
        }, function(err) {
          block.recycle();
          emptyBlockPool.push(block)
        })
      }else {
        block.recycle();
        emptyBlockPool.push(block)
      }
    }
    var iterateCacheQueue = async.queue(function(taskDef, callback) {
      callback(null, iterateCache(taskDef))
    }, 1);
    function iterateCache(taskDef) {
      var retval = [];
      var requestedStart = taskDef.start;
      var requestedEnd = taskDef.end;
      var sideFetchBeforeItemCount = Math.ceil(sideFetchBeforeFactor * taskDef.pointCount);
      var sideFetchAfterItemCount = Math.ceil(sideFetchAfterFactor * taskDef.pointCount);
      var fetchStart = requestedStart - sideFetchBeforeItemCount * taskDef.resolution;
      var fetchEnd = requestedEnd + sideFetchAfterItemCount * taskDef.resolution;
      var blockAgeOrder = [];
      var newCachedBlocks = [];
      var mergeInd = -1;
      var blockToMerge = null;
      var prevMatchingBlock = null;
      var sortIterator = function(bl) {
        return bl.getStart()
      };
      cachedDataSize = 0;
      while(mergedBlocks.length > 0) {
        blockToMerge = mergedBlocks.shift();
        mergeInd = _.sortedIndex(cachedBlocks, blockToMerge, sortIterator);
        cachedBlocks.splice(mergeInd, 0, blockToMerge)
      }
      if(cachedBlocks.length > 0) {
        _.each(cachedBlocks, function(block, index) {
          var selectThisBlock = false;
          var newBlocksBefore = null;
          var newBlocksAfter = null;
          var prevBlockEnd = null;
          var blStart = block.getStart();
          var blEnd = block.getEnd();
          if(block.isWaitingRecycling()) {
            recycleBlock(block);
            return
          }
          if(taskDef.service === block.getService() && arrayEqualsAnyOrder(taskDef.location, block.getLocation()) && arrayEqualsAnyOrder(taskDef.parameter, block.getParameter())) {
            if(prevMatchingBlock !== null) {
              prevBlockEnd = prevMatchingBlock.getEnd()
            }
            newBlocksBefore = createMissingBlocksBefore(prevBlockEnd, blStart, fetchStart, fetchEnd, taskDef);
            if(newBlocksBefore !== null && newBlocksBefore.length > 0) {
              Array.prototype.push.apply(newCachedBlocks, newBlocksBefore);
              async.reduce(newBlocksBefore, cacheMisses, function(memo, block, callback) {
                callback(null, memo + block.getDataSize())
              }, function(err, result) {
                cacheMisses = result
              });
              Array.prototype.push.apply(retval, newBlocksBefore)
            }
            selectThisBlock = blockOverlaps(blStart, blEnd, fetchStart, fetchEnd);
            if(selectThisBlock) {
              if(block.pin() > 0) {
                retval.push(block);
                cacheHits += block.getDataSize()
              }else {
                if("undefined" !== typeof console && console) {
                  console.log("Unable to pin a block, it's already marked for recycling (this should not happen)")
                }
              }
            }else {
              block.increaseNotUsed()
            }
            newCachedBlocks.push(block);
            if(prevMatchingBlock !== null && shouldBlocksBeMerged(prevMatchingBlock, block)) {
              mergeBlocks(prevMatchingBlock, block, function(err, merged) {
                if(err) {
                  if("undefined" !== typeof console && console) {
                    console.error(err)
                  }
                }else {
                  mergedBlocks.push(merged)
                }
              })
            }
            prevMatchingBlock = block
          }else {
            block.increaseNotUsed();
            newCachedBlocks.push(block)
          }
          if(index === cachedBlocks.length - 1) {
            if(prevMatchingBlock !== null) {
              if(prevMatchingBlock.getEnd() + taskDef.resolution < fetchEnd) {
                newBlocksAfter = allocateAndPrepareContinuousBlocks(taskDef, Math.max(blEnd + taskDef.resolution, fetchStart), fetchEnd);
                Array.prototype.push.apply(newCachedBlocks, newBlocksAfter);
                async.reduce(newBlocksAfter, cacheMisses, function(memo, block, callback) {
                  callback(null, memo + block.getDataSize())
                }, function(err, result) {
                  cacheMisses = result
                });
                Array.prototype.push.apply(retval, newBlocksAfter)
              }
            }
          }
          var ageInd = _.sortedIndex(blockAgeOrder, block, function(bl) {
            return bl.getNotUsedSince()
          });
          blockAgeOrder.splice(ageInd, 0, block);
          cachedDataSize += block.getDataSize()
        })
      }
      if(retval.length === 0) {
        retval = allocateAndPrepareContinuousBlocks(taskDef, fetchStart, fetchEnd);
        Array.prototype.push.apply(newCachedBlocks, retval);
        async.reduce(retval, cacheMisses, function(memo, block, callback) {
          callback(null, memo + block.getDataSize())
        }, function(err, result) {
          cacheMisses = result
        })
      }
      cachedBlocks = [];
      cachedBlocks = newCachedBlocks;
      newCachedBlocks = [];
      async.whilst(function() {
        return cachedDataSize * 1.01 > maxCacheDataSize
      }, function() {
        var dataToEvict = cachedDataSize * 1.01 - maxCacheDataSize;
        fireEvent("evictStarted", {"inCache":cachedDataSize, "toEvict":dataToEvict});
        var evictList = [];
        var toEvict = null;
        var evictListDataSize = 0;
        while(evictListDataSize < dataToEvict && blockAgeOrder.length > 0) {
          toEvict = blockAgeOrder.pop();
          if(toEvict !== undefined) {
            evictListDataSize += toEvict.getDataSize();
            evictList.push(toEvict)
          }
        }
        if(evictList.length > 0) {
          evict(evictList);
          cachedDataSize = cachedDataSize - evictListDataSize;
          fireEvent("evictFinished", {"inCache":cachedDataSize, "evicted":evictListDataSize})
        }
      }, function() {
      });
      return retval
    }
    function allocateAndPrepareContinuousBlocks(parentTaskDef, start, end) {
      var blocks = [];
      var totalPointCount = Math.round((end - start) / parentTaskDef.resolution) + 1;
      var blocksNeeded = Math.ceil(totalPointCount / maxBlockDataPoints);
      var i = 0;
      var taskDef;
      var block = null;
      for(i = 0;i < blocksNeeded;i++) {
        block = getDataBlock();
        taskDef = _.clone(parentTaskDef);
        taskDef.start = start + i * parentTaskDef.resolution * maxBlockDataPoints;
        taskDef.pointCount = Math.min(maxBlockDataPoints, totalPointCount - i * maxBlockDataPoints);
        taskDef.end = taskDef.start + (taskDef.pointCount - 1) * parentTaskDef.resolution;
        block.prepare(taskDef, getFetcher(parentTaskDef.service));
        if(block.pin() > 0) {
          blocks.push(block)
        }else {
          if("undefined" !== typeof console && console) {
            console.error("Strange, unable to pin block!")
          }
        }
      }
      return blocks
    }
    function fillWith(target, source, locations, parameters, targetIndex, sourceIndex, count, callback) {
      var copyFromArray = _.isObject(source);
      var ti = 0;
      var si = 0;
      var end = 0;
      async.each(locations, function(loc, locNotify) {
        if(target[loc] === undefined) {
          target[loc] = {}
        }
        async.each(parameters, function(param, paramNotify) {
          var useErrorValues = false;
          if(target[loc][param] === undefined) {
            target[loc][param] = []
          }
          if(copyFromArray) {
            if(!_.isObject(source[loc]) || !_.isArray(source[loc][param])) {
              useErrorValues = true
            }else {
              if(source[loc][param].length < sourceIndex + count) {
                useErrorValues = true;
                if("undefined" !== typeof console && console) {
                  console.error("Trying to fill segment with only " + source[loc][param].length + " values for location " + loc + " and parameter " + param + " when " + (sourceIndex + count) + " would be needed. Filling the whole segment with '" + errorFillValue + "'")
                }
              }
            }
          }
          if(useErrorValues) {
            ti = targetIndex;
            end = targetIndex + count;
            while(ti < end) {
              target[loc][param][ti++] = errorFillValue
            }
          }else {
            if(copyFromArray) {
              ti = targetIndex;
              si = sourceIndex;
              end = targetIndex + count;
              while(ti < end) {
                target[loc][param][ti++] = source[loc][param][si++]
              }
            }else {
              ti = targetIndex;
              end = targetIndex + count;
              while(ti < end) {
                target[loc][param][ti++] = source
              }
            }
          }
          paramNotify()
        }, function(err) {
          locNotify()
        })
      }, function(err) {
        callback(err, target)
      })
    }
    function retrieveDataAsync(origTaskDef, finishCallback, progressCallback) {
      var taskDef = _.clone(origTaskDef);
      if(!_.isFunction(finishCallback)) {
        throw"finishCallback must be a function";
      }
      if(getFetcher(taskDef.service) === null) {
        throw"No data fetcher set for service '" + taskDef.service + "', unable to provide data";
      }
      if(stepResolutions[taskDef.service] !== undefined) {
        if(stepResolutions[taskDef.service].resolution !== taskDef.resolution || Math.abs(stepResolutions[taskDef.service].start - taskDef.start) % taskDef.resolution !== 0) {
          clear(taskDef.service)
        }
      }
      stepResolutions[taskDef.service] = {start:taskDef.start, resolution:taskDef.resolution};
      iterateCacheQueue.push(taskDef, function(err, dataBlocks) {
        fetchDataForBlocks(dataBlocks, taskDef, finishCallback, progressCallback)
      })
    }
    function fetchDataForBlocks(dataBlocks, taskDef, finishCallback, progressCallback) {
      var errors = null;
      var notifyProgress = false;
      var result = {};
      if(_.isFunction(progressCallback)) {
        notifyProgress = true
      }
      fireEvent("fetchStarted", taskDef);
      result.steps = _.range(taskDef.start, taskDef.end + taskDef.resolution, taskDef.resolution);
      result.data = {};
      async.each(dataBlocks, function(dataBlock, notify) {
        var td = dataBlock.getTaskDef();
        var includeStart = NaN;
        var includeEnd = NaN;
        var targetStartIndex = NaN;
        var targetEndIndex = NaN;
        var sourceStartIndex = NaN;
        var valueCount = NaN;
        if(!blockOverlaps(td.start, td.end, taskDef.start, taskDef.end)) {
          dataBlock.getDataAsync(function() {
            dataBlock.unpin()
          });
          notify();
          return
        }
        if(td.start < taskDef.start) {
          includeStart = taskDef.start;
          sourceStartIndex = Math.round((taskDef.start - td.start) / taskDef.resolution)
        }else {
          includeStart = td.start;
          sourceStartIndex = 0
        }
        targetStartIndex = _.indexOf(result.steps, includeStart, true);
        if(targetStartIndex === -1) {
          throw dataBlock.getId() + ":something wrong with indexing, start index for cache block not found in the combined results!";
        }
        if(td.end > taskDef.end) {
          includeEnd = taskDef.end;
          targetEndIndex = result.steps.length - 1
        }else {
          includeEnd = td.end;
          targetEndIndex = _.indexOf(result.steps, td.end, true)
        }
        valueCount = targetEndIndex - targetStartIndex + 1;
        dataBlock.getDataAsync(function(err, data) {
          var fillValue = data;
          if(err) {
            if(errors === null) {
              errors = []
            }
            errors.push({start:td.start, end:td.end, error:err});
            if(strictErrorHandling || !data) {
              fillValue = errorFillValue
            }
            dataBlock.markForRecycling()
          }
          fillWith(result.data, fillValue, td.location, td.parameter, targetStartIndex, sourceStartIndex, valueCount, function() {
            if(notifyProgress) {
              progressCallback(err, includeStart, includeEnd)
            }
            dataBlock.unpin();
            notify()
          })
        })
      }, function(err) {
        finishCallback(errors, result);
        fireEvent("fetchFinished", taskDef)
      })
    }
    function getFetcher(service) {
      if(fetchers[service] !== undefined) {
        fetchers[service].nextIndex = (fetchers[service].nextIndex + 1) % fetchers[service].providers.length;
        return fetchers[service].providers[fetchers[service].nextIndex].cb
      }else {
        return null
      }
    }
    function clear(service) {
      _.each(cachedBlocks, function(block) {
        if(service === undefined || block.getService() === service) {
          block.markForRecycling()
        }
      });
      _.each(mergedBlocks, function(block) {
        if(service === undefined || block.getService() === service) {
          block.markForRecycling()
        }
      });
      fireEvent("cacheCleared", service)
    }
    this.addDataProvider = function(service, fetcher) {
      var provider = {};
      if(_.isFunction(fetcher)) {
        if(fetchers[service] === undefined) {
          fetchers[service] = {nextIndex:0, providers:[]}
        }
        provider.id = "id#" + fetcherIdCounter++;
        provider.cb = fetcher;
        fetchers[service].providers.push(provider);
        fireEvent("dataProviderAdded", {"service":service, "providerId":provider.id})
      }else {
        throw"Fetcher must be a function";
      }
      return provider.id
    };
    this.removeDataProvider = function(service, providerId) {
      var oldLength = 0;
      var actuallyRemoved = false;
      if(fetchers[service] !== undefined) {
        oldLength = fetchers[service].providers.length;
        fetchers[service].providers = _.reject(fetchers[service].providers, function(provider) {
          return provider.id === providerId
        });
        if(fetchers[service].providers.length === 0) {
          delete fetchers.service;
          actuallyRemoved = true
        }else {
          if(oldLength !== fetchers[service].providers.length) {
            actuallyRemoved = true
          }
        }
        if(actuallyRemoved) {
          fireEvent("dataProviderRemoved", {"service":service, "providerId":providerId})
        }
      }
    };
    this.clearCache = function() {
      clear();
      stepResolutions = [];
      cacheHits = 0;
      cacheMisses = 0
    };
    this.fetch = function(taskDef, finalCallback, progressCallback) {
      checkTaskDef(taskDef);
      retrieveDataAsync(taskDef, finalCallback, progressCallback)
    };
    this.getCachedItemCount = function() {
      return cachedDataSize
    };
    this.getFillingDegree = function() {
      return cachedDataSize / maxCacheDataSize
    };
    this.getHitRatio = function() {
      return cacheHits / (cacheHits + cacheMisses)
    };
    this.addListener = function(eventName, callback) {
      return addEventListener(eventName, callback)
    };
    this.removeListener = function(eventName, providerId) {
      return removeEventListener(eventName, providerId)
    };
    if(properties.sideFetchBeforeFactor !== undefined) {
      if(_.isNumber(properties.sideFetchBeforeFactor)) {
        if(properties.sideFetchBeforeFactor >= 0) {
          sideFetchBeforeFactor = properties.sideFetchBeforeFactor
        }
      }
    }
    if(properties.sideFetchAfterFactor !== undefined) {
      if(_.isNumber(properties.sideFetchAfterFactor)) {
        if(properties.sideFetchAfterFactor >= 0) {
          sideFetchAfterFactor = properties.sideFetchAfterFactor
        }
      }
    }
    if(properties.maxBlockDataPoints !== undefined) {
      if(_.isNumber(properties.maxBlockDataPoints)) {
        if(properties.maxBlockDataPoints > 0) {
          maxBlockDataPoints = properties.maxBlockDataPoints
        }
      }
    }
    if(properties.minBlockDataPoints !== undefined) {
      if(_.isNumber(properties.minBlockDataPoints)) {
        if(properties.minBlockDataPoints > 0 && properties.minBlockDataPoints < maxBlockDataPoints) {
          minBlockDataPoints = properties.minBlockDataPoints
        }else {
          minBlockDataPoints = 0
        }
      }
    }
    if(minBlockDataPoints > maxBlockDataPoints) {
      minBlockDataPoints = maxBlockDataPoints
    }
    if(properties.maxCacheDataSize !== undefined) {
      if(_.isNumber(properties.maxCacheDataSize)) {
        if(properties.maxCacheDataSize > 0) {
          maxCacheDataSize = properties.maxCacheDataSize
        }
      }
    }
    if(properties.strictErrorHandling !== undefined) {
      if(properties.strictErrorHandling === false) {
        strictErrorHandling = false
      }
    }
    if(properties.errorFillValue !== undefined) {
      errorFillValue = properties.errorFillValue
    }
  };
  return _constructor
}();
if("undefined" === typeof jQuery || !jQuery) {
  throw"ERROR: jQuery is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lodash is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if("undefined" === typeof async || !async) {
  throw"ERROR: Async is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
if(!fi.fmi.metoclient.metolib.Utils) {
  throw"ERROR: fi.fmi.metoclient.metolib.Utils is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if(!fi.fmi.metoclient.metolib.SplitterCache) {
  throw"ERROR: fi.fmi.metoclient.metolib.SplitterCache is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if(!fi.fmi.metoclient.metolib.WfsRequestParser) {
  throw"ERROR: fi.fmi.metoclient.metolib.WfsRequestParser is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
fi.fmi.metoclient.metolib.WfsConnection = function() {
  var DATA_FETCHER_NAME_SITES = "parserSites";
  var PARAMETER_SEPARATOR = ",";
  var LOCATION_NAME_REGION_SEPARATOR = " ";
  var LOCATION_GEOID_PREFIX = "g_";
  var LOCATION_WMO_PREFIX = "w_";
  var LOCATION_FMISID_PREFIX = "f_";
  var LOCATION_SITES_PREFIX = "s_";
  var CACHE_ERROR_TEXT = "ERROR: Cache found error(s)!";
  function trimSingleSite(site) {
    return jQuery.trim(site).replace(/,\s+/, PARAMETER_SEPARATOR)
  }
  function trimSites(sites, prefix) {
    var trimmed = [];
    if(!_.isString(prefix)) {
      prefix = ""
    }
    if(sites && _.isString(sites)) {
      trimmed.push(prefix + trimSingleSite(sites))
    }else {
      if(_.isArray(sites)) {
        for(var i = 0;i < sites.length;++i) {
          var site = sites[i];
          if(site && _.isString(site)) {
            trimmed.push(prefix + trimSingleSite(site))
          }
        }
      }
    }
    return trimmed
  }
  function trimProperty(property, prefix) {
    var trimmed = [];
    if(!_.isString(prefix)) {
      prefix = ""
    }
    if(_.isNumber(property) || property && _.isString(property)) {
      trimmed.push(jQuery.trim(prefix + property))
    }else {
      if(_.isArray(property)) {
        for(var i = 0;i < property.length;++i) {
          var tmp = property[i];
          if(_.isNumber(tmp) || tmp && _.isString(tmp)) {
            trimmed.push(jQuery.trim(prefix + tmp))
          }
        }
      }
    }
    return trimmed
  }
  function setTaskDefLocations(taskDef, options) {
    if(taskDef && options) {
      var location = [];
      taskDef.location = location;
      taskDef.geoid = trimProperty(options.geoid);
      taskDef.wmo = trimProperty(options.wmo);
      taskDef.fmisid = trimProperty(options.fmisid);
      taskDef.sites = trimSites(options.sites);
      location.push.apply(location, trimProperty(options.geoid, LOCATION_GEOID_PREFIX));
      location.push.apply(location, trimProperty(options.wmo, LOCATION_WMO_PREFIX));
      location.push.apply(location, trimProperty(options.fmisid, LOCATION_FMISID_PREFIX));
      location.push.apply(location, trimSites(options.sites, LOCATION_SITES_PREFIX))
    }
  }
  function locationNameForCache(taskDef, name, region, wmo, geoid, fmisid) {
    var locationName = LOCATION_SITES_PREFIX + region;
    if(taskDef) {
      var matchFound = false;
      var i;
      if(taskDef.geoid && geoid) {
        for(i = 0;i < taskDef.geoid.length;++i) {
          if(taskDef.geoid[i] === geoid) {
            locationName = LOCATION_GEOID_PREFIX + geoid;
            matchFound = true;
            break
          }
        }
      }
      if(!matchFound && taskDef.wmo && wmo) {
        for(i = 0;i < taskDef.wmo.length;++i) {
          if(taskDef.wmo[i] === wmo) {
            locationName = LOCATION_WMO_PREFIX + wmo;
            matchFound = true;
            break
          }
        }
      }
      if(!matchFound && taskDef.fmisid && fmisid) {
        for(i = 0;i < taskDef.fmisid.length;++i) {
          if(taskDef.fmisid[i] === fmisid) {
            locationName = LOCATION_FMISID_PREFIX + fmisid;
            matchFound = true;
            break
          }
        }
      }
      if(!matchFound && taskDef.sites && name && region) {
        var regionPrefix = region + LOCATION_NAME_REGION_SEPARATOR;
        var regionIndex = name.indexOf(regionPrefix);
        if(0 === regionIndex) {
          name = jQuery.trim(name.slice(regionPrefix.length))
        }
        var combinedLocationName = name + PARAMETER_SEPARATOR + region;
        for(i = 0;i < taskDef.sites.length;++i) {
          var loc = taskDef.sites[i];
          if(-1 !== loc.indexOf(PARAMETER_SEPARATOR) && loc === combinedLocationName) {
            locationName = LOCATION_SITES_PREFIX + loc;
            matchFound = true;
            break
          }
        }
      }
    }
    return locationName
  }
  function checkResolutionSteps(array, resolution) {
    if(_.isArray(array) && resolution && resolution > 0) {
      for(var i = 1;i < array.length;++i) {
        var previousTimeValuePair = array[i - 1];
        var timeValuePair = array[i];
        if(_.isObject(timeValuePair)) {
          var previousTime = _.isObject(previousTimeValuePair) ? previousTimeValuePair.time : undefined;
          var time = timeValuePair.time;
          if(undefined !== previousTime && null !== previousTime && undefined !== time && null !== time && resolution < time - previousTime) {
            time = previousTime + resolution;
            array.splice(i, 0, {time:time, value:NaN})
          }
          previousTime = time
        }
      }
    }
  }
  function contains(list, item) {
    return _.find(list, function(currentItem) {
      return _.isEqual(currentItem, item)
    })
  }
  function convertCacheErrorsForApi(errors) {
    var apiErrors = [];
    if(_.isArray(errors)) {
      for(var i = 0;i < errors.length;++i) {
        var error = errors[i];
        var useWrapError = _.isObject(error) && (error.errorCode || error.errorText);
        if(_.isObject(error) && _.isArray(error.error) && error.error.length > 0) {
          var errorArray = error.error;
          for(var j = 0;j < errorArray.length;++j) {
            var errorItem = errorArray[j];
            if(_.isObject(errorItem) && (errorItem.errorCode || errorItem.errorText)) {
              var newError = {errorCode:errorItem.errorCode, errorText:errorItem.errorText, extension:error};
              if(!contains(apiErrors, newError)) {
                apiErrors.push(newError)
              }
            }else {
              useWrapError = true
            }
          }
        }else {
          useWrapError = true
        }
        if(useWrapError) {
          var newWrapError = {errorCode:_.isObject(error) ? error.errorCode : undefined, errorText:_.isObject(error) && _.isString(error.errorText) ? error.errorText : CACHE_ERROR_TEXT, extension:error};
          if(!contains(apiErrors, newWrapError)) {
            apiErrors.push(newWrapError)
          }
        }
      }
    }
    return apiErrors
  }
  function convertSitesDataFromParserForCache(taskDef, data, errors) {
    var converted = {data:data ? {} : undefined, errors:errors && !errors.length ? null : errors};
    if(data) {
      _.each(data.locations, function(location) {
        var locationName = locationNameForCache(taskDef, location.info.name, location.info.region, location.info.wmo, location.info.geoid, location.info.fmisid);
        if(!converted.data[locationName]) {
          converted.data[locationName] = {}
        }
        _.each(location.data, function(dataObject, keyRequestParameter) {
          if(!converted.data[locationName][keyRequestParameter]) {
            converted.data[locationName][keyRequestParameter] = []
          }
          checkResolutionSteps(dataObject.timeValuePairs, taskDef.resolution);
          _.each(dataObject.timeValuePairs, function(timeValuePair) {
            var cacheBlock = {info:data.info, properties:data.properties, locationInfo:location.info, blockProperty:dataObject.property, timeValuePair:timeValuePair};
            converted.data[locationName][keyRequestParameter].push(cacheBlock)
          })
        })
      })
    }
    return converted
  }
  function convertSitesDataFromCacheForApi(taskDef, data, errors) {
    var converted = {data:data ? {info:undefined, properties:undefined, locations:[]} : undefined, errors:convertCacheErrorsForApi(errors)};
    if(data) {
      _.each(data.data, function(location) {
        var convertedLocation = {info:undefined, data:{}};
        _.each(location, function(container, requestParameterKey) {
          var convertedData = {property:undefined, timeValuePairs:[]};
          _.each(container, function(cacheBlock) {
            if(cacheBlock) {
              if(!converted.data.info) {
                converted.data.info = cacheBlock.info
              }
              if(!converted.data.properties) {
                converted.data.properties = cacheBlock.properties
              }
              if(!convertedData.property) {
                convertedData.property = cacheBlock.blockProperty
              }
              if(!convertedLocation.info) {
                convertedLocation.info = cacheBlock.locationInfo
              }
              convertedData.timeValuePairs.push(cacheBlock.timeValuePair)
            }
          });
          convertedLocation.data[requestParameterKey] = convertedData
        });
        converted.data.locations.push(convertedLocation)
      })
    }
    return converted
  }
  function cacheSitesDataFetcherCallback(container, taskDef, taskCallback) {
    fi.fmi.metoclient.metolib.WfsRequestParser.getData({url:container.connectionUrl, storedQueryId:container.storedQueryId, requestParameter:taskDef.parameter, begin:taskDef.start, end:taskDef.end, timestep:taskDef.resolution, denyTimeAdjusting:true, geoid:taskDef.geoid, wmo:taskDef.wmo, fmisid:taskDef.fmisid, sites:taskDef.sites, crs:taskDef.crs, queryExtension:taskDef.queryExtension, callback:function(data, errors) {
      var converted = convertSitesDataFromParserForCache.call(container, taskDef, data, errors);
      taskCallback(converted.errors, converted.data)
    }})
  }
  var retrieveSitesData = function(options) {
    if(!options.timestep || options.timestep === 1) {
      var that = this;
      fi.fmi.metoclient.metolib.WfsRequestParser.getData({url:that.connectionUrl, storedQueryId:that.storedQueryId, requestParameter:options.requestParameter, begin:options.begin, end:options.end, timestep:options.timestep, denyTimeAdjusting:options.denyTimeAdjusting, geoid:trimProperty(options.geoid), wmo:trimProperty(options.wmo), fmisid:trimProperty(options.fmisid), sites:trimSites(options.sites), crs:options.crs, queryExtension:options.queryExtension, callback:options.callback})
    }else {
      var beginDate = options.begin;
      var endDate = options.end;
      var resolution = options.timestep;
      if(!options.denyTimeAdjusting) {
        beginDate = fi.fmi.metoclient.metolib.WfsRequestParser.adjustBeginTime(resolution, beginDate);
        endDate = fi.fmi.metoclient.metolib.WfsRequestParser.adjustEndTime(resolution, endDate, beginDate)
      }
      var taskDef = {service:DATA_FETCHER_NAME_SITES, parameter:_.isString(options.requestParameter) ? options.requestParameter.split(PARAMETER_SEPARATOR) : options.requestParameter, start:beginDate instanceof Date ? beginDate.getTime() : beginDate, end:endDate instanceof Date ? endDate.getTime() : endDate, resolution:resolution, crs:options.crs, queryExtension:options.queryExtension};
      setTaskDefLocations(taskDef, options);
      this.cache.fetch(taskDef, function(errors, result) {
        var converted = convertSitesDataFromCacheForApi(taskDef, result, errors);
        options.callback(converted.data, converted.errors)
      }, options.progressCallback)
    }
  };
  var retrieveSpatialData = function(options) {
    var that = this;
    fi.fmi.metoclient.metolib.WfsRequestParser.getData({url:that.connectionUrl, storedQueryId:that.storedQueryId, requestParameter:options.requestParameter, begin:options.begin, end:options.end, timestep:options.timestep, denyTimeAdjusting:options.denyTimeAdjusting, geoid:trimProperty(options.geoid), wmo:trimProperty(options.wmo), fmisid:trimProperty(options.fmisid), sites:trimSites(options.sites), bbox:options.bbox, crs:options.crs, queryExtension:options.queryExtension, callback:options.callback})
  };
  var makeSafe = function(func, callback) {
    var success = true;
    try {
      var args = Array.prototype.slice.call(arguments);
      args.shift();
      args.shift();
      func.apply(this, args)
    }catch(e) {
      var errorStr = "ERROR: API level error occurred in a synchronous flow!";
      if("undefined" !== typeof console && console) {
        console.error(errorStr)
      }
      success = false;
      if(callback) {
        var error = {errorText:errorStr};
        callback(undefined, error)
      }
    }
    return success
  };
  var getUrl = function() {
    return this.connectionUrl
  };
  var getStoredQueryId = function() {
    return this.storedQueryId
  };
  var connect = function(url, storedQueryId) {
    if(!this.connectionUrl) {
      if(!_.isString(url) || !url) {
        var urlErrorStr = "ERROR: WfsConnection URL must be a string and not empty!";
        if("undefined" !== typeof console && console) {
          console.error(urlErrorStr)
        }
        throw urlErrorStr;
      }
      if(!_.isString(storedQueryId) || !storedQueryId) {
        var idErrorStr = "ERROR: WfsConnection stored query ID must be a string and not empty!";
        if("undefined" !== typeof console && console) {
          console.error(idErrorStr)
        }
        throw idErrorStr;
      }
      this.connectionUrl = url;
      this.storedQueryId = storedQueryId
    }
  };
  var disconnect = function() {
    this.connectionUrl = undefined;
    this.storedQueryId = undefined;
    resetCache.call(this)
  };
  var resetCache = function() {
    this.cache.clearCache()
  };
  var getData = function(options) {
    if(options) {
      if(options.bbox) {
        retrieveSpatialData.call(this, options)
      }else {
        if(options.geoid || options.wmo || options.fmisid || options.sites) {
          retrieveSitesData.call(this, options)
        }else {
          var errorStr = "ERROR: Either geoid, wmo, fmisid, sites or bbox is mandatory in options!";
          if("undefined" !== typeof console && console) {
            console.error(errorStr)
          }
          throw errorStr;
        }
      }
    }else {
      var optionsErrorStr = "ERROR: Options object is mandatory!";
      if("undefined" !== typeof console && console) {
        console.error(optionsErrorStr)
      }
      throw optionsErrorStr;
    }
  };
  var connectionConstructor = function() {
    var _me = this;
    var _private = {connectionInstance:_me, connectionUrl:undefined, storedQueryId:undefined, cache:new fi.fmi.metoclient.metolib.SplitterCache({sideFetchAfterFactor:1, sideFetchBeforeFactor:0.5, maxBlockDataPoints:200, maxCacheDataSize:4E3})};
    _private.cache.addDataProvider(DATA_FETCHER_NAME_SITES, function(taskDef, callback) {
      cacheSitesDataFetcherCallback(_private, taskDef, callback)
    });
    this.getUrl = function() {
      return getUrl.call(_private)
    };
    this.getStoredQueryId = function() {
      return getStoredQueryId.call(_private)
    };
    this.connect = function(url, storedQueryId) {
      return makeSafe.call(_private, connect, undefined, url, storedQueryId)
    };
    this.disconnect = function() {
      return makeSafe.call(_private, disconnect, undefined)
    };
    this.resetCache = function() {
      return makeSafe.call(_private, resetCache, undefined)
    };
    this.getData = function(options) {
      return makeSafe.call(_private, getData, options ? options.callback : undefined, options)
    }
  };
  return connectionConstructor
}();
goog.provide("weather_canvas.gradient");
goog.require("cljs.core");
weather_canvas.gradient.a = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "up", "up", 1013907981), new cljs.core.Keyword(null, "colors", "colors", 3954028770), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([0, 500], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(0, 
0, 0), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(58, 0, 0)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([500, 750], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(0, 58, 0), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(58, 58, 0)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 
1122184367), cljs.core.PersistentVector.fromArray([750, 1E3], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(58, 58, 0), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 255)], true)], true)], true);
weather_canvas.gradient.black_white_2 = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "up", "up", 1013907981), new cljs.core.Keyword(null, "colors", "colors", 3954028770), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-100, -50], true), new cljs.core.Keyword(null, "from", "from", 1017056028), 
cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 255)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-50, 0], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(0, 0, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 255)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"range", "range", 1122184367), cljs.core.PersistentVector.fromArray([0, 15], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 102)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([15, 30], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 102), 
new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 0, 0)], true)], true)], true);
weather_canvas.gradient.black_white = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "up", "up", 1013907981), new cljs.core.Keyword(null, "colors", "colors", 3954028770), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-100, -50], true), new cljs.core.Keyword(null, "from", "from", 1017056028), 
cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 255)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-50, 0], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(136, 136, 255)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"range", "range", 1122184367), cljs.core.PersistentVector.fromArray([0, 15], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 102)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([15, 30], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 102), 
new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 0, 0)], true)], true)], true);
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if(!doc || !goog.userAgent.IE) {
    return undefined
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5)
}();
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "))
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0))
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y
  }else {
    this.x += tx;
    if(goog.isNumber(opt_ty)) {
      this.y += opt_ty
    }
  }
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if(attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e")
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild))
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild))
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return(element.removeNode(false))
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return(goog.dom.removeNode(element))
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return(node).firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return(node).lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return(node).nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return(node).previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return(node)
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document)
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true))
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("weather_canvas.canvas_buffer");
goog.require("cljs.core");
weather_canvas.canvas_buffer.size_x = 4;
weather_canvas.canvas_buffer.size_y = 16;
weather_canvas.canvas_buffer.canvas_buffer = function canvas_buffer(buffer_id) {
  var canvas = document.querySelector(dommy.core.selector.call(null, buffer_id));
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "canvas", "canvas", 3941165258), weather_canvas.canvas_buffer.init_canvas.call(null, canvas, 40), new cljs.core.Keyword(null, "context", "context", 1965435169), canvas.getContext("2d")], true)
};
weather_canvas.canvas_buffer.init_canvas = function init_canvas(canvas, years) {
  canvas.width = 370 * weather_canvas.canvas_buffer.size_x;
  return canvas.height = years * weather_canvas.canvas_buffer.size_y
};
weather_canvas.canvas_buffer.draw_rectangle = function draw_rectangle(buffer, position, dimensions, color) {
  var ctx = (new cljs.core.Keyword(null, "context", "context", 1965435169)).call(null, buffer);
  ctx.fillStyle = color;
  return ctx.fillRect(cljs.core.first.call(null, position), cljs.core.second.call(null, position), cljs.core.first.call(null, dimensions), cljs.core.second.call(null, dimensions))
};
weather_canvas.canvas_buffer.draw_text = function draw_text(buffer, text, position, font_size, color) {
  var ctx = (new cljs.core.Keyword(null, "context", "context", 1965435169)).call(null, buffer);
  ctx.fillStyle = color;
  ctx.font = [cljs.core.str(font_size), cljs.core.str("px Arial")].join("");
  ctx.fillText(text, cljs.core.first.call(null, position), cljs.core.second.call(null, position));
  return cljs.core.PersistentVector.fromArray([ctx.measureText(text).width, font_size], true)
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3394__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3394__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3394__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3394__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3394__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3394__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3394__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3394__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t15996 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.ioc_helpers.t15996");
    cljs.core.async.impl.ioc_helpers.t15996 = function(f, fn_handler, meta15997) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta15997 = meta15997;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t15996.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t15996.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t15996";
    cljs.core.async.impl.ioc_helpers.t15996.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.ioc-helpers/t15996")
    };
    cljs.core.async.impl.ioc_helpers.t15996.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t15996.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t15996.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t15996.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15998) {
      var self__ = this;
      return self__.meta15997
    };
    cljs.core.async.impl.ioc_helpers.t15996.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15998, meta15997__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t15996(self__.f, self__.fn_handler, meta15997__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t15996 = function __GT_t15996(f__$1, fn_handler__$1, meta15997) {
      return new cljs.core.async.impl.ioc_helpers.t15996(f__$1, fn_handler__$1, meta15997)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t15996(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e16000) {
    if(e16000 instanceof Object) {
      var ex = e16000;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e16000;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_16003_16005 = state;
    statearr_16003_16005[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_16003_16005[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_16004_16006 = state;
    statearr_16004_16006[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16004_16006[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_16009_16011 = state;
    statearr_16009_16011[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_16009_16011[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_16010_16012 = state;
    statearr_16010_16012[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16010_16012[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__16013) {
    var map__16018 = p__16013;
    var map__16018__$1 = cljs.core.seq_QMARK_.call(null, map__16018) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16018) : map__16018;
    var opts = map__16018__$1;
    var statearr_16019_16022 = state;
    statearr_16019_16022[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_16020_16023 = state;
      statearr_16020_16023[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_16021_16024 = state;
      statearr_16021_16024[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__16013 = null;
    if(arguments.length > 3) {
      p__16013 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__16013)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__16025) {
    var state = cljs.core.first(arglist__16025);
    arglist__16025 = cljs.core.next(arglist__16025);
    var cont_block = cljs.core.first(arglist__16025);
    arglist__16025 = cljs.core.next(arglist__16025);
    var ports = cljs.core.first(arglist__16025);
    var p__16013 = cljs.core.rest(arglist__16025);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__16013)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__15990 = cnt + 1;
      cnt = G__15990;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3572__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3572__auto__) {
      var v_15991 = this$.pop();
      if(keep_QMARK_.call(null, v_15991)) {
        this$.unshift(v_15991)
      }else {
      }
      var G__15992 = x + 1;
      x = G__15992;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_15979 = 0;
  while(true) {
    var m_15980 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_15980 == null) {
    }else {
      m_15980.call(null);
      if(count_15979 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__15981 = count_15979 + 1;
        count_15979 = G__15981;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t15985 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.channels.t15985");
    cljs.core.async.impl.channels.t15985 = function(val, box, meta15986) {
      this.val = val;
      this.box = box;
      this.meta15986 = meta15986;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t15985.cljs$lang$type = true;
    cljs.core.async.impl.channels.t15985.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t15985";
    cljs.core.async.impl.channels.t15985.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.channels/t15985")
    };
    cljs.core.async.impl.channels.t15985.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t15985.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15987) {
      var self__ = this;
      return self__.meta15986
    };
    cljs.core.async.impl.channels.t15985.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15987, meta15986__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t15985(self__.val, self__.box, meta15986__$1)
    };
    cljs.core.async.impl.channels.__GT_t15985 = function __GT_t15985(val__$1, box__$1, meta15986) {
      return new cljs.core.async.impl.channels.t15985(val__$1, box__$1, meta15986)
    }
  }
  return new cljs.core.async.impl.channels.t15985(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_15988 = self__.takes.pop();
      if(taker_15988 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_15988)) {
          var take_cb_15989 = cljs.core.async.impl.protocols.commit.call(null, taker_15988);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_15989, taker_15988) {
            return function() {
              return take_cb_15989.call(null, null)
            }
          }(take_cb_15989, taker_15988))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__15955 = level + 1;
        level = G__15955;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_15956 = 0;
    while(true) {
      if(i_15956 < arr.length) {
        arr[i_15956] = null;
        var G__15957 = i_15956 + 1;
        i_15956 = G__15957;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__15958 = x_SINGLEQUOTE_;
                x__$1 = G__15958;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__15959 = x__$1;
        var G__15960 = k;
        var G__15961 = level - 1;
        var G__15962 = update;
        x = G__15959;
        k = G__15960;
        level = G__15961;
        update = G__15962;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_15963 = self__.level + 1;
      while(true) {
        if(i_15963 <= new_level + 1) {
          update[i_15963] = self__.header;
          var G__15964 = i_15963 + 1;
          i_15963 = G__15964;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_15965 = 0;
    while(true) {
      if(i_15965 <= self__.level) {
        var links_15966 = update[i_15965].forward;
        if(links_15966[i_15965] === x__$1) {
          links_15966[i_15965] = x__$1.forward[i_15965];
          var G__15967 = i_15965 + 1;
          i_15965 = G__15967;
          continue
        }else {
          var G__15968 = i_15965 + 1;
          i_15965 = G__15968;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__15969 = x_SINGLEQUOTE_;
              x__$1 = G__15969;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__15970 = nx;
        var G__15971 = level__$1 - 1;
        x = G__15970;
        level__$1 = G__15971;
        continue
      }else {
        var G__15972 = x;
        var G__15973 = level__$1 - 1;
        x = G__15972;
        level__$1 = G__15973;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__15974 = x_SINGLEQUOTE_;
              x__$1 = G__15974;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__15975 = nx;
        var G__15976 = level__$1 - 1;
        x = G__15975;
        level__$1 = G__15976;
        continue
      }else {
        var G__15977 = x;
        var G__15978 = level__$1 - 1;
        x = G__15977;
        level__$1 = G__15978;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t14015 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14015");
    cljs.core.async.t14015 = function(f, fn_handler, meta14016) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14016 = meta14016;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14015.cljs$lang$type = true;
    cljs.core.async.t14015.cljs$lang$ctorStr = "cljs.core.async/t14015";
    cljs.core.async.t14015.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14015")
    };
    cljs.core.async.t14015.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14015.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t14015.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t14015.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14017) {
      var self__ = this;
      return self__.meta14016
    };
    cljs.core.async.t14015.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14017, meta14016__$1) {
      var self__ = this;
      return new cljs.core.async.t14015(self__.f, self__.fn_handler, meta14016__$1)
    };
    cljs.core.async.__GT_t14015 = function __GT_t14015(f__$1, fn_handler__$1, meta14016) {
      return new cljs.core.async.t14015(f__$1, fn_handler__$1, meta14016)
    }
  }
  return new cljs.core.async.t14015(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_14018 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_14018)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_14018)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3572__auto___14019 = n;
  var x_14020 = 0;
  while(true) {
    if(x_14020 < n__3572__auto___14019) {
      a[x_14020] = 0;
      var G__14021 = x_14020 + 1;
      x_14020 = G__14021;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14022 = i + 1;
      i = G__14022;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t14026 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14026");
    cljs.core.async.t14026 = function(flag, alt_flag, meta14027) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14027 = meta14027;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14026.cljs$lang$type = true;
    cljs.core.async.t14026.cljs$lang$ctorStr = "cljs.core.async/t14026";
    cljs.core.async.t14026.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14026")
    };
    cljs.core.async.t14026.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14026.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t14026.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t14026.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14028) {
      var self__ = this;
      return self__.meta14027
    };
    cljs.core.async.t14026.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14028, meta14027__$1) {
      var self__ = this;
      return new cljs.core.async.t14026(self__.flag, self__.alt_flag, meta14027__$1)
    };
    cljs.core.async.__GT_t14026 = function __GT_t14026(flag__$1, alt_flag__$1, meta14027) {
      return new cljs.core.async.t14026(flag__$1, alt_flag__$1, meta14027)
    }
  }
  return new cljs.core.async.t14026(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t14032 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14032");
    cljs.core.async.t14032 = function(cb, flag, alt_handler, meta14033) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14033 = meta14033;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14032.cljs$lang$type = true;
    cljs.core.async.t14032.cljs$lang$ctorStr = "cljs.core.async/t14032";
    cljs.core.async.t14032.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14032")
    };
    cljs.core.async.t14032.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14032.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t14032.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t14032.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14034) {
      var self__ = this;
      return self__.meta14033
    };
    cljs.core.async.t14032.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14034, meta14033__$1) {
      var self__ = this;
      return new cljs.core.async.t14032(self__.cb, self__.flag, self__.alt_handler, meta14033__$1)
    };
    cljs.core.async.__GT_t14032 = function __GT_t14032(cb__$1, flag__$1, alt_handler__$1, meta14033) {
      return new cljs.core.async.t14032(cb__$1, flag__$1, alt_handler__$1, meta14033)
    }
  }
  return new cljs.core.async.t14032(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14035_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__14035_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__14036 = i + 1;
          i = G__14036;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword(null, "default", "default", 2558708147)).call(null, opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__14037) {
    var map__14039 = p__14037;
    var map__14039__$1 = cljs.core.seq_QMARK_.call(null, map__14039) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14039) : map__14039;
    var opts = map__14039__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__14037 = null;
    if(arguments.length > 1) {
      p__14037 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__14037)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__14040) {
    var ports = cljs.core.first(arglist__14040);
    var p__14037 = cljs.core.rest(arglist__14040);
    return alts_BANG___delegate(ports, p__14037)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t14048 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14048");
    cljs.core.async.t14048 = function(ch, f, map_LT_, meta14049) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta14049 = meta14049;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14048.cljs$lang$type = true;
    cljs.core.async.t14048.cljs$lang$ctorStr = "cljs.core.async/t14048";
    cljs.core.async.t14048.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14048")
    };
    cljs.core.async.t14048.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14048.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t14048.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14048.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t14051 !== "undefined") {
        }else {
          goog.provide("cljs.core.async.t14051");
          cljs.core.async.t14051 = function(fn1, _, meta14049, ch, f, map_LT_, meta14052) {
            this.fn1 = fn1;
            this._ = _;
            this.meta14049 = meta14049;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta14052 = meta14052;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t14051.cljs$lang$type = true;
          cljs.core.async.t14051.cljs$lang$ctorStr = "cljs.core.async/t14051";
          cljs.core.async.t14051.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
            return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14051")
          };
          cljs.core.async.t14051.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t14051.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$2) {
            var self__ = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t14051.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$2) {
            var self__ = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t14051.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$2) {
            var self__ = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1) {
              return function(p1__14041_SHARP_) {
                return f1.call(null, p1__14041_SHARP_ == null ? null : self__.f.call(null, p1__14041_SHARP_))
              }
            }(f1)
          };
          cljs.core.async.t14051.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14053) {
            var self__ = this;
            return self__.meta14052
          };
          cljs.core.async.t14051.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14053, meta14052__$1) {
            var self__ = this;
            return new cljs.core.async.t14051(self__.fn1, self__._, self__.meta14049, self__.ch, self__.f, self__.map_LT_, meta14052__$1)
          };
          cljs.core.async.__GT_t14051 = function __GT_t14051(fn1__$1, ___$1, meta14049__$1, ch__$2, f__$2, map_LT___$2, meta14052) {
            return new cljs.core.async.t14051(fn1__$1, ___$1, meta14049__$1, ch__$2, f__$2, map_LT___$2, meta14052)
          }
        }
        return new cljs.core.async.t14051(fn1, _, self__.meta14049, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = ret;
        if(cljs.core.truth_(and__3941__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3941__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t14048.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14048.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14048.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14050) {
      var self__ = this;
      return self__.meta14049
    };
    cljs.core.async.t14048.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14050, meta14049__$1) {
      var self__ = this;
      return new cljs.core.async.t14048(self__.ch, self__.f, self__.map_LT_, meta14049__$1)
    };
    cljs.core.async.__GT_t14048 = function __GT_t14048(ch__$1, f__$1, map_LT___$1, meta14049) {
      return new cljs.core.async.t14048(ch__$1, f__$1, map_LT___$1, meta14049)
    }
  }
  return new cljs.core.async.t14048(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t14057 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14057");
    cljs.core.async.t14057 = function(ch, f, map_GT_, meta14058) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta14058 = meta14058;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14057.cljs$lang$type = true;
    cljs.core.async.t14057.cljs$lang$ctorStr = "cljs.core.async/t14057";
    cljs.core.async.t14057.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14057")
    };
    cljs.core.async.t14057.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14057.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t14057.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14057.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t14057.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14057.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14057.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14059) {
      var self__ = this;
      return self__.meta14058
    };
    cljs.core.async.t14057.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14059, meta14058__$1) {
      var self__ = this;
      return new cljs.core.async.t14057(self__.ch, self__.f, self__.map_GT_, meta14058__$1)
    };
    cljs.core.async.__GT_t14057 = function __GT_t14057(ch__$1, f__$1, map_GT___$1, meta14058) {
      return new cljs.core.async.t14057(ch__$1, f__$1, map_GT___$1, meta14058)
    }
  }
  return new cljs.core.async.t14057(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t14063 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t14063");
    cljs.core.async.t14063 = function(ch, p, filter_GT_, meta14064) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta14064 = meta14064;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14063.cljs$lang$type = true;
    cljs.core.async.t14063.cljs$lang$ctorStr = "cljs.core.async/t14063";
    cljs.core.async.t14063.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14063")
    };
    cljs.core.async.t14063.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14063.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t14063.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14063.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t14063.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14063.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14063.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14065) {
      var self__ = this;
      return self__.meta14064
    };
    cljs.core.async.t14063.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14065, meta14064__$1) {
      var self__ = this;
      return new cljs.core.async.t14063(self__.ch, self__.p, self__.filter_GT_, meta14064__$1)
    };
    cljs.core.async.__GT_t14063 = function __GT_t14063(ch__$1, p__$1, filter_GT___$1, meta14064) {
      return new cljs.core.async.t14063(ch__$1, p__$1, filter_GT___$1, meta14064)
    }
  }
  return new cljs.core.async.t14063(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5205__auto___14140 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_14123) {
          var state_val_14124 = state_14123[1];
          if(state_val_14124 === 1) {
            var state_14123__$1 = state_14123;
            var statearr_14125_14141 = state_14123__$1;
            statearr_14125_14141[2] = null;
            statearr_14125_14141[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14124 === 2) {
              var state_14123__$1 = state_14123;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14123__$1, 4, ch)
            }else {
              if(state_val_14124 === 3) {
                var inst_14121 = state_14123[2];
                var state_14123__$1 = state_14123;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14123__$1, inst_14121)
              }else {
                if(state_val_14124 === 4) {
                  var inst_14105 = state_14123[5];
                  var inst_14105__$1 = state_14123[2];
                  var inst_14106 = inst_14105__$1 == null;
                  var state_14123__$1 = function() {
                    var statearr_14126 = state_14123;
                    statearr_14126[5] = inst_14105__$1;
                    return statearr_14126
                  }();
                  if(cljs.core.truth_(inst_14106)) {
                    var statearr_14127_14142 = state_14123__$1;
                    statearr_14127_14142[1] = 5
                  }else {
                    var statearr_14128_14143 = state_14123__$1;
                    statearr_14128_14143[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14124 === 5) {
                    var inst_14108 = cljs.core.async.close_BANG_.call(null, out);
                    var state_14123__$1 = state_14123;
                    var statearr_14129_14144 = state_14123__$1;
                    statearr_14129_14144[2] = inst_14108;
                    statearr_14129_14144[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14124 === 6) {
                      var inst_14105 = state_14123[5];
                      var inst_14110 = p.call(null, inst_14105);
                      var state_14123__$1 = state_14123;
                      if(cljs.core.truth_(inst_14110)) {
                        var statearr_14130_14145 = state_14123__$1;
                        statearr_14130_14145[1] = 8
                      }else {
                        var statearr_14131_14146 = state_14123__$1;
                        statearr_14131_14146[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14124 === 7) {
                        var inst_14119 = state_14123[2];
                        var state_14123__$1 = state_14123;
                        var statearr_14132_14147 = state_14123__$1;
                        statearr_14132_14147[2] = inst_14119;
                        statearr_14132_14147[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14124 === 8) {
                          var inst_14105 = state_14123[5];
                          var state_14123__$1 = state_14123;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14123__$1, 11, out, inst_14105)
                        }else {
                          if(state_val_14124 === 9) {
                            var state_14123__$1 = state_14123;
                            var statearr_14133_14148 = state_14123__$1;
                            statearr_14133_14148[2] = null;
                            statearr_14133_14148[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_14124 === 10) {
                              var inst_14116 = state_14123[2];
                              var state_14123__$1 = function() {
                                var statearr_14134 = state_14123;
                                statearr_14134[6] = inst_14116;
                                return statearr_14134
                              }();
                              var statearr_14135_14149 = state_14123__$1;
                              statearr_14135_14149[2] = null;
                              statearr_14135_14149[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14124 === 11) {
                                var inst_14113 = state_14123[2];
                                var state_14123__$1 = state_14123;
                                var statearr_14136_14150 = state_14123__$1;
                                statearr_14136_14150[2] = inst_14113;
                                statearr_14136_14150[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_14138 = new Array(7);
              statearr_14138[0] = state_machine__5156__auto__;
              statearr_14138[1] = 1;
              return statearr_14138
            };
            var state_machine__5156__auto____1 = function(state_14123) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_14123);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_14123) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_14123)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_14139 = f__5206__auto__.call(null);
        statearr_14139[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___14140;
        return statearr_14139
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_14298) {
        var state_val_14299 = state_14298[1];
        if(state_val_14299 === 1) {
          var state_14298__$1 = state_14298;
          var statearr_14300_14333 = state_14298__$1;
          statearr_14300_14333[2] = null;
          statearr_14300_14333[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_14299 === 2) {
            var state_14298__$1 = state_14298;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14298__$1, 4, in$)
          }else {
            if(state_val_14299 === 3) {
              var inst_14296 = state_14298[2];
              var state_14298__$1 = state_14298;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14298__$1, inst_14296)
            }else {
              if(state_val_14299 === 4) {
                var inst_14244 = state_14298[5];
                var inst_14244__$1 = state_14298[2];
                var inst_14245 = inst_14244__$1 == null;
                var state_14298__$1 = function() {
                  var statearr_14301 = state_14298;
                  statearr_14301[5] = inst_14244__$1;
                  return statearr_14301
                }();
                if(cljs.core.truth_(inst_14245)) {
                  var statearr_14302_14334 = state_14298__$1;
                  statearr_14302_14334[1] = 5
                }else {
                  var statearr_14303_14335 = state_14298__$1;
                  statearr_14303_14335[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_14299 === 5) {
                  var inst_14247 = cljs.core.async.close_BANG_.call(null, out);
                  var state_14298__$1 = state_14298;
                  var statearr_14304_14336 = state_14298__$1;
                  statearr_14304_14336[2] = inst_14247;
                  statearr_14304_14336[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14299 === 6) {
                    var inst_14244 = state_14298[5];
                    var inst_14249 = f.call(null, inst_14244);
                    var inst_14254 = cljs.core.seq.call(null, inst_14249);
                    var inst_14255 = inst_14254;
                    var inst_14256 = null;
                    var inst_14257 = 0;
                    var inst_14258 = 0;
                    var state_14298__$1 = function() {
                      var statearr_14305 = state_14298;
                      statearr_14305[6] = inst_14258;
                      statearr_14305[7] = inst_14257;
                      statearr_14305[8] = inst_14255;
                      statearr_14305[9] = inst_14256;
                      return statearr_14305
                    }();
                    var statearr_14306_14337 = state_14298__$1;
                    statearr_14306_14337[2] = null;
                    statearr_14306_14337[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14299 === 7) {
                      var inst_14294 = state_14298[2];
                      var state_14298__$1 = state_14298;
                      var statearr_14307_14338 = state_14298__$1;
                      statearr_14307_14338[2] = inst_14294;
                      statearr_14307_14338[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14299 === 8) {
                        var inst_14258 = state_14298[6];
                        var inst_14257 = state_14298[7];
                        var inst_14260 = inst_14258 < inst_14257;
                        var inst_14261 = inst_14260;
                        var state_14298__$1 = state_14298;
                        if(cljs.core.truth_(inst_14261)) {
                          var statearr_14308_14339 = state_14298__$1;
                          statearr_14308_14339[1] = 10
                        }else {
                          var statearr_14309_14340 = state_14298__$1;
                          statearr_14309_14340[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14299 === 9) {
                          var inst_14291 = state_14298[2];
                          var state_14298__$1 = function() {
                            var statearr_14310 = state_14298;
                            statearr_14310[10] = inst_14291;
                            return statearr_14310
                          }();
                          var statearr_14311_14341 = state_14298__$1;
                          statearr_14311_14341[2] = null;
                          statearr_14311_14341[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_14299 === 10) {
                            var inst_14258 = state_14298[6];
                            var inst_14256 = state_14298[9];
                            var inst_14263 = cljs.core._nth.call(null, inst_14256, inst_14258);
                            var state_14298__$1 = state_14298;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14298__$1, 13, out, inst_14263)
                          }else {
                            if(state_val_14299 === 11) {
                              var inst_14255 = state_14298[8];
                              var inst_14269 = state_14298[11];
                              var inst_14269__$1 = cljs.core.seq.call(null, inst_14255);
                              var state_14298__$1 = function() {
                                var statearr_14315 = state_14298;
                                statearr_14315[11] = inst_14269__$1;
                                return statearr_14315
                              }();
                              if(inst_14269__$1) {
                                var statearr_14316_14342 = state_14298__$1;
                                statearr_14316_14342[1] = 14
                              }else {
                                var statearr_14317_14343 = state_14298__$1;
                                statearr_14317_14343[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14299 === 12) {
                                var inst_14289 = state_14298[2];
                                var state_14298__$1 = state_14298;
                                var statearr_14318_14344 = state_14298__$1;
                                statearr_14318_14344[2] = inst_14289;
                                statearr_14318_14344[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_14299 === 13) {
                                  var inst_14258 = state_14298[6];
                                  var inst_14257 = state_14298[7];
                                  var inst_14255 = state_14298[8];
                                  var inst_14256 = state_14298[9];
                                  var inst_14265 = state_14298[2];
                                  var inst_14266 = inst_14258 + 1;
                                  var tmp14312 = inst_14257;
                                  var tmp14313 = inst_14255;
                                  var tmp14314 = inst_14256;
                                  var inst_14255__$1 = tmp14313;
                                  var inst_14256__$1 = tmp14314;
                                  var inst_14257__$1 = tmp14312;
                                  var inst_14258__$1 = inst_14266;
                                  var state_14298__$1 = function() {
                                    var statearr_14319 = state_14298;
                                    statearr_14319[6] = inst_14258__$1;
                                    statearr_14319[7] = inst_14257__$1;
                                    statearr_14319[8] = inst_14255__$1;
                                    statearr_14319[9] = inst_14256__$1;
                                    statearr_14319[12] = inst_14265;
                                    return statearr_14319
                                  }();
                                  var statearr_14320_14345 = state_14298__$1;
                                  statearr_14320_14345[2] = null;
                                  statearr_14320_14345[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_14299 === 14) {
                                    var inst_14269 = state_14298[11];
                                    var inst_14271 = cljs.core.chunked_seq_QMARK_.call(null, inst_14269);
                                    var state_14298__$1 = state_14298;
                                    if(inst_14271) {
                                      var statearr_14321_14346 = state_14298__$1;
                                      statearr_14321_14346[1] = 17
                                    }else {
                                      var statearr_14322_14347 = state_14298__$1;
                                      statearr_14322_14347[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_14299 === 15) {
                                      var state_14298__$1 = state_14298;
                                      var statearr_14323_14348 = state_14298__$1;
                                      statearr_14323_14348[2] = null;
                                      statearr_14323_14348[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_14299 === 16) {
                                        var inst_14287 = state_14298[2];
                                        var state_14298__$1 = state_14298;
                                        var statearr_14324_14349 = state_14298__$1;
                                        statearr_14324_14349[2] = inst_14287;
                                        statearr_14324_14349[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_14299 === 17) {
                                          var inst_14269 = state_14298[11];
                                          var inst_14273 = cljs.core.chunk_first.call(null, inst_14269);
                                          var inst_14274 = cljs.core.chunk_rest.call(null, inst_14269);
                                          var inst_14275 = cljs.core.count.call(null, inst_14273);
                                          var inst_14255 = inst_14274;
                                          var inst_14256 = inst_14273;
                                          var inst_14257 = inst_14275;
                                          var inst_14258 = 0;
                                          var state_14298__$1 = function() {
                                            var statearr_14325 = state_14298;
                                            statearr_14325[6] = inst_14258;
                                            statearr_14325[7] = inst_14257;
                                            statearr_14325[8] = inst_14255;
                                            statearr_14325[9] = inst_14256;
                                            return statearr_14325
                                          }();
                                          var statearr_14326_14350 = state_14298__$1;
                                          statearr_14326_14350[2] = null;
                                          statearr_14326_14350[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_14299 === 18) {
                                            var inst_14269 = state_14298[11];
                                            var inst_14278 = cljs.core.first.call(null, inst_14269);
                                            var state_14298__$1 = state_14298;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14298__$1, 20, out, inst_14278)
                                          }else {
                                            if(state_val_14299 === 19) {
                                              var inst_14284 = state_14298[2];
                                              var state_14298__$1 = state_14298;
                                              var statearr_14327_14351 = state_14298__$1;
                                              statearr_14327_14351[2] = inst_14284;
                                              statearr_14327_14351[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_14299 === 20) {
                                                var inst_14269 = state_14298[11];
                                                var inst_14280 = state_14298[2];
                                                var inst_14281 = cljs.core.next.call(null, inst_14269);
                                                var inst_14255 = inst_14281;
                                                var inst_14256 = null;
                                                var inst_14257 = 0;
                                                var inst_14258 = 0;
                                                var state_14298__$1 = function() {
                                                  var statearr_14328 = state_14298;
                                                  statearr_14328[6] = inst_14258;
                                                  statearr_14328[7] = inst_14257;
                                                  statearr_14328[8] = inst_14255;
                                                  statearr_14328[9] = inst_14256;
                                                  statearr_14328[13] = inst_14280;
                                                  return statearr_14328
                                                }();
                                                var statearr_14329_14352 = state_14298__$1;
                                                statearr_14329_14352[2] = null;
                                                statearr_14329_14352[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_14331 = new Array(14);
            statearr_14331[0] = state_machine__5156__auto__;
            statearr_14331[1] = 1;
            return statearr_14331
          };
          var state_machine__5156__auto____1 = function(state_14298) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_14298);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_14298) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_14298)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_14332 = f__5206__auto__.call(null);
      statearr_14332[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_14332
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5205__auto___14425 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_14408) {
          var state_val_14409 = state_14408[1];
          if(state_val_14409 === 1) {
            var state_14408__$1 = state_14408;
            var statearr_14410_14426 = state_14408__$1;
            statearr_14410_14426[2] = null;
            statearr_14410_14426[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14409 === 2) {
              var state_14408__$1 = state_14408;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14408__$1, 4, from)
            }else {
              if(state_val_14409 === 3) {
                var inst_14406 = state_14408[2];
                var state_14408__$1 = state_14408;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14408__$1, inst_14406)
              }else {
                if(state_val_14409 === 4) {
                  var inst_14391 = state_14408[5];
                  var inst_14391__$1 = state_14408[2];
                  var inst_14392 = inst_14391__$1 == null;
                  var state_14408__$1 = function() {
                    var statearr_14411 = state_14408;
                    statearr_14411[5] = inst_14391__$1;
                    return statearr_14411
                  }();
                  if(cljs.core.truth_(inst_14392)) {
                    var statearr_14412_14427 = state_14408__$1;
                    statearr_14412_14427[1] = 5
                  }else {
                    var statearr_14413_14428 = state_14408__$1;
                    statearr_14413_14428[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14409 === 5) {
                    var state_14408__$1 = state_14408;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_14414_14429 = state_14408__$1;
                      statearr_14414_14429[1] = 8
                    }else {
                      var statearr_14415_14430 = state_14408__$1;
                      statearr_14415_14430[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14409 === 6) {
                      var inst_14391 = state_14408[5];
                      var state_14408__$1 = state_14408;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14408__$1, 11, to, inst_14391)
                    }else {
                      if(state_val_14409 === 7) {
                        var inst_14404 = state_14408[2];
                        var state_14408__$1 = state_14408;
                        var statearr_14416_14431 = state_14408__$1;
                        statearr_14416_14431[2] = inst_14404;
                        statearr_14416_14431[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14409 === 8) {
                          var inst_14395 = cljs.core.async.close_BANG_.call(null, to);
                          var state_14408__$1 = state_14408;
                          var statearr_14417_14432 = state_14408__$1;
                          statearr_14417_14432[2] = inst_14395;
                          statearr_14417_14432[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_14409 === 9) {
                            var state_14408__$1 = state_14408;
                            var statearr_14418_14433 = state_14408__$1;
                            statearr_14418_14433[2] = null;
                            statearr_14418_14433[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_14409 === 10) {
                              var inst_14398 = state_14408[2];
                              var state_14408__$1 = state_14408;
                              var statearr_14419_14434 = state_14408__$1;
                              statearr_14419_14434[2] = inst_14398;
                              statearr_14419_14434[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14409 === 11) {
                                var inst_14401 = state_14408[2];
                                var state_14408__$1 = function() {
                                  var statearr_14420 = state_14408;
                                  statearr_14420[6] = inst_14401;
                                  return statearr_14420
                                }();
                                var statearr_14421_14435 = state_14408__$1;
                                statearr_14421_14435[2] = null;
                                statearr_14421_14435[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_14423 = new Array(7);
              statearr_14423[0] = state_machine__5156__auto__;
              statearr_14423[1] = 1;
              return statearr_14423
            };
            var state_machine__5156__auto____1 = function(state_14408) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_14408);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_14408) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_14408)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_14424 = f__5206__auto__.call(null);
        statearr_14424[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___14425;
        return statearr_14424
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5205__auto___14514 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_14496) {
          var state_val_14497 = state_14496[1];
          if(state_val_14497 === 1) {
            var state_14496__$1 = state_14496;
            var statearr_14498_14515 = state_14496__$1;
            statearr_14498_14515[2] = null;
            statearr_14498_14515[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14497 === 2) {
              var state_14496__$1 = state_14496;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14496__$1, 4, ch)
            }else {
              if(state_val_14497 === 3) {
                var inst_14494 = state_14496[2];
                var state_14496__$1 = state_14496;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14496__$1, inst_14494)
              }else {
                if(state_val_14497 === 4) {
                  var inst_14477 = state_14496[5];
                  var inst_14477__$1 = state_14496[2];
                  var inst_14478 = inst_14477__$1 == null;
                  var state_14496__$1 = function() {
                    var statearr_14499 = state_14496;
                    statearr_14499[5] = inst_14477__$1;
                    return statearr_14499
                  }();
                  if(cljs.core.truth_(inst_14478)) {
                    var statearr_14500_14516 = state_14496__$1;
                    statearr_14500_14516[1] = 5
                  }else {
                    var statearr_14501_14517 = state_14496__$1;
                    statearr_14501_14517[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14497 === 5) {
                    var inst_14480 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_14481 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_14496__$1 = function() {
                      var statearr_14502 = state_14496;
                      statearr_14502[6] = inst_14480;
                      return statearr_14502
                    }();
                    var statearr_14503_14518 = state_14496__$1;
                    statearr_14503_14518[2] = inst_14481;
                    statearr_14503_14518[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14497 === 6) {
                      var inst_14477 = state_14496[5];
                      var inst_14483 = p.call(null, inst_14477);
                      var state_14496__$1 = state_14496;
                      if(cljs.core.truth_(inst_14483)) {
                        var statearr_14504_14519 = state_14496__$1;
                        statearr_14504_14519[1] = 9
                      }else {
                        var statearr_14505_14520 = state_14496__$1;
                        statearr_14505_14520[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14497 === 7) {
                        var inst_14492 = state_14496[2];
                        var state_14496__$1 = state_14496;
                        var statearr_14506_14521 = state_14496__$1;
                        statearr_14506_14521[2] = inst_14492;
                        statearr_14506_14521[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14497 === 8) {
                          var inst_14489 = state_14496[2];
                          var state_14496__$1 = function() {
                            var statearr_14507 = state_14496;
                            statearr_14507[7] = inst_14489;
                            return statearr_14507
                          }();
                          var statearr_14508_14522 = state_14496__$1;
                          statearr_14508_14522[2] = null;
                          statearr_14508_14522[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_14497 === 9) {
                            var state_14496__$1 = state_14496;
                            var statearr_14509_14523 = state_14496__$1;
                            statearr_14509_14523[2] = tc;
                            statearr_14509_14523[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_14497 === 10) {
                              var state_14496__$1 = state_14496;
                              var statearr_14510_14524 = state_14496__$1;
                              statearr_14510_14524[2] = fc;
                              statearr_14510_14524[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14497 === 11) {
                                var inst_14477 = state_14496[5];
                                var inst_14487 = state_14496[2];
                                var state_14496__$1 = state_14496;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14496__$1, 8, inst_14487, inst_14477)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_14512 = new Array(8);
              statearr_14512[0] = state_machine__5156__auto__;
              statearr_14512[1] = 1;
              return statearr_14512
            };
            var state_machine__5156__auto____1 = function(state_14496) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_14496);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_14496) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_14496)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_14513 = f__5206__auto__.call(null);
        statearr_14513[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___14514;
        return statearr_14513
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return cljs.core.PersistentVector.fromArray([tc, fc], true)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_14567) {
        var state_val_14568 = state_14567[1];
        if(state_val_14568 === 7) {
          var inst_14563 = state_14567[2];
          var state_14567__$1 = state_14567;
          var statearr_14569_14581 = state_14567__$1;
          statearr_14569_14581[2] = inst_14563;
          statearr_14569_14581[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_14568 === 6) {
            var inst_14556 = state_14567[5];
            var inst_14553 = state_14567[6];
            var inst_14560 = f.call(null, inst_14553, inst_14556);
            var inst_14553__$1 = inst_14560;
            var state_14567__$1 = function() {
              var statearr_14570 = state_14567;
              statearr_14570[6] = inst_14553__$1;
              return statearr_14570
            }();
            var statearr_14571_14582 = state_14567__$1;
            statearr_14571_14582[2] = null;
            statearr_14571_14582[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14568 === 5) {
              var inst_14553 = state_14567[6];
              var state_14567__$1 = state_14567;
              var statearr_14572_14583 = state_14567__$1;
              statearr_14572_14583[2] = inst_14553;
              statearr_14572_14583[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_14568 === 4) {
                var inst_14556 = state_14567[5];
                var inst_14556__$1 = state_14567[2];
                var inst_14557 = inst_14556__$1 == null;
                var state_14567__$1 = function() {
                  var statearr_14573 = state_14567;
                  statearr_14573[5] = inst_14556__$1;
                  return statearr_14573
                }();
                if(cljs.core.truth_(inst_14557)) {
                  var statearr_14574_14584 = state_14567__$1;
                  statearr_14574_14584[1] = 5
                }else {
                  var statearr_14575_14585 = state_14567__$1;
                  statearr_14575_14585[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_14568 === 3) {
                  var inst_14565 = state_14567[2];
                  var state_14567__$1 = state_14567;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14567__$1, inst_14565)
                }else {
                  if(state_val_14568 === 2) {
                    var state_14567__$1 = state_14567;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14567__$1, 4, ch)
                  }else {
                    if(state_val_14568 === 1) {
                      var inst_14553 = init;
                      var state_14567__$1 = function() {
                        var statearr_14576 = state_14567;
                        statearr_14576[6] = inst_14553;
                        return statearr_14576
                      }();
                      var statearr_14577_14586 = state_14567__$1;
                      statearr_14577_14586[2] = null;
                      statearr_14577_14586[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_14579 = new Array(7);
            statearr_14579[0] = state_machine__5156__auto__;
            statearr_14579[1] = 1;
            return statearr_14579
          };
          var state_machine__5156__auto____1 = function(state_14567) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_14567);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_14567) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_14567)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_14580 = f__5206__auto__.call(null);
      statearr_14580[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_14580
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_14644) {
          var state_val_14645 = state_14644[1];
          if(state_val_14645 === 1) {
            var inst_14624 = cljs.core.seq.call(null, coll);
            var inst_14625 = inst_14624;
            var state_14644__$1 = function() {
              var statearr_14646 = state_14644;
              statearr_14646[5] = inst_14625;
              return statearr_14646
            }();
            var statearr_14647_14661 = state_14644__$1;
            statearr_14647_14661[2] = null;
            statearr_14647_14661[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14645 === 2) {
              var inst_14625 = state_14644[5];
              var state_14644__$1 = state_14644;
              if(cljs.core.truth_(inst_14625)) {
                var statearr_14648_14662 = state_14644__$1;
                statearr_14648_14662[1] = 4
              }else {
                var statearr_14649_14663 = state_14644__$1;
                statearr_14649_14663[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_14645 === 3) {
                var inst_14642 = state_14644[2];
                var state_14644__$1 = state_14644;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14644__$1, inst_14642)
              }else {
                if(state_val_14645 === 4) {
                  var inst_14625 = state_14644[5];
                  var inst_14628 = cljs.core.first.call(null, inst_14625);
                  var state_14644__$1 = state_14644;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14644__$1, 7, ch, inst_14628)
                }else {
                  if(state_val_14645 === 5) {
                    var state_14644__$1 = state_14644;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_14650_14664 = state_14644__$1;
                      statearr_14650_14664[1] = 8
                    }else {
                      var statearr_14651_14665 = state_14644__$1;
                      statearr_14651_14665[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14645 === 6) {
                      var inst_14640 = state_14644[2];
                      var state_14644__$1 = state_14644;
                      var statearr_14652_14666 = state_14644__$1;
                      statearr_14652_14666[2] = inst_14640;
                      statearr_14652_14666[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14645 === 7) {
                        var inst_14625 = state_14644[5];
                        var inst_14630 = state_14644[2];
                        var inst_14631 = cljs.core.next.call(null, inst_14625);
                        var inst_14625__$1 = inst_14631;
                        var state_14644__$1 = function() {
                          var statearr_14653 = state_14644;
                          statearr_14653[5] = inst_14625__$1;
                          statearr_14653[6] = inst_14630;
                          return statearr_14653
                        }();
                        var statearr_14654_14667 = state_14644__$1;
                        statearr_14654_14667[2] = null;
                        statearr_14654_14667[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14645 === 8) {
                          var inst_14635 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_14644__$1 = state_14644;
                          var statearr_14655_14668 = state_14644__$1;
                          statearr_14655_14668[2] = inst_14635;
                          statearr_14655_14668[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_14645 === 9) {
                            var state_14644__$1 = state_14644;
                            var statearr_14656_14669 = state_14644__$1;
                            statearr_14656_14669[2] = null;
                            statearr_14656_14669[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_14645 === 10) {
                              var inst_14638 = state_14644[2];
                              var state_14644__$1 = state_14644;
                              var statearr_14657_14670 = state_14644__$1;
                              statearr_14657_14670[2] = inst_14638;
                              statearr_14657_14670[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_14659 = new Array(7);
              statearr_14659[0] = state_machine__5156__auto__;
              statearr_14659[1] = 1;
              return statearr_14659
            };
            var state_machine__5156__auto____1 = function(state_14644) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_14644);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_14644) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_14644)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_14660 = f__5206__auto__.call(null);
        statearr_14660[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
        return statearr_14660
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return c__5205__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3941__auto__ = _;
    if(and__3941__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3394__auto__ = _ == null ? null : _;
    return function() {
      var or__3943__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t14883 !== "undefined") {
    }else {
      goog.provide("cljs.core.async.t14883");
      cljs.core.async.t14883 = function(cs, ch, mult, meta14884) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta14884 = meta14884;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t14883.cljs$lang$type = true;
      cljs.core.async.t14883.cljs$lang$ctorStr = "cljs.core.async/t14883";
      cljs.core.async.t14883.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
          return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t14883")
        }
      }(cs);
      cljs.core.async.t14883.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t14883.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t14883.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t14883.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t14883.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t14883.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t14883.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_14885) {
          var self__ = this;
          return self__.meta14884
        }
      }(cs);
      cljs.core.async.t14883.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_14885, meta14884__$1) {
          var self__ = this;
          return new cljs.core.async.t14883(self__.cs, self__.ch, self__.mult, meta14884__$1)
        }
      }(cs);
      cljs.core.async.__GT_t14883 = function(cs) {
        return function __GT_t14883(cs__$1, ch__$1, mult__$1, meta14884) {
          return new cljs.core.async.t14883(cs__$1, ch__$1, mult__$1, meta14884)
        }
      }(cs)
    }
    return new cljs.core.async.t14883(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__5205__auto___15095 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_15013) {
        var state_val_15014 = state_15013[1];
        if(state_val_15014 === 32) {
          try {
            var inst_14888 = state_15013[5];
            var inst_14964 = state_15013[6];
            var inst_14970 = cljs.core.async.put_BANG_.call(null, inst_14964, inst_14888, done);
            var state_15013__$1 = state_15013;
            var statearr_15017_15096 = state_15013__$1;
            statearr_15017_15096[2] = inst_14970;
            statearr_15017_15096[1] = 30;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }catch(e15015) {
            if(e15015 instanceof Object) {
              var ex__5149__auto__ = e15015;
              var statearr_15016_15097 = state_15013;
              statearr_15016_15097[1] = 31;
              statearr_15016_15097[2] = ex__5149__auto__;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e15015;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_15014 === 1) {
            var state_15013__$1 = state_15013;
            var statearr_15018_15098 = state_15013__$1;
            statearr_15018_15098[2] = null;
            statearr_15018_15098[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15014 === 33) {
              var inst_14976 = state_15013[7];
              var inst_14978 = cljs.core.chunked_seq_QMARK_.call(null, inst_14976);
              var state_15013__$1 = state_15013;
              if(inst_14978) {
                var statearr_15019_15099 = state_15013__$1;
                statearr_15019_15099[1] = 36
              }else {
                var statearr_15020_15100 = state_15013__$1;
                statearr_15020_15100[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15014 === 2) {
                var state_15013__$1 = state_15013;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15013__$1, 4, ch)
              }else {
                if(state_val_15014 === 34) {
                  var state_15013__$1 = state_15013;
                  var statearr_15021_15101 = state_15013__$1;
                  statearr_15021_15101[2] = null;
                  statearr_15021_15101[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15014 === 3) {
                    var inst_15011 = state_15013[2];
                    var state_15013__$1 = state_15013;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15013__$1, inst_15011)
                  }else {
                    if(state_val_15014 === 35) {
                      var inst_15000 = state_15013[2];
                      var state_15013__$1 = state_15013;
                      var statearr_15022_15102 = state_15013__$1;
                      statearr_15022_15102[2] = inst_15000;
                      statearr_15022_15102[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15014 === 4) {
                        var inst_14888 = state_15013[5];
                        var inst_14888__$1 = state_15013[2];
                        var inst_14889 = inst_14888__$1 == null;
                        var state_15013__$1 = function() {
                          var statearr_15023 = state_15013;
                          statearr_15023[5] = inst_14888__$1;
                          return statearr_15023
                        }();
                        if(cljs.core.truth_(inst_14889)) {
                          var statearr_15024_15103 = state_15013__$1;
                          statearr_15024_15103[1] = 5
                        }else {
                          var statearr_15025_15104 = state_15013__$1;
                          statearr_15025_15104[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15014 === 36) {
                          var inst_14976 = state_15013[7];
                          var inst_14980 = cljs.core.chunk_first.call(null, inst_14976);
                          var inst_14981 = cljs.core.chunk_rest.call(null, inst_14976);
                          var inst_14982 = cljs.core.count.call(null, inst_14980);
                          var inst_14956 = inst_14981;
                          var inst_14957 = inst_14980;
                          var inst_14958 = inst_14982;
                          var inst_14959 = 0;
                          var state_15013__$1 = function() {
                            var statearr_15026 = state_15013;
                            statearr_15026[8] = inst_14956;
                            statearr_15026[9] = inst_14957;
                            statearr_15026[10] = inst_14959;
                            statearr_15026[11] = inst_14958;
                            return statearr_15026
                          }();
                          var statearr_15027_15105 = state_15013__$1;
                          statearr_15027_15105[2] = null;
                          statearr_15027_15105[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15014 === 5) {
                            var inst_14895 = cljs.core.deref.call(null, cs);
                            var inst_14896 = cljs.core.seq.call(null, inst_14895);
                            var inst_14897 = inst_14896;
                            var inst_14898 = null;
                            var inst_14899 = 0;
                            var inst_14900 = 0;
                            var state_15013__$1 = function() {
                              var statearr_15028 = state_15013;
                              statearr_15028[12] = inst_14898;
                              statearr_15028[13] = inst_14897;
                              statearr_15028[14] = inst_14900;
                              statearr_15028[15] = inst_14899;
                              return statearr_15028
                            }();
                            var statearr_15029_15106 = state_15013__$1;
                            statearr_15029_15106[2] = null;
                            statearr_15029_15106[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15014 === 37) {
                              var inst_14976 = state_15013[7];
                              var inst_14985 = cljs.core.first.call(null, inst_14976);
                              var state_15013__$1 = function() {
                                var statearr_15030 = state_15013;
                                statearr_15030[16] = inst_14985;
                                return statearr_15030
                              }();
                              var statearr_15031_15107 = state_15013__$1;
                              statearr_15031_15107[2] = null;
                              statearr_15031_15107[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15014 === 6) {
                                var inst_14947 = cljs.core.deref.call(null, cs);
                                var inst_14948 = cljs.core.keys.call(null, inst_14947);
                                var inst_14949 = cljs.core.count.call(null, inst_14948);
                                var inst_14950 = cljs.core.reset_BANG_.call(null, dctr, inst_14949);
                                var inst_14955 = cljs.core.seq.call(null, inst_14948);
                                var inst_14956 = inst_14955;
                                var inst_14957 = null;
                                var inst_14958 = 0;
                                var inst_14959 = 0;
                                var state_15013__$1 = function() {
                                  var statearr_15032 = state_15013;
                                  statearr_15032[8] = inst_14956;
                                  statearr_15032[9] = inst_14957;
                                  statearr_15032[10] = inst_14959;
                                  statearr_15032[11] = inst_14958;
                                  statearr_15032[17] = inst_14950;
                                  return statearr_15032
                                }();
                                var statearr_15033_15108 = state_15013__$1;
                                statearr_15033_15108[2] = null;
                                statearr_15033_15108[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_15014 === 38) {
                                  var inst_14997 = state_15013[2];
                                  var state_15013__$1 = state_15013;
                                  var statearr_15034_15109 = state_15013__$1;
                                  statearr_15034_15109[2] = inst_14997;
                                  statearr_15034_15109[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15014 === 7) {
                                    var inst_15009 = state_15013[2];
                                    var state_15013__$1 = state_15013;
                                    var statearr_15035_15110 = state_15013__$1;
                                    statearr_15035_15110[2] = inst_15009;
                                    statearr_15035_15110[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15014 === 39) {
                                      var inst_14976 = state_15013[7];
                                      var inst_14993 = state_15013[2];
                                      var inst_14994 = cljs.core.next.call(null, inst_14976);
                                      var inst_14956 = inst_14994;
                                      var inst_14957 = null;
                                      var inst_14958 = 0;
                                      var inst_14959 = 0;
                                      var state_15013__$1 = function() {
                                        var statearr_15036 = state_15013;
                                        statearr_15036[8] = inst_14956;
                                        statearr_15036[9] = inst_14957;
                                        statearr_15036[10] = inst_14959;
                                        statearr_15036[11] = inst_14958;
                                        statearr_15036[18] = inst_14993;
                                        return statearr_15036
                                      }();
                                      var statearr_15037_15111 = state_15013__$1;
                                      statearr_15037_15111[2] = null;
                                      statearr_15037_15111[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_15014 === 8) {
                                        var inst_14900 = state_15013[14];
                                        var inst_14899 = state_15013[15];
                                        var inst_14902 = inst_14900 < inst_14899;
                                        var inst_14903 = inst_14902;
                                        var state_15013__$1 = state_15013;
                                        if(cljs.core.truth_(inst_14903)) {
                                          var statearr_15038_15112 = state_15013__$1;
                                          statearr_15038_15112[1] = 10
                                        }else {
                                          var statearr_15039_15113 = state_15013__$1;
                                          statearr_15039_15113[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15014 === 40) {
                                          var inst_14985 = state_15013[16];
                                          var inst_14986 = state_15013[2];
                                          var inst_14987 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_14988 = cljs.core.async.untap_STAR_.call(null, m, inst_14985);
                                          var state_15013__$1 = function() {
                                            var statearr_15040 = state_15013;
                                            statearr_15040[19] = inst_14987;
                                            statearr_15040[20] = inst_14986;
                                            return statearr_15040
                                          }();
                                          var statearr_15041_15114 = state_15013__$1;
                                          statearr_15041_15114[2] = inst_14988;
                                          statearr_15041_15114[1] = 39;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_15014 === 9) {
                                            var inst_14945 = state_15013[2];
                                            var state_15013__$1 = state_15013;
                                            var statearr_15042_15115 = state_15013__$1;
                                            statearr_15042_15115[2] = inst_14945;
                                            statearr_15042_15115[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_15014 === 41) {
                                              try {
                                                var inst_14888 = state_15013[5];
                                                var inst_14985 = state_15013[16];
                                                var inst_14991 = cljs.core.async.put_BANG_.call(null, inst_14985, inst_14888, done);
                                                var state_15013__$1 = state_15013;
                                                var statearr_15045_15116 = state_15013__$1;
                                                statearr_15045_15116[2] = inst_14991;
                                                statearr_15045_15116[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }catch(e15043) {
                                                if(e15043 instanceof Object) {
                                                  var ex__5149__auto__ = e15043;
                                                  var statearr_15044_15117 = state_15013;
                                                  statearr_15044_15117[1] = 40;
                                                  statearr_15044_15117[2] = ex__5149__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e15043;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_15014 === 10) {
                                                var inst_14898 = state_15013[12];
                                                var inst_14900 = state_15013[14];
                                                var inst_14906 = cljs.core._nth.call(null, inst_14898, inst_14900);
                                                var inst_14907 = cljs.core.nth.call(null, inst_14906, 0, null);
                                                var inst_14908 = cljs.core.nth.call(null, inst_14906, 1, null);
                                                var state_15013__$1 = function() {
                                                  var statearr_15046 = state_15013;
                                                  statearr_15046[21] = inst_14907;
                                                  return statearr_15046
                                                }();
                                                if(cljs.core.truth_(inst_14908)) {
                                                  var statearr_15047_15118 = state_15013__$1;
                                                  statearr_15047_15118[1] = 13
                                                }else {
                                                  var statearr_15048_15119 = state_15013__$1;
                                                  statearr_15048_15119[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_15014 === 42) {
                                                  var inst_15006 = state_15013[2];
                                                  var state_15013__$1 = function() {
                                                    var statearr_15049 = state_15013;
                                                    statearr_15049[22] = inst_15006;
                                                    return statearr_15049
                                                  }();
                                                  var statearr_15050_15120 = state_15013__$1;
                                                  statearr_15050_15120[2] = null;
                                                  statearr_15050_15120[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_15014 === 11) {
                                                    var inst_14897 = state_15013[13];
                                                    var inst_14917 = state_15013[23];
                                                    var inst_14917__$1 = cljs.core.seq.call(null, inst_14897);
                                                    var state_15013__$1 = function() {
                                                      var statearr_15051 = state_15013;
                                                      statearr_15051[23] = inst_14917__$1;
                                                      return statearr_15051
                                                    }();
                                                    if(inst_14917__$1) {
                                                      var statearr_15052_15121 = state_15013__$1;
                                                      statearr_15052_15121[1] = 16
                                                    }else {
                                                      var statearr_15053_15122 = state_15013__$1;
                                                      statearr_15053_15122[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_15014 === 12) {
                                                      var inst_14943 = state_15013[2];
                                                      var state_15013__$1 = state_15013;
                                                      var statearr_15054_15123 = state_15013__$1;
                                                      statearr_15054_15123[2] = inst_14943;
                                                      statearr_15054_15123[1] = 9;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_15014 === 13) {
                                                        var inst_14907 = state_15013[21];
                                                        var inst_14910 = cljs.core.async.close_BANG_.call(null, inst_14907);
                                                        var state_15013__$1 = state_15013;
                                                        var statearr_15058_15124 = state_15013__$1;
                                                        statearr_15058_15124[2] = inst_14910;
                                                        statearr_15058_15124[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_15014 === 14) {
                                                          var state_15013__$1 = state_15013;
                                                          var statearr_15059_15125 = state_15013__$1;
                                                          statearr_15059_15125[2] = null;
                                                          statearr_15059_15125[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_15014 === 15) {
                                                            var inst_14898 = state_15013[12];
                                                            var inst_14897 = state_15013[13];
                                                            var inst_14900 = state_15013[14];
                                                            var inst_14899 = state_15013[15];
                                                            var inst_14913 = state_15013[2];
                                                            var inst_14914 = inst_14900 + 1;
                                                            var tmp15055 = inst_14898;
                                                            var tmp15056 = inst_14897;
                                                            var tmp15057 = inst_14899;
                                                            var inst_14897__$1 = tmp15056;
                                                            var inst_14898__$1 = tmp15055;
                                                            var inst_14899__$1 = tmp15057;
                                                            var inst_14900__$1 = inst_14914;
                                                            var state_15013__$1 = function() {
                                                              var statearr_15060 = state_15013;
                                                              statearr_15060[12] = inst_14898__$1;
                                                              statearr_15060[13] = inst_14897__$1;
                                                              statearr_15060[24] = inst_14913;
                                                              statearr_15060[14] = inst_14900__$1;
                                                              statearr_15060[15] = inst_14899__$1;
                                                              return statearr_15060
                                                            }();
                                                            var statearr_15061_15126 = state_15013__$1;
                                                            statearr_15061_15126[2] = null;
                                                            statearr_15061_15126[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_15014 === 16) {
                                                              var inst_14917 = state_15013[23];
                                                              var inst_14919 = cljs.core.chunked_seq_QMARK_.call(null, inst_14917);
                                                              var state_15013__$1 = state_15013;
                                                              if(inst_14919) {
                                                                var statearr_15062_15127 = state_15013__$1;
                                                                statearr_15062_15127[1] = 19
                                                              }else {
                                                                var statearr_15063_15128 = state_15013__$1;
                                                                statearr_15063_15128[1] = 20
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_15014 === 17) {
                                                                var state_15013__$1 = state_15013;
                                                                var statearr_15064_15129 = state_15013__$1;
                                                                statearr_15064_15129[2] = null;
                                                                statearr_15064_15129[1] = 18;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_15014 === 18) {
                                                                  var inst_14941 = state_15013[2];
                                                                  var state_15013__$1 = state_15013;
                                                                  var statearr_15065_15130 = state_15013__$1;
                                                                  statearr_15065_15130[2] = inst_14941;
                                                                  statearr_15065_15130[1] = 12;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_15014 === 19) {
                                                                    var inst_14917 = state_15013[23];
                                                                    var inst_14921 = cljs.core.chunk_first.call(null, inst_14917);
                                                                    var inst_14922 = cljs.core.chunk_rest.call(null, inst_14917);
                                                                    var inst_14923 = cljs.core.count.call(null, inst_14921);
                                                                    var inst_14897 = inst_14922;
                                                                    var inst_14898 = inst_14921;
                                                                    var inst_14899 = inst_14923;
                                                                    var inst_14900 = 0;
                                                                    var state_15013__$1 = function() {
                                                                      var statearr_15066 = state_15013;
                                                                      statearr_15066[12] = inst_14898;
                                                                      statearr_15066[13] = inst_14897;
                                                                      statearr_15066[14] = inst_14900;
                                                                      statearr_15066[15] = inst_14899;
                                                                      return statearr_15066
                                                                    }();
                                                                    var statearr_15067_15131 = state_15013__$1;
                                                                    statearr_15067_15131[2] = null;
                                                                    statearr_15067_15131[1] = 8;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_15014 === 20) {
                                                                      var inst_14917 = state_15013[23];
                                                                      var inst_14927 = cljs.core.first.call(null, inst_14917);
                                                                      var inst_14928 = cljs.core.nth.call(null, inst_14927, 0, null);
                                                                      var inst_14929 = cljs.core.nth.call(null, inst_14927, 1, null);
                                                                      var state_15013__$1 = function() {
                                                                        var statearr_15068 = state_15013;
                                                                        statearr_15068[25] = inst_14928;
                                                                        return statearr_15068
                                                                      }();
                                                                      if(cljs.core.truth_(inst_14929)) {
                                                                        var statearr_15069_15132 = state_15013__$1;
                                                                        statearr_15069_15132[1] = 22
                                                                      }else {
                                                                        var statearr_15070_15133 = state_15013__$1;
                                                                        statearr_15070_15133[1] = 23
                                                                      }
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_15014 === 21) {
                                                                        var inst_14938 = state_15013[2];
                                                                        var state_15013__$1 = state_15013;
                                                                        var statearr_15071_15134 = state_15013__$1;
                                                                        statearr_15071_15134[2] = inst_14938;
                                                                        statearr_15071_15134[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_15014 === 22) {
                                                                          var inst_14928 = state_15013[25];
                                                                          var inst_14931 = cljs.core.async.close_BANG_.call(null, inst_14928);
                                                                          var state_15013__$1 = state_15013;
                                                                          var statearr_15072_15135 = state_15013__$1;
                                                                          statearr_15072_15135[2] = inst_14931;
                                                                          statearr_15072_15135[1] = 24;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_15014 === 23) {
                                                                            var state_15013__$1 = state_15013;
                                                                            var statearr_15073_15136 = state_15013__$1;
                                                                            statearr_15073_15136[2] = null;
                                                                            statearr_15073_15136[1] = 24;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_15014 === 24) {
                                                                              var inst_14917 = state_15013[23];
                                                                              var inst_14934 = state_15013[2];
                                                                              var inst_14935 = cljs.core.next.call(null, inst_14917);
                                                                              var inst_14897 = inst_14935;
                                                                              var inst_14898 = null;
                                                                              var inst_14899 = 0;
                                                                              var inst_14900 = 0;
                                                                              var state_15013__$1 = function() {
                                                                                var statearr_15074 = state_15013;
                                                                                statearr_15074[12] = inst_14898;
                                                                                statearr_15074[13] = inst_14897;
                                                                                statearr_15074[14] = inst_14900;
                                                                                statearr_15074[15] = inst_14899;
                                                                                statearr_15074[26] = inst_14934;
                                                                                return statearr_15074
                                                                              }();
                                                                              var statearr_15075_15137 = state_15013__$1;
                                                                              statearr_15075_15137[2] = null;
                                                                              statearr_15075_15137[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_15014 === 25) {
                                                                                var inst_14959 = state_15013[10];
                                                                                var inst_14958 = state_15013[11];
                                                                                var inst_14961 = inst_14959 < inst_14958;
                                                                                var inst_14962 = inst_14961;
                                                                                var state_15013__$1 = state_15013;
                                                                                if(cljs.core.truth_(inst_14962)) {
                                                                                  var statearr_15076_15138 = state_15013__$1;
                                                                                  statearr_15076_15138[1] = 27
                                                                                }else {
                                                                                  var statearr_15077_15139 = state_15013__$1;
                                                                                  statearr_15077_15139[1] = 28
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_15014 === 26) {
                                                                                  var inst_15004 = state_15013[2];
                                                                                  var state_15013__$1 = function() {
                                                                                    var statearr_15078 = state_15013;
                                                                                    statearr_15078[27] = inst_15004;
                                                                                    return statearr_15078
                                                                                  }();
                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15013__$1, 42, dchan)
                                                                                }else {
                                                                                  if(state_val_15014 === 27) {
                                                                                    var inst_14957 = state_15013[9];
                                                                                    var inst_14959 = state_15013[10];
                                                                                    var inst_14964 = cljs.core._nth.call(null, inst_14957, inst_14959);
                                                                                    var state_15013__$1 = function() {
                                                                                      var statearr_15079 = state_15013;
                                                                                      statearr_15079[6] = inst_14964;
                                                                                      return statearr_15079
                                                                                    }();
                                                                                    var statearr_15080_15140 = state_15013__$1;
                                                                                    statearr_15080_15140[2] = null;
                                                                                    statearr_15080_15140[1] = 32;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_15014 === 28) {
                                                                                      var inst_14956 = state_15013[8];
                                                                                      var inst_14976 = state_15013[7];
                                                                                      var inst_14976__$1 = cljs.core.seq.call(null, inst_14956);
                                                                                      var state_15013__$1 = function() {
                                                                                        var statearr_15084 = state_15013;
                                                                                        statearr_15084[7] = inst_14976__$1;
                                                                                        return statearr_15084
                                                                                      }();
                                                                                      if(inst_14976__$1) {
                                                                                        var statearr_15085_15141 = state_15013__$1;
                                                                                        statearr_15085_15141[1] = 33
                                                                                      }else {
                                                                                        var statearr_15086_15142 = state_15013__$1;
                                                                                        statearr_15086_15142[1] = 34
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_15014 === 29) {
                                                                                        var inst_15002 = state_15013[2];
                                                                                        var state_15013__$1 = state_15013;
                                                                                        var statearr_15087_15143 = state_15013__$1;
                                                                                        statearr_15087_15143[2] = inst_15002;
                                                                                        statearr_15087_15143[1] = 26;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_15014 === 30) {
                                                                                          var inst_14956 = state_15013[8];
                                                                                          var inst_14957 = state_15013[9];
                                                                                          var inst_14959 = state_15013[10];
                                                                                          var inst_14958 = state_15013[11];
                                                                                          var inst_14972 = state_15013[2];
                                                                                          var inst_14973 = inst_14959 + 1;
                                                                                          var tmp15081 = inst_14956;
                                                                                          var tmp15082 = inst_14957;
                                                                                          var tmp15083 = inst_14958;
                                                                                          var inst_14956__$1 = tmp15081;
                                                                                          var inst_14957__$1 = tmp15082;
                                                                                          var inst_14958__$1 = tmp15083;
                                                                                          var inst_14959__$1 = inst_14973;
                                                                                          var state_15013__$1 = function() {
                                                                                            var statearr_15088 = state_15013;
                                                                                            statearr_15088[28] = inst_14972;
                                                                                            statearr_15088[8] = inst_14956__$1;
                                                                                            statearr_15088[9] = inst_14957__$1;
                                                                                            statearr_15088[10] = inst_14959__$1;
                                                                                            statearr_15088[11] = inst_14958__$1;
                                                                                            return statearr_15088
                                                                                          }();
                                                                                          var statearr_15089_15144 = state_15013__$1;
                                                                                          statearr_15089_15144[2] = null;
                                                                                          statearr_15089_15144[1] = 25;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_15014 === 31) {
                                                                                            var inst_14964 = state_15013[6];
                                                                                            var inst_14965 = state_15013[2];
                                                                                            var inst_14966 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                            var inst_14967 = cljs.core.async.untap_STAR_.call(null, m, inst_14964);
                                                                                            var state_15013__$1 = function() {
                                                                                              var statearr_15090 = state_15013;
                                                                                              statearr_15090[29] = inst_14965;
                                                                                              statearr_15090[30] = inst_14966;
                                                                                              return statearr_15090
                                                                                            }();
                                                                                            var statearr_15091_15145 = state_15013__$1;
                                                                                            statearr_15091_15145[2] = inst_14967;
                                                                                            statearr_15091_15145[1] = 30;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_15093 = new Array(31);
            statearr_15093[0] = state_machine__5156__auto__;
            statearr_15093[1] = 1;
            return statearr_15093
          };
          var state_machine__5156__auto____1 = function(state_15013) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_15013);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_15013) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_15013)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_15094 = f__5206__auto__.call(null);
      statearr_15094[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___15095;
      return statearr_15094
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], true);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, function() {
        var and__3941__auto__ = cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424));
        if(and__3941__auto__) {
          return!cljs.core.empty_QMARK_.call(null, solos)
        }else {
          return and__3941__auto__
        }
      }() ? cljs.core.vec.call(null, solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], true)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t15266 !== "undefined") {
    }else {
      goog.provide("cljs.core.async.t15266");
      cljs.core.async.t15266 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta15267) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta15267 = meta15267;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t15266.cljs$lang$type = true;
      cljs.core.async.t15266.cljs$lang$ctorStr = "cljs.core.async/t15266";
      cljs.core.async.t15266.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
          return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t15266")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t15266.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15266.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15268) {
          var self__ = this;
          return self__.meta15267
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15266.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15268, meta15267__$1) {
          var self__ = this;
          return new cljs.core.async.t15266(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta15267__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t15266 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t15266(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta15267) {
          return new cljs.core.async.t15266(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta15267)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t15266(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__5205__auto___15386 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_15339) {
        var state_val_15340 = state_15339[1];
        if(state_val_15340 === 1) {
          var inst_15272 = state_15339[5];
          var inst_15272__$1 = calc_state.call(null);
          var inst_15273 = cljs.core.seq_QMARK_.call(null, inst_15272__$1);
          var state_15339__$1 = function() {
            var statearr_15341 = state_15339;
            statearr_15341[5] = inst_15272__$1;
            return statearr_15341
          }();
          if(inst_15273) {
            var statearr_15342_15387 = state_15339__$1;
            statearr_15342_15387[1] = 2
          }else {
            var statearr_15343_15388 = state_15339__$1;
            statearr_15343_15388[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_15340 === 2) {
            var inst_15272 = state_15339[5];
            var inst_15275 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15272);
            var state_15339__$1 = state_15339;
            var statearr_15344_15389 = state_15339__$1;
            statearr_15344_15389[2] = inst_15275;
            statearr_15344_15389[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15340 === 3) {
              var inst_15272 = state_15339[5];
              var state_15339__$1 = state_15339;
              var statearr_15345_15390 = state_15339__$1;
              statearr_15345_15390[2] = inst_15272;
              statearr_15345_15390[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15340 === 4) {
                var inst_15272 = state_15339[5];
                var inst_15278 = state_15339[2];
                var inst_15279 = cljs.core.get.call(null, inst_15278, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_15280 = cljs.core.get.call(null, inst_15278, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_15281 = cljs.core.get.call(null, inst_15278, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_15282 = inst_15272;
                var state_15339__$1 = function() {
                  var statearr_15346 = state_15339;
                  statearr_15346[6] = inst_15280;
                  statearr_15346[7] = inst_15281;
                  statearr_15346[8] = inst_15282;
                  statearr_15346[9] = inst_15279;
                  return statearr_15346
                }();
                var statearr_15347_15391 = state_15339__$1;
                statearr_15347_15391[2] = null;
                statearr_15347_15391[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_15340 === 5) {
                  var inst_15282 = state_15339[8];
                  var inst_15285 = cljs.core.seq_QMARK_.call(null, inst_15282);
                  var state_15339__$1 = state_15339;
                  if(inst_15285) {
                    var statearr_15348_15392 = state_15339__$1;
                    statearr_15348_15392[1] = 7
                  }else {
                    var statearr_15349_15393 = state_15339__$1;
                    statearr_15349_15393[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15340 === 6) {
                    var inst_15337 = state_15339[2];
                    var state_15339__$1 = state_15339;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15339__$1, inst_15337)
                  }else {
                    if(state_val_15340 === 7) {
                      var inst_15282 = state_15339[8];
                      var inst_15287 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15282);
                      var state_15339__$1 = state_15339;
                      var statearr_15350_15394 = state_15339__$1;
                      statearr_15350_15394[2] = inst_15287;
                      statearr_15350_15394[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15340 === 8) {
                        var inst_15282 = state_15339[8];
                        var state_15339__$1 = state_15339;
                        var statearr_15351_15395 = state_15339__$1;
                        statearr_15351_15395[2] = inst_15282;
                        statearr_15351_15395[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15340 === 9) {
                          var inst_15290 = state_15339[10];
                          var inst_15290__$1 = state_15339[2];
                          var inst_15291 = cljs.core.get.call(null, inst_15290__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_15292 = cljs.core.get.call(null, inst_15290__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_15293 = cljs.core.get.call(null, inst_15290__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_15339__$1 = function() {
                            var statearr_15352 = state_15339;
                            statearr_15352[10] = inst_15290__$1;
                            statearr_15352[11] = inst_15292;
                            statearr_15352[12] = inst_15293;
                            return statearr_15352
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_15339__$1, 10, inst_15291)
                        }else {
                          if(state_val_15340 === 10) {
                            var inst_15299 = state_15339[13];
                            var inst_15297 = state_15339[14];
                            var inst_15296 = state_15339[2];
                            var inst_15297__$1 = cljs.core.nth.call(null, inst_15296, 0, null);
                            var inst_15298 = cljs.core.nth.call(null, inst_15296, 1, null);
                            var inst_15299__$1 = inst_15297__$1 == null;
                            var state_15339__$1 = function() {
                              var statearr_15353 = state_15339;
                              statearr_15353[15] = inst_15298;
                              statearr_15353[13] = inst_15299__$1;
                              statearr_15353[14] = inst_15297__$1;
                              return statearr_15353
                            }();
                            if(cljs.core.truth_(inst_15299__$1)) {
                              var statearr_15354_15396 = state_15339__$1;
                              statearr_15354_15396[1] = 11
                            }else {
                              var statearr_15355_15397 = state_15339__$1;
                              statearr_15355_15397[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15340 === 11) {
                              var inst_15299 = state_15339[13];
                              var state_15339__$1 = state_15339;
                              var statearr_15356_15398 = state_15339__$1;
                              statearr_15356_15398[2] = inst_15299;
                              statearr_15356_15398[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15340 === 12) {
                                var inst_15298 = state_15339[15];
                                var inst_15302 = cljs.core._EQ_.call(null, inst_15298, change);
                                var state_15339__$1 = state_15339;
                                var statearr_15357_15399 = state_15339__$1;
                                statearr_15357_15399[2] = inst_15302;
                                statearr_15357_15399[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_15340 === 13) {
                                  var inst_15304 = state_15339[2];
                                  var state_15339__$1 = state_15339;
                                  if(cljs.core.truth_(inst_15304)) {
                                    var statearr_15358_15400 = state_15339__$1;
                                    statearr_15358_15400[1] = 14
                                  }else {
                                    var statearr_15359_15401 = state_15339__$1;
                                    statearr_15359_15401[1] = 15
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15340 === 14) {
                                    var inst_15297 = state_15339[14];
                                    var inst_15306 = inst_15297 == null;
                                    var state_15339__$1 = state_15339;
                                    if(cljs.core.truth_(inst_15306)) {
                                      var statearr_15360_15402 = state_15339__$1;
                                      statearr_15360_15402[1] = 17
                                    }else {
                                      var statearr_15361_15403 = state_15339__$1;
                                      statearr_15361_15403[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15340 === 15) {
                                      var inst_15298 = state_15339[15];
                                      var inst_15293 = state_15339[12];
                                      var inst_15315 = state_15339[16];
                                      var inst_15315__$1 = inst_15293.call(null, inst_15298);
                                      var state_15339__$1 = function() {
                                        var statearr_15362 = state_15339;
                                        statearr_15362[16] = inst_15315__$1;
                                        return statearr_15362
                                      }();
                                      if(cljs.core.truth_(inst_15315__$1)) {
                                        var statearr_15363_15404 = state_15339__$1;
                                        statearr_15363_15404[1] = 20
                                      }else {
                                        var statearr_15364_15405 = state_15339__$1;
                                        statearr_15364_15405[1] = 21
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_15340 === 16) {
                                        var inst_15335 = state_15339[2];
                                        var state_15339__$1 = state_15339;
                                        var statearr_15365_15406 = state_15339__$1;
                                        statearr_15365_15406[2] = inst_15335;
                                        statearr_15365_15406[1] = 6;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15340 === 17) {
                                          var inst_15298 = state_15339[15];
                                          var inst_15308 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_15298);
                                          var state_15339__$1 = state_15339;
                                          var statearr_15366_15407 = state_15339__$1;
                                          statearr_15366_15407[2] = inst_15308;
                                          statearr_15366_15407[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_15340 === 18) {
                                            var state_15339__$1 = state_15339;
                                            var statearr_15367_15408 = state_15339__$1;
                                            statearr_15367_15408[2] = null;
                                            statearr_15367_15408[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_15340 === 19) {
                                              var inst_15311 = state_15339[2];
                                              var inst_15312 = calc_state.call(null);
                                              var inst_15282 = inst_15312;
                                              var state_15339__$1 = function() {
                                                var statearr_15368 = state_15339;
                                                statearr_15368[8] = inst_15282;
                                                statearr_15368[17] = inst_15311;
                                                return statearr_15368
                                              }();
                                              var statearr_15369_15409 = state_15339__$1;
                                              statearr_15369_15409[2] = null;
                                              statearr_15369_15409[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_15340 === 20) {
                                                var inst_15315 = state_15339[16];
                                                var state_15339__$1 = state_15339;
                                                var statearr_15370_15410 = state_15339__$1;
                                                statearr_15370_15410[2] = inst_15315;
                                                statearr_15370_15410[1] = 22;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_15340 === 21) {
                                                  var inst_15318 = state_15339[18];
                                                  var inst_15293 = state_15339[12];
                                                  var inst_15318__$1 = cljs.core.empty_QMARK_.call(null, inst_15293);
                                                  var state_15339__$1 = function() {
                                                    var statearr_15371 = state_15339;
                                                    statearr_15371[18] = inst_15318__$1;
                                                    return statearr_15371
                                                  }();
                                                  if(inst_15318__$1) {
                                                    var statearr_15372_15411 = state_15339__$1;
                                                    statearr_15372_15411[1] = 23
                                                  }else {
                                                    var statearr_15373_15412 = state_15339__$1;
                                                    statearr_15373_15412[1] = 24
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_15340 === 22) {
                                                    var inst_15326 = state_15339[2];
                                                    var state_15339__$1 = state_15339;
                                                    if(cljs.core.truth_(inst_15326)) {
                                                      var statearr_15374_15413 = state_15339__$1;
                                                      statearr_15374_15413[1] = 26
                                                    }else {
                                                      var statearr_15375_15414 = state_15339__$1;
                                                      statearr_15375_15414[1] = 27
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_15340 === 23) {
                                                      var inst_15298 = state_15339[15];
                                                      var inst_15292 = state_15339[11];
                                                      var inst_15320 = inst_15292.call(null, inst_15298);
                                                      var inst_15321 = cljs.core.not.call(null, inst_15320);
                                                      var state_15339__$1 = state_15339;
                                                      var statearr_15376_15415 = state_15339__$1;
                                                      statearr_15376_15415[2] = inst_15321;
                                                      statearr_15376_15415[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_15340 === 24) {
                                                        var inst_15318 = state_15339[18];
                                                        var state_15339__$1 = state_15339;
                                                        var statearr_15377_15416 = state_15339__$1;
                                                        statearr_15377_15416[2] = inst_15318;
                                                        statearr_15377_15416[1] = 25;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_15340 === 25) {
                                                          var inst_15324 = state_15339[2];
                                                          var state_15339__$1 = state_15339;
                                                          var statearr_15378_15417 = state_15339__$1;
                                                          statearr_15378_15417[2] = inst_15324;
                                                          statearr_15378_15417[1] = 22;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_15340 === 26) {
                                                            var inst_15297 = state_15339[14];
                                                            var state_15339__$1 = state_15339;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15339__$1, 29, out, inst_15297)
                                                          }else {
                                                            if(state_val_15340 === 27) {
                                                              var state_15339__$1 = state_15339;
                                                              var statearr_15379_15418 = state_15339__$1;
                                                              statearr_15379_15418[2] = null;
                                                              statearr_15379_15418[1] = 28;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_15340 === 28) {
                                                                var inst_15290 = state_15339[10];
                                                                var inst_15332 = state_15339[2];
                                                                var inst_15282 = inst_15290;
                                                                var state_15339__$1 = function() {
                                                                  var statearr_15380 = state_15339;
                                                                  statearr_15380[19] = inst_15332;
                                                                  statearr_15380[8] = inst_15282;
                                                                  return statearr_15380
                                                                }();
                                                                var statearr_15381_15419 = state_15339__$1;
                                                                statearr_15381_15419[2] = null;
                                                                statearr_15381_15419[1] = 5;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_15340 === 29) {
                                                                  var inst_15329 = state_15339[2];
                                                                  var state_15339__$1 = state_15339;
                                                                  var statearr_15382_15420 = state_15339__$1;
                                                                  statearr_15382_15420[2] = inst_15329;
                                                                  statearr_15382_15420[1] = 28;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_15384 = new Array(20);
            statearr_15384[0] = state_machine__5156__auto__;
            statearr_15384[1] = 1;
            return statearr_15384
          };
          var state_machine__5156__auto____1 = function(state_15339) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_15339);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_15339) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_15339)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_15385 = f__5206__auto__.call(null);
      statearr_15385[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___15386;
      return statearr_15385
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3941__auto__ = p;
    if(and__3941__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3941__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3394__auto__ = p == null ? null : p;
    return function() {
      var or__3943__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3941__auto__ = p;
    if(and__3941__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3394__auto__ = p == null ? null : p;
    return function() {
      var or__3943__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3941__auto__ = p;
      if(and__3941__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3394__auto__ = p == null ? null : p;
      return function() {
        var or__3943__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3941__auto__ = p;
      if(and__3941__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3394__auto__ = p == null ? null : p;
      return function() {
        var or__3943__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3943__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3943__auto__, mults) {
            return function(p1__15421_SHARP_) {
              if(cljs.core.truth_(p1__15421_SHARP_.call(null, topic))) {
                return p1__15421_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__15421_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3943__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t15545 !== "undefined") {
      }else {
        goog.provide("cljs.core.async.t15545");
        cljs.core.async.t15545 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta15546) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta15546 = meta15546;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t15545.cljs$lang$type = true;
        cljs.core.async.t15545.cljs$lang$ctorStr = "cljs.core.async/t15545";
        cljs.core.async.t15545.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
            return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t15545")
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t15545.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t15545.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_15547) {
            var self__ = this;
            return self__.meta15546
          }
        }(mults, ensure_mult);
        cljs.core.async.t15545.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_15547, meta15546__$1) {
            var self__ = this;
            return new cljs.core.async.t15545(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta15546__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t15545 = function(mults, ensure_mult) {
          return function __GT_t15545(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta15546) {
            return new cljs.core.async.t15545(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta15546)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t15545(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__5205__auto___15668 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_15620) {
          var state_val_15621 = state_15620[1];
          if(state_val_15621 === 1) {
            var state_15620__$1 = state_15620;
            var statearr_15622_15669 = state_15620__$1;
            statearr_15622_15669[2] = null;
            statearr_15622_15669[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15621 === 2) {
              var state_15620__$1 = state_15620;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15620__$1, 4, ch)
            }else {
              if(state_val_15621 === 3) {
                var inst_15618 = state_15620[2];
                var state_15620__$1 = state_15620;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15620__$1, inst_15618)
              }else {
                if(state_val_15621 === 4) {
                  var inst_15550 = state_15620[5];
                  var inst_15550__$1 = state_15620[2];
                  var inst_15551 = inst_15550__$1 == null;
                  var state_15620__$1 = function() {
                    var statearr_15623 = state_15620;
                    statearr_15623[5] = inst_15550__$1;
                    return statearr_15623
                  }();
                  if(cljs.core.truth_(inst_15551)) {
                    var statearr_15624_15670 = state_15620__$1;
                    statearr_15624_15670[1] = 5
                  }else {
                    var statearr_15625_15671 = state_15620__$1;
                    statearr_15625_15671[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15621 === 5) {
                    var inst_15557 = cljs.core.deref.call(null, mults);
                    var inst_15558 = cljs.core.vals.call(null, inst_15557);
                    var inst_15559 = cljs.core.seq.call(null, inst_15558);
                    var inst_15560 = inst_15559;
                    var inst_15561 = null;
                    var inst_15562 = 0;
                    var inst_15563 = 0;
                    var state_15620__$1 = function() {
                      var statearr_15626 = state_15620;
                      statearr_15626[6] = inst_15562;
                      statearr_15626[7] = inst_15563;
                      statearr_15626[8] = inst_15561;
                      statearr_15626[9] = inst_15560;
                      return statearr_15626
                    }();
                    var statearr_15627_15672 = state_15620__$1;
                    statearr_15627_15672[2] = null;
                    statearr_15627_15672[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15621 === 6) {
                      var inst_15598 = state_15620[10];
                      var inst_15600 = state_15620[11];
                      var inst_15550 = state_15620[5];
                      var inst_15598__$1 = topic_fn.call(null, inst_15550);
                      var inst_15599 = cljs.core.deref.call(null, mults);
                      var inst_15600__$1 = cljs.core.get.call(null, inst_15599, inst_15598__$1);
                      var state_15620__$1 = function() {
                        var statearr_15628 = state_15620;
                        statearr_15628[10] = inst_15598__$1;
                        statearr_15628[11] = inst_15600__$1;
                        return statearr_15628
                      }();
                      if(cljs.core.truth_(inst_15600__$1)) {
                        var statearr_15629_15673 = state_15620__$1;
                        statearr_15629_15673[1] = 19
                      }else {
                        var statearr_15630_15674 = state_15620__$1;
                        statearr_15630_15674[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15621 === 7) {
                        var inst_15616 = state_15620[2];
                        var state_15620__$1 = state_15620;
                        var statearr_15631_15675 = state_15620__$1;
                        statearr_15631_15675[2] = inst_15616;
                        statearr_15631_15675[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15621 === 8) {
                          var inst_15562 = state_15620[6];
                          var inst_15563 = state_15620[7];
                          var inst_15565 = inst_15563 < inst_15562;
                          var inst_15566 = inst_15565;
                          var state_15620__$1 = state_15620;
                          if(cljs.core.truth_(inst_15566)) {
                            var statearr_15635_15676 = state_15620__$1;
                            statearr_15635_15676[1] = 10
                          }else {
                            var statearr_15636_15677 = state_15620__$1;
                            statearr_15636_15677[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15621 === 9) {
                            var inst_15596 = state_15620[2];
                            var state_15620__$1 = state_15620;
                            var statearr_15637_15678 = state_15620__$1;
                            statearr_15637_15678[2] = inst_15596;
                            statearr_15637_15678[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15621 === 10) {
                              var inst_15562 = state_15620[6];
                              var inst_15563 = state_15620[7];
                              var inst_15561 = state_15620[8];
                              var inst_15560 = state_15620[9];
                              var inst_15568 = cljs.core._nth.call(null, inst_15561, inst_15563);
                              var inst_15569 = cljs.core.async.muxch_STAR_.call(null, inst_15568);
                              var inst_15570 = cljs.core.async.close_BANG_.call(null, inst_15569);
                              var inst_15571 = inst_15563 + 1;
                              var tmp15632 = inst_15562;
                              var tmp15633 = inst_15561;
                              var tmp15634 = inst_15560;
                              var inst_15560__$1 = tmp15634;
                              var inst_15561__$1 = tmp15633;
                              var inst_15562__$1 = tmp15632;
                              var inst_15563__$1 = inst_15571;
                              var state_15620__$1 = function() {
                                var statearr_15638 = state_15620;
                                statearr_15638[12] = inst_15570;
                                statearr_15638[6] = inst_15562__$1;
                                statearr_15638[7] = inst_15563__$1;
                                statearr_15638[8] = inst_15561__$1;
                                statearr_15638[9] = inst_15560__$1;
                                return statearr_15638
                              }();
                              var statearr_15639_15679 = state_15620__$1;
                              statearr_15639_15679[2] = null;
                              statearr_15639_15679[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15621 === 11) {
                                var inst_15574 = state_15620[13];
                                var inst_15560 = state_15620[9];
                                var inst_15574__$1 = cljs.core.seq.call(null, inst_15560);
                                var state_15620__$1 = function() {
                                  var statearr_15640 = state_15620;
                                  statearr_15640[13] = inst_15574__$1;
                                  return statearr_15640
                                }();
                                if(inst_15574__$1) {
                                  var statearr_15641_15680 = state_15620__$1;
                                  statearr_15641_15680[1] = 13
                                }else {
                                  var statearr_15642_15681 = state_15620__$1;
                                  statearr_15642_15681[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_15621 === 12) {
                                  var inst_15594 = state_15620[2];
                                  var state_15620__$1 = state_15620;
                                  var statearr_15643_15682 = state_15620__$1;
                                  statearr_15643_15682[2] = inst_15594;
                                  statearr_15643_15682[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15621 === 13) {
                                    var inst_15574 = state_15620[13];
                                    var inst_15576 = cljs.core.chunked_seq_QMARK_.call(null, inst_15574);
                                    var state_15620__$1 = state_15620;
                                    if(inst_15576) {
                                      var statearr_15644_15683 = state_15620__$1;
                                      statearr_15644_15683[1] = 16
                                    }else {
                                      var statearr_15645_15684 = state_15620__$1;
                                      statearr_15645_15684[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15621 === 14) {
                                      var state_15620__$1 = state_15620;
                                      var statearr_15646_15685 = state_15620__$1;
                                      statearr_15646_15685[2] = null;
                                      statearr_15646_15685[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_15621 === 15) {
                                        var inst_15592 = state_15620[2];
                                        var state_15620__$1 = state_15620;
                                        var statearr_15647_15686 = state_15620__$1;
                                        statearr_15647_15686[2] = inst_15592;
                                        statearr_15647_15686[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15621 === 16) {
                                          var inst_15574 = state_15620[13];
                                          var inst_15578 = cljs.core.chunk_first.call(null, inst_15574);
                                          var inst_15579 = cljs.core.chunk_rest.call(null, inst_15574);
                                          var inst_15580 = cljs.core.count.call(null, inst_15578);
                                          var inst_15560 = inst_15579;
                                          var inst_15561 = inst_15578;
                                          var inst_15562 = inst_15580;
                                          var inst_15563 = 0;
                                          var state_15620__$1 = function() {
                                            var statearr_15648 = state_15620;
                                            statearr_15648[6] = inst_15562;
                                            statearr_15648[7] = inst_15563;
                                            statearr_15648[8] = inst_15561;
                                            statearr_15648[9] = inst_15560;
                                            return statearr_15648
                                          }();
                                          var statearr_15649_15687 = state_15620__$1;
                                          statearr_15649_15687[2] = null;
                                          statearr_15649_15687[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_15621 === 17) {
                                            var inst_15574 = state_15620[13];
                                            var inst_15583 = cljs.core.first.call(null, inst_15574);
                                            var inst_15584 = cljs.core.async.muxch_STAR_.call(null, inst_15583);
                                            var inst_15585 = cljs.core.async.close_BANG_.call(null, inst_15584);
                                            var inst_15586 = cljs.core.next.call(null, inst_15574);
                                            var inst_15560 = inst_15586;
                                            var inst_15561 = null;
                                            var inst_15562 = 0;
                                            var inst_15563 = 0;
                                            var state_15620__$1 = function() {
                                              var statearr_15650 = state_15620;
                                              statearr_15650[14] = inst_15585;
                                              statearr_15650[6] = inst_15562;
                                              statearr_15650[7] = inst_15563;
                                              statearr_15650[8] = inst_15561;
                                              statearr_15650[9] = inst_15560;
                                              return statearr_15650
                                            }();
                                            var statearr_15651_15688 = state_15620__$1;
                                            statearr_15651_15688[2] = null;
                                            statearr_15651_15688[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_15621 === 18) {
                                              var inst_15589 = state_15620[2];
                                              var state_15620__$1 = state_15620;
                                              var statearr_15652_15689 = state_15620__$1;
                                              statearr_15652_15689[2] = inst_15589;
                                              statearr_15652_15689[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_15621 === 19) {
                                                var state_15620__$1 = state_15620;
                                                var statearr_15653_15690 = state_15620__$1;
                                                statearr_15653_15690[2] = null;
                                                statearr_15653_15690[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_15621 === 20) {
                                                  var state_15620__$1 = state_15620;
                                                  var statearr_15654_15691 = state_15620__$1;
                                                  statearr_15654_15691[2] = null;
                                                  statearr_15654_15691[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_15621 === 21) {
                                                    var inst_15613 = state_15620[2];
                                                    var state_15620__$1 = function() {
                                                      var statearr_15655 = state_15620;
                                                      statearr_15655[15] = inst_15613;
                                                      return statearr_15655
                                                    }();
                                                    var statearr_15656_15692 = state_15620__$1;
                                                    statearr_15656_15692[2] = null;
                                                    statearr_15656_15692[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_15621 === 22) {
                                                      var inst_15610 = state_15620[2];
                                                      var state_15620__$1 = state_15620;
                                                      var statearr_15657_15693 = state_15620__$1;
                                                      statearr_15657_15693[2] = inst_15610;
                                                      statearr_15657_15693[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_15621 === 23) {
                                                        var inst_15598 = state_15620[10];
                                                        var inst_15602 = state_15620[2];
                                                        var inst_15603 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_15598);
                                                        var state_15620__$1 = function() {
                                                          var statearr_15658 = state_15620;
                                                          statearr_15658[16] = inst_15602;
                                                          return statearr_15658
                                                        }();
                                                        var statearr_15659_15694 = state_15620__$1;
                                                        statearr_15659_15694[2] = inst_15603;
                                                        statearr_15659_15694[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_15621 === 24) {
                                                          try {
                                                            var inst_15600 = state_15620[11];
                                                            var inst_15550 = state_15620[5];
                                                            var inst_15606 = cljs.core.async.muxch_STAR_.call(null, inst_15600);
                                                            var state_15620__$1 = state_15620;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15620__$1, 25, inst_15606, inst_15550)
                                                          }catch(e15660) {
                                                            if(e15660 instanceof Object) {
                                                              var ex__5149__auto__ = e15660;
                                                              var statearr_15661_15695 = state_15620;
                                                              statearr_15661_15695[1] = 23;
                                                              statearr_15661_15695[2] = ex__5149__auto__;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e15660;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_15621 === 25) {
                                                            try {
                                                              var inst_15608 = state_15620[2];
                                                              var state_15620__$1 = state_15620;
                                                              var statearr_15664_15696 = state_15620__$1;
                                                              statearr_15664_15696[2] = inst_15608;
                                                              statearr_15664_15696[1] = 22;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }catch(e15662) {
                                                              if(e15662 instanceof Object) {
                                                                var ex__5149__auto__ = e15662;
                                                                var statearr_15663_15697 = state_15620;
                                                                statearr_15663_15697[1] = 23;
                                                                statearr_15663_15697[2] = ex__5149__auto__;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e15662;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_15666 = new Array(17);
              statearr_15666[0] = state_machine__5156__auto__;
              statearr_15666[1] = 1;
              return statearr_15666
            };
            var state_machine__5156__auto____1 = function(state_15620) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_15620);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_15620) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_15620)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_15667 = f__5206__auto__.call(null);
        statearr_15667[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___15668;
        return statearr_15667
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5205__auto___15828 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_15800) {
          var state_val_15801 = state_15800[1];
          if(state_val_15801 === 1) {
            var state_15800__$1 = state_15800;
            var statearr_15802_15829 = state_15800__$1;
            statearr_15802_15829[2] = null;
            statearr_15802_15829[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15801 === 2) {
              var inst_15764 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_15765 = 0;
              var state_15800__$1 = function() {
                var statearr_15803 = state_15800;
                statearr_15803[5] = inst_15765;
                statearr_15803[6] = inst_15764;
                return statearr_15803
              }();
              var statearr_15804_15830 = state_15800__$1;
              statearr_15804_15830[2] = null;
              statearr_15804_15830[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15801 === 3) {
                var inst_15798 = state_15800[2];
                var state_15800__$1 = state_15800;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15800__$1, inst_15798)
              }else {
                if(state_val_15801 === 4) {
                  var inst_15765 = state_15800[5];
                  var inst_15767 = inst_15765 < cnt;
                  var state_15800__$1 = state_15800;
                  if(cljs.core.truth_(inst_15767)) {
                    var statearr_15805_15831 = state_15800__$1;
                    statearr_15805_15831[1] = 6
                  }else {
                    var statearr_15806_15832 = state_15800__$1;
                    statearr_15806_15832[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15801 === 5) {
                    var inst_15784 = state_15800[2];
                    var state_15800__$1 = function() {
                      var statearr_15807 = state_15800;
                      statearr_15807[7] = inst_15784;
                      return statearr_15807
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15800__$1, 12, dchan)
                  }else {
                    if(state_val_15801 === 6) {
                      var state_15800__$1 = state_15800;
                      var statearr_15808_15833 = state_15800__$1;
                      statearr_15808_15833[2] = null;
                      statearr_15808_15833[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15801 === 7) {
                        var state_15800__$1 = state_15800;
                        var statearr_15809_15834 = state_15800__$1;
                        statearr_15809_15834[2] = null;
                        statearr_15809_15834[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15801 === 8) {
                          var inst_15782 = state_15800[2];
                          var state_15800__$1 = state_15800;
                          var statearr_15810_15835 = state_15800__$1;
                          statearr_15810_15835[2] = inst_15782;
                          statearr_15810_15835[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15801 === 9) {
                            var inst_15765 = state_15800[5];
                            var inst_15777 = state_15800[2];
                            var inst_15778 = inst_15765 + 1;
                            var inst_15765__$1 = inst_15778;
                            var state_15800__$1 = function() {
                              var statearr_15811 = state_15800;
                              statearr_15811[8] = inst_15777;
                              statearr_15811[5] = inst_15765__$1;
                              return statearr_15811
                            }();
                            var statearr_15812_15836 = state_15800__$1;
                            statearr_15812_15836[2] = null;
                            statearr_15812_15836[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15801 === 10) {
                              var inst_15769 = state_15800[2];
                              var inst_15770 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_15800__$1 = function() {
                                var statearr_15813 = state_15800;
                                statearr_15813[9] = inst_15769;
                                return statearr_15813
                              }();
                              var statearr_15814_15837 = state_15800__$1;
                              statearr_15814_15837[2] = inst_15770;
                              statearr_15814_15837[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15801 === 11) {
                                try {
                                  var inst_15765 = state_15800[5];
                                  var inst_15773 = chs__$1.call(null, inst_15765);
                                  var inst_15774 = done.call(null, inst_15765);
                                  var inst_15775 = cljs.core.async.take_BANG_.call(null, inst_15773, inst_15774);
                                  var state_15800__$1 = state_15800;
                                  var statearr_15817_15838 = state_15800__$1;
                                  statearr_15817_15838[2] = inst_15775;
                                  statearr_15817_15838[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }catch(e15815) {
                                  if(e15815 instanceof Object) {
                                    var ex__5149__auto__ = e15815;
                                    var statearr_15816_15839 = state_15800;
                                    statearr_15816_15839[1] = 10;
                                    statearr_15816_15839[2] = ex__5149__auto__;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e15815;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_15801 === 12) {
                                  var inst_15786 = state_15800[10];
                                  var inst_15786__$1 = state_15800[2];
                                  var inst_15787 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_15786__$1);
                                  var state_15800__$1 = function() {
                                    var statearr_15818 = state_15800;
                                    statearr_15818[10] = inst_15786__$1;
                                    return statearr_15818
                                  }();
                                  if(cljs.core.truth_(inst_15787)) {
                                    var statearr_15819_15840 = state_15800__$1;
                                    statearr_15819_15840[1] = 13
                                  }else {
                                    var statearr_15820_15841 = state_15800__$1;
                                    statearr_15820_15841[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15801 === 13) {
                                    var inst_15789 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_15800__$1 = state_15800;
                                    var statearr_15821_15842 = state_15800__$1;
                                    statearr_15821_15842[2] = inst_15789;
                                    statearr_15821_15842[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15801 === 14) {
                                      var inst_15786 = state_15800[10];
                                      var inst_15791 = cljs.core.apply.call(null, f, inst_15786);
                                      var state_15800__$1 = state_15800;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15800__$1, 16, out, inst_15791)
                                    }else {
                                      if(state_val_15801 === 15) {
                                        var inst_15796 = state_15800[2];
                                        var state_15800__$1 = state_15800;
                                        var statearr_15822_15843 = state_15800__$1;
                                        statearr_15822_15843[2] = inst_15796;
                                        statearr_15822_15843[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15801 === 16) {
                                          var inst_15793 = state_15800[2];
                                          var state_15800__$1 = function() {
                                            var statearr_15823 = state_15800;
                                            statearr_15823[11] = inst_15793;
                                            return statearr_15823
                                          }();
                                          var statearr_15824_15844 = state_15800__$1;
                                          statearr_15824_15844[2] = null;
                                          statearr_15824_15844[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_15826 = new Array(12);
              statearr_15826[0] = state_machine__5156__auto__;
              statearr_15826[1] = 1;
              return statearr_15826
            };
            var state_machine__5156__auto____1 = function(state_15800) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_15800);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_15800) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_15800)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_15827 = f__5206__auto__.call(null);
        statearr_15827[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___15828;
        return statearr_15827
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5205__auto___15944 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_15924) {
          var state_val_15925 = state_15924[1];
          if(state_val_15925 === 1) {
            var inst_15895 = cljs.core.vec.call(null, chs);
            var inst_15896 = inst_15895;
            var state_15924__$1 = function() {
              var statearr_15926 = state_15924;
              statearr_15926[5] = inst_15896;
              return statearr_15926
            }();
            var statearr_15927_15945 = state_15924__$1;
            statearr_15927_15945[2] = null;
            statearr_15927_15945[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15925 === 2) {
              var inst_15896 = state_15924[5];
              var inst_15898 = cljs.core.count.call(null, inst_15896);
              var inst_15899 = inst_15898 > 0;
              var state_15924__$1 = state_15924;
              if(cljs.core.truth_(inst_15899)) {
                var statearr_15928_15946 = state_15924__$1;
                statearr_15928_15946[1] = 4
              }else {
                var statearr_15929_15947 = state_15924__$1;
                statearr_15929_15947[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15925 === 3) {
                var inst_15922 = state_15924[2];
                var state_15924__$1 = state_15924;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15924__$1, inst_15922)
              }else {
                if(state_val_15925 === 4) {
                  var inst_15896 = state_15924[5];
                  var state_15924__$1 = state_15924;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_15924__$1, 7, inst_15896)
                }else {
                  if(state_val_15925 === 5) {
                    var inst_15918 = cljs.core.async.close_BANG_.call(null, out);
                    var state_15924__$1 = state_15924;
                    var statearr_15930_15948 = state_15924__$1;
                    statearr_15930_15948[2] = inst_15918;
                    statearr_15930_15948[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15925 === 6) {
                      var inst_15920 = state_15924[2];
                      var state_15924__$1 = state_15924;
                      var statearr_15931_15949 = state_15924__$1;
                      statearr_15931_15949[2] = inst_15920;
                      statearr_15931_15949[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15925 === 7) {
                        var inst_15904 = state_15924[6];
                        var inst_15903 = state_15924[7];
                        var inst_15903__$1 = state_15924[2];
                        var inst_15904__$1 = cljs.core.nth.call(null, inst_15903__$1, 0, null);
                        var inst_15905 = cljs.core.nth.call(null, inst_15903__$1, 1, null);
                        var inst_15906 = inst_15904__$1 == null;
                        var state_15924__$1 = function() {
                          var statearr_15932 = state_15924;
                          statearr_15932[8] = inst_15905;
                          statearr_15932[6] = inst_15904__$1;
                          statearr_15932[7] = inst_15903__$1;
                          return statearr_15932
                        }();
                        if(cljs.core.truth_(inst_15906)) {
                          var statearr_15933_15950 = state_15924__$1;
                          statearr_15933_15950[1] = 8
                        }else {
                          var statearr_15934_15951 = state_15924__$1;
                          statearr_15934_15951[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15925 === 8) {
                          var inst_15905 = state_15924[8];
                          var inst_15904 = state_15924[6];
                          var inst_15896 = state_15924[5];
                          var inst_15903 = state_15924[7];
                          var inst_15908 = function() {
                            var c = inst_15905;
                            var v = inst_15904;
                            var vec__15901 = inst_15903;
                            var cs = inst_15896;
                            return function(c, v, vec__15901, cs, inst_15905, inst_15904, inst_15896, inst_15903, state_val_15925) {
                              return function(p1__15845_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__15845_SHARP_)
                              }
                            }(c, v, vec__15901, cs, inst_15905, inst_15904, inst_15896, inst_15903, state_val_15925)
                          }();
                          var inst_15909 = cljs.core.filterv.call(null, inst_15908, inst_15896);
                          var inst_15896__$1 = inst_15909;
                          var state_15924__$1 = function() {
                            var statearr_15935 = state_15924;
                            statearr_15935[5] = inst_15896__$1;
                            return statearr_15935
                          }();
                          var statearr_15936_15952 = state_15924__$1;
                          statearr_15936_15952[2] = null;
                          statearr_15936_15952[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15925 === 9) {
                            var inst_15904 = state_15924[6];
                            var state_15924__$1 = state_15924;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15924__$1, 11, out, inst_15904)
                          }else {
                            if(state_val_15925 === 10) {
                              var inst_15916 = state_15924[2];
                              var state_15924__$1 = state_15924;
                              var statearr_15938_15953 = state_15924__$1;
                              statearr_15938_15953[2] = inst_15916;
                              statearr_15938_15953[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15925 === 11) {
                                var inst_15896 = state_15924[5];
                                var inst_15913 = state_15924[2];
                                var tmp15937 = inst_15896;
                                var inst_15896__$1 = tmp15937;
                                var state_15924__$1 = function() {
                                  var statearr_15939 = state_15924;
                                  statearr_15939[5] = inst_15896__$1;
                                  statearr_15939[9] = inst_15913;
                                  return statearr_15939
                                }();
                                var statearr_15940_15954 = state_15924__$1;
                                statearr_15940_15954[2] = null;
                                statearr_15940_15954[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_15942 = new Array(10);
              statearr_15942[0] = state_machine__5156__auto__;
              statearr_15942[1] = 1;
              return statearr_15942
            };
            var state_machine__5156__auto____1 = function(state_15924) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_15924);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_15924) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_15924)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_15943 = f__5206__auto__.call(null);
        statearr_15943[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___15944;
        return statearr_15943
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__13174) {
  var vec__13176 = p__13174;
  var k = cljs.core.nth.call(null, vec__13176, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__13176, 1);
  if(cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3941__auto__ = ks;
      if(cljs.core.truth_(and__3941__auto__)) {
        return dissoc_in.call(null, m.call(null, k), ks)
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res)
    }else {
      var res = cljs.core.dissoc.call(null, m, k);
      if(cljs.core.empty_QMARK_.call(null, res)) {
        return null
      }else {
        return res
      }
    }
  }else {
    return null
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like)
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__13564 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__13564;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(function() {
    var or__3943__auto__ = limit <= 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return limit >= 2 + cljs.core.count.call(null, s)
    }
  }()) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__13568 = cljs.core._EQ_;
    var expr__13569 = limit;
    if(pred__13568.call(null, 1, expr__13569)) {
      return cljs.core.vector.call(null, s)
    }else {
      if(pred__13568.call(null, 2, expr__13569)) {
        return cljs.core.vector.call(null, "", s)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__13571 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__13572 = limit__$1 - 1;
            var G__13573 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__13571;
            limit__$1 = G__13572;
            parts = G__13573;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__13574 = index - 1;
        index = G__13574;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___13575 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___13575)) {
        var replacement_13576 = temp__4090__auto___13575;
        buffer.append([cljs.core.str(replacement_13576)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__13577 = index + 1;
      index = G__13577;
      continue
    }
    break
  }
};
goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3941__auto__ = function() {
    var or__3943__auto__ = idx === 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return" " === class_name.charAt(idx - 1)
    }
  }();
  if(cljs.core.truth_(and__3941__auto__)) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if(stop <= total_len) {
      var or__3943__auto__ = stop === total_len;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return" " === class_name.charAt(stop)
      }
    }else {
      return null
    }
  }else {
    return and__3941__auto__
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while(true) {
    var i = class_name.indexOf(class$, start_from);
    if(i >= 0) {
      if(dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i
      }else {
        var G__13728 = i + class$.length;
        start_from = G__13728;
        continue
      }
    }else {
      return null
    }
    break
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1)
  }else {
    var temp__4092__auto__ = elem__$1.className;
    if(cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if(cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if(cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___13753 = elem__$1.classList;
      if(cljs.core.truth_(temp__4090__auto___13753)) {
        var class_list_13754 = temp__4090__auto___13753;
        var seq__13741_13755 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__13742_13756 = null;
        var count__13743_13757 = 0;
        var i__13744_13758 = 0;
        while(true) {
          if(i__13744_13758 < count__13743_13757) {
            var class_13759 = cljs.core._nth.call(null, chunk__13742_13756, i__13744_13758);
            class_list_13754.add(class_13759);
            var G__13760 = seq__13741_13755;
            var G__13761 = chunk__13742_13756;
            var G__13762 = count__13743_13757;
            var G__13763 = i__13744_13758 + 1;
            seq__13741_13755 = G__13760;
            chunk__13742_13756 = G__13761;
            count__13743_13757 = G__13762;
            i__13744_13758 = G__13763;
            continue
          }else {
            var temp__4092__auto___13764 = cljs.core.seq.call(null, seq__13741_13755);
            if(temp__4092__auto___13764) {
              var seq__13741_13765__$1 = temp__4092__auto___13764;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13741_13765__$1)) {
                var c__3525__auto___13766 = cljs.core.chunk_first.call(null, seq__13741_13765__$1);
                var G__13767 = cljs.core.chunk_rest.call(null, seq__13741_13765__$1);
                var G__13768 = c__3525__auto___13766;
                var G__13769 = cljs.core.count.call(null, c__3525__auto___13766);
                var G__13770 = 0;
                seq__13741_13755 = G__13767;
                chunk__13742_13756 = G__13768;
                count__13743_13757 = G__13769;
                i__13744_13758 = G__13770;
                continue
              }else {
                var class_13771 = cljs.core.first.call(null, seq__13741_13765__$1);
                class_list_13754.add(class_13771);
                var G__13772 = cljs.core.next.call(null, seq__13741_13765__$1);
                var G__13773 = null;
                var G__13774 = 0;
                var G__13775 = 0;
                seq__13741_13755 = G__13772;
                chunk__13742_13756 = G__13773;
                count__13743_13757 = G__13774;
                i__13744_13758 = G__13775;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        var class_name_13776 = elem__$1.className;
        var seq__13745_13777 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__13746_13778 = null;
        var count__13747_13779 = 0;
        var i__13748_13780 = 0;
        while(true) {
          if(i__13748_13780 < count__13747_13779) {
            var class_13781 = cljs.core._nth.call(null, chunk__13746_13778, i__13748_13780);
            if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_13776, class_13781))) {
            }else {
              elem__$1.className = class_name_13776 === "" ? class_13781 : [cljs.core.str(class_name_13776), cljs.core.str(" "), cljs.core.str(class_13781)].join("")
            }
            var G__13782 = seq__13745_13777;
            var G__13783 = chunk__13746_13778;
            var G__13784 = count__13747_13779;
            var G__13785 = i__13748_13780 + 1;
            seq__13745_13777 = G__13782;
            chunk__13746_13778 = G__13783;
            count__13747_13779 = G__13784;
            i__13748_13780 = G__13785;
            continue
          }else {
            var temp__4092__auto___13786 = cljs.core.seq.call(null, seq__13745_13777);
            if(temp__4092__auto___13786) {
              var seq__13745_13787__$1 = temp__4092__auto___13786;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13745_13787__$1)) {
                var c__3525__auto___13788 = cljs.core.chunk_first.call(null, seq__13745_13787__$1);
                var G__13789 = cljs.core.chunk_rest.call(null, seq__13745_13787__$1);
                var G__13790 = c__3525__auto___13788;
                var G__13791 = cljs.core.count.call(null, c__3525__auto___13788);
                var G__13792 = 0;
                seq__13745_13777 = G__13789;
                chunk__13746_13778 = G__13790;
                count__13747_13779 = G__13791;
                i__13748_13780 = G__13792;
                continue
              }else {
                var class_13793 = cljs.core.first.call(null, seq__13745_13787__$1);
                if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_13776, class_13793))) {
                }else {
                  elem__$1.className = class_name_13776 === "" ? class_13793 : [cljs.core.str(class_name_13776), cljs.core.str(" "), cljs.core.str(class_13793)].join("")
                }
                var G__13794 = cljs.core.next.call(null, seq__13745_13787__$1);
                var G__13795 = null;
                var G__13796 = 0;
                var G__13797 = 0;
                seq__13745_13777 = G__13794;
                chunk__13746_13778 = G__13795;
                count__13747_13779 = G__13796;
                i__13748_13780 = G__13797;
                continue
              }
            }else {
            }
          }
          break
        }
      }
    }else {
    }
    return elem__$1
  };
  var add_class_BANG___3 = function() {
    var G__13798__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__13749_13799 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__13750_13800 = null;
      var count__13751_13801 = 0;
      var i__13752_13802 = 0;
      while(true) {
        if(i__13752_13802 < count__13751_13801) {
          var c_13803 = cljs.core._nth.call(null, chunk__13750_13800, i__13752_13802);
          add_class_BANG_.call(null, elem__$1, c_13803);
          var G__13804 = seq__13749_13799;
          var G__13805 = chunk__13750_13800;
          var G__13806 = count__13751_13801;
          var G__13807 = i__13752_13802 + 1;
          seq__13749_13799 = G__13804;
          chunk__13750_13800 = G__13805;
          count__13751_13801 = G__13806;
          i__13752_13802 = G__13807;
          continue
        }else {
          var temp__4092__auto___13808 = cljs.core.seq.call(null, seq__13749_13799);
          if(temp__4092__auto___13808) {
            var seq__13749_13809__$1 = temp__4092__auto___13808;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13749_13809__$1)) {
              var c__3525__auto___13810 = cljs.core.chunk_first.call(null, seq__13749_13809__$1);
              var G__13811 = cljs.core.chunk_rest.call(null, seq__13749_13809__$1);
              var G__13812 = c__3525__auto___13810;
              var G__13813 = cljs.core.count.call(null, c__3525__auto___13810);
              var G__13814 = 0;
              seq__13749_13799 = G__13811;
              chunk__13750_13800 = G__13812;
              count__13751_13801 = G__13813;
              i__13752_13802 = G__13814;
              continue
            }else {
              var c_13815 = cljs.core.first.call(null, seq__13749_13809__$1);
              add_class_BANG_.call(null, elem__$1, c_13815);
              var G__13816 = cljs.core.next.call(null, seq__13749_13809__$1);
              var G__13817 = null;
              var G__13818 = 0;
              var G__13819 = 0;
              seq__13749_13799 = G__13816;
              chunk__13750_13800 = G__13817;
              count__13751_13801 = G__13818;
              i__13752_13802 = G__13819;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__13798 = function(elem, classes, var_args) {
      var more_classes = null;
      if(arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13798__delegate.call(this, elem, classes, more_classes)
    };
    G__13798.cljs$lang$maxFixedArity = 2;
    G__13798.cljs$lang$applyTo = function(arglist__13820) {
      var elem = cljs.core.first(arglist__13820);
      arglist__13820 = cljs.core.next(arglist__13820);
      var classes = cljs.core.first(arglist__13820);
      var more_classes = cljs.core.rest(arglist__13820);
      return G__13798__delegate(elem, classes, more_classes)
    };
    G__13798.cljs$core$IFn$_invoke$arity$variadic = G__13798__delegate;
    return G__13798
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while(true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__13821 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("")
      }();
      class_name = G__13821;
      continue
    }else {
      return class_name
    }
    break
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___13830 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___13830)) {
      var class_list_13831 = temp__4090__auto___13830;
      class_list_13831.remove(class$__$1)
    }else {
      var class_name_13832 = elem__$1.className;
      var new_class_name_13833 = dommy.attrs.remove_class_str.call(null, class_name_13832, class$__$1);
      if(class_name_13832 === new_class_name_13833) {
      }else {
        elem__$1.className = new_class_name_13833
      }
    }
    return elem__$1
  };
  var remove_class_BANG___3 = function() {
    var G__13834__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__13826 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__13827 = null;
      var count__13828 = 0;
      var i__13829 = 0;
      while(true) {
        if(i__13829 < count__13828) {
          var c = cljs.core._nth.call(null, chunk__13827, i__13829);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__13835 = seq__13826;
          var G__13836 = chunk__13827;
          var G__13837 = count__13828;
          var G__13838 = i__13829 + 1;
          seq__13826 = G__13835;
          chunk__13827 = G__13836;
          count__13828 = G__13837;
          i__13829 = G__13838;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__13826);
          if(temp__4092__auto__) {
            var seq__13826__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13826__$1)) {
              var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__13826__$1);
              var G__13839 = cljs.core.chunk_rest.call(null, seq__13826__$1);
              var G__13840 = c__3525__auto__;
              var G__13841 = cljs.core.count.call(null, c__3525__auto__);
              var G__13842 = 0;
              seq__13826 = G__13839;
              chunk__13827 = G__13840;
              count__13828 = G__13841;
              i__13829 = G__13842;
              continue
            }else {
              var c = cljs.core.first.call(null, seq__13826__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__13843 = cljs.core.next.call(null, seq__13826__$1);
              var G__13844 = null;
              var G__13845 = 0;
              var G__13846 = 0;
              seq__13826 = G__13843;
              chunk__13827 = G__13844;
              count__13828 = G__13845;
              i__13829 = G__13846;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__13834 = function(elem, class$, var_args) {
      var classes = null;
      if(arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13834__delegate.call(this, elem, class$, classes)
    };
    G__13834.cljs$lang$maxFixedArity = 2;
    G__13834.cljs$lang$applyTo = function(arglist__13847) {
      var elem = cljs.core.first(arglist__13847);
      arglist__13847 = cljs.core.next(arglist__13847);
      var class$ = cljs.core.first(arglist__13847);
      var classes = cljs.core.rest(arglist__13847);
      return G__13834__delegate(elem, class$, classes)
    };
    G__13834.cljs$core$IFn$_invoke$arity$variadic = G__13834__delegate;
    return G__13834
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var temp__4090__auto___13848 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___13848)) {
      var class_list_13849 = temp__4090__auto___13848;
      class_list_13849.toggle(class$)
    }else {
      toggle_class_BANG_.call(null, elem__$1, class$, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$))
    }
    return elem__$1
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$)
    }else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$)
    }
    return elem__$1
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_
}();
dommy.attrs.style_str = function style_str(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__13852) {
      var vec__13853 = p__13852;
      var k = cljs.core.nth.call(null, vec__13853, 0, null);
      var v = cljs.core.nth.call(null, vec__13853, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("")
    }, x))
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__13860_13866 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__13861_13867 = null;
    var count__13862_13868 = 0;
    var i__13863_13869 = 0;
    while(true) {
      if(i__13863_13869 < count__13862_13868) {
        var vec__13864_13870 = cljs.core._nth.call(null, chunk__13861_13867, i__13863_13869);
        var k_13871 = cljs.core.nth.call(null, vec__13864_13870, 0, null);
        var v_13872 = cljs.core.nth.call(null, vec__13864_13870, 1, null);
        style[cljs.core.name.call(null, k_13871)] = v_13872;
        var G__13873 = seq__13860_13866;
        var G__13874 = chunk__13861_13867;
        var G__13875 = count__13862_13868;
        var G__13876 = i__13863_13869 + 1;
        seq__13860_13866 = G__13873;
        chunk__13861_13867 = G__13874;
        count__13862_13868 = G__13875;
        i__13863_13869 = G__13876;
        continue
      }else {
        var temp__4092__auto___13877 = cljs.core.seq.call(null, seq__13860_13866);
        if(temp__4092__auto___13877) {
          var seq__13860_13878__$1 = temp__4092__auto___13877;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13860_13878__$1)) {
            var c__3525__auto___13879 = cljs.core.chunk_first.call(null, seq__13860_13878__$1);
            var G__13880 = cljs.core.chunk_rest.call(null, seq__13860_13878__$1);
            var G__13881 = c__3525__auto___13879;
            var G__13882 = cljs.core.count.call(null, c__3525__auto___13879);
            var G__13883 = 0;
            seq__13860_13866 = G__13880;
            chunk__13861_13867 = G__13881;
            count__13862_13868 = G__13882;
            i__13863_13869 = G__13883;
            continue
          }else {
            var vec__13865_13884 = cljs.core.first.call(null, seq__13860_13878__$1);
            var k_13885 = cljs.core.nth.call(null, vec__13865_13884, 0, null);
            var v_13886 = cljs.core.nth.call(null, vec__13865_13884, 1, null);
            style[cljs.core.name.call(null, k_13885)] = v_13886;
            var G__13887 = cljs.core.next.call(null, seq__13860_13878__$1);
            var G__13888 = null;
            var G__13889 = 0;
            var G__13890 = 0;
            seq__13860_13866 = G__13887;
            chunk__13861_13867 = G__13888;
            count__13862_13868 = G__13889;
            i__13863_13869 = G__13890;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_style_BANG___delegate.call(this, elem, kvs)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__13891) {
    var elem = cljs.core.first(arglist__13891);
    var kvs = cljs.core.rest(arglist__13891);
    return set_style_BANG___delegate(elem, kvs)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
dommy.attrs.style = function style(elem, k) {
  if(cljs.core.truth_(k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)]
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__13898_13904 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__13899_13905 = null;
    var count__13900_13906 = 0;
    var i__13901_13907 = 0;
    while(true) {
      if(i__13901_13907 < count__13900_13906) {
        var vec__13902_13908 = cljs.core._nth.call(null, chunk__13899_13905, i__13901_13907);
        var k_13909 = cljs.core.nth.call(null, vec__13902_13908, 0, null);
        var v_13910 = cljs.core.nth.call(null, vec__13902_13908, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_13909, [cljs.core.str(v_13910), cljs.core.str("px")].join(""));
        var G__13911 = seq__13898_13904;
        var G__13912 = chunk__13899_13905;
        var G__13913 = count__13900_13906;
        var G__13914 = i__13901_13907 + 1;
        seq__13898_13904 = G__13911;
        chunk__13899_13905 = G__13912;
        count__13900_13906 = G__13913;
        i__13901_13907 = G__13914;
        continue
      }else {
        var temp__4092__auto___13915 = cljs.core.seq.call(null, seq__13898_13904);
        if(temp__4092__auto___13915) {
          var seq__13898_13916__$1 = temp__4092__auto___13915;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13898_13916__$1)) {
            var c__3525__auto___13917 = cljs.core.chunk_first.call(null, seq__13898_13916__$1);
            var G__13918 = cljs.core.chunk_rest.call(null, seq__13898_13916__$1);
            var G__13919 = c__3525__auto___13917;
            var G__13920 = cljs.core.count.call(null, c__3525__auto___13917);
            var G__13921 = 0;
            seq__13898_13904 = G__13918;
            chunk__13899_13905 = G__13919;
            count__13900_13906 = G__13920;
            i__13901_13907 = G__13921;
            continue
          }else {
            var vec__13903_13922 = cljs.core.first.call(null, seq__13898_13916__$1);
            var k_13923 = cljs.core.nth.call(null, vec__13903_13922, 0, null);
            var v_13924 = cljs.core.nth.call(null, vec__13903_13922, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_13923, [cljs.core.str(v_13924), cljs.core.str("px")].join(""));
            var G__13925 = cljs.core.next.call(null, seq__13898_13916__$1);
            var G__13926 = null;
            var G__13927 = 0;
            var G__13928 = 0;
            seq__13898_13904 = G__13925;
            chunk__13899_13905 = G__13926;
            count__13900_13906 = G__13927;
            i__13901_13907 = G__13928;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_px_BANG___delegate.call(this, elem, kvs)
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__13929) {
    var elem = cljs.core.first(arglist__13929);
    var kvs = cljs.core.rest(arglist__13929);
    return set_px_BANG___delegate(elem, kvs)
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if(cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels)
  }else {
    return null
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true")
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if(cljs.core.truth_(v)) {
      if(cljs.core.fn_QMARK_.call(null, v)) {
        var G__13938 = dommy.template.__GT_node_like.call(null, elem);
        G__13938[cljs.core.name.call(null, k)] = v;
        return G__13938
      }else {
        var G__13939 = dommy.template.__GT_node_like.call(null, elem);
        G__13939.setAttribute(cljs.core.name.call(null, k), k === new cljs.core.Keyword(null, "style", "style", 1123684643) ? dommy.attrs.style_str.call(null, v) : v);
        return G__13939
      }
    }else {
      return null
    }
  };
  var set_attr_BANG___4 = function() {
    var G__13946__delegate = function(elem, k, v, kvs) {
      if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__13940_13947 = cljs.core.seq.call(null, cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, v], true), cljs.core.partition.call(null, 2, kvs)));
      var chunk__13941_13948 = null;
      var count__13942_13949 = 0;
      var i__13943_13950 = 0;
      while(true) {
        if(i__13943_13950 < count__13942_13949) {
          var vec__13944_13951 = cljs.core._nth.call(null, chunk__13941_13948, i__13943_13950);
          var k_13952__$1 = cljs.core.nth.call(null, vec__13944_13951, 0, null);
          var v_13953__$1 = cljs.core.nth.call(null, vec__13944_13951, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_13952__$1, v_13953__$1);
          var G__13954 = seq__13940_13947;
          var G__13955 = chunk__13941_13948;
          var G__13956 = count__13942_13949;
          var G__13957 = i__13943_13950 + 1;
          seq__13940_13947 = G__13954;
          chunk__13941_13948 = G__13955;
          count__13942_13949 = G__13956;
          i__13943_13950 = G__13957;
          continue
        }else {
          var temp__4092__auto___13958 = cljs.core.seq.call(null, seq__13940_13947);
          if(temp__4092__auto___13958) {
            var seq__13940_13959__$1 = temp__4092__auto___13958;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13940_13959__$1)) {
              var c__3525__auto___13960 = cljs.core.chunk_first.call(null, seq__13940_13959__$1);
              var G__13961 = cljs.core.chunk_rest.call(null, seq__13940_13959__$1);
              var G__13962 = c__3525__auto___13960;
              var G__13963 = cljs.core.count.call(null, c__3525__auto___13960);
              var G__13964 = 0;
              seq__13940_13947 = G__13961;
              chunk__13941_13948 = G__13962;
              count__13942_13949 = G__13963;
              i__13943_13950 = G__13964;
              continue
            }else {
              var vec__13945_13965 = cljs.core.first.call(null, seq__13940_13959__$1);
              var k_13966__$1 = cljs.core.nth.call(null, vec__13945_13965, 0, null);
              var v_13967__$1 = cljs.core.nth.call(null, vec__13945_13965, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_13966__$1, v_13967__$1);
              var G__13968 = cljs.core.next.call(null, seq__13940_13959__$1);
              var G__13969 = null;
              var G__13970 = 0;
              var G__13971 = 0;
              seq__13940_13947 = G__13968;
              chunk__13941_13948 = G__13969;
              count__13942_13949 = G__13970;
              i__13943_13950 = G__13971;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__13946 = function(elem, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13946__delegate.call(this, elem, k, v, kvs)
    };
    G__13946.cljs$lang$maxFixedArity = 3;
    G__13946.cljs$lang$applyTo = function(arglist__13972) {
      var elem = cljs.core.first(arglist__13972);
      arglist__13972 = cljs.core.next(arglist__13972);
      var k = cljs.core.first(arglist__13972);
      arglist__13972 = cljs.core.next(arglist__13972);
      var v = cljs.core.first(arglist__13972);
      var kvs = cljs.core.rest(arglist__13972);
      return G__13946__delegate(elem, k, v, kvs)
    };
    G__13946.cljs$core$IFn$_invoke$arity$variadic = G__13946__delegate;
    return G__13946
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), null], true).call(null, k))) {
      elem__$1.className = ""
    }else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k))
    }
    return elem__$1
  };
  var remove_attr_BANG___3 = function() {
    var G__13981__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__13977_13982 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__13978_13983 = null;
      var count__13979_13984 = 0;
      var i__13980_13985 = 0;
      while(true) {
        if(i__13980_13985 < count__13979_13984) {
          var k_13986__$1 = cljs.core._nth.call(null, chunk__13978_13983, i__13980_13985);
          remove_attr_BANG_.call(null, elem__$1, k_13986__$1);
          var G__13987 = seq__13977_13982;
          var G__13988 = chunk__13978_13983;
          var G__13989 = count__13979_13984;
          var G__13990 = i__13980_13985 + 1;
          seq__13977_13982 = G__13987;
          chunk__13978_13983 = G__13988;
          count__13979_13984 = G__13989;
          i__13980_13985 = G__13990;
          continue
        }else {
          var temp__4092__auto___13991 = cljs.core.seq.call(null, seq__13977_13982);
          if(temp__4092__auto___13991) {
            var seq__13977_13992__$1 = temp__4092__auto___13991;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13977_13992__$1)) {
              var c__3525__auto___13993 = cljs.core.chunk_first.call(null, seq__13977_13992__$1);
              var G__13994 = cljs.core.chunk_rest.call(null, seq__13977_13992__$1);
              var G__13995 = c__3525__auto___13993;
              var G__13996 = cljs.core.count.call(null, c__3525__auto___13993);
              var G__13997 = 0;
              seq__13977_13982 = G__13994;
              chunk__13978_13983 = G__13995;
              count__13979_13984 = G__13996;
              i__13980_13985 = G__13997;
              continue
            }else {
              var k_13998__$1 = cljs.core.first.call(null, seq__13977_13992__$1);
              remove_attr_BANG_.call(null, elem__$1, k_13998__$1);
              var G__13999 = cljs.core.next.call(null, seq__13977_13992__$1);
              var G__14000 = null;
              var G__14001 = 0;
              var G__14002 = 0;
              seq__13977_13982 = G__13999;
              chunk__13978_13983 = G__14000;
              count__13979_13984 = G__14001;
              i__13980_13985 = G__14002;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__13981 = function(elem, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13981__delegate.call(this, elem, k, ks)
    };
    G__13981.cljs$lang$maxFixedArity = 2;
    G__13981.cljs$lang$applyTo = function(arglist__14003) {
      var elem = cljs.core.first(arglist__14003);
      arglist__14003 = cljs.core.next(arglist__14003);
      var k = cljs.core.first(arglist__14003);
      var ks = cljs.core.rest(arglist__14003);
      return G__13981__delegate(elem, k, ks)
    };
    G__13981.cljs$core$IFn$_invoke$arity$variadic = G__13981__delegate;
    return G__13981
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_
}();
dommy.attrs.attr = function attr(elem, k) {
  if(cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k))
  }else {
    return null
  }
};
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return"none" === dommy.template.__GT_node_like.call(null, elem).style.display
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__14005 = dommy.template.__GT_node_like.call(null, elem);
    G__14005.style.display = show_QMARK_ ? "" : "none";
    return G__14005
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__14007 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__14007, false);
  return G__14007
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__14009 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__14009, true);
  return G__14009
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__14011 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__14011["constructor"] = Object;
    return G__14011
  }(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true)
};
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("clojure.string");
dommy.template.PElement = {};
dommy.template._elem = function _elem(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = dommy.template._elem[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = dommy.template._elem["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$)
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if(idx < 0) {
    return Math.max(id_idx, class_idx)
  }else {
    return idx
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? node_str : null;
  var node = document.createElement(tag);
  if(base_idx >= 0) {
    var str_13580 = node_str.substring(base_idx);
    while(true) {
      var next_idx_13581 = dommy.template.next_css_index.call(null, str_13580, 1);
      var frag_13582 = next_idx_13581 >= 0 ? str_13580.substring(0, next_idx_13581) : str_13580;
      var G__13579_13583 = frag_13582.charAt(0);
      if(cljs.core._EQ_.call(null, "#", G__13579_13583)) {
        node.setAttribute("id", frag_13582.substring(1))
      }else {
        if(cljs.core._EQ_.call(null, ".", G__13579_13583)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_13582.substring(1))
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_13582.charAt(0))].join(""));
          }else {
          }
        }
      }
      if(next_idx_13581 >= 0) {
        var G__13584 = str_13580.substring(next_idx_13581);
        str_13580 = G__13584;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return node
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data)
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if(function() {
      var G__13590 = data;
      if(G__13590) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__13590.dommy$template$PElement$
          }
        }())) {
          return true
        }else {
          if(!G__13590.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13590)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13590)
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag
    }else {
      if(cljs.core.seq_QMARK_.call(null, data)) {
        var seq__13591_13595 = cljs.core.seq.call(null, data);
        var chunk__13592_13596 = null;
        var count__13593_13597 = 0;
        var i__13594_13598 = 0;
        while(true) {
          if(i__13594_13598 < count__13593_13597) {
            var child_13599 = cljs.core._nth.call(null, chunk__13592_13596, i__13594_13598);
            __GT_document_fragment.call(null, result_frag, child_13599);
            var G__13600 = seq__13591_13595;
            var G__13601 = chunk__13592_13596;
            var G__13602 = count__13593_13597;
            var G__13603 = i__13594_13598 + 1;
            seq__13591_13595 = G__13600;
            chunk__13592_13596 = G__13601;
            count__13593_13597 = G__13602;
            i__13594_13598 = G__13603;
            continue
          }else {
            var temp__4092__auto___13604 = cljs.core.seq.call(null, seq__13591_13595);
            if(temp__4092__auto___13604) {
              var seq__13591_13605__$1 = temp__4092__auto___13604;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13591_13605__$1)) {
                var c__3525__auto___13606 = cljs.core.chunk_first.call(null, seq__13591_13605__$1);
                var G__13607 = cljs.core.chunk_rest.call(null, seq__13591_13605__$1);
                var G__13608 = c__3525__auto___13606;
                var G__13609 = cljs.core.count.call(null, c__3525__auto___13606);
                var G__13610 = 0;
                seq__13591_13595 = G__13607;
                chunk__13592_13596 = G__13608;
                count__13593_13597 = G__13609;
                i__13594_13598 = G__13610;
                continue
              }else {
                var child_13611 = cljs.core.first.call(null, seq__13591_13605__$1);
                __GT_document_fragment.call(null, result_frag, child_13611);
                var G__13612 = cljs.core.next.call(null, seq__13591_13605__$1);
                var G__13613 = null;
                var G__13614 = 0;
                var G__13615 = 0;
                seq__13591_13595 = G__13612;
                chunk__13592_13596 = G__13613;
                count__13593_13597 = G__13614;
                i__13594_13598 = G__13615;
                continue
              }
            }else {
            }
          }
          break
        }
        return result_frag
      }else {
        if(data == null) {
          return result_frag
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return dommy.template.throw_unable_to_make_node.call(null, data)
          }else {
            return null
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if(function() {
    var G__13617 = data;
    if(G__13617) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__13617.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__13617.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13617)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13617)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.__GT_document_fragment.call(null, data)
  }
};
dommy.template.compound_element = function compound_element(p__13618) {
  var vec__13637 = p__13618;
  var tag_name = cljs.core.nth.call(null, vec__13637, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__13637, 1, null);
  var children = cljs.core.nthnext.call(null, vec__13637, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = function() {
    var and__3941__auto__ = cljs.core.map_QMARK_.call(null, maybe_attrs);
    if(and__3941__auto__) {
      return!function() {
        var G__13638 = maybe_attrs;
        if(G__13638) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__13638.dommy$template$PElement$
            }
          }())) {
            return true
          }else {
            if(!G__13638.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13638)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13638)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__13639_13655 = cljs.core.seq.call(null, attrs);
  var chunk__13640_13656 = null;
  var count__13641_13657 = 0;
  var i__13642_13658 = 0;
  while(true) {
    if(i__13642_13658 < count__13641_13657) {
      var vec__13643_13659 = cljs.core._nth.call(null, chunk__13640_13656, i__13642_13658);
      var k_13660 = cljs.core.nth.call(null, vec__13643_13659, 0, null);
      var v_13661 = cljs.core.nth.call(null, vec__13643_13659, 1, null);
      var G__13644_13662 = k_13660;
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__13644_13662)) {
        var seq__13645_13663 = cljs.core.seq.call(null, v_13661);
        var chunk__13646_13664 = null;
        var count__13647_13665 = 0;
        var i__13648_13666 = 0;
        while(true) {
          if(i__13648_13666 < count__13647_13665) {
            var c_13667 = cljs.core._nth.call(null, chunk__13646_13664, i__13648_13666);
            dommy.attrs.add_class_BANG_.call(null, n, c_13667);
            var G__13668 = seq__13645_13663;
            var G__13669 = chunk__13646_13664;
            var G__13670 = count__13647_13665;
            var G__13671 = i__13648_13666 + 1;
            seq__13645_13663 = G__13668;
            chunk__13646_13664 = G__13669;
            count__13647_13665 = G__13670;
            i__13648_13666 = G__13671;
            continue
          }else {
            var temp__4092__auto___13672 = cljs.core.seq.call(null, seq__13645_13663);
            if(temp__4092__auto___13672) {
              var seq__13645_13673__$1 = temp__4092__auto___13672;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13645_13673__$1)) {
                var c__3525__auto___13674 = cljs.core.chunk_first.call(null, seq__13645_13673__$1);
                var G__13675 = cljs.core.chunk_rest.call(null, seq__13645_13673__$1);
                var G__13676 = c__3525__auto___13674;
                var G__13677 = cljs.core.count.call(null, c__3525__auto___13674);
                var G__13678 = 0;
                seq__13645_13663 = G__13675;
                chunk__13646_13664 = G__13676;
                count__13647_13665 = G__13677;
                i__13648_13666 = G__13678;
                continue
              }else {
                var c_13679 = cljs.core.first.call(null, seq__13645_13673__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_13679);
                var G__13680 = cljs.core.next.call(null, seq__13645_13673__$1);
                var G__13681 = null;
                var G__13682 = 0;
                var G__13683 = 0;
                seq__13645_13663 = G__13680;
                chunk__13646_13664 = G__13681;
                count__13647_13665 = G__13682;
                i__13648_13666 = G__13683;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__13644_13662)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_13661)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            dommy.attrs.set_attr_BANG_.call(null, n, k_13660, v_13661)
          }else {
          }
        }
      }
      var G__13684 = seq__13639_13655;
      var G__13685 = chunk__13640_13656;
      var G__13686 = count__13641_13657;
      var G__13687 = i__13642_13658 + 1;
      seq__13639_13655 = G__13684;
      chunk__13640_13656 = G__13685;
      count__13641_13657 = G__13686;
      i__13642_13658 = G__13687;
      continue
    }else {
      var temp__4092__auto___13688 = cljs.core.seq.call(null, seq__13639_13655);
      if(temp__4092__auto___13688) {
        var seq__13639_13689__$1 = temp__4092__auto___13688;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13639_13689__$1)) {
          var c__3525__auto___13690 = cljs.core.chunk_first.call(null, seq__13639_13689__$1);
          var G__13691 = cljs.core.chunk_rest.call(null, seq__13639_13689__$1);
          var G__13692 = c__3525__auto___13690;
          var G__13693 = cljs.core.count.call(null, c__3525__auto___13690);
          var G__13694 = 0;
          seq__13639_13655 = G__13691;
          chunk__13640_13656 = G__13692;
          count__13641_13657 = G__13693;
          i__13642_13658 = G__13694;
          continue
        }else {
          var vec__13649_13695 = cljs.core.first.call(null, seq__13639_13689__$1);
          var k_13696 = cljs.core.nth.call(null, vec__13649_13695, 0, null);
          var v_13697 = cljs.core.nth.call(null, vec__13649_13695, 1, null);
          var G__13650_13698 = k_13696;
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__13650_13698)) {
            var seq__13651_13699 = cljs.core.seq.call(null, v_13697);
            var chunk__13652_13700 = null;
            var count__13653_13701 = 0;
            var i__13654_13702 = 0;
            while(true) {
              if(i__13654_13702 < count__13653_13701) {
                var c_13703 = cljs.core._nth.call(null, chunk__13652_13700, i__13654_13702);
                dommy.attrs.add_class_BANG_.call(null, n, c_13703);
                var G__13704 = seq__13651_13699;
                var G__13705 = chunk__13652_13700;
                var G__13706 = count__13653_13701;
                var G__13707 = i__13654_13702 + 1;
                seq__13651_13699 = G__13704;
                chunk__13652_13700 = G__13705;
                count__13653_13701 = G__13706;
                i__13654_13702 = G__13707;
                continue
              }else {
                var temp__4092__auto___13708__$1 = cljs.core.seq.call(null, seq__13651_13699);
                if(temp__4092__auto___13708__$1) {
                  var seq__13651_13709__$1 = temp__4092__auto___13708__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__13651_13709__$1)) {
                    var c__3525__auto___13710 = cljs.core.chunk_first.call(null, seq__13651_13709__$1);
                    var G__13711 = cljs.core.chunk_rest.call(null, seq__13651_13709__$1);
                    var G__13712 = c__3525__auto___13710;
                    var G__13713 = cljs.core.count.call(null, c__3525__auto___13710);
                    var G__13714 = 0;
                    seq__13651_13699 = G__13711;
                    chunk__13652_13700 = G__13712;
                    count__13653_13701 = G__13713;
                    i__13654_13702 = G__13714;
                    continue
                  }else {
                    var c_13715 = cljs.core.first.call(null, seq__13651_13709__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_13715);
                    var G__13716 = cljs.core.next.call(null, seq__13651_13709__$1);
                    var G__13717 = null;
                    var G__13718 = 0;
                    var G__13719 = 0;
                    seq__13651_13699 = G__13716;
                    chunk__13652_13700 = G__13717;
                    count__13653_13701 = G__13718;
                    i__13654_13702 = G__13719;
                    continue
                  }
                }else {
                }
              }
              break
            }
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__13650_13698)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_13697)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                dommy.attrs.set_attr_BANG_.call(null, n, k_13696, v_13697)
              }else {
              }
            }
          }
          var G__13720 = cljs.core.next.call(null, seq__13639_13689__$1);
          var G__13721 = null;
          var G__13722 = 0;
          var G__13723 = 0;
          seq__13639_13655 = G__13720;
          chunk__13640_13656 = G__13721;
          count__13641_13657 = G__13722;
          i__13642_13658 = G__13723;
          continue
        }
      }else {
      }
    }
    break
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if(this$ instanceof cljs.core.Keyword) {
    return dommy.template.base_element.call(null, this$)
  }else {
    return document.createTextNode([cljs.core.str(this$)].join(""))
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""))
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return dommy.template.compound_element.call(null, this$)
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    return this$
  }
}catch(e13724) {
  if(e13724 instanceof ReferenceError) {
    var __13725 = e13724;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw e13724;
    }else {
    }
  }
}
dommy.template.node = function node(data) {
  if(function() {
    var G__13727 = data;
    if(G__13727) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__13727.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__13727.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13727)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__13727)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.throw_unable_to_make_node.call(null, data)
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes))
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1
};
dommy.core.text = function text(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var or__3943__auto__ = elem__$1.textContent;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return elem__$1.innerText
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__13182 = dommy.template.__GT_node_like.call(null, parent);
    G__13182.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__13182
  };
  var append_BANG___3 = function() {
    var G__13187__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__13183_13188 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__13184_13189 = null;
      var count__13185_13190 = 0;
      var i__13186_13191 = 0;
      while(true) {
        if(i__13186_13191 < count__13185_13190) {
          var c_13192 = cljs.core._nth.call(null, chunk__13184_13189, i__13186_13191);
          append_BANG_.call(null, parent__$1, c_13192);
          var G__13193 = seq__13183_13188;
          var G__13194 = chunk__13184_13189;
          var G__13195 = count__13185_13190;
          var G__13196 = i__13186_13191 + 1;
          seq__13183_13188 = G__13193;
          chunk__13184_13189 = G__13194;
          count__13185_13190 = G__13195;
          i__13186_13191 = G__13196;
          continue
        }else {
          var temp__4092__auto___13197 = cljs.core.seq.call(null, seq__13183_13188);
          if(temp__4092__auto___13197) {
            var seq__13183_13198__$1 = temp__4092__auto___13197;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13183_13198__$1)) {
              var c__3525__auto___13199 = cljs.core.chunk_first.call(null, seq__13183_13198__$1);
              var G__13200 = cljs.core.chunk_rest.call(null, seq__13183_13198__$1);
              var G__13201 = c__3525__auto___13199;
              var G__13202 = cljs.core.count.call(null, c__3525__auto___13199);
              var G__13203 = 0;
              seq__13183_13188 = G__13200;
              chunk__13184_13189 = G__13201;
              count__13185_13190 = G__13202;
              i__13186_13191 = G__13203;
              continue
            }else {
              var c_13204 = cljs.core.first.call(null, seq__13183_13198__$1);
              append_BANG_.call(null, parent__$1, c_13204);
              var G__13205 = cljs.core.next.call(null, seq__13183_13198__$1);
              var G__13206 = null;
              var G__13207 = 0;
              var G__13208 = 0;
              seq__13183_13188 = G__13205;
              chunk__13184_13189 = G__13206;
              count__13185_13190 = G__13207;
              i__13186_13191 = G__13208;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__13187 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13187__delegate.call(this, parent, child, more_children)
    };
    G__13187.cljs$lang$maxFixedArity = 2;
    G__13187.cljs$lang$applyTo = function(arglist__13209) {
      var parent = cljs.core.first(arglist__13209);
      arglist__13209 = cljs.core.next(arglist__13209);
      var child = cljs.core.first(arglist__13209);
      var more_children = cljs.core.rest(arglist__13209);
      return G__13187__delegate(parent, child, more_children)
    };
    G__13187.cljs$core$IFn$_invoke$arity$variadic = G__13187__delegate;
    return G__13187
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var G__13215 = dommy.template.__GT_node_like.call(null, parent);
    G__13215.insertBefore(dommy.template.__GT_node_like.call(null, child), parent.firstChild);
    return G__13215
  };
  var prepend_BANG___3 = function() {
    var G__13220__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__13216_13221 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__13217_13222 = null;
      var count__13218_13223 = 0;
      var i__13219_13224 = 0;
      while(true) {
        if(i__13219_13224 < count__13218_13223) {
          var c_13225 = cljs.core._nth.call(null, chunk__13217_13222, i__13219_13224);
          prepend_BANG_.call(null, parent__$1, c_13225);
          var G__13226 = seq__13216_13221;
          var G__13227 = chunk__13217_13222;
          var G__13228 = count__13218_13223;
          var G__13229 = i__13219_13224 + 1;
          seq__13216_13221 = G__13226;
          chunk__13217_13222 = G__13227;
          count__13218_13223 = G__13228;
          i__13219_13224 = G__13229;
          continue
        }else {
          var temp__4092__auto___13230 = cljs.core.seq.call(null, seq__13216_13221);
          if(temp__4092__auto___13230) {
            var seq__13216_13231__$1 = temp__4092__auto___13230;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13216_13231__$1)) {
              var c__3525__auto___13232 = cljs.core.chunk_first.call(null, seq__13216_13231__$1);
              var G__13233 = cljs.core.chunk_rest.call(null, seq__13216_13231__$1);
              var G__13234 = c__3525__auto___13232;
              var G__13235 = cljs.core.count.call(null, c__3525__auto___13232);
              var G__13236 = 0;
              seq__13216_13221 = G__13233;
              chunk__13217_13222 = G__13234;
              count__13218_13223 = G__13235;
              i__13219_13224 = G__13236;
              continue
            }else {
              var c_13237 = cljs.core.first.call(null, seq__13216_13231__$1);
              prepend_BANG_.call(null, parent__$1, c_13237);
              var G__13238 = cljs.core.next.call(null, seq__13216_13231__$1);
              var G__13239 = null;
              var G__13240 = 0;
              var G__13241 = 0;
              seq__13216_13221 = G__13238;
              chunk__13217_13222 = G__13239;
              count__13218_13223 = G__13240;
              i__13219_13224 = G__13241;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__13220 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13220__delegate.call(this, parent, child, more_children)
    };
    G__13220.cljs$lang$maxFixedArity = 2;
    G__13220.cljs$lang$applyTo = function(arglist__13242) {
      var parent = cljs.core.first(arglist__13242);
      arglist__13242 = cljs.core.next(arglist__13242);
      var child = cljs.core.first(arglist__13242);
      var more_children = cljs.core.rest(arglist__13242);
      return G__13220__delegate(parent, child, more_children)
    };
    G__13220.cljs$core$IFn$_invoke$arity$variadic = G__13220__delegate;
    return G__13220
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if(cljs.core.truth_(other__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___13243 = other__$1.nextSibling;
  if(cljs.core.truth_(temp__4090__auto___13243)) {
    var next_13244 = temp__4090__auto___13243;
    parent.insertBefore(actual_node, next_13244)
  }else {
    parent.appendChild(actual_node)
  }
  return actual_node
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if(cljs.core.truth_(elem__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__13246 = dommy.template.__GT_node_like.call(null, parent);
  G__13246.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__13246, node_like);
  return G__13246
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__13248 = elem__$1.parentNode;
  G__13248.removeChild(elem__$1);
  return G__13248
};
dommy.core.selector = function selector(data) {
  if(cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data))
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, data);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return data instanceof cljs.core.Keyword
      }
    }()) {
      return cljs.core.name.call(null, data)
    }else {
      return null
    }
  }
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__13249_SHARP_) {
    return p1__13249_SHARP_.parentNode
  }, dommy.template.__GT_node_like.call(null, elem)))
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector)
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0
    }
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))))
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__13250_SHARP_) {
      return!(p1__13250_SHARP_ === base__$1)
    }, dommy.core.ancestor_nodes.call(null, elem__$1))))
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if(cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1)
  }else {
    if(cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0
    }else {
      return null
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13251) {
  var vec__13252 = p__13251;
  var special_mouse_event = cljs.core.nth.call(null, vec__13252, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__13252, 1, null);
  return cljs.core.PersistentVector.fromArray([special_mouse_event, cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3943__auto__ = event.selectedTarget;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return event.currentTarget
        }
      }();
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = related_target;
        if(cljs.core.truth_(and__3941__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target)
        }else {
          return and__3941__auto__
        }
      }())) {
        return null
      }else {
        return f.call(null, event)
      }
    }
  }], true)], true)
}, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "mouseenter", "mouseenter", 2027084997), new cljs.core.Keyword(null, "mouseover", "mouseover", 1601081963), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 2033263780), new cljs.core.Keyword(null, "mouseout", "mouseout", 894298107)], true)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var temp__4092__auto__ = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var selected_target = temp__4092__auto__;
      event.selectedTarget = selected_target;
      return f.call(null, event)
    }else {
      return null
    }
  }
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3943__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.PersistentArrayMap.EMPTY
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args)
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args)
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__13253) {
    var elem = cljs.core.first(arglist__13253);
    arglist__13253 = cljs.core.next(arglist__13253);
    var f = cljs.core.first(arglist__13253);
    var args = cljs.core.rest(arglist__13253);
    return update_event_listeners_BANG___delegate(elem, f, args)
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if(cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__13254_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__13254_SHARP_))
    }, cljs.core.rest).call(null, elem_sel)
  }else {
    return cljs.core.PersistentVector.fromArray([dommy.template.__GT_node_like.call(null, elem_sel), null], true)
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__13278_13301 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_13302 = cljs.core.nth.call(null, vec__13278_13301, 0, null);
    var selector_13303 = cljs.core.nth.call(null, vec__13278_13301, 1, null);
    var seq__13279_13304 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__13286_13305 = null;
    var count__13287_13306 = 0;
    var i__13288_13307 = 0;
    while(true) {
      if(i__13288_13307 < count__13287_13306) {
        var vec__13295_13308 = cljs.core._nth.call(null, chunk__13286_13305, i__13288_13307);
        var orig_type_13309 = cljs.core.nth.call(null, vec__13295_13308, 0, null);
        var f_13310 = cljs.core.nth.call(null, vec__13295_13308, 1, null);
        var seq__13289_13311 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_13309, cljs.core.PersistentArrayMap.fromArray([orig_type_13309, cljs.core.identity], true)));
        var chunk__13291_13312 = null;
        var count__13292_13313 = 0;
        var i__13293_13314 = 0;
        while(true) {
          if(i__13293_13314 < count__13292_13313) {
            var vec__13296_13315 = cljs.core._nth.call(null, chunk__13291_13312, i__13293_13314);
            var actual_type_13316 = cljs.core.nth.call(null, vec__13296_13315, 0, null);
            var factory_13317 = cljs.core.nth.call(null, vec__13296_13315, 1, null);
            var canonical_f_13318 = (cljs.core.truth_(selector_13303) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_13302, selector_13303) : cljs.core.identity).call(null, factory_13317.call(null, f_13310));
            dommy.core.update_event_listeners_BANG_.call(null, elem_13302, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_13303, actual_type_13316, f_13310], true), canonical_f_13318);
            if(cljs.core.truth_(elem_13302.addEventListener)) {
              elem_13302.addEventListener(cljs.core.name.call(null, actual_type_13316), canonical_f_13318)
            }else {
              elem_13302.attachEvent(cljs.core.name.call(null, actual_type_13316), canonical_f_13318)
            }
            var G__13319 = seq__13289_13311;
            var G__13320 = chunk__13291_13312;
            var G__13321 = count__13292_13313;
            var G__13322 = i__13293_13314 + 1;
            seq__13289_13311 = G__13319;
            chunk__13291_13312 = G__13320;
            count__13292_13313 = G__13321;
            i__13293_13314 = G__13322;
            continue
          }else {
            var temp__4092__auto___13323 = cljs.core.seq.call(null, seq__13289_13311);
            if(temp__4092__auto___13323) {
              var seq__13289_13324__$1 = temp__4092__auto___13323;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13289_13324__$1)) {
                var c__3525__auto___13325 = cljs.core.chunk_first.call(null, seq__13289_13324__$1);
                var G__13326 = cljs.core.chunk_rest.call(null, seq__13289_13324__$1);
                var G__13327 = c__3525__auto___13325;
                var G__13328 = cljs.core.count.call(null, c__3525__auto___13325);
                var G__13329 = 0;
                seq__13289_13311 = G__13326;
                chunk__13291_13312 = G__13327;
                count__13292_13313 = G__13328;
                i__13293_13314 = G__13329;
                continue
              }else {
                var vec__13297_13330 = cljs.core.first.call(null, seq__13289_13324__$1);
                var actual_type_13331 = cljs.core.nth.call(null, vec__13297_13330, 0, null);
                var factory_13332 = cljs.core.nth.call(null, vec__13297_13330, 1, null);
                var canonical_f_13333 = (cljs.core.truth_(selector_13303) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_13302, selector_13303) : cljs.core.identity).call(null, factory_13332.call(null, f_13310));
                dommy.core.update_event_listeners_BANG_.call(null, elem_13302, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_13303, actual_type_13331, f_13310], true), canonical_f_13333);
                if(cljs.core.truth_(elem_13302.addEventListener)) {
                  elem_13302.addEventListener(cljs.core.name.call(null, actual_type_13331), canonical_f_13333)
                }else {
                  elem_13302.attachEvent(cljs.core.name.call(null, actual_type_13331), canonical_f_13333)
                }
                var G__13334 = cljs.core.next.call(null, seq__13289_13324__$1);
                var G__13335 = null;
                var G__13336 = 0;
                var G__13337 = 0;
                seq__13289_13311 = G__13334;
                chunk__13291_13312 = G__13335;
                count__13292_13313 = G__13336;
                i__13293_13314 = G__13337;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__13338 = seq__13279_13304;
        var G__13339 = chunk__13286_13305;
        var G__13340 = count__13287_13306;
        var G__13341 = i__13288_13307 + 1;
        seq__13279_13304 = G__13338;
        chunk__13286_13305 = G__13339;
        count__13287_13306 = G__13340;
        i__13288_13307 = G__13341;
        continue
      }else {
        var temp__4092__auto___13342 = cljs.core.seq.call(null, seq__13279_13304);
        if(temp__4092__auto___13342) {
          var seq__13279_13343__$1 = temp__4092__auto___13342;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13279_13343__$1)) {
            var c__3525__auto___13344 = cljs.core.chunk_first.call(null, seq__13279_13343__$1);
            var G__13345 = cljs.core.chunk_rest.call(null, seq__13279_13343__$1);
            var G__13346 = c__3525__auto___13344;
            var G__13347 = cljs.core.count.call(null, c__3525__auto___13344);
            var G__13348 = 0;
            seq__13279_13304 = G__13345;
            chunk__13286_13305 = G__13346;
            count__13287_13306 = G__13347;
            i__13288_13307 = G__13348;
            continue
          }else {
            var vec__13298_13349 = cljs.core.first.call(null, seq__13279_13343__$1);
            var orig_type_13350 = cljs.core.nth.call(null, vec__13298_13349, 0, null);
            var f_13351 = cljs.core.nth.call(null, vec__13298_13349, 1, null);
            var seq__13280_13352 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_13350, cljs.core.PersistentArrayMap.fromArray([orig_type_13350, cljs.core.identity], true)));
            var chunk__13282_13353 = null;
            var count__13283_13354 = 0;
            var i__13284_13355 = 0;
            while(true) {
              if(i__13284_13355 < count__13283_13354) {
                var vec__13299_13356 = cljs.core._nth.call(null, chunk__13282_13353, i__13284_13355);
                var actual_type_13357 = cljs.core.nth.call(null, vec__13299_13356, 0, null);
                var factory_13358 = cljs.core.nth.call(null, vec__13299_13356, 1, null);
                var canonical_f_13359 = (cljs.core.truth_(selector_13303) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_13302, selector_13303) : cljs.core.identity).call(null, factory_13358.call(null, f_13351));
                dommy.core.update_event_listeners_BANG_.call(null, elem_13302, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_13303, actual_type_13357, f_13351], true), canonical_f_13359);
                if(cljs.core.truth_(elem_13302.addEventListener)) {
                  elem_13302.addEventListener(cljs.core.name.call(null, actual_type_13357), canonical_f_13359)
                }else {
                  elem_13302.attachEvent(cljs.core.name.call(null, actual_type_13357), canonical_f_13359)
                }
                var G__13360 = seq__13280_13352;
                var G__13361 = chunk__13282_13353;
                var G__13362 = count__13283_13354;
                var G__13363 = i__13284_13355 + 1;
                seq__13280_13352 = G__13360;
                chunk__13282_13353 = G__13361;
                count__13283_13354 = G__13362;
                i__13284_13355 = G__13363;
                continue
              }else {
                var temp__4092__auto___13364__$1 = cljs.core.seq.call(null, seq__13280_13352);
                if(temp__4092__auto___13364__$1) {
                  var seq__13280_13365__$1 = temp__4092__auto___13364__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__13280_13365__$1)) {
                    var c__3525__auto___13366 = cljs.core.chunk_first.call(null, seq__13280_13365__$1);
                    var G__13367 = cljs.core.chunk_rest.call(null, seq__13280_13365__$1);
                    var G__13368 = c__3525__auto___13366;
                    var G__13369 = cljs.core.count.call(null, c__3525__auto___13366);
                    var G__13370 = 0;
                    seq__13280_13352 = G__13367;
                    chunk__13282_13353 = G__13368;
                    count__13283_13354 = G__13369;
                    i__13284_13355 = G__13370;
                    continue
                  }else {
                    var vec__13300_13371 = cljs.core.first.call(null, seq__13280_13365__$1);
                    var actual_type_13372 = cljs.core.nth.call(null, vec__13300_13371, 0, null);
                    var factory_13373 = cljs.core.nth.call(null, vec__13300_13371, 1, null);
                    var canonical_f_13374 = (cljs.core.truth_(selector_13303) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_13302, selector_13303) : cljs.core.identity).call(null, factory_13373.call(null, f_13351));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_13302, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_13303, actual_type_13372, f_13351], true), canonical_f_13374);
                    if(cljs.core.truth_(elem_13302.addEventListener)) {
                      elem_13302.addEventListener(cljs.core.name.call(null, actual_type_13372), canonical_f_13374)
                    }else {
                      elem_13302.attachEvent(cljs.core.name.call(null, actual_type_13372), canonical_f_13374)
                    }
                    var G__13375 = cljs.core.next.call(null, seq__13280_13365__$1);
                    var G__13376 = null;
                    var G__13377 = 0;
                    var G__13378 = 0;
                    seq__13280_13352 = G__13375;
                    chunk__13282_13353 = G__13376;
                    count__13283_13354 = G__13377;
                    i__13284_13355 = G__13378;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__13379 = cljs.core.next.call(null, seq__13279_13343__$1);
            var G__13380 = null;
            var G__13381 = 0;
            var G__13382 = 0;
            seq__13279_13304 = G__13379;
            chunk__13286_13305 = G__13380;
            count__13287_13306 = G__13381;
            i__13288_13307 = G__13382;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__13383) {
    var elem_sel = cljs.core.first(arglist__13383);
    var type_fs = cljs.core.rest(arglist__13383);
    return listen_BANG___delegate(elem_sel, type_fs)
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__13407_13430 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_13431 = cljs.core.nth.call(null, vec__13407_13430, 0, null);
    var selector_13432 = cljs.core.nth.call(null, vec__13407_13430, 1, null);
    var seq__13408_13433 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__13415_13434 = null;
    var count__13416_13435 = 0;
    var i__13417_13436 = 0;
    while(true) {
      if(i__13417_13436 < count__13416_13435) {
        var vec__13424_13437 = cljs.core._nth.call(null, chunk__13415_13434, i__13417_13436);
        var orig_type_13438 = cljs.core.nth.call(null, vec__13424_13437, 0, null);
        var f_13439 = cljs.core.nth.call(null, vec__13424_13437, 1, null);
        var seq__13418_13440 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_13438, cljs.core.PersistentArrayMap.fromArray([orig_type_13438, cljs.core.identity], true)));
        var chunk__13420_13441 = null;
        var count__13421_13442 = 0;
        var i__13422_13443 = 0;
        while(true) {
          if(i__13422_13443 < count__13421_13442) {
            var vec__13425_13444 = cljs.core._nth.call(null, chunk__13420_13441, i__13422_13443);
            var actual_type_13445 = cljs.core.nth.call(null, vec__13425_13444, 0, null);
            var __13446 = cljs.core.nth.call(null, vec__13425_13444, 1, null);
            var keys_13447 = cljs.core.PersistentVector.fromArray([selector_13432, actual_type_13445, f_13439], true);
            var canonical_f_13448 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_13431), keys_13447);
            dommy.core.update_event_listeners_BANG_.call(null, elem_13431, dommy.utils.dissoc_in, keys_13447);
            if(cljs.core.truth_(elem_13431.removeEventListener)) {
              elem_13431.removeEventListener(cljs.core.name.call(null, actual_type_13445), canonical_f_13448)
            }else {
              elem_13431.detachEvent(cljs.core.name.call(null, actual_type_13445), canonical_f_13448)
            }
            var G__13449 = seq__13418_13440;
            var G__13450 = chunk__13420_13441;
            var G__13451 = count__13421_13442;
            var G__13452 = i__13422_13443 + 1;
            seq__13418_13440 = G__13449;
            chunk__13420_13441 = G__13450;
            count__13421_13442 = G__13451;
            i__13422_13443 = G__13452;
            continue
          }else {
            var temp__4092__auto___13453 = cljs.core.seq.call(null, seq__13418_13440);
            if(temp__4092__auto___13453) {
              var seq__13418_13454__$1 = temp__4092__auto___13453;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__13418_13454__$1)) {
                var c__3525__auto___13455 = cljs.core.chunk_first.call(null, seq__13418_13454__$1);
                var G__13456 = cljs.core.chunk_rest.call(null, seq__13418_13454__$1);
                var G__13457 = c__3525__auto___13455;
                var G__13458 = cljs.core.count.call(null, c__3525__auto___13455);
                var G__13459 = 0;
                seq__13418_13440 = G__13456;
                chunk__13420_13441 = G__13457;
                count__13421_13442 = G__13458;
                i__13422_13443 = G__13459;
                continue
              }else {
                var vec__13426_13460 = cljs.core.first.call(null, seq__13418_13454__$1);
                var actual_type_13461 = cljs.core.nth.call(null, vec__13426_13460, 0, null);
                var __13462 = cljs.core.nth.call(null, vec__13426_13460, 1, null);
                var keys_13463 = cljs.core.PersistentVector.fromArray([selector_13432, actual_type_13461, f_13439], true);
                var canonical_f_13464 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_13431), keys_13463);
                dommy.core.update_event_listeners_BANG_.call(null, elem_13431, dommy.utils.dissoc_in, keys_13463);
                if(cljs.core.truth_(elem_13431.removeEventListener)) {
                  elem_13431.removeEventListener(cljs.core.name.call(null, actual_type_13461), canonical_f_13464)
                }else {
                  elem_13431.detachEvent(cljs.core.name.call(null, actual_type_13461), canonical_f_13464)
                }
                var G__13465 = cljs.core.next.call(null, seq__13418_13454__$1);
                var G__13466 = null;
                var G__13467 = 0;
                var G__13468 = 0;
                seq__13418_13440 = G__13465;
                chunk__13420_13441 = G__13466;
                count__13421_13442 = G__13467;
                i__13422_13443 = G__13468;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__13469 = seq__13408_13433;
        var G__13470 = chunk__13415_13434;
        var G__13471 = count__13416_13435;
        var G__13472 = i__13417_13436 + 1;
        seq__13408_13433 = G__13469;
        chunk__13415_13434 = G__13470;
        count__13416_13435 = G__13471;
        i__13417_13436 = G__13472;
        continue
      }else {
        var temp__4092__auto___13473 = cljs.core.seq.call(null, seq__13408_13433);
        if(temp__4092__auto___13473) {
          var seq__13408_13474__$1 = temp__4092__auto___13473;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13408_13474__$1)) {
            var c__3525__auto___13475 = cljs.core.chunk_first.call(null, seq__13408_13474__$1);
            var G__13476 = cljs.core.chunk_rest.call(null, seq__13408_13474__$1);
            var G__13477 = c__3525__auto___13475;
            var G__13478 = cljs.core.count.call(null, c__3525__auto___13475);
            var G__13479 = 0;
            seq__13408_13433 = G__13476;
            chunk__13415_13434 = G__13477;
            count__13416_13435 = G__13478;
            i__13417_13436 = G__13479;
            continue
          }else {
            var vec__13427_13480 = cljs.core.first.call(null, seq__13408_13474__$1);
            var orig_type_13481 = cljs.core.nth.call(null, vec__13427_13480, 0, null);
            var f_13482 = cljs.core.nth.call(null, vec__13427_13480, 1, null);
            var seq__13409_13483 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_13481, cljs.core.PersistentArrayMap.fromArray([orig_type_13481, cljs.core.identity], true)));
            var chunk__13411_13484 = null;
            var count__13412_13485 = 0;
            var i__13413_13486 = 0;
            while(true) {
              if(i__13413_13486 < count__13412_13485) {
                var vec__13428_13487 = cljs.core._nth.call(null, chunk__13411_13484, i__13413_13486);
                var actual_type_13488 = cljs.core.nth.call(null, vec__13428_13487, 0, null);
                var __13489 = cljs.core.nth.call(null, vec__13428_13487, 1, null);
                var keys_13490 = cljs.core.PersistentVector.fromArray([selector_13432, actual_type_13488, f_13482], true);
                var canonical_f_13491 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_13431), keys_13490);
                dommy.core.update_event_listeners_BANG_.call(null, elem_13431, dommy.utils.dissoc_in, keys_13490);
                if(cljs.core.truth_(elem_13431.removeEventListener)) {
                  elem_13431.removeEventListener(cljs.core.name.call(null, actual_type_13488), canonical_f_13491)
                }else {
                  elem_13431.detachEvent(cljs.core.name.call(null, actual_type_13488), canonical_f_13491)
                }
                var G__13492 = seq__13409_13483;
                var G__13493 = chunk__13411_13484;
                var G__13494 = count__13412_13485;
                var G__13495 = i__13413_13486 + 1;
                seq__13409_13483 = G__13492;
                chunk__13411_13484 = G__13493;
                count__13412_13485 = G__13494;
                i__13413_13486 = G__13495;
                continue
              }else {
                var temp__4092__auto___13496__$1 = cljs.core.seq.call(null, seq__13409_13483);
                if(temp__4092__auto___13496__$1) {
                  var seq__13409_13497__$1 = temp__4092__auto___13496__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__13409_13497__$1)) {
                    var c__3525__auto___13498 = cljs.core.chunk_first.call(null, seq__13409_13497__$1);
                    var G__13499 = cljs.core.chunk_rest.call(null, seq__13409_13497__$1);
                    var G__13500 = c__3525__auto___13498;
                    var G__13501 = cljs.core.count.call(null, c__3525__auto___13498);
                    var G__13502 = 0;
                    seq__13409_13483 = G__13499;
                    chunk__13411_13484 = G__13500;
                    count__13412_13485 = G__13501;
                    i__13413_13486 = G__13502;
                    continue
                  }else {
                    var vec__13429_13503 = cljs.core.first.call(null, seq__13409_13497__$1);
                    var actual_type_13504 = cljs.core.nth.call(null, vec__13429_13503, 0, null);
                    var __13505 = cljs.core.nth.call(null, vec__13429_13503, 1, null);
                    var keys_13506 = cljs.core.PersistentVector.fromArray([selector_13432, actual_type_13504, f_13482], true);
                    var canonical_f_13507 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_13431), keys_13506);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_13431, dommy.utils.dissoc_in, keys_13506);
                    if(cljs.core.truth_(elem_13431.removeEventListener)) {
                      elem_13431.removeEventListener(cljs.core.name.call(null, actual_type_13504), canonical_f_13507)
                    }else {
                      elem_13431.detachEvent(cljs.core.name.call(null, actual_type_13504), canonical_f_13507)
                    }
                    var G__13508 = cljs.core.next.call(null, seq__13409_13497__$1);
                    var G__13509 = null;
                    var G__13510 = 0;
                    var G__13511 = 0;
                    seq__13409_13483 = G__13508;
                    chunk__13411_13484 = G__13509;
                    count__13412_13485 = G__13510;
                    i__13413_13486 = G__13511;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__13512 = cljs.core.next.call(null, seq__13408_13474__$1);
            var G__13513 = null;
            var G__13514 = 0;
            var G__13515 = 0;
            seq__13408_13433 = G__13512;
            chunk__13415_13434 = G__13513;
            count__13416_13435 = G__13514;
            i__13417_13436 = G__13515;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__13516) {
    var elem_sel = cljs.core.first(arglist__13516);
    var type_fs = cljs.core.rest(arglist__13516);
    return unlisten_BANG___delegate(elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__13524_13531 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_13532 = cljs.core.nth.call(null, vec__13524_13531, 0, null);
    var selector_13533 = cljs.core.nth.call(null, vec__13524_13531, 1, null);
    var seq__13525_13534 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__13526_13535 = null;
    var count__13527_13536 = 0;
    var i__13528_13537 = 0;
    while(true) {
      if(i__13528_13537 < count__13527_13536) {
        var vec__13529_13538 = cljs.core._nth.call(null, chunk__13526_13535, i__13528_13537);
        var type_13539 = cljs.core.nth.call(null, vec__13529_13538, 0, null);
        var f_13540 = cljs.core.nth.call(null, vec__13529_13538, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_13539, function(seq__13525_13534, chunk__13526_13535, count__13527_13536, i__13528_13537, vec__13529_13538, type_13539, f_13540) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_13539, this_fn);
            return f_13540.call(null, e)
          }
        }(seq__13525_13534, chunk__13526_13535, count__13527_13536, i__13528_13537, vec__13529_13538, type_13539, f_13540));
        var G__13541 = seq__13525_13534;
        var G__13542 = chunk__13526_13535;
        var G__13543 = count__13527_13536;
        var G__13544 = i__13528_13537 + 1;
        seq__13525_13534 = G__13541;
        chunk__13526_13535 = G__13542;
        count__13527_13536 = G__13543;
        i__13528_13537 = G__13544;
        continue
      }else {
        var temp__4092__auto___13545 = cljs.core.seq.call(null, seq__13525_13534);
        if(temp__4092__auto___13545) {
          var seq__13525_13546__$1 = temp__4092__auto___13545;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__13525_13546__$1)) {
            var c__3525__auto___13547 = cljs.core.chunk_first.call(null, seq__13525_13546__$1);
            var G__13548 = cljs.core.chunk_rest.call(null, seq__13525_13546__$1);
            var G__13549 = c__3525__auto___13547;
            var G__13550 = cljs.core.count.call(null, c__3525__auto___13547);
            var G__13551 = 0;
            seq__13525_13534 = G__13548;
            chunk__13526_13535 = G__13549;
            count__13527_13536 = G__13550;
            i__13528_13537 = G__13551;
            continue
          }else {
            var vec__13530_13552 = cljs.core.first.call(null, seq__13525_13546__$1);
            var type_13553 = cljs.core.nth.call(null, vec__13530_13552, 0, null);
            var f_13554 = cljs.core.nth.call(null, vec__13530_13552, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_13553, function(seq__13525_13534, chunk__13526_13535, count__13527_13536, i__13528_13537, vec__13530_13552, type_13553, f_13554, seq__13525_13546__$1, temp__4092__auto___13545) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_13553, this_fn);
                return f_13554.call(null, e)
              }
            }(seq__13525_13534, chunk__13526_13535, count__13527_13536, i__13528_13537, vec__13530_13552, type_13553, f_13554, seq__13525_13546__$1, temp__4092__auto___13545));
            var G__13555 = cljs.core.next.call(null, seq__13525_13546__$1);
            var G__13556 = null;
            var G__13557 = 0;
            var G__13558 = 0;
            seq__13525_13534 = G__13555;
            chunk__13526_13535 = G__13556;
            count__13527_13536 = G__13557;
            i__13528_13537 = G__13558;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__13559) {
    var elem_sel = cljs.core.first(arglist__13559);
    var type_fs = cljs.core.rest(arglist__13559);
    return listen_once_BANG___delegate(elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__13560) {
    var vec__13562 = p__13560;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__13562, 0, null);
    if(dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3943__auto__ = update_event_BANG_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.identity
      }
    }();
    if(cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event))
    }else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()))
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__13560 = null;
    if(arguments.length > 2) {
      p__13560 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return fire_BANG___delegate.call(this, node, event_type, p__13560)
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__13563) {
    var node = cljs.core.first(arglist__13563);
    arglist__13563 = cljs.core.next(arglist__13563);
    var event_type = cljs.core.first(arglist__13563);
    var p__13560 = cljs.core.rest(arglist__13563);
    return fire_BANG___delegate(node, event_type, p__13560)
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_
}();
goog.provide("weather_canvas.sheet");
goog.require("cljs.core");
goog.require("dommy.core");
goog.require("dommy.utils");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.gradient");
weather_canvas.sheet.sheet = function sheet(layer_specs) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "sheet", "sheet", 1123307729), new cljs.core.Keyword(null, "layers", "layers", 4199139508), layer_specs], true)
};
weather_canvas.sheet.group = function() {
  var group__delegate = function(direction, p__11293) {
    var map__11295 = p__11293;
    var map__11295__$1 = cljs.core.seq_QMARK_.call(null, map__11295) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11295) : map__11295;
    var offset = cljs.core.get.call(null, map__11295__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
    var content = cljs.core.get.call(null, map__11295__$1, new cljs.core.Keyword(null, "content", "content", 1965434859));
    var interleave = cljs.core.get.call(null, map__11295__$1, new cljs.core.Keyword(null, "interleave", "interleave", 3715991245));
    return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "group", "group", 1112533489), new cljs.core.Keyword(null, "drawn", "drawn", 1109749532), false, new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "direction", "direction", 4346280689), weather_canvas.sheet.make_direction.call(null, direction), new cljs.core.Keyword(null, "interleave", 
    "interleave", 3715991245), interleave, new cljs.core.Keyword(null, "content", "content", 1965434859), content], true)
  };
  var group = function(direction, var_args) {
    var p__11293 = null;
    if(arguments.length > 1) {
      p__11293 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return group__delegate.call(this, direction, p__11293)
  };
  group.cljs$lang$maxFixedArity = 1;
  group.cljs$lang$applyTo = function(arglist__11296) {
    var direction = cljs.core.first(arglist__11296);
    var p__11293 = cljs.core.rest(arglist__11296);
    return group__delegate(direction, p__11293)
  };
  group.cljs$core$IFn$_invoke$arity$variadic = group__delegate;
  return group
}();
weather_canvas.sheet.gap = function gap(size) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "gap", "gap", 1014006344), new cljs.core.Keyword(null, "size", "size", 1017434995), cljs.core.PersistentVector.fromArray([size, size], true)], true)
};
weather_canvas.sheet.square = function square(size, color) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "square", "square", 4414196879), new cljs.core.Keyword(null, "size", "size", 1017434995), cljs.core.PersistentVector.fromArray([size, size], true), new cljs.core.Keyword(null, "color", "color", 1108746965), color], true)
};
weather_canvas.sheet.text = function text(contents, size, color) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "text", "text", 1017460895), new cljs.core.Keyword(null, "string", "string", 4416885635), contents, new cljs.core.Keyword(null, "font-size", "font-size", 3722789425), size, new cljs.core.Keyword(null, "color", "color", 1108746965), color], true)
};
weather_canvas.sheet.draw_BANG_ = function() {
  var method_table__3582__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__3583__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__3584__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__3585__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__3586__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("draw!", function() {
    var G__11299__delegate = function(shape, canvas_buffer, offset, p__11297) {
      var map__11298 = p__11297;
      var map__11298__$1 = cljs.core.seq_QMARK_.call(null, map__11298) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11298) : map__11298;
      return(new cljs.core.Keyword(null, "type", "type", 1017479852)).call(null, shape)
    };
    var G__11299 = function(shape, canvas_buffer, offset, var_args) {
      var p__11297 = null;
      if(arguments.length > 3) {
        p__11297 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11299__delegate.call(this, shape, canvas_buffer, offset, p__11297)
    };
    G__11299.cljs$lang$maxFixedArity = 3;
    G__11299.cljs$lang$applyTo = function(arglist__11300) {
      var shape = cljs.core.first(arglist__11300);
      arglist__11300 = cljs.core.next(arglist__11300);
      var canvas_buffer = cljs.core.first(arglist__11300);
      arglist__11300 = cljs.core.next(arglist__11300);
      var offset = cljs.core.first(arglist__11300);
      var p__11297 = cljs.core.rest(arglist__11300);
      return G__11299__delegate(shape, canvas_buffer, offset, p__11297)
    };
    G__11299.cljs$core$IFn$_invoke$arity$variadic = G__11299__delegate;
    return G__11299
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__3586__auto__, method_table__3582__auto__, prefer_table__3583__auto__, method_cache__3584__auto__, cached_hierarchy__3585__auto__)
}();
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "sheet", "sheet", 1123307729), function(sheet, buffer, offset) {
  var subdimensions = function() {
    var iter__3494__auto__ = function iter__11301(s__11302) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11302__$1 = s__11302;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__11302__$1);
          if(temp__4092__auto__) {
            var s__11302__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__11302__$2)) {
              var c__3492__auto__ = cljs.core.chunk_first.call(null, s__11302__$2);
              var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
              var b__11304 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
              if(function() {
                var i__11303 = 0;
                while(true) {
                  if(i__11303 < size__3493__auto__) {
                    var vec__11307 = cljs.core._nth.call(null, c__3492__auto__, i__11303);
                    var layer_name = cljs.core.nth.call(null, vec__11307, 0, null);
                    var sub_offset = cljs.core.nth.call(null, vec__11307, 1, null);
                    var contents = cljs.core.nth.call(null, vec__11307, 2, null);
                    cljs.core.chunk_append.call(null, b__11304, weather_canvas.sheet.draw_BANG_.call(null, contents, buffer, cljs.core.map.call(null, cljs.core._PLUS_, sub_offset, offset)));
                    var G__11309 = i__11303 + 1;
                    i__11303 = G__11309;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11304), iter__11301.call(null, cljs.core.chunk_rest.call(null, s__11302__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11304), null)
              }
            }else {
              var vec__11308 = cljs.core.first.call(null, s__11302__$2);
              var layer_name = cljs.core.nth.call(null, vec__11308, 0, null);
              var sub_offset = cljs.core.nth.call(null, vec__11308, 1, null);
              var contents = cljs.core.nth.call(null, vec__11308, 2, null);
              return cljs.core.cons.call(null, weather_canvas.sheet.draw_BANG_.call(null, contents, buffer, cljs.core.map.call(null, cljs.core._PLUS_, sub_offset, offset)), iter__11301.call(null, cljs.core.rest.call(null, s__11302__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3494__auto__.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "layers", "layers", 4199139508)).call(null, sheet)))
  }();
  return cljs.core.apply.call(null, cljs.core.map, cljs.core.max, subdimensions)
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "group", "group", 1112533489), function(shape, buffer, offset) {
  if(cljs.core.truth_((new cljs.core.Keyword(null, "drawn", "drawn", 1109749532)).call(null, shape))) {
    (new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167)).call(null, shape)
  }else {
  }
  var dir = (new cljs.core.Keyword(null, "direction", "direction", 4346280689)).call(null, shape);
  var forward = weather_canvas.sheet.make_projection.call(null, dir);
  var sideways = function(dir, forward) {
    return function(dim) {
      return cljs.core.map.call(null, function(dir, forward) {
        return function(p1__11310_SHARP_) {
          return Math.abs(p1__11310_SHARP_)
        }
      }(dir, forward), weather_canvas.sheet.make_projection.call(null, 1 + dir).call(null, dim))
    }
  }(dir, forward);
  var between = (new cljs.core.Keyword(null, "interleave", "interleave", 3715991245)).call(null, shape);
  var contents = cljs.core.not.call(null, between) ? (new cljs.core.Keyword(null, "content", "content", 1965434859)).call(null, shape) : cljs.core.butlast.call(null, cljs.core.flatten.call(null, cljs.core.map.call(null, cljs.core.vector, (new cljs.core.Keyword(null, "content", "content", 1965434859)).call(null, shape), cljs.core.repeat.call(null, between))));
  var subshapes = contents;
  var suboffset = offset;
  var dimensions = cljs.core.PersistentVector.fromArray([0, 0], true);
  while(true) {
    if(cljs.core.not.call(null, cljs.core.first.call(null, subshapes))) {
      return(new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167)).call(null, cljs.core.assoc.call(null, shape, new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167), dimensions, new cljs.core.Keyword(null, "drawn", "drawn", 1109749532), true))
    }else {
      var sub_dimension = weather_canvas.sheet.draw_BANG_.call(null, cljs.core.first.call(null, subshapes), buffer, suboffset);
      var new_width = function() {
        var x__3116__auto__ = sideways.call(null, sub_dimension);
        var y__3117__auto__ = sideways.call(null, dimensions);
        return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
      }();
      var G__11311 = cljs.core.rest.call(null, subshapes);
      var G__11312 = cljs.core.map.call(null, cljs.core._PLUS_, forward.call(null, sub_dimension), suboffset);
      var G__11313 = cljs.core.map.call(null, cljs.core._PLUS_, forward.call(null, dimensions), cljs.core.map.call(null, cljs.core._PLUS_, forward.call(null, sub_dimension), new_width));
      subshapes = G__11311;
      suboffset = G__11312;
      dimensions = G__11313;
      continue
    }
    break
  }
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "text", "text", 1017460895), function(shape, buffer, offset) {
  return weather_canvas.canvas_buffer.draw_text.call(null, buffer, (new cljs.core.Keyword(null, "string", "string", 4416885635)).call(null, shape), offset, (new cljs.core.Keyword(null, "font-size", "font-size", 3722789425)).call(null, shape), (new cljs.core.Keyword(null, "color", "color", 1108746965)).call(null, shape))
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "gap", "gap", 1014006344), function(shape, buffer, offset) {
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).call(null, shape)
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "square", "square", 4414196879), function(shape, buffer, offset) {
  weather_canvas.canvas_buffer.draw_rectangle.call(null, buffer, offset, (new cljs.core.Keyword(null, "size", "size", 1017434995)).call(null, shape), (new cljs.core.Keyword(null, "color", "color", 1108746965)).call(null, shape));
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).call(null, shape)
});
weather_canvas.sheet.unit_vector = function unit_vector(direction) {
  return cljs.core.get.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([1, 0], true), cljs.core.PersistentVector.fromArray([0, -1], true), cljs.core.PersistentVector.fromArray([-1, 0], true), cljs.core.PersistentVector.fromArray([0, 1], true)], true), cljs.core.mod.call(null, direction, 4))
};
weather_canvas.sheet.make_direction = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "right", "right", 1122416014), 0, new cljs.core.Keyword(null, "up", "up", 1013907981), 1, new cljs.core.Keyword(null, "left", "left", 1017222009), 2, new cljs.core.Keyword(null, "down", "down", 1016993812), 3], true);
weather_canvas.sheet.make_projection = function make_projection(direction) {
  return function(dimension) {
    return cljs.core.map.call(null, cljs.core._STAR_, weather_canvas.sheet.unit_vector.call(null, direction), dimension)
  }
};
goog.provide("weather_canvas.weather");
goog.require("cljs.core");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.sheet");
goog.require("cljs.core.async");
goog.require("weather_canvas.sheet");
goog.require("weather_canvas.canvas_buffer");
goog.require("cljs.core.async");
goog.require("weather_canvas.gradient");
goog.require("goog.dom");
goog.require("fmi.metolib");
weather_canvas.weather.api_key = "9f1313c1-c123-40ad-9490-f25428b14bcf";
weather_canvas.weather.year_data = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
weather_canvas.weather.years_to_fetch = cljs.core.atom.call(null, 0);
weather_canvas.weather.main_group = cljs.core.atom.call(null, null);
weather_canvas.weather.report_status = function report_status(message) {
  return goog.dom.setTextContent(goog.dom.getElement("status-report"), message)
};
weather_canvas.weather.c = cljs.core.async.chan.call(null);
weather_canvas.weather.c_msg = cljs.core.async.chan.call(null);
var c__5205__auto___11497 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function() {
  var f__5206__auto__ = function() {
    var switch__5155__auto__ = function(state_11478) {
      var state_val_11479 = state_11478[1];
      if(state_val_11479 === 1) {
        var state_11478__$1 = state_11478;
        var statearr_11480_11498 = state_11478__$1;
        statearr_11480_11498[2] = null;
        statearr_11480_11498[1] = 2;
        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
      }else {
        if(state_val_11479 === 2) {
          var state_11478__$1 = state_11478;
          if(true) {
            var statearr_11481_11499 = state_11478__$1;
            statearr_11481_11499[1] = 4
          }else {
            var statearr_11482_11500 = state_11478__$1;
            statearr_11482_11500[1] = 5
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_11479 === 3) {
            var inst_11476 = state_11478[2];
            var state_11478__$1 = state_11478;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11478__$1, inst_11476)
          }else {
            if(state_val_11479 === 4) {
              var inst_11455 = cljs.core.async.timeout.call(null, 5);
              var state_11478__$1 = state_11478;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11478__$1, 7, inst_11455)
            }else {
              if(state_val_11479 === 5) {
                var state_11478__$1 = state_11478;
                var statearr_11483_11501 = state_11478__$1;
                statearr_11483_11501[2] = null;
                statearr_11483_11501[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_11479 === 6) {
                  var inst_11474 = state_11478[2];
                  var state_11478__$1 = state_11478;
                  var statearr_11484_11502 = state_11478__$1;
                  statearr_11484_11502[2] = inst_11474;
                  statearr_11484_11502[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_11479 === 7) {
                    var inst_11457 = state_11478[2];
                    var state_11478__$1 = function() {
                      var statearr_11485 = state_11478;
                      statearr_11485[5] = inst_11457;
                      return statearr_11485
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11478__$1, 8, weather_canvas.weather.c_msg)
                  }else {
                    if(state_val_11479 === 8) {
                      var inst_11459 = state_11478[2];
                      var inst_11460 = cljs.core.deref.call(null, weather_canvas.weather.years_to_fetch);
                      var inst_11461 = cljs.core._EQ_.call(null, inst_11460, 0);
                      var state_11478__$1 = function() {
                        var statearr_11486 = state_11478;
                        statearr_11486[6] = inst_11459;
                        return statearr_11486
                      }();
                      if(inst_11461) {
                        var statearr_11487_11503 = state_11478__$1;
                        statearr_11487_11503[1] = 9
                      }else {
                        var statearr_11488_11504 = state_11478__$1;
                        statearr_11488_11504[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_11479 === 9) {
                        var inst_11463 = weather_canvas.weather.report_status.call(null, "Finished.");
                        var inst_11464 = cljs.core.async.close_BANG_.call(null, weather_canvas.weather.c_msg);
                        var state_11478__$1 = function() {
                          var statearr_11489 = state_11478;
                          statearr_11489[7] = inst_11463;
                          return statearr_11489
                        }();
                        var statearr_11490_11505 = state_11478__$1;
                        statearr_11490_11505[2] = inst_11464;
                        statearr_11490_11505[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_11479 === 10) {
                          var inst_11466 = cljs.core.swap_BANG_.call(null, weather_canvas.weather.years_to_fetch, cljs.core._, 1);
                          var inst_11467 = [cljs.core.str("Drawing, "), cljs.core.str(inst_11466), cljs.core.str(" to go ")].join("");
                          var inst_11468 = weather_canvas.weather.report_status.call(null, inst_11467);
                          var state_11478__$1 = state_11478;
                          var statearr_11491_11506 = state_11478__$1;
                          statearr_11491_11506[2] = inst_11468;
                          statearr_11491_11506[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_11479 === 11) {
                            var inst_11470 = state_11478[2];
                            var state_11478__$1 = function() {
                              var statearr_11492 = state_11478;
                              statearr_11492[8] = inst_11470;
                              return statearr_11492
                            }();
                            var statearr_11493_11507 = state_11478__$1;
                            statearr_11493_11507[2] = null;
                            statearr_11493_11507[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            return null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    return function(switch__5155__auto__) {
      return function() {
        var state_machine__5156__auto__ = null;
        var state_machine__5156__auto____0 = function() {
          var statearr_11495 = new Array(9);
          statearr_11495[0] = state_machine__5156__auto__;
          statearr_11495[1] = 1;
          return statearr_11495
        };
        var state_machine__5156__auto____1 = function(state_11478) {
          while(true) {
            var result__5157__auto__ = switch__5155__auto__.call(null, state_11478);
            if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
              continue
            }else {
              return result__5157__auto__
            }
            break
          }
        };
        state_machine__5156__auto__ = function(state_11478) {
          switch(arguments.length) {
            case 0:
              return state_machine__5156__auto____0.call(this);
            case 1:
              return state_machine__5156__auto____1.call(this, state_11478)
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
        return state_machine__5156__auto__
      }()
    }(switch__5155__auto__)
  }();
  var state__5207__auto__ = function() {
    var statearr_11496 = f__5206__auto__.call(null);
    statearr_11496[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___11497;
    return statearr_11496
  }();
  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
});
weather_canvas.weather.listen_results_async = function listen_results_async() {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_11756) {
        var state_val_11757 = state_11756[1];
        if(state_val_11757 === 1) {
          var inst_11656 = null;
          var state_11756__$1 = function() {
            var statearr_11758 = state_11756;
            statearr_11758[5] = inst_11656;
            return statearr_11758
          }();
          var statearr_11759_11803 = state_11756__$1;
          statearr_11759_11803[2] = null;
          statearr_11759_11803[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_11757 === 2) {
            var inst_11656 = state_11756[5];
            var inst_11658 = inst_11656 == null;
            var inst_11659 = cljs.core.not.call(null, inst_11658);
            var state_11756__$1 = state_11756;
            if(inst_11659) {
              var statearr_11760_11804 = state_11756__$1;
              statearr_11760_11804[1] = 4
            }else {
              var statearr_11761_11805 = state_11756__$1;
              statearr_11761_11805[1] = 5
            }
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_11757 === 3) {
              var inst_11754 = state_11756[2];
              var state_11756__$1 = state_11756;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11756__$1, inst_11754)
            }else {
              if(state_val_11757 === 4) {
                var inst_11656 = state_11756[5];
                var inst_11662 = cljs.core.seq_QMARK_.call(null, inst_11656);
                var state_11756__$1 = state_11756;
                if(inst_11662) {
                  var statearr_11762_11806 = state_11756__$1;
                  statearr_11762_11806[1] = 7
                }else {
                  var statearr_11763_11807 = state_11756__$1;
                  statearr_11763_11807[1] = 8
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_11757 === 5) {
                  var state_11756__$1 = state_11756;
                  var statearr_11764_11808 = state_11756__$1;
                  statearr_11764_11808[2] = null;
                  statearr_11764_11808[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_11757 === 6) {
                    var inst_11744 = state_11756[2];
                    var state_11756__$1 = function() {
                      var statearr_11765 = state_11756;
                      statearr_11765[6] = inst_11744;
                      return statearr_11765
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11756__$1, 24, weather_canvas.weather.c_msg, "done")
                  }else {
                    if(state_val_11757 === 7) {
                      var inst_11656 = state_11756[5];
                      var inst_11664 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11656);
                      var state_11756__$1 = state_11756;
                      var statearr_11766_11809 = state_11756__$1;
                      statearr_11766_11809[2] = inst_11664;
                      statearr_11766_11809[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_11757 === 8) {
                        var inst_11656 = state_11756[5];
                        var state_11756__$1 = state_11756;
                        var statearr_11767_11810 = state_11756__$1;
                        statearr_11767_11810[2] = inst_11656;
                        statearr_11767_11810[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_11757 === 9) {
                          var inst_11667 = state_11756[7];
                          var inst_11668 = state_11756[8];
                          var inst_11667__$1 = state_11756[2];
                          var inst_11668__$1 = cljs.core.get.call(null, inst_11667__$1, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782));
                          var inst_11669 = cljs.core.get.call(null, inst_11667__$1, new cljs.core.Keyword(null, "context", "context", 1965435169));
                          var inst_11670 = cljs.core.get.call(null, inst_11667__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
                          var inst_11671 = cljs.core.get.call(null, inst_11667__$1, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582));
                          var inst_11672 = cljs.core.get.call(null, inst_11667__$1, new cljs.core.Keyword(null, "errors", "errors", 4014236381));
                          var inst_11673 = cljs.core.get.call(null, inst_11667__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
                          var state_11756__$1 = function() {
                            var statearr_11768 = state_11756;
                            statearr_11768[9] = inst_11669;
                            statearr_11768[10] = inst_11670;
                            statearr_11768[11] = inst_11671;
                            statearr_11768[12] = inst_11673;
                            statearr_11768[7] = inst_11667__$1;
                            statearr_11768[13] = inst_11672;
                            statearr_11768[8] = inst_11668__$1;
                            return statearr_11768
                          }();
                          if(cljs.core.truth_(inst_11668__$1)) {
                            var statearr_11769_11811 = state_11756__$1;
                            statearr_11769_11811[1] = 10
                          }else {
                            var statearr_11770_11812 = state_11756__$1;
                            statearr_11770_11812[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_11757 === 10) {
                            var state_11756__$1 = state_11756;
                            var statearr_11771_11813 = state_11756__$1;
                            statearr_11771_11813[2] = cljs.core.sort;
                            statearr_11771_11813[1] = 12;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_11757 === 11) {
                              var state_11756__$1 = state_11756;
                              var statearr_11772_11814 = state_11756__$1;
                              statearr_11772_11814[2] = cljs.core.identity;
                              statearr_11772_11814[1] = 12;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_11757 === 12) {
                                var inst_11669 = state_11756[9];
                                var inst_11656 = state_11756[5];
                                var inst_11670 = state_11756[10];
                                var inst_11671 = state_11756[11];
                                var inst_11673 = state_11756[12];
                                var inst_11667 = state_11756[7];
                                var inst_11672 = state_11756[13];
                                var inst_11668 = state_11756[8];
                                var inst_11677 = state_11756[2];
                                var inst_11682 = cljs.core.range.call(null);
                                var inst_11683 = function() {
                                  var preprocess = inst_11677;
                                  var data = inst_11673;
                                  var errors = inst_11672;
                                  var attribute = inst_11671;
                                  var offset = inst_11670;
                                  var context = inst_11669;
                                  var sorting = inst_11668;
                                  var map__11661 = inst_11667;
                                  var parameters = inst_11656;
                                  return function(preprocess, data, errors, attribute, offset, context, sorting, map__11661, parameters, inst_11669, inst_11656, inst_11670, inst_11671, inst_11673, inst_11667, inst_11672, inst_11668, inst_11677, inst_11682, state_val_11757) {
                                    return function(p1__11508_SHARP_) {
                                      return p1__11508_SHARP_.value
                                    }
                                  }(preprocess, data, errors, attribute, offset, context, sorting, map__11661, parameters, inst_11669, inst_11656, inst_11670, inst_11671, inst_11673, inst_11667, inst_11672, inst_11668, inst_11677, inst_11682, state_val_11757)
                                }();
                                var inst_11684 = inst_11673.locations;
                                var inst_11685 = cljs.core.nth.call(null, inst_11684, 0);
                                var inst_11686 = inst_11685.data;
                                var inst_11687 = inst_11686[inst_11671];
                                var inst_11688 = inst_11687.timeValuePairs;
                                var inst_11689 = cljs.core.map.call(null, inst_11683, inst_11688);
                                var inst_11690 = inst_11677.call(null, inst_11689);
                                var inst_11691 = cljs.core.map.call(null, cljs.core.list, inst_11682, inst_11690);
                                var inst_11692 = cljs.core.seq.call(null, inst_11691);
                                var inst_11693 = inst_11692;
                                var inst_11694 = null;
                                var inst_11695 = 0;
                                var inst_11696 = 0;
                                var state_11756__$1 = function() {
                                  var statearr_11773 = state_11756;
                                  statearr_11773[14] = inst_11693;
                                  statearr_11773[15] = inst_11696;
                                  statearr_11773[16] = inst_11695;
                                  statearr_11773[17] = inst_11694;
                                  return statearr_11773
                                }();
                                var statearr_11774_11815 = state_11756__$1;
                                statearr_11774_11815[2] = null;
                                statearr_11774_11815[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_11757 === 13) {
                                  var inst_11696 = state_11756[15];
                                  var inst_11695 = state_11756[16];
                                  var inst_11698 = inst_11696 < inst_11695;
                                  var inst_11699 = inst_11698;
                                  var state_11756__$1 = state_11756;
                                  if(cljs.core.truth_(inst_11699)) {
                                    var statearr_11778_11816 = state_11756__$1;
                                    statearr_11778_11816[1] = 15
                                  }else {
                                    var statearr_11779_11817 = state_11756__$1;
                                    statearr_11779_11817[1] = 16
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_11757 === 14) {
                                    var inst_11741 = state_11756[2];
                                    var state_11756__$1 = state_11756;
                                    var statearr_11780_11818 = state_11756__$1;
                                    statearr_11780_11818[2] = inst_11741;
                                    statearr_11780_11818[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_11757 === 15) {
                                      var inst_11693 = state_11756[14];
                                      var inst_11669 = state_11756[9];
                                      var inst_11696 = state_11756[15];
                                      var inst_11695 = state_11756[16];
                                      var inst_11694 = state_11756[17];
                                      var inst_11670 = state_11756[10];
                                      var inst_11702 = cljs.core._nth.call(null, inst_11694, inst_11696);
                                      var inst_11703 = cljs.core.nth.call(null, inst_11702, 0, null);
                                      var inst_11704 = cljs.core.nth.call(null, inst_11702, 1, null);
                                      var inst_11705 = weather_canvas.weather.temperature_to_color.call(null, inst_11704, weather_canvas.gradient.black_white_2);
                                      var inst_11706 = inst_11669.fillStyle = inst_11705;
                                      var inst_11707 = weather_canvas.canvas_buffer.size_x * inst_11703;
                                      var inst_11708 = weather_canvas.canvas_buffer.size_y * inst_11670;
                                      var inst_11709 = inst_11669.fillRect(inst_11707, inst_11708, weather_canvas.canvas_buffer.size_x, weather_canvas.canvas_buffer.size_y);
                                      var inst_11710 = inst_11696 + 1;
                                      var tmp11775 = inst_11693;
                                      var tmp11776 = inst_11695;
                                      var tmp11777 = inst_11694;
                                      var inst_11693__$1 = tmp11775;
                                      var inst_11694__$1 = tmp11777;
                                      var inst_11695__$1 = tmp11776;
                                      var inst_11696__$1 = inst_11710;
                                      var state_11756__$1 = function() {
                                        var statearr_11781 = state_11756;
                                        statearr_11781[14] = inst_11693__$1;
                                        statearr_11781[18] = inst_11709;
                                        statearr_11781[19] = inst_11706;
                                        statearr_11781[15] = inst_11696__$1;
                                        statearr_11781[16] = inst_11695__$1;
                                        statearr_11781[17] = inst_11694__$1;
                                        return statearr_11781
                                      }();
                                      var statearr_11782_11819 = state_11756__$1;
                                      statearr_11782_11819[2] = null;
                                      statearr_11782_11819[1] = 13;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_11757 === 16) {
                                        var inst_11693 = state_11756[14];
                                        var inst_11713 = state_11756[20];
                                        var inst_11713__$1 = cljs.core.seq.call(null, inst_11693);
                                        var state_11756__$1 = function() {
                                          var statearr_11783 = state_11756;
                                          statearr_11783[20] = inst_11713__$1;
                                          return statearr_11783
                                        }();
                                        if(inst_11713__$1) {
                                          var statearr_11784_11820 = state_11756__$1;
                                          statearr_11784_11820[1] = 18
                                        }else {
                                          var statearr_11785_11821 = state_11756__$1;
                                          statearr_11785_11821[1] = 19
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_11757 === 17) {
                                          var inst_11739 = state_11756[2];
                                          var state_11756__$1 = state_11756;
                                          var statearr_11786_11822 = state_11756__$1;
                                          statearr_11786_11822[2] = inst_11739;
                                          statearr_11786_11822[1] = 14;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_11757 === 18) {
                                            var inst_11713 = state_11756[20];
                                            var inst_11715 = cljs.core.chunked_seq_QMARK_.call(null, inst_11713);
                                            var state_11756__$1 = state_11756;
                                            if(inst_11715) {
                                              var statearr_11787_11823 = state_11756__$1;
                                              statearr_11787_11823[1] = 21
                                            }else {
                                              var statearr_11788_11824 = state_11756__$1;
                                              statearr_11788_11824[1] = 22
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_11757 === 19) {
                                              var state_11756__$1 = state_11756;
                                              var statearr_11789_11825 = state_11756__$1;
                                              statearr_11789_11825[2] = null;
                                              statearr_11789_11825[1] = 20;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_11757 === 20) {
                                                var inst_11737 = state_11756[2];
                                                var state_11756__$1 = state_11756;
                                                var statearr_11790_11826 = state_11756__$1;
                                                statearr_11790_11826[2] = inst_11737;
                                                statearr_11790_11826[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_11757 === 21) {
                                                  var inst_11713 = state_11756[20];
                                                  var inst_11717 = cljs.core.chunk_first.call(null, inst_11713);
                                                  var inst_11718 = cljs.core.chunk_rest.call(null, inst_11713);
                                                  var inst_11719 = cljs.core.count.call(null, inst_11717);
                                                  var inst_11693 = inst_11718;
                                                  var inst_11694 = inst_11717;
                                                  var inst_11695 = inst_11719;
                                                  var inst_11696 = 0;
                                                  var state_11756__$1 = function() {
                                                    var statearr_11791 = state_11756;
                                                    statearr_11791[14] = inst_11693;
                                                    statearr_11791[15] = inst_11696;
                                                    statearr_11791[16] = inst_11695;
                                                    statearr_11791[17] = inst_11694;
                                                    return statearr_11791
                                                  }();
                                                  var statearr_11792_11827 = state_11756__$1;
                                                  statearr_11792_11827[2] = null;
                                                  statearr_11792_11827[1] = 13;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_11757 === 22) {
                                                    var inst_11669 = state_11756[9];
                                                    var inst_11713 = state_11756[20];
                                                    var inst_11670 = state_11756[10];
                                                    var inst_11723 = cljs.core.first.call(null, inst_11713);
                                                    var inst_11724 = cljs.core.nth.call(null, inst_11723, 0, null);
                                                    var inst_11725 = cljs.core.nth.call(null, inst_11723, 1, null);
                                                    var inst_11726 = weather_canvas.weather.temperature_to_color.call(null, inst_11725, weather_canvas.gradient.black_white_2);
                                                    var inst_11727 = inst_11669.fillStyle = inst_11726;
                                                    var inst_11728 = weather_canvas.canvas_buffer.size_x * inst_11724;
                                                    var inst_11729 = weather_canvas.canvas_buffer.size_y * inst_11670;
                                                    var inst_11730 = inst_11669.fillRect(inst_11728, inst_11729, weather_canvas.canvas_buffer.size_x, weather_canvas.canvas_buffer.size_y);
                                                    var inst_11731 = cljs.core.next.call(null, inst_11713);
                                                    var inst_11693 = inst_11731;
                                                    var inst_11694 = null;
                                                    var inst_11695 = 0;
                                                    var inst_11696 = 0;
                                                    var state_11756__$1 = function() {
                                                      var statearr_11793 = state_11756;
                                                      statearr_11793[14] = inst_11693;
                                                      statearr_11793[21] = inst_11730;
                                                      statearr_11793[15] = inst_11696;
                                                      statearr_11793[16] = inst_11695;
                                                      statearr_11793[17] = inst_11694;
                                                      statearr_11793[22] = inst_11727;
                                                      return statearr_11793
                                                    }();
                                                    var statearr_11794_11828 = state_11756__$1;
                                                    statearr_11794_11828[2] = null;
                                                    statearr_11794_11828[1] = 13;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_11757 === 23) {
                                                      var inst_11734 = state_11756[2];
                                                      var state_11756__$1 = state_11756;
                                                      var statearr_11795_11829 = state_11756__$1;
                                                      statearr_11795_11829[2] = inst_11734;
                                                      statearr_11795_11829[1] = 20;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_11757 === 24) {
                                                        var inst_11746 = state_11756[2];
                                                        var inst_11747 = cljs.core.async.timeout.call(null, 10);
                                                        var state_11756__$1 = function() {
                                                          var statearr_11796 = state_11756;
                                                          statearr_11796[23] = inst_11746;
                                                          return statearr_11796
                                                        }();
                                                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11756__$1, 25, inst_11747)
                                                      }else {
                                                        if(state_val_11757 === 25) {
                                                          var inst_11749 = state_11756[2];
                                                          var state_11756__$1 = function() {
                                                            var statearr_11797 = state_11756;
                                                            statearr_11797[24] = inst_11749;
                                                            return statearr_11797
                                                          }();
                                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11756__$1, 26, weather_canvas.weather.c)
                                                        }else {
                                                          if(state_val_11757 === 26) {
                                                            var inst_11751 = state_11756[2];
                                                            var inst_11656 = inst_11751;
                                                            var state_11756__$1 = function() {
                                                              var statearr_11798 = state_11756;
                                                              statearr_11798[5] = inst_11656;
                                                              return statearr_11798
                                                            }();
                                                            var statearr_11799_11830 = state_11756__$1;
                                                            statearr_11799_11830[2] = null;
                                                            statearr_11799_11830[1] = 2;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_11801 = new Array(25);
            statearr_11801[0] = state_machine__5156__auto__;
            statearr_11801[1] = 1;
            return statearr_11801
          };
          var state_machine__5156__auto____1 = function(state_11756) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_11756);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_11756) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_11756)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_11802 = f__5206__auto__.call(null);
      statearr_11802[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_11802
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.weather.listen_results_async_sheet = function listen_results_async_sheet() {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_11965) {
        var state_val_11966 = state_11965[1];
        if(state_val_11966 === 1) {
          var inst_11911 = null;
          var state_11965__$1 = function() {
            var statearr_11967 = state_11965;
            statearr_11967[5] = inst_11911;
            return statearr_11967
          }();
          var statearr_11968_11990 = state_11965__$1;
          statearr_11968_11990[2] = null;
          statearr_11968_11990[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_11966 === 2) {
            var inst_11911 = state_11965[5];
            var inst_11913 = inst_11911 == null;
            var inst_11914 = cljs.core.not.call(null, inst_11913);
            var state_11965__$1 = state_11965;
            if(inst_11914) {
              var statearr_11969_11991 = state_11965__$1;
              statearr_11969_11991[1] = 4
            }else {
              var statearr_11970_11992 = state_11965__$1;
              statearr_11970_11992[1] = 5
            }
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_11966 === 3) {
              var inst_11963 = state_11965[2];
              var state_11965__$1 = state_11965;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11965__$1, inst_11963)
            }else {
              if(state_val_11966 === 4) {
                var inst_11911 = state_11965[5];
                var inst_11917 = cljs.core.seq_QMARK_.call(null, inst_11911);
                var state_11965__$1 = state_11965;
                if(inst_11917) {
                  var statearr_11971_11993 = state_11965__$1;
                  statearr_11971_11993[1] = 7
                }else {
                  var statearr_11972_11994 = state_11965__$1;
                  statearr_11972_11994[1] = 8
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_11966 === 5) {
                  var state_11965__$1 = state_11965;
                  var statearr_11973_11995 = state_11965__$1;
                  statearr_11973_11995[2] = null;
                  statearr_11973_11995[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_11966 === 6) {
                    var inst_11953 = state_11965[2];
                    var state_11965__$1 = function() {
                      var statearr_11974 = state_11965;
                      statearr_11974[6] = inst_11953;
                      return statearr_11974
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11965__$1, 13, weather_canvas.weather.c_msg, "done")
                  }else {
                    if(state_val_11966 === 7) {
                      var inst_11911 = state_11965[5];
                      var inst_11919 = cljs.core.apply.call(null, cljs.core.hash_map, inst_11911);
                      var state_11965__$1 = state_11965;
                      var statearr_11975_11996 = state_11965__$1;
                      statearr_11975_11996[2] = inst_11919;
                      statearr_11975_11996[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_11966 === 8) {
                        var inst_11911 = state_11965[5];
                        var state_11965__$1 = state_11965;
                        var statearr_11976_11997 = state_11965__$1;
                        statearr_11976_11997[2] = inst_11911;
                        statearr_11976_11997[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_11966 === 9) {
                          var inst_11923 = state_11965[7];
                          var inst_11922 = state_11965[8];
                          var inst_11922__$1 = state_11965[2];
                          var inst_11923__$1 = cljs.core.get.call(null, inst_11922__$1, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782));
                          var inst_11924 = cljs.core.get.call(null, inst_11922__$1, new cljs.core.Keyword(null, "context", "context", 1965435169));
                          var inst_11925 = cljs.core.get.call(null, inst_11922__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
                          var inst_11926 = cljs.core.get.call(null, inst_11922__$1, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582));
                          var inst_11927 = cljs.core.get.call(null, inst_11922__$1, new cljs.core.Keyword(null, "errors", "errors", 4014236381));
                          var inst_11928 = cljs.core.get.call(null, inst_11922__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
                          var state_11965__$1 = function() {
                            var statearr_11977 = state_11965;
                            statearr_11977[7] = inst_11923__$1;
                            statearr_11977[8] = inst_11922__$1;
                            statearr_11977[9] = inst_11925;
                            statearr_11977[10] = inst_11924;
                            statearr_11977[11] = inst_11928;
                            statearr_11977[12] = inst_11926;
                            statearr_11977[13] = inst_11927;
                            return statearr_11977
                          }();
                          if(cljs.core.truth_(inst_11923__$1)) {
                            var statearr_11978_11998 = state_11965__$1;
                            statearr_11978_11998[1] = 10
                          }else {
                            var statearr_11979_11999 = state_11965__$1;
                            statearr_11979_11999[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_11966 === 10) {
                            var state_11965__$1 = state_11965;
                            var statearr_11980_12000 = state_11965__$1;
                            statearr_11980_12000[2] = cljs.core.sort;
                            statearr_11980_12000[1] = 12;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_11966 === 11) {
                              var state_11965__$1 = state_11965;
                              var statearr_11981_12001 = state_11965__$1;
                              statearr_11981_12001[2] = cljs.core.identity;
                              statearr_11981_12001[1] = 12;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_11966 === 12) {
                                var inst_11911 = state_11965[5];
                                var inst_11923 = state_11965[7];
                                var inst_11922 = state_11965[8];
                                var inst_11925 = state_11965[9];
                                var inst_11924 = state_11965[10];
                                var inst_11928 = state_11965[11];
                                var inst_11926 = state_11965[12];
                                var inst_11927 = state_11965[13];
                                var inst_11932 = state_11965[2];
                                var inst_11933 = cljs.core.vector.call(null, new cljs.core.Keyword(null, "content", "content", 1965434859), inst_11925);
                                var inst_11934 = weather_canvas.sheet.gap.call(null, 1);
                                var inst_11939 = function() {
                                  var preprocess = inst_11932;
                                  var data = inst_11928;
                                  var errors = inst_11927;
                                  var attribute = inst_11926;
                                  var offset = inst_11925;
                                  var context = inst_11924;
                                  var sorting = inst_11923;
                                  var map__11916 = inst_11922;
                                  var parameters = inst_11911;
                                  return function(preprocess, data, errors, attribute, offset, context, sorting, map__11916, parameters, inst_11911, inst_11923, inst_11922, inst_11925, inst_11924, inst_11928, inst_11926, inst_11927, inst_11932, inst_11933, inst_11934, state_val_11966) {
                                    return function iter__11935(s__11936) {
                                      return new cljs.core.LazySeq(null, false, function(preprocess, data, errors, attribute, offset, context, sorting, map__11916, parameters, inst_11911, inst_11923, inst_11922, inst_11925, inst_11924, inst_11928, inst_11926, inst_11927, inst_11932, inst_11933, inst_11934, state_val_11966) {
                                        return function() {
                                          var s__11936__$1 = s__11936;
                                          while(true) {
                                            var temp__4092__auto__ = cljs.core.seq.call(null, s__11936__$1);
                                            if(temp__4092__auto__) {
                                              var s__11936__$2 = temp__4092__auto__;
                                              if(cljs.core.chunked_seq_QMARK_.call(null, s__11936__$2)) {
                                                var c__3492__auto__ = cljs.core.chunk_first.call(null, s__11936__$2);
                                                var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                                                var b__11938 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                                                if(function() {
                                                  var i__11937 = 0;
                                                  while(true) {
                                                    if(i__11937 < size__3493__auto__) {
                                                      var temperature = cljs.core._nth.call(null, c__3492__auto__, i__11937);
                                                      cljs.core.chunk_append.call(null, b__11938, weather_canvas.sheet.square.call(null, 2, weather_canvas.weather.temperature_to_color.call(null, temperature, weather_canvas.gradient.black_white_2)));
                                                      var G__12002 = i__11937 + 1;
                                                      i__11937 = G__12002;
                                                      continue
                                                    }else {
                                                      return true
                                                    }
                                                    break
                                                  }
                                                }()) {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11938), iter__11935.call(null, cljs.core.chunk_rest.call(null, s__11936__$2)))
                                                }else {
                                                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11938), null)
                                                }
                                              }else {
                                                var temperature = cljs.core.first.call(null, s__11936__$2);
                                                return cljs.core.cons.call(null, weather_canvas.sheet.square.call(null, 2, weather_canvas.weather.temperature_to_color.call(null, temperature, weather_canvas.gradient.black_white_2)), iter__11935.call(null, cljs.core.rest.call(null, s__11936__$2)))
                                              }
                                            }else {
                                              return null
                                            }
                                            break
                                          }
                                        }
                                      }(preprocess, data, errors, attribute, offset, context, sorting, map__11916, parameters, inst_11911, inst_11923, inst_11922, inst_11925, inst_11924, inst_11928, inst_11926, inst_11927, inst_11932, inst_11933, inst_11934, state_val_11966), null)
                                    }
                                  }(preprocess, data, errors, attribute, offset, context, sorting, map__11916, parameters, inst_11911, inst_11923, inst_11922, inst_11925, inst_11924, inst_11928, inst_11926, inst_11927, inst_11932, inst_11933, inst_11934, state_val_11966)
                                }();
                                var inst_11940 = function() {
                                  var data = inst_11928;
                                  var map__11916 = inst_11922;
                                  var context = inst_11924;
                                  var offset = inst_11925;
                                  var iter__3494__auto__ = inst_11939;
                                  var preprocess = inst_11932;
                                  var errors = inst_11927;
                                  var parameters = inst_11911;
                                  var attribute = inst_11926;
                                  var sorting = inst_11923;
                                  return function(data, map__11916, context, offset, iter__3494__auto__, preprocess, errors, parameters, attribute, sorting, inst_11911, inst_11923, inst_11922, inst_11925, inst_11924, inst_11928, inst_11926, inst_11927, inst_11932, inst_11933, inst_11934, inst_11939, state_val_11966) {
                                    return function(p1__11831_SHARP_) {
                                      return p1__11831_SHARP_.value
                                    }
                                  }(data, map__11916, context, offset, iter__3494__auto__, preprocess, errors, parameters, attribute, sorting, inst_11911, inst_11923, inst_11922, inst_11925, inst_11924, inst_11928, inst_11926, inst_11927, inst_11932, inst_11933, inst_11934, inst_11939, state_val_11966)
                                }();
                                var inst_11941 = inst_11928.locations;
                                var inst_11942 = cljs.core.nth.call(null, inst_11941, 0);
                                var inst_11943 = inst_11942.data;
                                var inst_11944 = inst_11943[inst_11926];
                                var inst_11945 = inst_11944.timeValuePairs;
                                var inst_11946 = cljs.core.map.call(null, inst_11940, inst_11945);
                                var inst_11947 = inst_11932.call(null, inst_11946);
                                var inst_11948 = inst_11939.call(null, inst_11947);
                                var inst_11949 = weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), inst_11934, new cljs.core.Keyword(null, "content", "content", 1965434859), inst_11948);
                                var inst_11950 = cljs.core.swap_BANG_.call(null, weather_canvas.weather.main_group, cljs.core.assoc_in, inst_11933, inst_11949);
                                var state_11965__$1 = state_11965;
                                var statearr_11982_12003 = state_11965__$1;
                                statearr_11982_12003[2] = inst_11950;
                                statearr_11982_12003[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_11966 === 13) {
                                  var inst_11955 = state_11965[2];
                                  var inst_11956 = cljs.core.async.timeout.call(null, 10);
                                  var state_11965__$1 = function() {
                                    var statearr_11983 = state_11965;
                                    statearr_11983[14] = inst_11955;
                                    return statearr_11983
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11965__$1, 14, inst_11956)
                                }else {
                                  if(state_val_11966 === 14) {
                                    var inst_11958 = state_11965[2];
                                    var state_11965__$1 = function() {
                                      var statearr_11984 = state_11965;
                                      statearr_11984[15] = inst_11958;
                                      return statearr_11984
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11965__$1, 15, weather_canvas.weather.c)
                                  }else {
                                    if(state_val_11966 === 15) {
                                      var inst_11960 = state_11965[2];
                                      var inst_11911 = inst_11960;
                                      var state_11965__$1 = function() {
                                        var statearr_11985 = state_11965;
                                        statearr_11985[5] = inst_11911;
                                        return statearr_11985
                                      }();
                                      var statearr_11986_12004 = state_11965__$1;
                                      statearr_11986_12004[2] = null;
                                      statearr_11986_12004[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_11988 = new Array(16);
            statearr_11988[0] = state_machine__5156__auto__;
            statearr_11988[1] = 1;
            return statearr_11988
          };
          var state_machine__5156__auto____1 = function(state_11965) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_11965);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_11965) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_11965)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_11989 = f__5206__auto__.call(null);
      statearr_11989[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_11989
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.weather.listen_results_async_fake = function listen_results_async_fake() {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_12111) {
        var state_val_12112 = state_12111[1];
        if(state_val_12112 === 1) {
          var inst_12071 = null;
          var state_12111__$1 = function() {
            var statearr_12113 = state_12111;
            statearr_12113[5] = inst_12071;
            return statearr_12113
          }();
          var statearr_12114_12137 = state_12111__$1;
          statearr_12114_12137[2] = null;
          statearr_12114_12137[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_12112 === 2) {
            var inst_12071 = state_12111[5];
            var inst_12073 = inst_12071 == null;
            var inst_12074 = cljs.core.not.call(null, inst_12073);
            var state_12111__$1 = state_12111;
            if(inst_12074) {
              var statearr_12115_12138 = state_12111__$1;
              statearr_12115_12138[1] = 4
            }else {
              var statearr_12116_12139 = state_12111__$1;
              statearr_12116_12139[1] = 5
            }
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12112 === 3) {
              var inst_12109 = state_12111[2];
              var state_12111__$1 = state_12111;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12111__$1, inst_12109)
            }else {
              if(state_val_12112 === 4) {
                var inst_12071 = state_12111[5];
                var inst_12077 = cljs.core.seq_QMARK_.call(null, inst_12071);
                var state_12111__$1 = state_12111;
                if(inst_12077) {
                  var statearr_12117_12140 = state_12111__$1;
                  statearr_12117_12140[1] = 7
                }else {
                  var statearr_12118_12141 = state_12111__$1;
                  statearr_12118_12141[1] = 8
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_12112 === 5) {
                  var state_12111__$1 = state_12111;
                  var statearr_12119_12142 = state_12111__$1;
                  statearr_12119_12142[2] = null;
                  statearr_12119_12142[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_12112 === 6) {
                    var inst_12099 = state_12111[2];
                    var inst_12100 = cljs.core.async.timeout.call(null, 20);
                    var state_12111__$1 = function() {
                      var statearr_12120 = state_12111;
                      statearr_12120[6] = inst_12099;
                      return statearr_12120
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12111__$1, 13, inst_12100)
                  }else {
                    if(state_val_12112 === 7) {
                      var inst_12071 = state_12111[5];
                      var inst_12079 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12071);
                      var state_12111__$1 = state_12111;
                      var statearr_12121_12143 = state_12111__$1;
                      statearr_12121_12143[2] = inst_12079;
                      statearr_12121_12143[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_12112 === 8) {
                        var inst_12071 = state_12111[5];
                        var state_12111__$1 = state_12111;
                        var statearr_12122_12144 = state_12111__$1;
                        statearr_12122_12144[2] = inst_12071;
                        statearr_12122_12144[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_12112 === 9) {
                          var inst_12082 = state_12111[2];
                          var inst_12083 = cljs.core.get.call(null, inst_12082, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782));
                          var inst_12084 = cljs.core.get.call(null, inst_12082, new cljs.core.Keyword(null, "context", "context", 1965435169));
                          var inst_12085 = cljs.core.get.call(null, inst_12082, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
                          var inst_12086 = cljs.core.get.call(null, inst_12082, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582));
                          var inst_12087 = cljs.core.get.call(null, inst_12082, new cljs.core.Keyword(null, "errors", "errors", 4014236381));
                          var inst_12088 = cljs.core.get.call(null, inst_12082, new cljs.core.Keyword(null, "data", "data", 1016980252));
                          var state_12111__$1 = function() {
                            var statearr_12123 = state_12111;
                            statearr_12123[7] = inst_12088;
                            statearr_12123[8] = inst_12086;
                            statearr_12123[9] = inst_12087;
                            statearr_12123[10] = inst_12085;
                            statearr_12123[11] = inst_12084;
                            return statearr_12123
                          }();
                          if(cljs.core.truth_(inst_12083)) {
                            var statearr_12124_12145 = state_12111__$1;
                            statearr_12124_12145[1] = 10
                          }else {
                            var statearr_12125_12146 = state_12111__$1;
                            statearr_12125_12146[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_12112 === 10) {
                            var state_12111__$1 = state_12111;
                            var statearr_12126_12147 = state_12111__$1;
                            statearr_12126_12147[2] = cljs.core.sort;
                            statearr_12126_12147[1] = 12;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_12112 === 11) {
                              var state_12111__$1 = state_12111;
                              var statearr_12127_12148 = state_12111__$1;
                              statearr_12127_12148[2] = cljs.core.identity;
                              statearr_12127_12148[1] = 12;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_12112 === 12) {
                                var inst_12088 = state_12111[7];
                                var inst_12092 = state_12111[2];
                                var inst_12093 = inst_12088.locations;
                                var inst_12094 = cljs.core.nth.call(null, inst_12093, 0);
                                var inst_12095 = inst_12094.data;
                                var inst_12096 = console.log(inst_12095);
                                var state_12111__$1 = function() {
                                  var statearr_12128 = state_12111;
                                  statearr_12128[12] = inst_12092;
                                  return statearr_12128
                                }();
                                var statearr_12129_12149 = state_12111__$1;
                                statearr_12129_12149[2] = inst_12096;
                                statearr_12129_12149[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_12112 === 13) {
                                  var inst_12102 = state_12111[2];
                                  var state_12111__$1 = function() {
                                    var statearr_12130 = state_12111;
                                    statearr_12130[13] = inst_12102;
                                    return statearr_12130
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12111__$1, 14, weather_canvas.weather.c_msg, "done")
                                }else {
                                  if(state_val_12112 === 14) {
                                    var inst_12104 = state_12111[2];
                                    var state_12111__$1 = function() {
                                      var statearr_12131 = state_12111;
                                      statearr_12131[14] = inst_12104;
                                      return statearr_12131
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12111__$1, 15, weather_canvas.weather.c)
                                  }else {
                                    if(state_val_12112 === 15) {
                                      var inst_12106 = state_12111[2];
                                      var inst_12071 = inst_12106;
                                      var state_12111__$1 = function() {
                                        var statearr_12132 = state_12111;
                                        statearr_12132[5] = inst_12071;
                                        return statearr_12132
                                      }();
                                      var statearr_12133_12150 = state_12111__$1;
                                      statearr_12133_12150[2] = null;
                                      statearr_12133_12150[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_12135 = new Array(15);
            statearr_12135[0] = state_machine__5156__auto__;
            statearr_12135[1] = 1;
            return statearr_12135
          };
          var state_machine__5156__auto____1 = function(state_12111) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_12111);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_12111) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_12111)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_12136 = f__5206__auto__.call(null);
      statearr_12136[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_12136
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.weather.in_range = function in_range(point, segment) {
  var range = (new cljs.core.Keyword(null, "range", "range", 1122184367)).call(null, segment);
  var and__3941__auto__ = point >= cljs.core.first.call(null, range);
  if(and__3941__auto__) {
    return point <= cljs.core.second.call(null, range)
  }else {
    return and__3941__auto__
  }
};
weather_canvas.weather.color_string = function color_string(rgb_seq) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, "#", cljs.core.map.call(null, function(p1__12151_SHARP_) {
    return weather_canvas.weather.pad_with.call(null, (p1__12151_SHARP_ | 0).toString(16), "0", 2)
  }, rgb_seq)))
};
weather_canvas.weather.memo_color_string = cljs.core.memoize.call(null, weather_canvas.weather.color_string);
weather_canvas.weather.pad_with = function pad_with(string, char$, width) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.reverse.call(null, cljs.core.take.call(null, width, cljs.core.concat.call(null, cljs.core.reverse.call(null, string), cljs.core.repeat.call(null, char$)))))
};
weather_canvas.weather.temperature_to_color = function temperature_to_color(point, gradient) {
  var segment = cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.partial.call(null, weather_canvas.weather.in_range, point), (new cljs.core.Keyword(null, "colors", "colors", 3954028770)).call(null, gradient)));
  var color_from = (new cljs.core.Keyword(null, "from", "from", 1017056028)).call(null, segment);
  var color_to = (new cljs.core.Keyword(null, "to", "to", 1013907949)).call(null, segment);
  var range = (new cljs.core.Keyword(null, "range", "range", 1122184367)).call(null, segment);
  var range_start = cljs.core.first.call(null, range);
  var range_end = cljs.core.second.call(null, range);
  var point_in_range = (point - range_start) / (range_end - range_start);
  return weather_canvas.weather.memo_color_string.call(null, cljs.core.map.call(null, cljs.core._PLUS_, color_from, cljs.core.map.call(null, function(p1__12152_SHARP_) {
    return point_in_range * p1__12152_SHARP_
  }, cljs.core.map.call(null, cljs.core._, color_to, color_from))))
};
weather_canvas.weather.today_minus = function today_minus(days) {
  var d = new Date;
  d.setDate(d.getDate() - days);
  return d.getTime()
};
weather_canvas.weather.make_date = function make_date(year, month, day) {
  var date = new Date([cljs.core.str(year), cljs.core.str("-"), cljs.core.str(month), cljs.core.str("-"), cljs.core.str(day)].join(""));
  return new Date(date.valueOf())
};
weather_canvas.weather.draw_async = function draw_async(canvas, from, to, quantity, sorting) {
  cljs.core.swap_BANG_.call(null, weather_canvas.weather.years_to_fetch, function() {
    return 1 + (to - from)
  });
  weather_canvas.canvas_buffer.init_canvas.call(null, canvas, cljs.core.deref.call(null, weather_canvas.weather.years_to_fetch));
  weather_canvas.weather.listen_results_async.call(null);
  var context = canvas.getContext("2d");
  var seq__12181 = cljs.core.seq.call(null, cljs.core.range.call(null, from, 1 + to));
  var chunk__12182 = null;
  var count__12183 = 0;
  var i__12184 = 0;
  while(true) {
    if(i__12184 < count__12183) {
      var year = cljs.core._nth.call(null, chunk__12182, i__12184);
      var connection_12209 = new fi.fmi.metoclient.metolib.WfsConnection;
      var stored_query_id_12210 = "fmi::observations::weather::daily::multipointcoverage";
      var url_12211 = cljs.core.format.call(null, "http://data.fmi.fi/fmi-apikey/%s/wfs", weather_canvas.weather.api_key);
      var parameters_12212 = {"fmisid":100971, "requestParameter":"rrday,tday,snow,tmin,tmax", "begin":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "01", "01"), "end":weather_canvas.weather.make_date.call(null, [cljs.core.str(1 + year)].join(""), "01", "01"), "callback":function(seq__12181, chunk__12182, count__12183, i__12184, connection_12209, stored_query_id_12210, url_12211, year) {
        return function(data, errors) {
          var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12209, stored_query_id_12210, url_12211, year) {
            return function() {
              var f__5206__auto__ = function() {
                var switch__5155__auto__ = function(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12209, stored_query_id_12210, url_12211, year) {
                  return function(state_12191) {
                    var state_val_12192 = state_12191[1];
                    if(state_val_12192 === 2) {
                      var inst_12188 = state_12191[2];
                      var inst_12189 = connection_12209.disconnect();
                      var state_12191__$1 = function() {
                        var statearr_12193 = state_12191;
                        statearr_12193[5] = inst_12188;
                        return statearr_12193
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12191__$1, inst_12189)
                    }else {
                      if(state_val_12192 === 1) {
                        var inst_12185 = year - from;
                        var inst_12186 = cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), data, new cljs.core.Keyword(null, "errors", "errors", 4014236381), errors, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582), quantity, new cljs.core.Keyword(null, "offset", "offset", 4289091589), inst_12185, new cljs.core.Keyword(null, "context", "context", 1965435169), context, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782), sorting);
                        var state_12191__$1 = state_12191;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12191__$1, 2, weather_canvas.weather.c, inst_12186)
                      }else {
                        return null
                      }
                    }
                  }
                }(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12209, stored_query_id_12210, url_12211, year);
                return function(seq__12181, chunk__12182, count__12183, i__12184, switch__5155__auto__, c__5205__auto__, connection_12209, stored_query_id_12210, url_12211, year) {
                  return function() {
                    var state_machine__5156__auto__ = null;
                    var state_machine__5156__auto____0 = function() {
                      var statearr_12195 = new Array(6);
                      statearr_12195[0] = state_machine__5156__auto__;
                      statearr_12195[1] = 1;
                      return statearr_12195
                    };
                    var state_machine__5156__auto____1 = function(state_12191) {
                      while(true) {
                        var result__5157__auto__ = switch__5155__auto__.call(null, state_12191);
                        if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue
                        }else {
                          return result__5157__auto__
                        }
                        break
                      }
                    };
                    state_machine__5156__auto__ = function(state_12191) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__5156__auto____0.call(this);
                        case 1:
                          return state_machine__5156__auto____1.call(this, state_12191)
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
                    state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
                    return state_machine__5156__auto__
                  }()
                }(seq__12181, chunk__12182, count__12183, i__12184, switch__5155__auto__, c__5205__auto__, connection_12209, stored_query_id_12210, url_12211, year)
              }();
              var state__5207__auto__ = function() {
                var statearr_12196 = f__5206__auto__.call(null);
                statearr_12196[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
                return statearr_12196
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
            }
          }(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12209, stored_query_id_12210, url_12211, year));
          return c__5205__auto__
        }
      }(seq__12181, chunk__12182, count__12183, i__12184, connection_12209, stored_query_id_12210, url_12211, year)};
      if(cljs.core.truth_(connection_12209.connect(url_12211, stored_query_id_12210))) {
        connection_12209.getData(parameters_12212)
      }else {
      }
      var G__12213 = seq__12181;
      var G__12214 = chunk__12182;
      var G__12215 = count__12183;
      var G__12216 = i__12184 + 1;
      seq__12181 = G__12213;
      chunk__12182 = G__12214;
      count__12183 = G__12215;
      i__12184 = G__12216;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__12181);
      if(temp__4092__auto__) {
        var seq__12181__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12181__$1)) {
          var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__12181__$1);
          var G__12217 = cljs.core.chunk_rest.call(null, seq__12181__$1);
          var G__12218 = c__3525__auto__;
          var G__12219 = cljs.core.count.call(null, c__3525__auto__);
          var G__12220 = 0;
          seq__12181 = G__12217;
          chunk__12182 = G__12218;
          count__12183 = G__12219;
          i__12184 = G__12220;
          continue
        }else {
          var year = cljs.core.first.call(null, seq__12181__$1);
          var connection_12221 = new fi.fmi.metoclient.metolib.WfsConnection;
          var stored_query_id_12222 = "fmi::observations::weather::daily::multipointcoverage";
          var url_12223 = cljs.core.format.call(null, "http://data.fmi.fi/fmi-apikey/%s/wfs", weather_canvas.weather.api_key);
          var parameters_12224 = {"fmisid":100971, "requestParameter":"rrday,tday,snow,tmin,tmax", "begin":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "01", "01"), "end":weather_canvas.weather.make_date.call(null, [cljs.core.str(1 + year)].join(""), "01", "01"), "callback":function(seq__12181, chunk__12182, count__12183, i__12184, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__) {
            return function(data, errors) {
              var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
              cljs.core.async.impl.dispatch.run.call(null, function(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__) {
                return function() {
                  var f__5206__auto__ = function() {
                    var switch__5155__auto__ = function(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__) {
                      return function(state_12203) {
                        var state_val_12204 = state_12203[1];
                        if(state_val_12204 === 2) {
                          var inst_12200 = state_12203[2];
                          var inst_12201 = connection_12221.disconnect();
                          var state_12203__$1 = function() {
                            var statearr_12205 = state_12203;
                            statearr_12205[5] = inst_12200;
                            return statearr_12205
                          }();
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12203__$1, inst_12201)
                        }else {
                          if(state_val_12204 === 1) {
                            var inst_12197 = year - from;
                            var inst_12198 = cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), data, new cljs.core.Keyword(null, "errors", "errors", 4014236381), errors, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582), quantity, new cljs.core.Keyword(null, "offset", "offset", 4289091589), inst_12197, new cljs.core.Keyword(null, "context", "context", 1965435169), context, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782), sorting);
                            var state_12203__$1 = state_12203;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12203__$1, 2, weather_canvas.weather.c, inst_12198)
                          }else {
                            return null
                          }
                        }
                      }
                    }(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__);
                    return function(seq__12181, chunk__12182, count__12183, i__12184, switch__5155__auto__, c__5205__auto__, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__) {
                      return function() {
                        var state_machine__5156__auto__ = null;
                        var state_machine__5156__auto____0 = function() {
                          var statearr_12207 = new Array(6);
                          statearr_12207[0] = state_machine__5156__auto__;
                          statearr_12207[1] = 1;
                          return statearr_12207
                        };
                        var state_machine__5156__auto____1 = function(state_12203) {
                          while(true) {
                            var result__5157__auto__ = switch__5155__auto__.call(null, state_12203);
                            if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                              continue
                            }else {
                              return result__5157__auto__
                            }
                            break
                          }
                        };
                        state_machine__5156__auto__ = function(state_12203) {
                          switch(arguments.length) {
                            case 0:
                              return state_machine__5156__auto____0.call(this);
                            case 1:
                              return state_machine__5156__auto____1.call(this, state_12203)
                          }
                          throw new Error("Invalid arity: " + arguments.length);
                        };
                        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
                        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
                        return state_machine__5156__auto__
                      }()
                    }(seq__12181, chunk__12182, count__12183, i__12184, switch__5155__auto__, c__5205__auto__, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__)
                  }();
                  var state__5207__auto__ = function() {
                    var statearr_12208 = f__5206__auto__.call(null);
                    statearr_12208[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
                    return statearr_12208
                  }();
                  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
                }
              }(seq__12181, chunk__12182, count__12183, i__12184, c__5205__auto__, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__));
              return c__5205__auto__
            }
          }(seq__12181, chunk__12182, count__12183, i__12184, connection_12221, stored_query_id_12222, url_12223, year, seq__12181__$1, temp__4092__auto__)};
          if(cljs.core.truth_(connection_12221.connect(url_12223, stored_query_id_12222))) {
            connection_12221.getData(parameters_12224)
          }else {
          }
          var G__12225 = cljs.core.next.call(null, seq__12181__$1);
          var G__12226 = null;
          var G__12227 = 0;
          var G__12228 = 0;
          seq__12181 = G__12225;
          chunk__12182 = G__12226;
          count__12183 = G__12227;
          i__12184 = G__12228;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
weather_canvas.weather.draw_async_sheet = function draw_async_sheet(canvas, from, to, quantity, sorting) {
  var years = 1 + (to - from);
  console.log(years);
  cljs.core.reset_BANG_.call(null, weather_canvas.weather.years_to_fetch, years);
  cljs.core.reset_BANG_.call(null, weather_canvas.weather.main_group, weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "down", "down", 1016993812), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), weather_canvas.sheet.gap.call(null, 1), new cljs.core.Keyword(null, "content", "content", 1965434859), cljs.core.apply.call(null, cljs.core.vector, cljs.core.take.call(null, years, cljs.core.repeat.call(null, weather_canvas.sheet.square.call(null, weather_canvas.canvas_buffer.size_y, 
  "#666666"))))));
  weather_canvas.weather.listen_results_async_sheet.call(null);
  var seq__12257 = cljs.core.seq.call(null, cljs.core.range.call(null, from, 1 + to));
  var chunk__12258 = null;
  var count__12259 = 0;
  var i__12260 = 0;
  while(true) {
    if(i__12260 < count__12259) {
      var year = cljs.core._nth.call(null, chunk__12258, i__12260);
      var connection_12285 = new fi.fmi.metoclient.metolib.WfsConnection;
      var stored_query_id_12286 = "fmi::observations::weather::daily::multipointcoverage";
      var url_12287 = cljs.core.format.call(null, "http://data.fmi.fi/fmi-apikey/%s/wfs", weather_canvas.weather.api_key);
      var parameters_12288 = {"fmisid":100971, "requestParameter":"rrday,tday,snow,tmin,tmax", "begin":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "01", "01"), "end":weather_canvas.weather.make_date.call(null, [cljs.core.str(1 + year)].join(""), "01", "01"), "callback":function(seq__12257, chunk__12258, count__12259, i__12260, connection_12285, stored_query_id_12286, url_12287, year) {
        return function(data, errors) {
          var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12285, stored_query_id_12286, url_12287, year) {
            return function() {
              var f__5206__auto__ = function() {
                var switch__5155__auto__ = function(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12285, stored_query_id_12286, url_12287, year) {
                  return function(state_12267) {
                    var state_val_12268 = state_12267[1];
                    if(state_val_12268 === 2) {
                      var inst_12264 = state_12267[2];
                      var inst_12265 = connection_12285.disconnect();
                      var state_12267__$1 = function() {
                        var statearr_12269 = state_12267;
                        statearr_12269[5] = inst_12264;
                        return statearr_12269
                      }();
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12267__$1, inst_12265)
                    }else {
                      if(state_val_12268 === 1) {
                        var inst_12261 = year - from;
                        var inst_12262 = cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), data, new cljs.core.Keyword(null, "errors", "errors", 4014236381), errors, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582), quantity, new cljs.core.Keyword(null, "offset", "offset", 4289091589), inst_12261, new cljs.core.Keyword(null, "context", "context", 1965435169), null, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782), sorting);
                        var state_12267__$1 = state_12267;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12267__$1, 2, weather_canvas.weather.c, inst_12262)
                      }else {
                        return null
                      }
                    }
                  }
                }(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12285, stored_query_id_12286, url_12287, year);
                return function(seq__12257, chunk__12258, count__12259, i__12260, switch__5155__auto__, c__5205__auto__, connection_12285, stored_query_id_12286, url_12287, year) {
                  return function() {
                    var state_machine__5156__auto__ = null;
                    var state_machine__5156__auto____0 = function() {
                      var statearr_12271 = new Array(6);
                      statearr_12271[0] = state_machine__5156__auto__;
                      statearr_12271[1] = 1;
                      return statearr_12271
                    };
                    var state_machine__5156__auto____1 = function(state_12267) {
                      while(true) {
                        var result__5157__auto__ = switch__5155__auto__.call(null, state_12267);
                        if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                          continue
                        }else {
                          return result__5157__auto__
                        }
                        break
                      }
                    };
                    state_machine__5156__auto__ = function(state_12267) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__5156__auto____0.call(this);
                        case 1:
                          return state_machine__5156__auto____1.call(this, state_12267)
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
                    state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
                    return state_machine__5156__auto__
                  }()
                }(seq__12257, chunk__12258, count__12259, i__12260, switch__5155__auto__, c__5205__auto__, connection_12285, stored_query_id_12286, url_12287, year)
              }();
              var state__5207__auto__ = function() {
                var statearr_12272 = f__5206__auto__.call(null);
                statearr_12272[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
                return statearr_12272
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
            }
          }(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12285, stored_query_id_12286, url_12287, year));
          return c__5205__auto__
        }
      }(seq__12257, chunk__12258, count__12259, i__12260, connection_12285, stored_query_id_12286, url_12287, year)};
      if(cljs.core.truth_(connection_12285.connect(url_12287, stored_query_id_12286))) {
        connection_12285.getData(parameters_12288)
      }else {
      }
      var G__12289 = seq__12257;
      var G__12290 = chunk__12258;
      var G__12291 = count__12259;
      var G__12292 = i__12260 + 1;
      seq__12257 = G__12289;
      chunk__12258 = G__12290;
      count__12259 = G__12291;
      i__12260 = G__12292;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__12257);
      if(temp__4092__auto__) {
        var seq__12257__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__12257__$1)) {
          var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__12257__$1);
          var G__12293 = cljs.core.chunk_rest.call(null, seq__12257__$1);
          var G__12294 = c__3525__auto__;
          var G__12295 = cljs.core.count.call(null, c__3525__auto__);
          var G__12296 = 0;
          seq__12257 = G__12293;
          chunk__12258 = G__12294;
          count__12259 = G__12295;
          i__12260 = G__12296;
          continue
        }else {
          var year = cljs.core.first.call(null, seq__12257__$1);
          var connection_12297 = new fi.fmi.metoclient.metolib.WfsConnection;
          var stored_query_id_12298 = "fmi::observations::weather::daily::multipointcoverage";
          var url_12299 = cljs.core.format.call(null, "http://data.fmi.fi/fmi-apikey/%s/wfs", weather_canvas.weather.api_key);
          var parameters_12300 = {"fmisid":100971, "requestParameter":"rrday,tday,snow,tmin,tmax", "begin":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "01", "01"), "end":weather_canvas.weather.make_date.call(null, [cljs.core.str(1 + year)].join(""), "01", "01"), "callback":function(seq__12257, chunk__12258, count__12259, i__12260, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__) {
            return function(data, errors) {
              var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
              cljs.core.async.impl.dispatch.run.call(null, function(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__) {
                return function() {
                  var f__5206__auto__ = function() {
                    var switch__5155__auto__ = function(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__) {
                      return function(state_12279) {
                        var state_val_12280 = state_12279[1];
                        if(state_val_12280 === 2) {
                          var inst_12276 = state_12279[2];
                          var inst_12277 = connection_12297.disconnect();
                          var state_12279__$1 = function() {
                            var statearr_12281 = state_12279;
                            statearr_12281[5] = inst_12276;
                            return statearr_12281
                          }();
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12279__$1, inst_12277)
                        }else {
                          if(state_val_12280 === 1) {
                            var inst_12273 = year - from;
                            var inst_12274 = cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), data, new cljs.core.Keyword(null, "errors", "errors", 4014236381), errors, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582), quantity, new cljs.core.Keyword(null, "offset", "offset", 4289091589), inst_12273, new cljs.core.Keyword(null, "context", "context", 1965435169), null, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782), sorting);
                            var state_12279__$1 = state_12279;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12279__$1, 2, weather_canvas.weather.c, inst_12274)
                          }else {
                            return null
                          }
                        }
                      }
                    }(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__);
                    return function(seq__12257, chunk__12258, count__12259, i__12260, switch__5155__auto__, c__5205__auto__, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__) {
                      return function() {
                        var state_machine__5156__auto__ = null;
                        var state_machine__5156__auto____0 = function() {
                          var statearr_12283 = new Array(6);
                          statearr_12283[0] = state_machine__5156__auto__;
                          statearr_12283[1] = 1;
                          return statearr_12283
                        };
                        var state_machine__5156__auto____1 = function(state_12279) {
                          while(true) {
                            var result__5157__auto__ = switch__5155__auto__.call(null, state_12279);
                            if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                              continue
                            }else {
                              return result__5157__auto__
                            }
                            break
                          }
                        };
                        state_machine__5156__auto__ = function(state_12279) {
                          switch(arguments.length) {
                            case 0:
                              return state_machine__5156__auto____0.call(this);
                            case 1:
                              return state_machine__5156__auto____1.call(this, state_12279)
                          }
                          throw new Error("Invalid arity: " + arguments.length);
                        };
                        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
                        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
                        return state_machine__5156__auto__
                      }()
                    }(seq__12257, chunk__12258, count__12259, i__12260, switch__5155__auto__, c__5205__auto__, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__)
                  }();
                  var state__5207__auto__ = function() {
                    var statearr_12284 = f__5206__auto__.call(null);
                    statearr_12284[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
                    return statearr_12284
                  }();
                  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
                }
              }(seq__12257, chunk__12258, count__12259, i__12260, c__5205__auto__, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__));
              return c__5205__auto__
            }
          }(seq__12257, chunk__12258, count__12259, i__12260, connection_12297, stored_query_id_12298, url_12299, year, seq__12257__$1, temp__4092__auto__)};
          if(cljs.core.truth_(connection_12297.connect(url_12299, stored_query_id_12298))) {
            connection_12297.getData(parameters_12300)
          }else {
          }
          var G__12301 = cljs.core.next.call(null, seq__12257__$1);
          var G__12302 = null;
          var G__12303 = 0;
          var G__12304 = 0;
          seq__12257 = G__12301;
          chunk__12258 = G__12302;
          count__12259 = G__12303;
          i__12260 = G__12304;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if(obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed()
  }
  return false
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || goog.userAgent.IE && goog.userAgent.isVersion("8") || goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_])
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    map[type] = {count_:0, remaining_:0}
  }
  map = map[type];
  if(!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if(!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++
  }else {
    listenerArray = map[srcUid];
    for(var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if(listenerObj.removed) {
          break
        }
        if(!callOnce) {
          listenerArray[i].callOnce = false
        }
        return listenerArray[i]
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if(!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = []
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if(src.addEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture)
    }
  }else {
    src.attachEvent(goog.events.getOnString_(type), proxy)
  }
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if(!listener) {
    return false
  }
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key]
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if(!noObj) {
    if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && opt_obj && goog.events.Listenable.isImplementedBy(opt_obj)) {
      return opt_obj.removeAllListeners(opt_type)
    }
    var srcUid = goog.getUid((opt_obj));
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if(noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }else {
    return goog.events.getListeners_(obj, type, capture) || []
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler)
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " \x3d " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject)
  }
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e)
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return true
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if(goog.isFunction(listener)) {
    return listener
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget)
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if(this.reallyDisposed_) {
      return true
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if(ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for(;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
  }else {
    return goog.events.dispatchEvent(this, e)
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true
  }else {
    goog.events.removeAll(this)
  }
  this.parentEventTarget_ = null
};
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      listenerObj = listenerArray[index];
      if(!callOnce) {
        listenerObj.callOnce = false
      }
      return listenerObj
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index)
    }
    return false
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if(removed) {
      goog.events.cleanUp(key);
      key.removed = true
    }
    return removed
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for(var type in this.eventTargetListeners_) {
      if(!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for(var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true
        }
        listenerArray.length = 0
      }
    }
    return count
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if(!(type in this.eventTargetListeners_)) {
      return true
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for(var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if(listener && !listener.removed && listener.capture == capture) {
        if(listener.callOnce) {
          this.unlistenByKey(listener)
        }
        rv = listener.handleEvent(eventObject) !== false && rv
      }
    }
    return rv && eventObject.returnValue_ != false
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if(listenerArray) {
      for(var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if(listenerObj.capture == capture) {
          rv.push(listenerObj)
        }
      }
    }
    return rv
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if(listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope)
    }
    return i > -1 ? listenerArray[i] : null
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for(var i = 0;i < listenersArray.length;++i) {
        if((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true
        }
      }
      return false
    })
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if(goog.isString(e)) {
      e = new goog.events.Event(e, target)
    }else {
      if(!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent)
      }else {
        e.target = e.target || target
      }
    }
    var rv = true, currentTarget;
    if(opt_ancestorsTree) {
      for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv
      }
    }
    if(!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if(!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    if(opt_ancestorsTree) {
      for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    return rv
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
        return i
      }
    }
    return-1
  }
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col))
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear((col))
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable))
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll((opt_map))
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat())
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid((val))
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.difference = function(col) {
  var result = this.clone();
  result.removeAll(col);
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = !!opt_cancel;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("535.3")) {
    retVal = !retVal
  }
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " \x3d ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " \x3d ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: \x3ca href\x3d"view-source:' + e.fileName + '" target\x3d"_new"\x3e' + e.fileName + "\x3c/a\x3e\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-\x3e ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-\x3e ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || goog.global["$googDebugFname"] || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func((buffer[i]))
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return(goog.debug.LogManager.rootLogger_)
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x0a-\x1f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return(eval("(" + o + ")"))
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return(eval("(" + s + ")"))
};
goog.json.Replacer;
goog.json.Reviver;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_((object), sb);
      break;
    case "number":
      this.serializeNumber_((object), sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray((object), sb);
        break
      }
      this.serializeObject_((object), sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.net.HttpStatus.isSuccess = function(status) {
  switch(status) {
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.PARTIAL_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.ASSUME_NATIVE_XHR = false;
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory((factory), (optionsFactory)))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(goog.net.XmlHttp.ASSUME_NATIVE_XHR) {
    return""
  }
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return(this.ieProgId_)
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if(opt_scheme) {
    out += opt_scheme + ":"
  }
  if(opt_domain) {
    out += "//";
    if(opt_userInfo) {
      out += opt_userInfo + "@"
    }
    out += opt_domain;
    if(opt_port) {
      out += ":" + opt_port
    }
  }
  if(opt_path) {
    out += opt_path
  }
  if(opt_queryData) {
    out += "?" + opt_queryData
  }
  if(opt_fragment) {
    out += "#" + opt_fragment
  }
  return out
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return(uri.match(goog.uri.utils.splitRe_))
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if(!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1)
  }
  return scheme ? scheme.toLowerCase() : ""
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for(var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs)
    }
  }else {
    if(value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value))
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "\x26", key, "\x3d", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset\x3dutf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval, opt_withCredentials) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  if(opt_withCredentials) {
    x.setWithCredentials(opt_withCredentials)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request\x3d" + this.lastUri_ + "; newUri\x3d" + url);
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  var contentIsFormData = goog.global["FormData"] && content instanceof goog.global["FormData"];
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER) && !contentIsFormData) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        try {
          if(this.isSuccess()) {
            this.dispatchEvent(goog.net.EventType.COMPLETE);
            this.dispatchEvent(goog.net.EventType.SUCCESS)
          }else {
            this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
            this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
            this.dispatchErrors_()
          }
        }finally {
          this.cleanUpXhr_()
        }
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      this.dispatchEvent(goog.net.EventType.READY)
    }
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  var status = this.getStatus();
  return goog.net.HttpStatus.isSuccess(status) || status === 0 && !this.isLastUriEffectiveSchemeHttp_()
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var scheme = goog.uri.utils.getEffectiveScheme(String(this.lastUri_));
  return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(scheme)
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? (this.xhr_.readyState) : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseBody = function() {
  try {
    if(this.xhr_ && "responseBody" in this.xhr_) {
      return this.xhr_["responseBody"]
    }
  }catch(e) {
    this.logger_.fine("Can not get responseBody: " + e.message)
  }
  return null
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.a11y.aria.Role");
goog.a11y.aria.Role = {ALERT:"alert", ALERTDIALOG:"alertdialog", APPLICATION:"application", ARTICLE:"article", BANNER:"banner", BUTTON:"button", CHECKBOX:"checkbox", COLUMNHEADER:"columnheader", COMBOBOX:"combobox", COMPLEMENTARY:"complementary", CONTENTINFO:"contentinfo", DEFINITION:"definition", DIALOG:"dialog", DIRECTORY:"directory", DOCUMENT:"document", FORM:"form", GRID:"grid", GRIDCELL:"gridcell", GROUP:"group", HEADING:"heading", IMG:"img", LINK:"link", LIST:"list", LISTBOX:"listbox", LISTITEM:"listitem", 
LOG:"log", MAIN:"main", MARQUEE:"marquee", MATH:"math", MENU:"menu", MENUBAR:"menubar", MENU_ITEM:"menuitem", MENU_ITEM_CHECKBOX:"menuitemcheckbox", MENU_ITEM_RADIO:"menuitemradio", NAVIGATION:"navigation", NOTE:"note", OPTION:"option", PRESENTATION:"presentation", PROGRESSBAR:"progressbar", RADIO:"radio", RADIOGROUP:"radiogroup", REGION:"region", ROW:"row", ROWGROUP:"rowgroup", ROWHEADER:"rowheader", SCROLLBAR:"scrollbar", SEARCH:"search", SEPARATOR:"separator", SLIDER:"slider", SPINBUTTON:"spinbutton", 
STATUS:"status", TAB:"tab", TAB_LIST:"tablist", TAB_PANEL:"tabpanel", TEXTBOX:"textbox", TIMER:"timer", TOOLBAR:"toolbar", TOOLTIP:"tooltip", TREE:"tree", TREEGRID:"treegrid", TREEITEM:"treeitem"};
goog.provide("goog.a11y.aria.LivePriority");
goog.provide("goog.a11y.aria.State");
goog.a11y.aria.State = {ACTIVEDESCENDANT:"activedescendant", ATOMIC:"atomic", AUTOCOMPLETE:"autocomplete", BUSY:"busy", CHECKED:"checked", CONTROLS:"controls", DESCRIBEDBY:"describedby", DISABLED:"disabled", DROPEFFECT:"dropeffect", EXPANDED:"expanded", FLOWTO:"flowto", GRABBED:"grabbed", HASPOPUP:"haspopup", HIDDEN:"hidden", INVALID:"invalid", LABEL:"label", LABELLEDBY:"labelledby", LEVEL:"level", LIVE:"live", MULTILINE:"multiline", MULTISELECTABLE:"multiselectable", ORIENTATION:"orientation", OWNS:"owns", 
POSINSET:"posinset", PRESSED:"pressed", READONLY:"readonly", RELEVANT:"relevant", REQUIRED:"required", SELECTED:"selected", SETSIZE:"setsize", SORT:"sort", VALUEMAX:"valuemax", VALUEMIN:"valuemin", VALUENOW:"valuenow", VALUETEXT:"valuetext"};
goog.a11y.aria.LivePriority = {OFF:"off", POLITE:"polite", ASSERTIVE:"assertive"};
goog.provide("goog.a11y.aria");
goog.require("goog.a11y.aria.Role");
goog.require("goog.a11y.aria.State");
goog.require("goog.dom");
goog.a11y.aria.setRole = function(element, roleName) {
  element.setAttribute("role", roleName)
};
goog.a11y.aria.getRole = function(element) {
  return(element.getAttribute("role")) || ""
};
goog.a11y.aria.setState = function(element, state, value) {
  element.setAttribute("aria-" + state, value)
};
goog.a11y.aria.getState = function(element, stateName) {
  var attrb = (element.getAttribute("aria-" + stateName));
  if(attrb === true || attrb === false) {
    return attrb ? "true" : "false"
  }else {
    if(!attrb) {
      return""
    }else {
      return String(attrb)
    }
  }
};
goog.a11y.aria.getActiveDescendant = function(element) {
  var id = goog.a11y.aria.getState(element, goog.a11y.aria.State.ACTIVEDESCENDANT);
  return goog.dom.getOwnerDocument(element).getElementById(id)
};
goog.a11y.aria.setActiveDescendant = function(element, activeElement) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, activeElement ? activeElement.id : "")
};
goog.a11y.aria.getLabel = function(element) {
  return goog.a11y.aria.getState(element, goog.a11y.aria.State.LABEL)
};
goog.a11y.aria.setLabel = function(element, label) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABEL, label)
};
goog.provide("goog.dom.selection");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.selection.setStart = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionStart = pos
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
        range.collapse(true);
        range.move("character", pos);
        range.select()
      }
    }
  }
};
goog.dom.selection.getStart = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, true)[0]
};
goog.dom.selection.getEndPointsTextareaIe_ = function(range, selRange, getOnlyStart) {
  var selectionRange = selRange.duplicate();
  var beforeSelectionText = range.text;
  var untrimmedBeforeSelectionText = beforeSelectionText;
  var selectionText = selectionRange.text;
  var untrimmedSelectionText = selectionText;
  var isRangeEndTrimmed = false;
  while(!isRangeEndTrimmed) {
    if(range.compareEndPoints("StartToEnd", range) == 0) {
      isRangeEndTrimmed = true
    }else {
      range.moveEnd("character", -1);
      if(range.text == beforeSelectionText) {
        untrimmedBeforeSelectionText += "\r\n"
      }else {
        isRangeEndTrimmed = true
      }
    }
  }
  if(getOnlyStart) {
    return[untrimmedBeforeSelectionText.length, -1]
  }
  var isSelectionRangeEndTrimmed = false;
  while(!isSelectionRangeEndTrimmed) {
    if(selectionRange.compareEndPoints("StartToEnd", selectionRange) == 0) {
      isSelectionRangeEndTrimmed = true
    }else {
      selectionRange.moveEnd("character", -1);
      if(selectionRange.text == selectionText) {
        untrimmedSelectionText += "\r\n"
      }else {
        isSelectionRangeEndTrimmed = true
      }
    }
  }
  return[untrimmedBeforeSelectionText.length, untrimmedBeforeSelectionText.length + untrimmedSelectionText.length]
};
goog.dom.selection.getEndPoints = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, false)
};
goog.dom.selection.getEndPoints_ = function(textfield, getOnlyStart) {
  var startPos = 0;
  var endPos = 0;
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    startPos = textfield.selectionStart;
    endPos = getOnlyStart ? -1 : textfield.selectionEnd
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        range.setEndPoint("EndToStart", selectionRange);
        if(textfield.type == "textarea") {
          return goog.dom.selection.getEndPointsTextareaIe_(range, selectionRange, getOnlyStart)
        }
        startPos = range.text.length;
        if(!getOnlyStart) {
          endPos = range.text.length + selectionRange.text.length
        }else {
          endPos = -1
        }
      }
    }
  }
  return[startPos, endPos]
};
goog.dom.selection.setEnd = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionEnd = pos
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
        var startCursorPos = goog.dom.selection.canonicalizePositionIe_(textfield, goog.dom.selection.getStart(textfield));
        selectionRange.collapse(true);
        selectionRange.moveEnd("character", pos - startCursorPos);
        selectionRange.select()
      }
    }
  }
};
goog.dom.selection.getEnd = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, false)[1]
};
goog.dom.selection.setCursorPosition = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionStart = pos;
    textfield.selectionEnd = pos
  }else {
    if(goog.userAgent.IE) {
      pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
      var sel = textfield.createTextRange();
      sel.collapse(true);
      sel.move("character", pos);
      sel.select()
    }
  }
};
goog.dom.selection.setText = function(textfield, text) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    var value = textfield.value;
    var oldSelectionStart = textfield.selectionStart;
    var before = value.substr(0, oldSelectionStart);
    var after = value.substr(textfield.selectionEnd);
    textfield.value = before + text + after;
    textfield.selectionStart = oldSelectionStart;
    textfield.selectionEnd = oldSelectionStart + text.length
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(!range.inRange(selectionRange)) {
        return
      }
      var range2 = selectionRange.duplicate();
      selectionRange.text = text;
      selectionRange.setEndPoint("StartToStart", range2);
      selectionRange.select()
    }else {
      throw Error("Cannot set the selection end");
    }
  }
};
goog.dom.selection.getText = function(textfield) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    var s = textfield.value;
    return s.substring(textfield.selectionStart, textfield.selectionEnd)
  }
  if(goog.userAgent.IE) {
    var tmp = goog.dom.selection.getRangeIe_(textfield);
    var range = tmp[0];
    var selectionRange = tmp[1];
    if(!range.inRange(selectionRange)) {
      return""
    }else {
      if(textfield.type == "textarea") {
        return goog.dom.selection.getSelectionRangeText_(selectionRange)
      }
    }
    return selectionRange.text
  }
  throw Error("Cannot get the selection text");
};
goog.dom.selection.getSelectionRangeText_ = function(selRange) {
  var selectionRange = selRange.duplicate();
  var selectionText = selectionRange.text;
  var untrimmedSelectionText = selectionText;
  var isSelectionRangeEndTrimmed = false;
  while(!isSelectionRangeEndTrimmed) {
    if(selectionRange.compareEndPoints("StartToEnd", selectionRange) == 0) {
      isSelectionRangeEndTrimmed = true
    }else {
      selectionRange.moveEnd("character", -1);
      if(selectionRange.text == selectionText) {
        untrimmedSelectionText += "\r\n"
      }else {
        isSelectionRangeEndTrimmed = true
      }
    }
  }
  return untrimmedSelectionText
};
goog.dom.selection.getRangeIe_ = function(el) {
  var doc = el.ownerDocument || el.document;
  var selectionRange = doc.selection.createRange();
  var range;
  if(el.type == "textarea") {
    range = doc.body.createTextRange();
    range.moveToElementText(el)
  }else {
    range = el.createTextRange()
  }
  return[range, selectionRange]
};
goog.dom.selection.canonicalizePositionIe_ = function(textfield, pos) {
  if(textfield.type == "textarea") {
    var value = textfield.value.substring(0, pos);
    pos = goog.string.canonicalizeNewlines(value).length
  }
  return pos
};
goog.dom.selection.useSelectionProperties_ = function(el) {
  try {
    return typeof el.selectionStart == "number"
  }catch(e) {
    return false
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this));
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this));
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyCodes = {WIN_KEY_FF_LINUX:0, MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, FF_EQUALS:61, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, L:76, M:77, 
N:78, O:79, P:80, Q:81, R:82, S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, 
SEMICOLON:186, DASH:189, EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return!goog.userAgent.GECKO;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!goog.userAgent.IE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersion("525"))) {
    return true
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey) {
    return false
  }
  if(!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT || goog.userAgent.MAC && opt_heldKeyCode == goog.events.KeyCodes.META)) {
    return false
  }
  if(goog.userAgent.WEBKIT && opt_ctrlKey && opt_shiftKey) {
    switch(keyCode) {
      case goog.events.KeyCodes.BACKSLASH:
      ;
      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.TILDE:
      ;
      case goog.events.KeyCodes.SEMICOLON:
      ;
      case goog.events.KeyCodes.DASH:
      ;
      case goog.events.KeyCodes.EQUALS:
      ;
      case goog.events.KeyCodes.COMMA:
      ;
      case goog.events.KeyCodes.PERIOD:
      ;
      case goog.events.KeyCodes.SLASH:
      ;
      case goog.events.KeyCodes.APOSTROPHE:
      ;
      case goog.events.KeyCodes.SINGLE_QUOTE:
        return false
    }
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentMode(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true
  }
  if(goog.userAgent.WEBKIT && keyCode == 0) {
    return true
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.FF_EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false
  }
};
goog.events.KeyCodes.normalizeGeckoKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.FF_EQUALS:
      return goog.events.KeyCodes.EQUALS;
    case goog.events.KeyCodes.FF_SEMICOLON:
      return goog.events.KeyCodes.SEMICOLON;
    case goog.events.KeyCodes.MAC_FF_META:
      return goog.events.KeyCodes.META;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return goog.events.KeyCodes.WIN_KEY;
    default:
      return keyCode
  }
};
goog.provide("goog.events.KeyEvent");
goog.provide("goog.events.KeyHandler");
goog.provide("goog.events.KeyHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  if(opt_element) {
    this.attach(opt_element, opt_capture)
  }
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.prototype.altKey_ = false;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {"Up":goog.events.KeyCodes.UP, "Down":goog.events.KeyCodes.DOWN, "Left":goog.events.KeyCodes.LEFT, "Right":goog.events.KeyCodes.RIGHT, "Enter":goog.events.KeyCodes.ENTER, "F1":goog.events.KeyCodes.F1, "F2":goog.events.KeyCodes.F2, "F3":goog.events.KeyCodes.F3, "F4":goog.events.KeyCodes.F4, "F5":goog.events.KeyCodes.F5, "F6":goog.events.KeyCodes.F6, "F7":goog.events.KeyCodes.F7, "F8":goog.events.KeyCodes.F8, "F9":goog.events.KeyCodes.F9, "F10":goog.events.KeyCodes.F10, 
"F11":goog.events.KeyCodes.F11, "F12":goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, "Home":goog.events.KeyCodes.HOME, "End":goog.events.KeyCodes.END, "PageUp":goog.events.KeyCodes.PAGE_UP, "PageDown":goog.events.KeyCodes.PAGE_DOWN, "Insert":goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersion("525");
goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ = goog.userAgent.MAC && goog.userAgent.GECKO;
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  if(goog.userAgent.WEBKIT) {
    if(this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey || goog.userAgent.MAC && this.lastKey_ == goog.events.KeyCodes.META && !e.metaKey) {
      this.lastKey_ = -1;
      this.keyCode_ = -1
    }
  }
  if(this.lastKey_ == -1) {
    if(e.ctrlKey && e.keyCode != goog.events.KeyCodes.CTRL) {
      this.lastKey_ = goog.events.KeyCodes.CTRL
    }else {
      if(e.altKey && e.keyCode != goog.events.KeyCodes.ALT) {
        this.lastKey_ = goog.events.KeyCodes.ALT
      }else {
        if(e.metaKey && e.keyCode != goog.events.KeyCodes.META) {
          this.lastKey_ = goog.events.KeyCodes.META
        }
      }
    }
  }
  if(goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey)) {
    this.handleEvent(e)
  }else {
    this.keyCode_ = goog.userAgent.GECKO ? goog.events.KeyCodes.normalizeGeckoKeyCode(e.keyCode) : e.keyCode;
    if(goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
      this.altKey_ = e.altKey
    }
  }
};
goog.events.KeyHandler.prototype.resetState = function() {
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.resetState();
  this.altKey_ = e.altKey
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var keyCode, charCode;
  var altKey = be.altKey;
  if(goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {
    keyCode = this.keyCode_;
    charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0
  }else {
    if(goog.userAgent.WEBKIT && e.type == goog.events.EventType.KEYPRESS) {
      keyCode = this.keyCode_;
      charCode = be.charCode >= 0 && be.charCode < 63232 && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0
    }else {
      if(goog.userAgent.OPERA) {
        keyCode = this.keyCode_;
        charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0
      }else {
        keyCode = be.keyCode || this.keyCode_;
        charCode = be.charCode || 0;
        if(goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
          altKey = this.altKey_
        }
        if(goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && keyCode == goog.events.KeyCodes.WIN_KEY) {
          keyCode = goog.events.KeyCodes.SLASH
        }
      }
    }
  }
  var key = keyCode;
  var keyIdentifier = be.keyIdentifier;
  if(keyCode) {
    if(keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {
      key = goog.events.KeyHandler.safariKey_[keyCode]
    }else {
      if(keyCode == 25 && e.shiftKey) {
        key = 9
      }
    }
  }else {
    if(keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {
      key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier]
    }
  }
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  event.altKey = altKey;
  this.dispatchEvent(event)
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  if(this.keyUpKey_) {
    this.detach()
  }
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this)
};
goog.events.KeyHandler.prototype.detach = function() {
  if(this.keyPressKey_) {
    goog.events.unlistenByKey(this.keyPressKey_);
    goog.events.unlistenByKey(this.keyDownKey_);
    goog.events.unlistenByKey(this.keyUpKey_);
    this.keyPressKey_ = null;
    this.keyDownKey_ = null;
    this.keyUpKey_ = null
  }
  this.element_ = null;
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach()
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
goog.provide("goog.userAgent.product");
goog.require("goog.userAgent");
goog.userAgent.product.ASSUME_FIREFOX = false;
goog.userAgent.product.ASSUME_CAMINO = false;
goog.userAgent.product.ASSUME_IPHONE = false;
goog.userAgent.product.ASSUME_IPAD = false;
goog.userAgent.product.ASSUME_ANDROID = false;
goog.userAgent.product.ASSUME_CHROME = false;
goog.userAgent.product.ASSUME_SAFARI = false;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_CAMINO || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.init_ = function() {
  goog.userAgent.product.detectedFirefox_ = false;
  goog.userAgent.product.detectedCamino_ = false;
  goog.userAgent.product.detectedIphone_ = false;
  goog.userAgent.product.detectedIpad_ = false;
  goog.userAgent.product.detectedAndroid_ = false;
  goog.userAgent.product.detectedChrome_ = false;
  goog.userAgent.product.detectedSafari_ = false;
  var ua = goog.userAgent.getUserAgentString();
  if(!ua) {
    return
  }
  if(ua.indexOf("Firefox") != -1) {
    goog.userAgent.product.detectedFirefox_ = true
  }else {
    if(ua.indexOf("Camino") != -1) {
      goog.userAgent.product.detectedCamino_ = true
    }else {
      if(ua.indexOf("iPhone") != -1 || ua.indexOf("iPod") != -1) {
        goog.userAgent.product.detectedIphone_ = true
      }else {
        if(ua.indexOf("iPad") != -1) {
          goog.userAgent.product.detectedIpad_ = true
        }else {
          if(ua.indexOf("Android") != -1) {
            goog.userAgent.product.detectedAndroid_ = true
          }else {
            if(ua.indexOf("Chrome") != -1) {
              goog.userAgent.product.detectedChrome_ = true
            }else {
              if(ua.indexOf("Safari") != -1) {
                goog.userAgent.product.detectedSafari_ = true
              }
            }
          }
        }
      }
    }
  }
};
if(!goog.userAgent.product.PRODUCT_KNOWN_) {
  goog.userAgent.product.init_()
}
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.userAgent.product.detectedFirefox_;
goog.userAgent.product.CAMINO = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CAMINO : goog.userAgent.product.detectedCamino_;
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.detectedIphone_;
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.userAgent.product.detectedIpad_;
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.userAgent.product.detectedAndroid_;
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.userAgent.product.detectedChrome_;
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.detectedSafari_;
goog.provide("goog.ui.ac.InputHandler");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.require("goog.a11y.aria");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.selection");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.events.KeyHandler.EventType");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.require("goog.userAgent.product");
goog.ui.ac.InputHandler = function(opt_separators, opt_literals, opt_multi, opt_throttleTime) {
  goog.Disposable.call(this);
  var throttleTime = opt_throttleTime || 150;
  this.multi_ = opt_multi != null ? opt_multi : true;
  this.setSeparators(opt_separators || goog.ui.ac.InputHandler.STANDARD_LIST_SEPARATORS);
  this.literals_ = opt_literals || "";
  this.preventDefaultOnTab_ = this.multi_;
  this.timer_ = throttleTime > 0 ? new goog.Timer(throttleTime) : null;
  this.eh_ = new goog.events.EventHandler(this);
  this.activateHandler_ = new goog.events.EventHandler(this);
  this.keyHandler_ = new goog.events.KeyHandler;
  this.lastKeyCode_ = -1
};
goog.inherits(goog.ui.ac.InputHandler, goog.Disposable);
goog.ui.ac.InputHandler.REQUIRES_ASYNC_BLUR_ = (goog.userAgent.product.IPHONE || goog.userAgent.product.IPAD) && !goog.userAgent.isVersion("533.17.9");
goog.ui.ac.InputHandler.STANDARD_LIST_SEPARATORS = ",;";
goog.ui.ac.InputHandler.QUOTE_LITERALS = '"';
goog.ui.ac.InputHandler.prototype.ac_;
goog.ui.ac.InputHandler.prototype.separators_;
goog.ui.ac.InputHandler.prototype.defaultSeparator_;
goog.ui.ac.InputHandler.prototype.trimmer_;
goog.ui.ac.InputHandler.prototype.separatorCheck_;
goog.ui.ac.InputHandler.prototype.whitespaceWrapEntries_ = true;
goog.ui.ac.InputHandler.prototype.generateNewTokenOnLiteral_ = true;
goog.ui.ac.InputHandler.prototype.upsideDown_ = false;
goog.ui.ac.InputHandler.prototype.separatorUpdates_ = true;
goog.ui.ac.InputHandler.prototype.separatorSelects_ = true;
goog.ui.ac.InputHandler.prototype.activeTimeoutId_ = null;
goog.ui.ac.InputHandler.prototype.activeElement_ = null;
goog.ui.ac.InputHandler.prototype.lastValue_ = "";
goog.ui.ac.InputHandler.prototype.waitingForIme_ = false;
goog.ui.ac.InputHandler.prototype.rowJustSelected_ = false;
goog.ui.ac.InputHandler.prototype.updateDuringTyping_ = true;
goog.ui.ac.InputHandler.prototype.attachAutoComplete = function(ac) {
  this.ac_ = ac
};
goog.ui.ac.InputHandler.prototype.getAutoComplete = function() {
  return this.ac_
};
goog.ui.ac.InputHandler.prototype.getActiveElement = function() {
  return this.activeElement_
};
goog.ui.ac.InputHandler.prototype.getValue = function() {
  return this.activeElement_.value
};
goog.ui.ac.InputHandler.prototype.setValue = function(value) {
  this.activeElement_.value = value
};
goog.ui.ac.InputHandler.prototype.getCursorPosition = function() {
  return goog.dom.selection.getStart(this.activeElement_)
};
goog.ui.ac.InputHandler.prototype.setCursorPosition = function(pos) {
  goog.dom.selection.setStart(this.activeElement_, pos);
  goog.dom.selection.setEnd(this.activeElement_, pos)
};
goog.ui.ac.InputHandler.prototype.attachInput = function(target) {
  if(goog.dom.isElement(target)) {
    var el = (target);
    goog.a11y.aria.setState(el, "haspopup", true)
  }
  this.eh_.listen(target, goog.events.EventType.FOCUS, this.handleFocus);
  this.eh_.listen(target, goog.events.EventType.BLUR, this.handleBlur);
  if(!this.activeElement_) {
    this.activateHandler_.listen(target, goog.events.EventType.KEYDOWN, this.onKeyDownOnInactiveElement_);
    if(goog.dom.isElement(target)) {
      var ownerDocument = goog.dom.getOwnerDocument((target));
      if(goog.dom.getActiveElement(ownerDocument) == target) {
        this.processFocus((target))
      }
    }
  }
};
goog.ui.ac.InputHandler.prototype.detachInput = function(target) {
  if(target == this.activeElement_) {
    this.handleBlur()
  }
  this.eh_.unlisten(target, goog.events.EventType.FOCUS, this.handleFocus);
  this.eh_.unlisten(target, goog.events.EventType.BLUR, this.handleBlur);
  if(!this.activeElement_) {
    this.activateHandler_.unlisten(target, goog.events.EventType.KEYDOWN, this.onKeyDownOnInactiveElement_)
  }
};
goog.ui.ac.InputHandler.prototype.attachInputs = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    this.attachInput(arguments[i])
  }
};
goog.ui.ac.InputHandler.prototype.detachInputs = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    this.detachInput(arguments[i])
  }
};
goog.ui.ac.InputHandler.prototype.selectRow = function(row, opt_multi) {
  this.setTokenText(row.toString(), opt_multi);
  return false
};
goog.ui.ac.InputHandler.prototype.setTokenText = function(tokenText, opt_multi) {
  if(goog.isDef(opt_multi) ? opt_multi : this.multi_) {
    var index = this.getTokenIndex_(this.getValue(), this.getCursorPosition());
    var entries = this.splitInput_(this.getValue());
    var replaceValue = tokenText;
    if(!this.separatorCheck_.test(replaceValue)) {
      replaceValue = goog.string.trimRight(replaceValue) + this.defaultSeparator_
    }
    if(this.whitespaceWrapEntries_) {
      if(index != 0 && !goog.string.isEmpty(entries[index - 1])) {
        replaceValue = " " + replaceValue
      }
      if(index == entries.length - 1) {
        replaceValue = replaceValue + " "
      }
    }
    if(replaceValue != entries[index]) {
      entries[index] = replaceValue;
      var el = this.activeElement_;
      if(goog.userAgent.GECKO || goog.userAgent.IE && goog.userAgent.isVersion("9")) {
        el.blur()
      }
      el.value = entries.join("");
      var pos = 0;
      for(var i = 0;i <= index;i++) {
        pos += entries[i].length
      }
      el.focus();
      this.setCursorPosition(pos)
    }
  }else {
    this.setValue(tokenText)
  }
  this.rowJustSelected_ = true
};
goog.ui.ac.InputHandler.prototype.disposeInternal = function() {
  goog.ui.ac.InputHandler.superClass_.disposeInternal.call(this);
  if(this.activeTimeoutId_ != null) {
    window.clearTimeout(this.activeTimeoutId_)
  }
  this.eh_.dispose();
  delete this.eh_;
  this.activateHandler_.dispose();
  this.keyHandler_.dispose()
};
goog.ui.ac.InputHandler.prototype.setSeparators = function(separators) {
  this.separators_ = separators;
  this.defaultSeparator_ = this.separators_.substring(0, 1);
  var wspaceExp = this.multi_ ? "[\\s" + this.separators_ + "]+" : "[\\s]+";
  this.trimmer_ = new RegExp("^" + wspaceExp + "|" + wspaceExp + "$", "g");
  this.separatorCheck_ = new RegExp("\\s*[" + this.separators_ + "]$")
};
goog.ui.ac.InputHandler.prototype.setUpsideDown = function(upsideDown) {
  this.upsideDown_ = upsideDown
};
goog.ui.ac.InputHandler.prototype.setWhitespaceWrapEntries = function(newValue) {
  this.whitespaceWrapEntries_ = newValue
};
goog.ui.ac.InputHandler.prototype.setGenerateNewTokenOnLiteral = function(newValue) {
  this.generateNewTokenOnLiteral_ = newValue
};
goog.ui.ac.InputHandler.prototype.setTrimmingRegExp = function(trimmer) {
  this.trimmer_ = trimmer
};
goog.ui.ac.InputHandler.prototype.setPreventDefaultOnTab = function(newValue) {
  this.preventDefaultOnTab_ = newValue
};
goog.ui.ac.InputHandler.prototype.setSeparatorCompletes = function(newValue) {
  this.separatorUpdates_ = newValue;
  this.separatorSelects_ = newValue
};
goog.ui.ac.InputHandler.prototype.setSeparatorSelects = function(newValue) {
  this.separatorSelects_ = newValue
};
goog.ui.ac.InputHandler.prototype.getThrottleTime = function() {
  return this.timer_ ? this.timer_.getInterval() : -1
};
goog.ui.ac.InputHandler.prototype.setRowJustSelected = function(justSelected) {
  this.rowJustSelected_ = justSelected
};
goog.ui.ac.InputHandler.prototype.setThrottleTime = function(time) {
  if(time < 0) {
    this.timer_.dispose();
    this.timer_ = null;
    return
  }
  if(this.timer_) {
    this.timer_.setInterval(time)
  }else {
    this.timer_ = new goog.Timer(time)
  }
};
goog.ui.ac.InputHandler.prototype.getUpdateDuringTyping = function() {
  return this.updateDuringTyping_
};
goog.ui.ac.InputHandler.prototype.setUpdateDuringTyping = function(value) {
  this.updateDuringTyping_ = value
};
goog.ui.ac.InputHandler.prototype.handleKeyEvent = function(e) {
  switch(e.keyCode) {
    case goog.events.KeyCodes.DOWN:
      if(this.ac_.isOpen()) {
        this.moveDown_();
        e.preventDefault();
        return true
      }else {
        if(!this.multi_) {
          this.update(true);
          e.preventDefault();
          return true
        }
      }
      break;
    case goog.events.KeyCodes.UP:
      if(this.ac_.isOpen()) {
        this.moveUp_();
        e.preventDefault();
        return true
      }
      break;
    case goog.events.KeyCodes.TAB:
      if(this.ac_.isOpen() && !e.shiftKey) {
        this.update();
        if(this.ac_.selectHilited() && this.preventDefaultOnTab_) {
          e.preventDefault();
          return true
        }
      }else {
        this.ac_.dismiss()
      }
      break;
    case goog.events.KeyCodes.ENTER:
      if(this.ac_.isOpen()) {
        this.update();
        if(this.ac_.selectHilited()) {
          e.preventDefault();
          e.stopPropagation();
          return true
        }
      }else {
        this.ac_.dismiss()
      }
      break;
    case goog.events.KeyCodes.ESC:
      if(this.ac_.isOpen()) {
        this.ac_.dismiss();
        e.preventDefault();
        e.stopPropagation();
        return true
      }
      break;
    case goog.events.KeyCodes.WIN_IME:
      if(!this.waitingForIme_) {
        this.startWaitingForIme_();
        return true
      }
      break;
    default:
      if(this.timer_ && !this.updateDuringTyping_) {
        this.timer_.stop();
        this.timer_.start()
      }
  }
  return this.handleSeparator_(e)
};
goog.ui.ac.InputHandler.prototype.handleSeparator_ = function(e) {
  var isSeparatorKey = this.multi_ && e.charCode && this.separators_.indexOf(String.fromCharCode(e.charCode)) != -1;
  if(this.separatorUpdates_ && isSeparatorKey) {
    this.update()
  }
  if(this.separatorSelects_ && isSeparatorKey) {
    if(this.ac_.selectHilited()) {
      e.preventDefault();
      return true
    }
  }
  return false
};
goog.ui.ac.InputHandler.prototype.needKeyUpListener = function() {
  return false
};
goog.ui.ac.InputHandler.prototype.handleKeyUp = function(e) {
  return false
};
goog.ui.ac.InputHandler.prototype.addEventHandlers_ = function() {
  this.keyHandler_.attach(this.activeElement_);
  this.eh_.listen(this.keyHandler_, goog.events.KeyHandler.EventType.KEY, this.onKey_);
  if(this.needKeyUpListener()) {
    this.eh_.listen(this.activeElement_, goog.events.EventType.KEYUP, this.handleKeyUp)
  }
  this.eh_.listen(this.activeElement_, goog.events.EventType.MOUSEDOWN, this.onMouseDown_);
  if(goog.userAgent.IE) {
    this.eh_.listen(this.activeElement_, goog.events.EventType.KEYPRESS, this.onIeKeyPress_)
  }
};
goog.ui.ac.InputHandler.prototype.removeEventHandlers_ = function() {
  this.eh_.unlisten(this.keyHandler_, goog.events.KeyHandler.EventType.KEY, this.onKey_);
  this.keyHandler_.detach();
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYUP, this.handleKeyUp);
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.MOUSEDOWN, this.onMouseDown_);
  if(goog.userAgent.IE) {
    this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYPRESS, this.onIeKeyPress_)
  }
  if(this.waitingForIme_) {
    this.stopWaitingForIme_()
  }
};
goog.ui.ac.InputHandler.prototype.handleFocus = function(e) {
  this.processFocus((e.target || null))
};
goog.ui.ac.InputHandler.prototype.processFocus = function(target) {
  this.activateHandler_.removeAll();
  if(this.ac_) {
    this.ac_.cancelDelayedDismiss()
  }
  if(target != this.activeElement_) {
    this.activeElement_ = target;
    if(this.timer_) {
      this.timer_.start();
      this.eh_.listen(this.timer_, goog.Timer.TICK, this.onTick_)
    }
    this.lastValue_ = this.getValue();
    this.addEventHandlers_()
  }
};
goog.ui.ac.InputHandler.prototype.handleBlur = function(opt_e) {
  if(goog.ui.ac.InputHandler.REQUIRES_ASYNC_BLUR_) {
    this.activeTimeoutId_ = window.setTimeout(goog.bind(this.processBlur_, this), 0);
    return
  }else {
    this.processBlur_()
  }
};
goog.ui.ac.InputHandler.prototype.processBlur_ = function() {
  if(this.activeElement_) {
    this.removeEventHandlers_();
    this.activeElement_ = null;
    if(this.timer_) {
      this.timer_.stop();
      this.eh_.unlisten(this.timer_, goog.Timer.TICK, this.onTick_)
    }
    if(this.ac_) {
      this.ac_.dismissOnDelay()
    }
  }
};
goog.ui.ac.InputHandler.prototype.onTick_ = function(e) {
  this.update()
};
goog.ui.ac.InputHandler.prototype.onKeyDownOnInactiveElement_ = function(e) {
  this.handleFocus(e)
};
goog.ui.ac.InputHandler.prototype.onKey_ = function(e) {
  this.lastKeyCode_ = e.keyCode;
  if(this.ac_) {
    this.handleKeyEvent(e)
  }
};
goog.ui.ac.InputHandler.prototype.onKeyPress_ = function(e) {
  if(this.waitingForIme_ && this.lastKeyCode_ != goog.events.KeyCodes.WIN_IME) {
    this.stopWaitingForIme_()
  }
};
goog.ui.ac.InputHandler.prototype.onKeyUp_ = function(e) {
  if(this.waitingForIme_ && (e.keyCode == goog.events.KeyCodes.ENTER || e.keyCode == goog.events.KeyCodes.M && e.ctrlKey)) {
    this.stopWaitingForIme_()
  }
};
goog.ui.ac.InputHandler.prototype.onMouseDown_ = function(e) {
  if(this.ac_) {
    this.handleMouseDown(e)
  }
};
goog.ui.ac.InputHandler.prototype.handleMouseDown = function(e) {
};
goog.ui.ac.InputHandler.prototype.startWaitingForIme_ = function() {
  if(this.waitingForIme_) {
    return
  }
  this.eh_.listen(this.activeElement_, goog.events.EventType.KEYUP, this.onKeyUp_);
  this.eh_.listen(this.activeElement_, goog.events.EventType.KEYPRESS, this.onKeyPress_);
  this.waitingForIme_ = true
};
goog.ui.ac.InputHandler.prototype.stopWaitingForIme_ = function() {
  if(!this.waitingForIme_) {
    return
  }
  this.waitingForIme_ = false;
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYPRESS, this.onKeyPress_);
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYUP, this.onKeyUp_)
};
goog.ui.ac.InputHandler.prototype.onIeKeyPress_ = function(e) {
  this.handleSeparator_(e)
};
goog.ui.ac.InputHandler.prototype.update = function(opt_force) {
  if(this.activeElement_ && (opt_force || this.getValue() != this.lastValue_)) {
    if(opt_force || !this.rowJustSelected_) {
      var token = this.parseToken();
      if(this.ac_) {
        this.ac_.setTarget(this.activeElement_);
        this.ac_.setToken(token, this.getValue())
      }
    }
    this.lastValue_ = this.getValue()
  }
  this.rowJustSelected_ = false
};
goog.ui.ac.InputHandler.prototype.parseToken = function() {
  return this.parseToken_()
};
goog.ui.ac.InputHandler.prototype.moveUp_ = function() {
  return this.upsideDown_ ? this.ac_.hiliteNext() : this.ac_.hilitePrev()
};
goog.ui.ac.InputHandler.prototype.moveDown_ = function() {
  return this.upsideDown_ ? this.ac_.hilitePrev() : this.ac_.hiliteNext()
};
goog.ui.ac.InputHandler.prototype.parseToken_ = function() {
  var caret = this.getCursorPosition();
  var text = this.getValue();
  return this.trim_(this.splitInput_(text)[this.getTokenIndex_(text, caret)])
};
goog.ui.ac.InputHandler.prototype.trim_ = function(text) {
  return this.trimmer_ ? String(text).replace(this.trimmer_, "") : text
};
goog.ui.ac.InputHandler.prototype.getTokenIndex_ = function(text, caret) {
  var entries = this.splitInput_(text);
  if(caret == text.length) {
    return entries.length - 1
  }
  var current = 0;
  for(var i = 0, pos = 0;i < entries.length && pos <= caret;i++) {
    pos += entries[i].length;
    current = i
  }
  return current
};
goog.ui.ac.InputHandler.prototype.splitInput_ = function(text) {
  if(!this.multi_) {
    return[text]
  }
  var arr = String(text).split("");
  var parts = [];
  var cache = [];
  for(var i = 0, inLiteral = false;i < arr.length;i++) {
    if(this.literals_ && this.literals_.indexOf(arr[i]) != -1) {
      if(this.generateNewTokenOnLiteral_ && !inLiteral) {
        parts.push(cache.join(""));
        cache.length = 0
      }
      cache.push(arr[i]);
      inLiteral = !inLiteral
    }else {
      if(!inLiteral && this.separators_.indexOf(arr[i]) != -1) {
        cache.push(arr[i]);
        parts.push(cache.join(""));
        cache.length = 0
      }else {
        cache.push(arr[i])
      }
    }
  }
  parts.push(cache.join(""));
  return parts
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370db", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#db7093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.Rgb;
goog.color.Hsv;
goog.color.Hsl;
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.fx.TransitionBase");
goog.provide("goog.fx.TransitionBase.State");
goog.require("goog.events.EventTarget");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.fx.TransitionBase = function() {
  goog.base(this);
  this.state_ = goog.fx.TransitionBase.State.STOPPED;
  this.startTime = null;
  this.endTime = null
};
goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
goog.fx.TransitionBase.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.TransitionBase.prototype.play = goog.abstractMethod;
goog.fx.TransitionBase.prototype.stop = goog.abstractMethod;
goog.fx.TransitionBase.prototype.pause = goog.abstractMethod;
goog.fx.TransitionBase.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.TransitionBase.prototype.setStatePlaying = function() {
  this.state_ = goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.setStatePaused = function() {
  this.state_ = goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.setStateStopped = function() {
  this.state_ = goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.isPlaying = function() {
  return this.state_ == goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.isPaused = function() {
  return this.state_ == goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.isStopped = function() {
  return this.state_ == goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.onBegin = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)
};
goog.fx.TransitionBase.prototype.onEnd = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)
};
goog.fx.TransitionBase.prototype.onFinish = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)
};
goog.fx.TransitionBase.prototype.onPause = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)
};
goog.fx.TransitionBase.prototype.onPlay = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)
};
goog.fx.TransitionBase.prototype.onResume = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)
};
goog.fx.TransitionBase.prototype.onStop = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)
};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(type)
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs))
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.provide("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.functions");
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.base(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = false;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = false;
  var raf = this.getRaf_();
  var cancelRaf = this.getCancelRaf_();
  if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
    this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_);
    this.win_.mozRequestAnimationFrame(null);
    this.usingListeners_ = true
  }else {
    if(raf && cancelRaf) {
      this.id_ = raf.call(this.win_, this.callback_)
    }else {
      this.id_ = this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT)
    }
  }
};
goog.async.AnimationDelay.prototype.stop = function() {
  if(this.isActive()) {
    var raf = this.getRaf_();
    var cancelRaf = this.getCancelRaf_();
    if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
      goog.events.unlistenByKey(this.id_)
    }else {
      if(raf && cancelRaf) {
        cancelRaf.call(this.win_, (this.id_))
      }else {
        this.win_.clearTimeout((this.id_))
      }
    }
  }
  this.id_ = null
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.AnimationDelay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return this.id_ != null
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  if(this.usingListeners_ && this.id_) {
    goog.events.unlistenByKey(this.id_)
  }
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now())
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.base(this, "disposeInternal")
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || null
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || win.webkitCancelRequestAnimationFrame || win.mozCancelRequestAnimationFrame || win.oCancelRequestAnimationFrame || win.msCancelRequestAnimationFrame || null
};
goog.provide("goog.fx.anim");
goog.provide("goog.fx.anim.Animated");
goog.require("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.object");
goog.fx.anim.Animated = function() {
};
goog.fx.anim.Animated.prototype.onAnimationFrame;
goog.fx.anim.TIMEOUT = goog.async.AnimationDelay.TIMEOUT;
goog.fx.anim.activeAnimations_ = {};
goog.fx.anim.animationWindow_ = null;
goog.fx.anim.animationDelay_ = null;
goog.fx.anim.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.activeAnimations_[uid] = animation
  }
  goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.anim.activeAnimations_[uid];
  if(goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.cancelAnimationFrame_()
  }
};
goog.fx.anim.tearDown = function() {
  goog.fx.anim.animationWindow_ = null;
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.activeAnimations_ = {}
};
goog.fx.anim.setAnimationWindow = function(animationWindow) {
  var hasTimer = goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.isActive();
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.animationWindow_ = animationWindow;
  if(hasTimer) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.fx.anim.requestAnimationFrame_ = function() {
  if(!goog.fx.anim.animationDelay_) {
    if(goog.fx.anim.animationWindow_) {
      goog.fx.anim.animationDelay_ = new goog.async.AnimationDelay(function(now) {
        goog.fx.anim.cycleAnimations_(now)
      }, goog.fx.anim.animationWindow_)
    }else {
      goog.fx.anim.animationDelay_ = new goog.async.Delay(function() {
        goog.fx.anim.cycleAnimations_(goog.now())
      }, goog.fx.anim.TIMEOUT)
    }
  }
  var delay = goog.fx.anim.animationDelay_;
  if(!delay.isActive()) {
    delay.start()
  }
};
goog.fx.anim.cancelAnimationFrame_ = function() {
  if(goog.fx.anim.animationDelay_) {
    goog.fx.anim.animationDelay_.stop()
  }
};
goog.fx.anim.cycleAnimations_ = function(now) {
  goog.object.forEach(goog.fx.anim.activeAnimations_, function(anim) {
    anim.onAnimationFrame(now)
  });
  if(!goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.TransitionBase.State");
goog.require("goog.fx.anim");
goog.require("goog.fx.anim.Animated");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.base(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = [];
  this.useRightPositioningForRtl_ = false
};
goog.inherits(goog.fx.Animation, goog.fx.TransitionBase);
goog.fx.Animation.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Animation.prototype.isRightPositioningForRtlEnabled = function() {
  return this.useRightPositioningForRtl_
};
goog.fx.Animation.EventType = {PLAY:goog.fx.Transition.EventType.PLAY, BEGIN:goog.fx.Transition.EventType.BEGIN, RESUME:goog.fx.Transition.EventType.RESUME, END:goog.fx.Transition.EventType.END, STOP:goog.fx.Transition.EventType.STOP, FINISH:goog.fx.Transition.EventType.FINISH, PAUSE:goog.fx.Transition.EventType.PAUSE, ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.TIMEOUT = goog.fx.anim.TIMEOUT;
goog.fx.Animation.State = goog.fx.TransitionBase.State;
goog.fx.Animation.setAnimationWindow = function(animationWindow) {
  goog.fx.anim.setAnimationWindow(animationWindow)
};
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.isStopped()) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.isPlaying()) {
      return false
    }
  }
  goog.fx.anim.unregisterAnimation(this);
  var now = (goog.now());
  this.startTime = now;
  if(this.isPaused()) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.setStatePlaying();
  goog.fx.anim.registerAnimation(this);
  this.cycle(now);
  return true
};
goog.fx.Animation.prototype.stop = function(opt_gotoEnd) {
  goog.fx.anim.unregisterAnimation(this);
  this.setStateStopped();
  if(!!opt_gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.isPlaying()) {
    goog.fx.anim.unregisterAnimation(this);
    this.setStatePaused();
    this.onPause()
  }
};
goog.fx.Animation.prototype.getProgress = function() {
  return this.progress
};
goog.fx.Animation.prototype.setProgress = function(progress) {
  this.progress = progress;
  if(this.isPlaying()) {
    var now = goog.now();
    this.startTime = now - this.duration * this.progress;
    this.endTime = this.startTime + this.duration
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(!this.isStopped()) {
    this.stop(false)
  }
  this.onDestroy();
  goog.base(this, "disposeInternal")
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.onAnimationFrame = function(now) {
  this.cycle(now)
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  this.updateCoords_(this.progress);
  if(this.progress == 1) {
    this.setStateStopped();
    goog.fx.anim.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.isPlaying()) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  if(goog.isFunction(this.accel_)) {
    t = this.accel_(t)
  }
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.base(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.getProgress();
  this.fps = anim.fps_;
  this.state = anim.getStateInternal();
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"Webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"Moz"
    }else {
      if(goog.userAgent.IE) {
        return"ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"O"
        }
      }
    }
  }
  return null
};
goog.dom.vendor.getVendorPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"-webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"-moz"
    }else {
      if(goog.userAgent.IE) {
        return"-ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"-o"
        }
      }
    }
  }
  return null
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y
  }else {
    this.left += tx;
    this.right += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty
    }
  }
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y
  }else {
    this.left += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty
    }
  }
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if(propertyName) {
    element.style[propertyName] = value
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if(typeof styleValue !== "undefined") {
    return styleValue
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return(rect)
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent)
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h))
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }else {
    if(isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if(overflowX == "visible") {
        return element.scrollLeft
      }else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft
      }
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if(!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement
  }
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left
  }else {
    if(goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left
    }
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if(!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart
  }else {
    if(goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart
    }else {
      if(!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth
      }else {
        element.scrollLeft = offsetStart
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if(!goog.isNull(top)) {
    elem.style.top = top + "px"
  }
  if(isRtl) {
    elem.style.right = left + "px";
    elem.style.left = ""
  }else {
    elem.style.left = left + "px";
    elem.style.right = ""
  }
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element;
  this.rightToLeft_
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.rightToLeft_;
goog.fx.dom.PredefinedEffect.prototype.isRightToLeft = function() {
  if(!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.element)
  }
  return this.rightToLeft_
};
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  var pos = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "right" : "left";
  this.element.style[pos] = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft;
  var start = [offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(this.element) : this.element.offsetLeft;
  this.startPoint = [offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  var marginX = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "marginRight" : "marginLeft";
  this.element.style[marginX] = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  if(this.isRightPositioningForRtlEnabled()) {
    goog.style.bidi.setScrollOffset(this.element, Math.round(this.coords[0]))
  }else {
    this.element.scrollLeft = Math.round(this.coords[0])
  }
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor && computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph", ONE_SIDED_HANDSHAKE:"osh", ROLE:"role", NATIVE_TRANSPORT_PROTOCOL_VERSION:"nativeProtocolVersion"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_NTPV2 = "SETUP_NTPV2";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.SETUP_ACK_NTPV2 = "SETUP_ACK_NTPV2";
goog.net.xpc.channels = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CancelledError");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null
};
goog.async.Deferred.prototype.fired_ = false;
goog.async.Deferred.prototype.hadError_ = false;
goog.async.Deferred.prototype.result_;
goog.async.Deferred.prototype.blocked_ = false;
goog.async.Deferred.prototype.blocking_ = false;
goog.async.Deferred.prototype.silentlyCancelled_ = false;
goog.async.Deferred.prototype.unhandledExceptionTimeoutId_;
goog.async.Deferred.prototype.parent_;
goog.async.Deferred.prototype.branches_ = 0;
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if(!this.hasFired()) {
    if(this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if(opt_deepCancel) {
        parent.cancel(opt_deepCancel)
      }else {
        parent.branchCancel_()
      }
    }
    if(this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this)
    }else {
      this.silentlyCancelled_ = true
    }
    if(!this.hasFired()) {
      this.errback(new goog.async.Deferred.CancelledError(this))
    }
  }else {
    if(this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel()
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if(this.branches_ <= 0) {
    this.cancel()
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res)
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_()
};
goog.async.Deferred.prototype.check_ = function() {
  if(this.hasFired()) {
    if(!this.silentlyCancelled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCancelled_ = false
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result)
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(false, opt_result)
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.")
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope)
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope)
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope)
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if(this.hasFired()) {
    this.fire_()
  }
  return this
};
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred))
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if(opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++
  }
  return d
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1])
  })
};
goog.async.Deferred.prototype.fire_ = function() {
  if(this.unhandledExceptionTimeoutId_ && this.hasFired() && this.hasErrback_()) {
    goog.global.clearTimeout(this.unhandledExceptionTimeoutId_);
    delete this.unhandledExceptionTimeoutId_
  }
  if(this.parent_) {
    this.parent_.branches_--;
    delete this.parent_
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while(this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if(f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if(goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret
        }
        if(res instanceof goog.async.Deferred) {
          isNewlyBlocked = true;
          this.blocked_ = true
        }
      }catch(ex) {
        res = ex;
        this.hadError_ = true;
        if(!this.hasErrback_()) {
          unhandledException = true
        }
      }
    }
  }
  this.result_ = res;
  if(isNewlyBlocked) {
    res.addCallbacks(goog.bind(this.continue_, this, true), goog.bind(this.continue_, this, false));
    res.blocking_ = true
  }
  if(unhandledException) {
    this.unhandledExceptionTimeoutId_ = goog.global.setTimeout(function() {
      throw res;
    }, 0)
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d
};
goog.async.Deferred.cancelled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if(value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope)
  }else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope)
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CancelledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred
};
goog.inherits(goog.async.Deferred.CancelledError, goog.debug.Error);
goog.async.Deferred.CancelledError.prototype.message = "Deferred was cancelled";
goog.async.Deferred.CancelledError.prototype.name = "CancelledError";
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_)
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if(scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  var domain = this.getDomain();
  if(domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if(userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if(port != null) {
      out.push(":", String(port))
    }
  }
  var path = this.getPath();
  if(path) {
    if(this.hasDomain() && path.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = this.getEncodedQuery();
  if(query) {
    out.push("?", query)
  }
  var fragment = this.getFragment();
  if(fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_))
  }
  return out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, (values));
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName))
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if(goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_)
  }
  return null
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if(!goog.isArray(value)) {
      queryData.add(key, value)
    }else {
      queryData.setValues(key, value)
    }
  }
  return queryData
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if(!values) {
    this.keyMap_.set(key, values = [])
  }
  values.push(value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for(var j = 0;j < val.length;j++) {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if(opt_key) {
    if(this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)))
    }
  }else {
    var values = (this.keyMap_.getValues());
    for(var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if(goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default
  }else {
    return values.length > 0 ? String(values[0]) : opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if(values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for(var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if(val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j])
      }
      sb.push(param)
    }
  }
  return this.encodedQuery_ = sb.join("\x26")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString())
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.positioning");
goog.provide("goog.positioning.Corner");
goog.provide("goog.positioning.CornerBit");
goog.provide("goog.positioning.Overflow");
goog.provide("goog.positioning.OverflowStatus");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.positioning.Corner = {TOP_LEFT:0, TOP_RIGHT:2, BOTTOM_LEFT:1, BOTTOM_RIGHT:3, TOP_START:4, TOP_END:6, BOTTOM_START:5, BOTTOM_END:7};
goog.positioning.CornerBit = {BOTTOM:1, RIGHT:2, FLIP_RTL:4};
goog.positioning.Overflow = {IGNORE:0, ADJUST_X:1, FAIL_X:2, ADJUST_Y:4, FAIL_Y:8, RESIZE_WIDTH:16, RESIZE_HEIGHT:32, ADJUST_X_EXCEPT_OFFSCREEN:64 | 1, ADJUST_Y_EXCEPT_OFFSCREEN:128 | 4};
goog.positioning.OverflowStatus = {NONE:0, ADJUSTED_X:1, ADJUSTED_Y:2, WIDTH_ADJUSTED:4, HEIGHT_ADJUSTED:8, FAILED_LEFT:16, FAILED_RIGHT:32, FAILED_TOP:64, FAILED_BOTTOM:128, FAILED_OUTSIDE_VIEWPORT:256};
goog.positioning.OverflowStatus.FAILED = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT | goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM | goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
goog.positioning.OverflowStatus.FAILED_HORIZONTAL = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT;
goog.positioning.OverflowStatus.FAILED_VERTICAL = goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM;
goog.positioning.positionAtAnchor = function(anchorElement, anchorElementCorner, movableElement, movableElementCorner, opt_offset, opt_margin, opt_overflow, opt_preferredSize, opt_viewport) {
  goog.asserts.assert(movableElement);
  var movableParentTopLeft = goog.positioning.getOffsetParentPageOffset(movableElement);
  var anchorRect = goog.positioning.getVisiblePart_(anchorElement);
  goog.style.translateRectForAnotherFrame(anchorRect, goog.dom.getDomHelper(anchorElement), goog.dom.getDomHelper(movableElement));
  var corner = goog.positioning.getEffectiveCorner(anchorElement, anchorElementCorner);
  var absolutePos = new goog.math.Coordinate(corner & goog.positioning.CornerBit.RIGHT ? anchorRect.left + anchorRect.width : anchorRect.left, corner & goog.positioning.CornerBit.BOTTOM ? anchorRect.top + anchorRect.height : anchorRect.top);
  absolutePos = goog.math.Coordinate.difference(absolutePos, movableParentTopLeft);
  if(opt_offset) {
    absolutePos.x += (corner & goog.positioning.CornerBit.RIGHT ? -1 : 1) * opt_offset.x;
    absolutePos.y += (corner & goog.positioning.CornerBit.BOTTOM ? -1 : 1) * opt_offset.y
  }
  var viewport;
  if(opt_overflow) {
    if(opt_viewport) {
      viewport = opt_viewport
    }else {
      viewport = goog.style.getVisibleRectForElement(movableElement);
      if(viewport) {
        viewport.top -= movableParentTopLeft.y;
        viewport.right -= movableParentTopLeft.x;
        viewport.bottom -= movableParentTopLeft.y;
        viewport.left -= movableParentTopLeft.x
      }
    }
  }
  return goog.positioning.positionAtCoordinate(absolutePos, movableElement, movableElementCorner, opt_margin, viewport, opt_overflow, opt_preferredSize)
};
goog.positioning.getOffsetParentPageOffset = function(movableElement) {
  var movableParentTopLeft;
  var parent = movableElement.offsetParent;
  if(parent) {
    var isBody = parent.tagName == goog.dom.TagName.HTML || parent.tagName == goog.dom.TagName.BODY;
    if(!isBody || goog.style.getComputedPosition(parent) != "static") {
      movableParentTopLeft = goog.style.getPageOffset(parent);
      if(!isBody) {
        movableParentTopLeft = goog.math.Coordinate.difference(movableParentTopLeft, new goog.math.Coordinate(goog.style.bidi.getScrollLeft(parent), parent.scrollTop))
      }
    }
  }
  return movableParentTopLeft || new goog.math.Coordinate
};
goog.positioning.getVisiblePart_ = function(el) {
  var rect = goog.style.getBounds(el);
  var visibleBox = goog.style.getVisibleRectForElement(el);
  if(visibleBox) {
    rect.intersection(goog.math.Rect.createFromBox(visibleBox))
  }
  return rect
};
goog.positioning.positionAtCoordinate = function(absolutePos, movableElement, movableElementCorner, opt_margin, opt_viewport, opt_overflow, opt_preferredSize) {
  absolutePos = absolutePos.clone();
  var status = goog.positioning.OverflowStatus.NONE;
  var corner = goog.positioning.getEffectiveCorner(movableElement, movableElementCorner);
  var elementSize = goog.style.getSize(movableElement);
  var size = opt_preferredSize ? opt_preferredSize.clone() : elementSize.clone();
  if(opt_margin || corner != goog.positioning.Corner.TOP_LEFT) {
    if(corner & goog.positioning.CornerBit.RIGHT) {
      absolutePos.x -= size.width + (opt_margin ? opt_margin.right : 0)
    }else {
      if(opt_margin) {
        absolutePos.x += opt_margin.left
      }
    }
    if(corner & goog.positioning.CornerBit.BOTTOM) {
      absolutePos.y -= size.height + (opt_margin ? opt_margin.bottom : 0)
    }else {
      if(opt_margin) {
        absolutePos.y += opt_margin.top
      }
    }
  }
  if(opt_overflow) {
    status = opt_viewport ? goog.positioning.adjustForViewport_(absolutePos, size, opt_viewport, opt_overflow) : goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
    if(status & goog.positioning.OverflowStatus.FAILED) {
      return status
    }
  }
  goog.style.setPosition(movableElement, absolutePos);
  if(!goog.math.Size.equals(elementSize, size)) {
    goog.style.setBorderBoxSize(movableElement, size)
  }
  return status
};
goog.positioning.adjustForViewport_ = function(pos, size, viewport, overflow) {
  var status = goog.positioning.OverflowStatus.NONE;
  var ADJUST_X_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN;
  var ADJUST_Y_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_Y_EXCEPT_OFFSCREEN;
  if((overflow & ADJUST_X_EXCEPT_OFFSCREEN) == ADJUST_X_EXCEPT_OFFSCREEN && (pos.x < viewport.left || pos.x >= viewport.right)) {
    overflow &= ~goog.positioning.Overflow.ADJUST_X
  }
  if((overflow & ADJUST_Y_EXCEPT_OFFSCREEN) == ADJUST_Y_EXCEPT_OFFSCREEN && (pos.y < viewport.top || pos.y >= viewport.bottom)) {
    overflow &= ~goog.positioning.Overflow.ADJUST_Y
  }
  if(pos.x < viewport.left && overflow & goog.positioning.Overflow.ADJUST_X) {
    pos.x = viewport.left;
    status |= goog.positioning.OverflowStatus.ADJUSTED_X
  }
  if(pos.x < viewport.left && pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.RESIZE_WIDTH) {
    size.width = Math.max(size.width - (pos.x + size.width - viewport.right), 0);
    status |= goog.positioning.OverflowStatus.WIDTH_ADJUSTED
  }
  if(pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.ADJUST_X) {
    pos.x = Math.max(viewport.right - size.width, viewport.left);
    status |= goog.positioning.OverflowStatus.ADJUSTED_X
  }
  if(overflow & goog.positioning.Overflow.FAIL_X) {
    status |= (pos.x < viewport.left ? goog.positioning.OverflowStatus.FAILED_LEFT : 0) | (pos.x + size.width > viewport.right ? goog.positioning.OverflowStatus.FAILED_RIGHT : 0)
  }
  if(pos.y < viewport.top && overflow & goog.positioning.Overflow.ADJUST_Y) {
    pos.y = viewport.top;
    status |= goog.positioning.OverflowStatus.ADJUSTED_Y
  }
  if(pos.y <= viewport.top && pos.y + size.height < viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {
    size.height = Math.max(size.height - (viewport.top - pos.y), 0);
    pos.y = 0;
    status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED
  }
  if(pos.y >= viewport.top && pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {
    size.height = Math.max(size.height - (pos.y + size.height - viewport.bottom), 0);
    status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED
  }
  if(pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.ADJUST_Y) {
    pos.y = Math.max(viewport.bottom - size.height, viewport.top);
    status |= goog.positioning.OverflowStatus.ADJUSTED_Y
  }
  if(overflow & goog.positioning.Overflow.FAIL_Y) {
    status |= (pos.y < viewport.top ? goog.positioning.OverflowStatus.FAILED_TOP : 0) | (pos.y + size.height > viewport.bottom ? goog.positioning.OverflowStatus.FAILED_BOTTOM : 0)
  }
  return status
};
goog.positioning.getEffectiveCorner = function(element, corner) {
  return((corner & goog.positioning.CornerBit.FLIP_RTL && goog.style.isRightToLeft(element) ? corner ^ goog.positioning.CornerBit.RIGHT : corner) & ~goog.positioning.CornerBit.FLIP_RTL)
};
goog.positioning.flipCornerHorizontal = function(corner) {
  return(corner ^ goog.positioning.CornerBit.RIGHT)
};
goog.positioning.flipCornerVertical = function(corner) {
  return(corner ^ goog.positioning.CornerBit.BOTTOM)
};
goog.positioning.flipCorner = function(corner) {
  return(corner ^ goog.positioning.CornerBit.BOTTOM ^ goog.positioning.CornerBit.RIGHT)
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return":" + (this.nextId_++).toString(36)
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("goog.ui.ac.AutoComplete");
goog.provide("goog.ui.ac.AutoComplete.EventType");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.ui.ac.AutoComplete = function(matcher, renderer, selectionHandler) {
  goog.events.EventTarget.call(this);
  this.matcher_ = matcher;
  this.selectionHandler_ = selectionHandler;
  this.renderer_ = renderer;
  goog.events.listen(renderer, [goog.ui.ac.AutoComplete.EventType.HILITE, goog.ui.ac.AutoComplete.EventType.SELECT, goog.ui.ac.AutoComplete.EventType.CANCEL_DISMISS, goog.ui.ac.AutoComplete.EventType.DISMISS], this);
  this.token_ = null;
  this.rows_ = [];
  this.hiliteId_ = -1;
  this.firstRowId_ = 0;
  this.target_ = null;
  this.dismissTimer_ = null;
  this.inputToAnchorMap_ = {}
};
goog.inherits(goog.ui.ac.AutoComplete, goog.events.EventTarget);
goog.ui.ac.AutoComplete.prototype.maxMatches_ = 10;
goog.ui.ac.AutoComplete.prototype.autoHilite_ = true;
goog.ui.ac.AutoComplete.prototype.allowFreeSelect_ = false;
goog.ui.ac.AutoComplete.prototype.wrap_ = false;
goog.ui.ac.AutoComplete.prototype.triggerSuggestionsOnUpdate_ = false;
goog.ui.ac.AutoComplete.EventType = {ROW_HILITE:"rowhilite", HILITE:"hilite", SELECT:"select", DISMISS:"dismiss", CANCEL_DISMISS:"canceldismiss", UPDATE:"update", SUGGESTIONS_UPDATE:"suggestionsupdate"};
goog.ui.ac.AutoComplete.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.ac.AutoComplete.prototype.handleEvent = function(e) {
  if(e.target == this.renderer_) {
    switch(e.type) {
      case goog.ui.ac.AutoComplete.EventType.HILITE:
        this.hiliteId((e.row));
        break;
      case goog.ui.ac.AutoComplete.EventType.SELECT:
        this.selectHilited();
        break;
      case goog.ui.ac.AutoComplete.EventType.CANCEL_DISMISS:
        this.cancelDelayedDismiss();
        break;
      case goog.ui.ac.AutoComplete.EventType.DISMISS:
        this.dismissOnDelay();
        break
    }
  }
};
goog.ui.ac.AutoComplete.prototype.setMaxMatches = function(max) {
  this.maxMatches_ = max
};
goog.ui.ac.AutoComplete.prototype.setAutoHilite = function(autoHilite) {
  this.autoHilite_ = autoHilite
};
goog.ui.ac.AutoComplete.prototype.setAllowFreeSelect = function(allowFreeSelect) {
  this.allowFreeSelect_ = allowFreeSelect
};
goog.ui.ac.AutoComplete.prototype.setWrap = function(wrap) {
  this.wrap_ = wrap
};
goog.ui.ac.AutoComplete.prototype.setTriggerSuggestionsOnUpdate = function(triggerSuggestionsOnUpdate) {
  this.triggerSuggestionsOnUpdate_ = triggerSuggestionsOnUpdate
};
goog.ui.ac.AutoComplete.prototype.setToken = function(token, opt_fullString) {
  if(this.token_ == token) {
    return
  }
  this.token_ = token;
  this.matcher_.requestMatchingRows(this.token_, this.maxMatches_, goog.bind(this.matchListener_, this), opt_fullString);
  this.cancelDelayedDismiss()
};
goog.ui.ac.AutoComplete.prototype.getTarget = function() {
  return this.target_
};
goog.ui.ac.AutoComplete.prototype.setTarget = function(target) {
  this.target_ = target
};
goog.ui.ac.AutoComplete.prototype.isOpen = function() {
  return this.renderer_.isVisible()
};
goog.ui.ac.AutoComplete.prototype.getRowCount = function() {
  return this.rows_.length
};
goog.ui.ac.AutoComplete.prototype.hiliteNext = function() {
  var lastId = this.firstRowId_ + this.rows_.length - 1;
  if(this.hiliteId_ >= this.firstRowId_ && this.hiliteId_ < lastId) {
    this.hiliteId(this.hiliteId_ + 1);
    return true
  }else {
    if(this.hiliteId_ == -1) {
      this.hiliteId(this.firstRowId_);
      return true
    }else {
      if(this.hiliteId_ == lastId) {
        if(this.allowFreeSelect_) {
          this.hiliteId(-1);
          return false
        }else {
          if(this.wrap_) {
            this.hiliteId(this.firstRowId_);
            return true
          }
        }
      }
    }
  }
  return false
};
goog.ui.ac.AutoComplete.prototype.hilitePrev = function() {
  if(this.hiliteId_ > this.firstRowId_) {
    this.hiliteId(this.hiliteId_ - 1);
    return true
  }else {
    if(this.allowFreeSelect_ && this.hiliteId_ == this.firstRowId_) {
      this.hiliteId(-1);
      return false
    }else {
      if(this.wrap_ && (this.hiliteId_ == -1 || this.hiliteId_ == this.firstRowId_)) {
        var lastId = this.firstRowId_ + this.rows_.length - 1;
        this.hiliteId(lastId);
        return true
      }
    }
  }
  return false
};
goog.ui.ac.AutoComplete.prototype.hiliteId = function(id) {
  this.hiliteId_ = id;
  this.renderer_.hiliteId(id);
  return this.getIndexOfId(id) != -1
};
goog.ui.ac.AutoComplete.prototype.hiliteIndex = function(index) {
  return this.hiliteId(this.getIdOfIndex_(index))
};
goog.ui.ac.AutoComplete.prototype.selectHilited = function() {
  var index = this.getIndexOfId(this.hiliteId_);
  if(index != -1) {
    var selectedRow = this.rows_[index];
    var suppressUpdate = this.selectionHandler_.selectRow(selectedRow);
    if(this.triggerSuggestionsOnUpdate_) {
      this.token_ = null;
      this.dismissOnDelay()
    }else {
      this.dismiss()
    }
    if(!suppressUpdate) {
      this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.UPDATE, row:selectedRow});
      if(this.triggerSuggestionsOnUpdate_) {
        this.selectionHandler_.update(true)
      }
    }
    return true
  }else {
    this.dismiss();
    this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.UPDATE, row:null});
    return false
  }
};
goog.ui.ac.AutoComplete.prototype.hasHighlight = function() {
  return this.isOpen() && this.getIndexOfId(this.hiliteId_) != -1
};
goog.ui.ac.AutoComplete.prototype.dismiss = function() {
  this.hiliteId_ = -1;
  this.token_ = null;
  this.firstRowId_ += this.rows_.length;
  this.rows_ = [];
  window.clearTimeout(this.dismissTimer_);
  this.dismissTimer_ = null;
  this.renderer_.dismiss();
  this.dispatchEvent(goog.ui.ac.AutoComplete.EventType.SUGGESTIONS_UPDATE);
  this.dispatchEvent(goog.ui.ac.AutoComplete.EventType.DISMISS)
};
goog.ui.ac.AutoComplete.prototype.dismissOnDelay = function() {
  if(!this.dismissTimer_) {
    this.dismissTimer_ = window.setTimeout(goog.bind(this.dismiss, this), 100)
  }
};
goog.ui.ac.AutoComplete.prototype.immediatelyCancelDelayedDismiss_ = function() {
  if(this.dismissTimer_) {
    window.clearTimeout(this.dismissTimer_);
    this.dismissTimer_ = null;
    return true
  }
  return false
};
goog.ui.ac.AutoComplete.prototype.cancelDelayedDismiss = function() {
  if(!this.immediatelyCancelDelayedDismiss_()) {
    window.setTimeout(goog.bind(this.immediatelyCancelDelayedDismiss_, this), 10)
  }
};
goog.ui.ac.AutoComplete.prototype.disposeInternal = function() {
  goog.ui.ac.AutoComplete.superClass_.disposeInternal.call(this);
  delete this.inputToAnchorMap_;
  this.renderer_.dispose();
  this.selectionHandler_.dispose();
  this.matcher_ = null
};
goog.ui.ac.AutoComplete.prototype.matchListener_ = function(matchedToken, rows, opt_options) {
  if(this.token_ != matchedToken) {
    return
  }
  this.renderRows(rows, opt_options)
};
goog.ui.ac.AutoComplete.prototype.renderRows = function(rows, opt_options) {
  var optionsObj = goog.typeOf(opt_options) == "object" && opt_options;
  var preserveHilited = optionsObj ? optionsObj.getPreserveHilited() : opt_options;
  var indexToHilite = preserveHilited ? this.getIndexOfId(this.hiliteId_) : -1;
  this.firstRowId_ += this.rows_.length;
  this.rows_ = rows;
  var rendRows = [];
  for(var i = 0;i < rows.length;++i) {
    rendRows.push({id:this.getIdOfIndex_(i), data:rows[i]})
  }
  var anchor = null;
  if(this.target_) {
    anchor = this.inputToAnchorMap_[goog.getUid(this.target_)] || this.target_
  }
  this.renderer_.setAnchorElement(anchor);
  this.renderer_.renderRows(rendRows, this.token_, this.target_);
  var autoHilite = this.autoHilite_;
  if(optionsObj && optionsObj.getAutoHilite() !== undefined) {
    autoHilite = optionsObj.getAutoHilite()
  }
  if((autoHilite || indexToHilite >= 0) && rendRows.length != 0 && this.token_) {
    var idToHilite = indexToHilite >= 0 ? this.getIdOfIndex_(indexToHilite) : this.firstRowId_;
    this.hiliteId(idToHilite)
  }else {
    this.hiliteId_ = -1
  }
  this.dispatchEvent(goog.ui.ac.AutoComplete.EventType.SUGGESTIONS_UPDATE)
};
goog.ui.ac.AutoComplete.prototype.getIndexOfId = function(id) {
  var index = id - this.firstRowId_;
  if(index < 0 || index >= this.rows_.length) {
    return-1
  }
  return index
};
goog.ui.ac.AutoComplete.prototype.getIdOfIndex_ = function(index) {
  return this.firstRowId_ + index
};
goog.ui.ac.AutoComplete.prototype.attachInputs = function(var_args) {
  var inputHandler = (this.selectionHandler_);
  inputHandler.attachInputs.apply(inputHandler, arguments)
};
goog.ui.ac.AutoComplete.prototype.detachInputs = function(var_args) {
  var inputHandler = (this.selectionHandler_);
  inputHandler.detachInputs.apply(inputHandler, arguments);
  goog.array.forEach(arguments, function(input) {
    goog.object.remove(this.inputToAnchorMap_, goog.getUid(input))
  }, this)
};
goog.ui.ac.AutoComplete.prototype.attachInputWithAnchor = function(inputElement, anchorElement) {
  this.inputToAnchorMap_[goog.getUid(inputElement)] = anchorElement;
  this.attachInputs(inputElement)
};
goog.ui.ac.AutoComplete.prototype.update = function(opt_force) {
  var inputHandler = (this.selectionHandler_);
  inputHandler.update(opt_force)
};
goog.provide("goog.ui.ac.Renderer");
goog.provide("goog.ui.ac.Renderer.CustomRenderer");
goog.require("goog.a11y.aria");
goog.require("goog.a11y.aria.Role");
goog.require("goog.a11y.aria.State");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.fx.dom.FadeInAndShow");
goog.require("goog.fx.dom.FadeOutAndHide");
goog.require("goog.iter");
goog.require("goog.positioning");
goog.require("goog.positioning.Corner");
goog.require("goog.positioning.Overflow");
goog.require("goog.string");
goog.require("goog.style");
goog.require("goog.ui.IdGenerator");
goog.require("goog.ui.ac.AutoComplete.EventType");
goog.require("goog.userAgent");
goog.ui.ac.Renderer = function(opt_parentNode, opt_customRenderer, opt_rightAlign, opt_useStandardHighlighting) {
  goog.base(this);
  this.parent_ = opt_parentNode || goog.dom.getDocument().body;
  this.dom_ = goog.dom.getDomHelper(this.parent_);
  this.reposition_ = !opt_parentNode;
  this.element_ = null;
  this.token_ = "";
  this.rows_ = [];
  this.rowDivs_ = [];
  this.hilitedRow_ = -1;
  this.startRenderingRows_ = -1;
  this.visible_ = false;
  this.className = goog.getCssName("ac-renderer");
  this.rowClassName = goog.getCssName("ac-row");
  this.legacyActiveClassName_ = goog.getCssName("active");
  this.activeClassName = goog.getCssName("ac-active");
  this.highlightedClassName = goog.getCssName("ac-highlighted");
  this.customRenderer_ = opt_customRenderer || null;
  this.useStandardHighlighting_ = opt_useStandardHighlighting != null ? opt_useStandardHighlighting : true;
  this.matchWordBoundary_ = true;
  this.highlightAllTokens_ = false;
  this.rightAlign_ = !!opt_rightAlign;
  this.topAlign_ = false;
  this.menuFadeDuration_ = 0;
  this.animation_
};
goog.inherits(goog.ui.ac.Renderer, goog.events.EventTarget);
goog.ui.ac.Renderer.prototype.anchorElement_;
goog.ui.ac.Renderer.prototype.widthProvider_;
goog.ui.ac.Renderer.DELAY_BEFORE_MOUSEOVER = 300;
goog.ui.ac.Renderer.prototype.getElement = function() {
  return this.element_
};
goog.ui.ac.Renderer.prototype.setWidthProvider = function(widthProvider) {
  this.widthProvider_ = widthProvider
};
goog.ui.ac.Renderer.prototype.setTopAlign = function(align) {
  this.topAlign_ = align
};
goog.ui.ac.Renderer.prototype.getTopAlign = function() {
  return this.topAlign_
};
goog.ui.ac.Renderer.prototype.setRightAlign = function(align) {
  this.rightAlign_ = align
};
goog.ui.ac.Renderer.prototype.getRightAlign = function() {
  return this.rightAlign_
};
goog.ui.ac.Renderer.prototype.setUseStandardHighlighting = function(useStandardHighlighting) {
  this.useStandardHighlighting_ = useStandardHighlighting
};
goog.ui.ac.Renderer.prototype.setMatchWordBoundary = function(matchWordBoundary) {
  this.matchWordBoundary_ = matchWordBoundary
};
goog.ui.ac.Renderer.prototype.setHighlightAllTokens = function(highlightAllTokens) {
  this.highlightAllTokens_ = highlightAllTokens
};
goog.ui.ac.Renderer.prototype.setMenuFadeDuration = function(duration) {
  this.menuFadeDuration_ = duration
};
goog.ui.ac.Renderer.prototype.setAnchorElement = function(anchor) {
  this.anchorElement_ = anchor
};
goog.ui.ac.Renderer.prototype.getAnchorElement = function() {
  return this.anchorElement_
};
goog.ui.ac.Renderer.prototype.renderRows = function(rows, token, opt_target) {
  this.token_ = token;
  this.rows_ = rows;
  this.hilitedRow_ = -1;
  this.startRenderingRows_ = goog.now();
  this.target_ = opt_target;
  this.rowDivs_ = [];
  this.redraw()
};
goog.ui.ac.Renderer.prototype.dismiss = function() {
  if(this.target_) {
    goog.a11y.aria.setActiveDescendant(this.target_, null)
  }
  if(this.visible_) {
    this.visible_ = false;
    if(this.target_) {
      goog.a11y.aria.setState(this.target_, goog.a11y.aria.State.HASPOPUP, false)
    }
    if(this.menuFadeDuration_ > 0) {
      goog.dispose(this.animation_);
      this.animation_ = new goog.fx.dom.FadeOutAndHide(this.element_, this.menuFadeDuration_);
      this.animation_.play()
    }else {
      goog.style.showElement(this.element_, false)
    }
  }
};
goog.ui.ac.Renderer.prototype.show = function() {
  if(!this.visible_) {
    this.visible_ = true;
    if(this.target_) {
      goog.a11y.aria.setRole(this.target_, goog.a11y.aria.Role.COMBOBOX);
      goog.a11y.aria.setState(this.target_, goog.a11y.aria.State.AUTOCOMPLETE, "list");
      goog.a11y.aria.setState(this.target_, goog.a11y.aria.State.HASPOPUP, true)
    }
    if(this.menuFadeDuration_ > 0) {
      goog.dispose(this.animation_);
      this.animation_ = new goog.fx.dom.FadeInAndShow(this.element_, this.menuFadeDuration_);
      this.animation_.play()
    }else {
      goog.style.showElement(this.element_, true)
    }
  }
};
goog.ui.ac.Renderer.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.ac.Renderer.prototype.hiliteRow = function(index) {
  var rowDiv = index >= 0 && index < this.rowDivs_.length ? this.rowDivs_[index] : undefined;
  var evtObj = {type:goog.ui.ac.AutoComplete.EventType.ROW_HILITE, rowNode:rowDiv};
  if(this.dispatchEvent(evtObj)) {
    this.hiliteNone();
    this.hilitedRow_ = index;
    if(rowDiv) {
      goog.dom.classes.add(rowDiv, this.activeClassName, this.legacyActiveClassName_);
      if(this.target_) {
        goog.a11y.aria.setActiveDescendant(this.target_, rowDiv)
      }
      goog.style.scrollIntoContainerView(rowDiv, this.element_)
    }
  }
};
goog.ui.ac.Renderer.prototype.hiliteNone = function() {
  if(this.hilitedRow_ >= 0) {
    goog.dom.classes.remove(this.rowDivs_[this.hilitedRow_], this.activeClassName, this.legacyActiveClassName_)
  }
};
goog.ui.ac.Renderer.prototype.hiliteId = function(id) {
  if(id == -1) {
    this.hiliteRow(-1)
  }else {
    for(var i = 0;i < this.rows_.length;i++) {
      if(this.rows_[i].id == id) {
        this.hiliteRow(i);
        return
      }
    }
  }
};
goog.ui.ac.Renderer.prototype.setMenuClasses_ = function(elt) {
  goog.dom.classes.add(elt, this.className)
};
goog.ui.ac.Renderer.prototype.maybeCreateElement_ = function() {
  if(!this.element_) {
    var el = this.dom_.createDom("div", {style:"display:none"});
    this.element_ = el;
    this.setMenuClasses_(el);
    goog.a11y.aria.setRole(el, goog.a11y.aria.Role.LISTBOX);
    el.id = goog.ui.IdGenerator.getInstance().getNextUniqueId();
    this.dom_.appendChild(this.parent_, el);
    goog.events.listen(el, goog.events.EventType.CLICK, this.handleClick_, false, this);
    goog.events.listen(el, goog.events.EventType.MOUSEDOWN, this.handleMouseDown_, false, this);
    goog.events.listen(el, goog.events.EventType.MOUSEOVER, this.handleMouseOver_, false, this)
  }
};
goog.ui.ac.Renderer.prototype.redraw = function() {
  this.maybeCreateElement_();
  if(this.topAlign_) {
    this.element_.style.visibility = "hidden"
  }
  if(this.widthProvider_) {
    var width = this.widthProvider_.clientWidth + "px";
    this.element_.style.minWidth = width
  }
  this.rowDivs_.length = 0;
  this.dom_.removeChildren(this.element_);
  if(this.customRenderer_ && this.customRenderer_.render) {
    this.customRenderer_.render(this, this.element_, this.rows_, this.token_)
  }else {
    var curRow = null;
    goog.iter.forEach(this.rows_, function(row) {
      row = this.renderRowHtml(row, this.token_);
      if(this.topAlign_) {
        this.element_.insertBefore(row, curRow)
      }else {
        this.dom_.appendChild(this.element_, row)
      }
      curRow = row
    }, this)
  }
  if(this.rows_.length == 0) {
    this.dismiss();
    return
  }else {
    this.show()
  }
  this.reposition();
  goog.style.setUnselectable(this.element_, true)
};
goog.ui.ac.Renderer.prototype.getAnchorCorner = function() {
  var anchorCorner = this.rightAlign_ ? goog.positioning.Corner.BOTTOM_RIGHT : goog.positioning.Corner.BOTTOM_LEFT;
  if(this.topAlign_) {
    anchorCorner = goog.positioning.flipCornerVertical(anchorCorner)
  }
  return anchorCorner
};
goog.ui.ac.Renderer.prototype.reposition = function() {
  if(this.target_ && this.reposition_) {
    var anchorElement = this.anchorElement_ || this.target_;
    var anchorCorner = this.getAnchorCorner();
    goog.positioning.positionAtAnchor(anchorElement, anchorCorner, this.element_, goog.positioning.flipCornerVertical(anchorCorner), null, null, goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN);
    if(this.topAlign_) {
      this.element_.style.visibility = "visible"
    }
  }
};
goog.ui.ac.Renderer.prototype.setAutoPosition = function(auto) {
  this.reposition_ = auto
};
goog.ui.ac.Renderer.prototype.getAutoPosition = function() {
  return this.reposition_
};
goog.ui.ac.Renderer.prototype.getTarget = function() {
  return this.target_
};
goog.ui.ac.Renderer.prototype.disposeInternal = function() {
  if(this.element_) {
    goog.events.unlisten(this.element_, goog.events.EventType.CLICK, this.handleClick_, false, this);
    goog.events.unlisten(this.element_, goog.events.EventType.MOUSEDOWN, this.handleMouseDown_, false, this);
    goog.events.unlisten(this.element_, goog.events.EventType.MOUSEOVER, this.handleMouseOver_, false, this);
    this.dom_.removeNode(this.element_);
    this.element_ = null;
    this.visible_ = false
  }
  goog.dispose(this.animation_);
  this.parent_ = null;
  goog.base(this, "disposeInternal")
};
goog.ui.ac.Renderer.prototype.renderRowContents_ = function(row, token, node) {
  node.innerHTML = goog.string.htmlEscape(row.data.toString())
};
goog.ui.ac.Renderer.prototype.hiliteMatchingText_ = function(node, tokenOrArray) {
  if(node.nodeType == goog.dom.NodeType.TEXT) {
    var rest = null;
    if(goog.isArray(tokenOrArray) && tokenOrArray.length > 1 && !this.highlightAllTokens_) {
      rest = goog.array.slice(tokenOrArray, 1)
    }
    var token = this.getTokenRegExp_(tokenOrArray);
    if(token.length == 0) {
      return
    }
    var text = node.nodeValue;
    var re = this.matchWordBoundary_ ? new RegExp("([\\s\\S]*?)\\b(" + token + ")", "gi") : new RegExp("([\\s\\S]*?)(" + token + ")", "gi");
    var textNodes = [];
    var lastIndex = 0;
    var match = re.exec(text);
    var numMatches = 0;
    while(match) {
      numMatches++;
      textNodes.push(match[1]);
      textNodes.push(match[2]);
      lastIndex = re.lastIndex;
      match = re.exec(text)
    }
    textNodes.push(text.substring(lastIndex));
    if(textNodes.length > 1) {
      var maxNumToBold = !this.highlightAllTokens_ ? 1 : numMatches;
      for(var i = 0;i < maxNumToBold;i++) {
        var idx = 2 * i;
        node.nodeValue = textNodes[idx];
        var boldTag = this.dom_.createElement("b");
        boldTag.className = this.highlightedClassName;
        this.dom_.appendChild(boldTag, this.dom_.createTextNode(textNodes[idx + 1]));
        boldTag = node.parentNode.insertBefore(boldTag, node.nextSibling);
        node.parentNode.insertBefore(this.dom_.createTextNode(""), boldTag.nextSibling);
        node = boldTag.nextSibling
      }
      var remainingTextNodes = goog.array.slice(textNodes, maxNumToBold * 2);
      node.nodeValue = remainingTextNodes.join("")
    }else {
      if(rest) {
        this.hiliteMatchingText_(node, rest)
      }
    }
  }else {
    var child = node.firstChild;
    while(child) {
      var nextChild = child.nextSibling;
      this.hiliteMatchingText_(child, tokenOrArray);
      child = nextChild
    }
  }
};
goog.ui.ac.Renderer.prototype.getTokenRegExp_ = function(tokenOrArray) {
  var token = "";
  if(!tokenOrArray) {
    return token
  }
  if(goog.isArray(tokenOrArray)) {
    tokenOrArray = goog.array.filter(tokenOrArray, function(str) {
      return!goog.string.isEmptySafe(str)
    })
  }
  if(this.highlightAllTokens_) {
    if(goog.isArray(tokenOrArray)) {
      var tokenArray = goog.array.map(tokenOrArray, goog.string.regExpEscape);
      token = tokenArray.join("|")
    }else {
      token = goog.string.collapseWhitespace(tokenOrArray);
      token = goog.string.regExpEscape(token);
      token = token.replace(/ /g, "|")
    }
  }else {
    if(goog.isArray(tokenOrArray)) {
      token = tokenOrArray.length > 0 ? goog.string.regExpEscape(tokenOrArray[0]) : ""
    }else {
      if(!/^\W/.test(tokenOrArray)) {
        token = goog.string.regExpEscape(tokenOrArray)
      }
    }
  }
  return token
};
goog.ui.ac.Renderer.prototype.renderRowHtml = function(row, token) {
  var node = this.dom_.createDom("div", {className:this.rowClassName, id:goog.ui.IdGenerator.getInstance().getNextUniqueId()});
  goog.a11y.aria.setRole(node, goog.a11y.aria.Role.OPTION);
  if(this.customRenderer_ && this.customRenderer_.renderRow) {
    this.customRenderer_.renderRow(row, token, node)
  }else {
    this.renderRowContents_(row, token, node)
  }
  if(token && this.useStandardHighlighting_) {
    this.hiliteMatchingText_(node, token)
  }
  goog.dom.classes.add(node, this.rowClassName);
  this.rowDivs_.push(node);
  return node
};
goog.ui.ac.Renderer.prototype.getRowFromEventTarget_ = function(et) {
  while(et && et != this.element_ && !goog.dom.classes.has(et, this.rowClassName)) {
    et = (et.parentNode)
  }
  return et ? goog.array.indexOf(this.rowDivs_, et) : -1
};
goog.ui.ac.Renderer.prototype.handleClick_ = function(e) {
  var index = this.getRowFromEventTarget_((e.target));
  if(index >= 0) {
    this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.SELECT, row:this.rows_[index].id})
  }
  e.stopPropagation()
};
goog.ui.ac.Renderer.prototype.handleMouseDown_ = function(e) {
  e.stopPropagation();
  e.preventDefault()
};
goog.ui.ac.Renderer.prototype.handleMouseOver_ = function(e) {
  var index = this.getRowFromEventTarget_((e.target));
  if(index >= 0) {
    if(goog.now() - this.startRenderingRows_ < goog.ui.ac.Renderer.DELAY_BEFORE_MOUSEOVER) {
      return
    }
    this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.HILITE, row:this.rows_[index].id})
  }
};
goog.ui.ac.Renderer.CustomRenderer = function() {
};
goog.ui.ac.Renderer.CustomRenderer.prototype.render = function(renderer, element, rows, token) {
};
goog.ui.ac.Renderer.CustomRenderer.prototype.renderRow = function(row, token, node) {
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("observation_data.observation_points");
goog.require("cljs.core");
observation_data.observation_points.metadata = cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Angeli", new cljs.core.Keyword(null, "id", "id", 1013907597), 102024, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.90959, 68.90969], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.66231, 25.66241], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101986, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.68377, 67.69607], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([24.84572, 24.85821], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-10-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Joensuun lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101608, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.65989, 
62.65999], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.61143, 29.61153], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Teuva Kauppilankyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101262, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.46678, 62.49189], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.61301, 21.76312], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Nuorgam", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 102036, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([70.08198, 70.08888], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.89135, 27.9406], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Inkoo B\u00e5gask\u00e4r", new cljs.core.Keyword(null, "id", "id", 1013907597), 100969, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.93105, 59.93351], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01344, 24.01412], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1962-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lemland Nyhamn", new cljs.core.Keyword(null, "id", "id", 1013907597), 100909, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.95905, 59.96674], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.94658, 19.96336], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sysm\u00e4 Joutsj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101342, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.51091, 61.51696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.81133, 25.81346], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Luhanka Judinsalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101362, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.70019, 61.70448], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([25.49665, 25.50525], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-09T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juuka Niemel\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101609, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.21702, 
63.25045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.21333, 29.24677], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1962-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi Haapovaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101837, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.26571, 65.2672], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.99638, 29.01259], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Keminmaa", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101849, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.80035, 65.80045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.61269, 24.61279], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Posio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101883, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.12, 66.12], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.14, 28.15], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-11-29T00:00:00Z"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kirakkaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102055, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.58245, 69.58255], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.89404, 28.89414], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2009-09-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kotka Kirkonmaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101043, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38518, 60.38528], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.04855, 27.04865], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "2006-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Taivalkoski Inkee", new cljs.core.Keyword(null, "id", "id", 1013907597), 101882, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.73377, 65.7346], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.54629, 
28.56086], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi N\u00e4lj\u00e4nk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101822, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.21708, 65.23969], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.41302, 28.44839], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Tv\u00e4rminne", new cljs.core.Keyword(null, "id", "id", 1013907597), 100953, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.84395, 
59.84405], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.2484, 23.2485], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rauma Kylm\u00e4pihlaja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101061, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.14472, 61.15015], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.29651, 21.30278], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-09-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4ms\u00e4 Halli lentokentt\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101315, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.85018, 61.85667], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.78576, 24.79669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Merikarvia Tuorila Alakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101257, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.84842, 61.84852], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.65087, 21.65097], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Karvia Alkkia", new cljs.core.Keyword(null, "id", "id", 1013907597), 101272, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.1832, 62.19066], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.70373, 22.79977], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-03-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lavia Riiho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101273, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.61454, 61.61688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54094, 22.5466], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Yl\u00f6j\u00e4rvi Mets\u00e4kyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101295, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.60013, 61.6169], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([23.49655, 23.50415], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen Vahoj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101298, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.92119, 
61.92129], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.09238, 23.09248], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alavus Sulkavankyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101305, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.44928, 62.45027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.54645, 23.55497], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Luhanka Tammij\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101348, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.83532, 61.83542], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.85365, 25.85375], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Hankasalmi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101391, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.30607, 62.31701], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.48607, 26.49672], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pieks\u00e4m\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101411, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.30026, 62.30036], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.14666, 27.14676], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sulkava Halttula", new cljs.core.Keyword(null, "id", "id", 1013907597), 101425, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.91695, 61.92371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.31344, 28.3202], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4ms\u00e4 Halli Lentoasemantie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101338, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.85962, 61.85972], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.81492, 24.81502], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Pitk\u00e4hiekka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101410, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.01692, 
62.03424], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.19392, 27.1968], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alaj\u00e4rvi M\u00f6ksy", new cljs.core.Keyword(null, "id", "id", 1013907597), 101533, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.08354, 63.08906], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.26093, 24.26317], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-06-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hailuoto Ojakyl\u00e4", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101776, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.01698, 65.03374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.71281, 24.77957], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Hailuoto Marjaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101784, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.03364, 65.03999], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.56144, 24.5629], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kittil\u00e4 Matorova", new cljs.core.Keyword(null, "id", "id", 1013907597), 101985, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.99993, 68.00003], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.23998, 24.24008], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2010-09-21T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puumala kk Urheilukentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 150168, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.52237, 61.52247], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.18486, 28.18496], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"2012-09-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ranua lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101873, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.97679, 65.97689], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.36749, 
26.36759], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-09-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Kuolaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101756, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.11148, 64.11714], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.32982, 28.33881], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Ojakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101705, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.73595, 
63.75038], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.70564, 25.71316], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Viinij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101619, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([62.63366, 62.63376], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.31342, 29.31352], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4ms\u00e4nkoski", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101340, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.91686, 61.91696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.1466, 25.1467], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1965-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Suomussalmi Pesi\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 101826, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.93122, 64.93132], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.74668, 28.74678], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00f6yli\u00f6 Yttil\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101077, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.10008, 61.11018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.36323, 22.37416], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Iitti Kausala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101210, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.88765, 60.93361], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.26344, 26.35349], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Loviisa Orrengrund", new cljs.core.Keyword(null, "id", "id", 1013907597), 101039, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.27483, 60.27493], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.44452, 
26.44462], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kumlinge kirkonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 100928, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.25807, 60.25817], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.74715, 20.74725], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2000-11-08T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhava kk Uunimaantie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101519, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.12018, 
63.12028], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.04355, 23.04365], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-11-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Viitasaari Kolima K\u00e4rn\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101545, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.16693, 63.16758], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.92981, 25.93602], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Tuiskavanluoto", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101628, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.54617, 62.54627], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.66845, 29.66855], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-08-26T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kaarina Ylt\u00f6inen", new cljs.core.Keyword(null, "id", "id", 1013907597), 100934, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38339, 60.38683], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54665, 22.55147], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta Lepola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101247, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05024, 61.05759], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.19687, 28.20878], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-09-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jomala Jomalaby", new cljs.core.Keyword(null, "id", "id", 1013907597), 100917, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17831, 60.18341], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.97989, 19.98638], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1971-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hammarland M\u00e4rket", new cljs.core.Keyword(null, "id", "id", 1013907597), 100919, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.29996, 60.30103], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.12984, 
19.13147], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-02-15T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Varkaus Kosulanniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101421, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.32223, 62.32233], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.90782, 27.90792], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jokioinen Jokioisten observatorio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101104, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.81396, 
60.81406], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.49756, 23.49766], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Utti lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101191, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.89048, 60.9003], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.93014, 26.94109], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "\u00c4ht\u00e4ri Myllym\u00e4ki", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101520, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.53352, 62.53501], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.11314, 24.2174], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Hattula Lepaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101151, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.11473, 61.11483], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.3244, 24.3245], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2006-11-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Salo K\u00e4rkk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 100955, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.36674, 60.37378], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.09668, 23.11289], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Teeriranta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101898, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.52007, 65.52017], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.52072, 29.52082], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1998-10-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orip\u00e4\u00e4 Teinikivi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101081, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.90008, 60.90435], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.6966, 22.7117], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kirkkonummi M\u00e4kiluoto", new cljs.core.Keyword(null, "id", "id", 1013907597), 100997, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.91676, 59.92019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.34679, 
24.34939], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Anjalankoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101209, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.70019, 60.70029], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([26.83016, 26.83026], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lokka", new cljs.core.Keyword(null, "id", "id", 1013907597), 102E3, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.82049, 
67.82156], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.73688, 27.7464], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Vuotso", new cljs.core.Keyword(null, "id", "id", 1013907597), 102001, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.08417, 68.10259], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.1221, 27.18823], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Muonio Laukukero", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101982, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.06279, 68.06289], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.0333, 24.0334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-09-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kittil\u00e4 Kentt\u00e4rova", new cljs.core.Keyword(null, "id", "id", 1013907597), 101987, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.98723, 67.98733], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.24283, 24.24293], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2002-10-22T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hausj\u00e4rvi Lavinto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101139, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.80514, 60.81691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.84361, 24.84682], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101725, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.2827, 64.2828], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.67327, 27.67337], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Punkaharju Laukansaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101441, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.8003, 61.80209], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.31512, 
29.33027], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Laukansaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101423, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.79598, 61.80039], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.83015, 28.84617], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vesanto Sonkari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101555, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.92173, 
62.94831], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.39766, 26.42475], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kotka Haapasaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101042, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.28657, 60.28667], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.18522, 27.18532], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-04-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "\u00c4\u00e4nekoski Kalaniemi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101541, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.86692, 62.88368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.82984, 25.86329], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Jomala Maarianhaminan lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 100907, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.11665, 60.1248], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.89656, 19.90349], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Harabacka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101028, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.39153, 60.39163], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.60818, 25.60828], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2006-10-02T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virrat \u00c4ij\u00e4nneva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101310, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.32778, 62.32788], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.54223, 23.54233], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla V\u00e4rri\u00f6tunturi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102012, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.74806, 67.74816], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([29.61107, 29.61117], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tohmaj\u00e4rvi Kemie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101459, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.23534, 
62.23544], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.34657, 30.34667], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Siikalatva Kestil\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101717, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.35032, 64.3557], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.27967, 26.29894], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruokolahti Kotaniemi Siitonen", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101248, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.36693, 61.36847], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66353, 28.68024], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-12-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kalajoki Ulkokalla", new cljs.core.Keyword(null, "id", "id", 1013907597), 101673, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.33099, 64.33367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.44617, 23.44652], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-01-02T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Asikkala Pulkkilanharju", new cljs.core.Keyword(null, "id", "id", 1013907597), 101185, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.26506, 61.26694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.52014, 25.53013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-01-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Kevo", new cljs.core.Keyword(null, "id", "id", 1013907597), 102035, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.75632, 69.75642], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.00673, 27.00683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1962-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokem\u00e4ki Tulkkila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101103, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.25289, 61.25299], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.34608, 22.34618], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "2010-05-26T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Katinen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101150, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.99931, 60.99941], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.49139, 
24.49149], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2001-10-17T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kristiinankaupunki Majakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101268, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.20343, 62.20353], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.16966, 21.16976], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-09-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salo Kiikala lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 100967, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.46409, 
60.46419], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.64976, 23.64986], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2002-06-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Multia Pirttiper\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101363, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41041, 62.41056], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.04991, 25.05061], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Heinola Asemantaus", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101196, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.2, 61.2001], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.04945, 26.04955], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Kurikka Py\u00f6rni", new cljs.core.Keyword(null, "id", "id", 1013907597), 101478, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.73346, 62.73384], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.95939, 21.97976], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1980-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Inari kirkonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 102046, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.90582, 68.90592], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01397, 27.01407], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2003-09-30T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pelkosenniemi kirkonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101947, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.1002, 67.10058], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.49601, 27.51], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kankaanp\u00e4\u00e4 Niinisalo lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101291, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.83844, 61.84188], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.46314, 
22.46379], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1998-05-08T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kankaanp\u00e4\u00e4 Niinisalo Puolustusvoimat", new cljs.core.Keyword(null, "id", "id", 1013907597), 101270, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.83856, 61.83866], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.4634, 22.4635], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa P\u00e4rn\u00e4m\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101390, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([61.76605, 61.76699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.39225, 26.39679], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa Leivonm\u00e4ki Savenaho", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101367, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.87937, 61.87947], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.09473, 26.09483], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kauhajoki Kuja-Kokko", new cljs.core.Keyword(null, "id", "id", 1013907597), 101289, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.4134, 62.4135], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.18367, 22.18377], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Mustasaari Riimala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101474, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.96681, 62.98357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.74628, 21.77971], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhajoki kaupunki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101284, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41546, 62.4169], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.16305, 22.18992], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jalasj\u00e4rvi Hirvij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101285, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.47293, 62.47303], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.91002, 22.91012], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sein\u00e4joki Pelmaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101486, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.93699, 62.93813], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([22.48736, 22.48883], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Em\u00e4salo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101023, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20375, 
60.21691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.62543, 25.63025], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Hetta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101974, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.38601, 68.40055], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.58773, 23.72894], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1983-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juva Partala", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101418, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.89225, 61.89235], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.88523, 27.88533], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Mustasaari Valassaaret", new cljs.core.Keyword(null, "id", "id", 1013907597), 101464, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.43543, 63.43553], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.0645, 21.0646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmes Mujej\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101763, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.78371, 63.82492], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.4466, 29.46338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-08-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valtimo kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101743, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.66703, 63.66735], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.82922, 28.83001], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nokia Tottij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101116, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.39643, 61.39653], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.33632, 
23.33642], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokem\u00e4ki Rausenkulma", new cljs.core.Keyword(null, "id", "id", 1013907597), 101068, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.25997, 61.27102], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.22747, 22.24883], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Somero Salkola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101128, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.6465, 
60.6466], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.80584, 23.80594], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2011-05-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Hiiskula", new cljs.core.Keyword(null, "id", "id", 1013907597), 101135, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51679, 60.52494], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.5134, 24.51572], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Asikkala Uraj\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101168, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.13351, 61.13722], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.79256, 25.79683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "H\u00e4meenlinna Lammi Evo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101189, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.21655, 61.21665], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13278, 25.13288], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2005-11-08T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virolahti Koivuniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101231, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51688, 60.53364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.67268, 27.68033], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1977-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta Konnunsuo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101246, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.03874, 61.03884], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.5639, 28.564], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta Hiekkapakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101252, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.19803, 61.19813], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.47269, 
28.47279], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2009-11-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautj\u00e4rvi Simpele Kangaskoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101253, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.42265, 61.43371], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.34689, 29.39166], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Parikkala Koitsanlahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101254, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.44462, 
61.44472], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.46103, 29.46113], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Isojoki K\u00e4rjenkoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101258, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.13283, 62.13293], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.67357, 21.67367], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola Korplax", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101667, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.85021, 63.88365], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.19623, 23.23466], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Reisj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101676, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.66692, 63.66702], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.82968, 24.82978], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1964-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Toholampi Laitala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101689, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.78357, 63.82145], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16296, 24.16361], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio Ritoniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101580, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.79888, 62.8004], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.90492, 27.91341], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1991-05-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "P\u00f6yty\u00e4 Yl\u00e4ne", new cljs.core.Keyword(null, "id", "id", 1013907597), 101093, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.87136, 60.87146], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.38795, 
22.38805], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101430, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.9464, 61.95039], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.93153, 28.94691], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieto Tammentaka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101070, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.56673, 
60.57391], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.42996, 22.44673], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi lentoasema vertailumittaus", new cljs.core.Keyword(null, "id", "id", 1013907597), 126760, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.65939, 62.65949], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.61439, 29.61449], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2010-11-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta lentoasema", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101237, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.04416, 61.08367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.14686, 28.15104], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Laitila Haukka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101050, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.83311, 60.83321], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.75685, 21.75695], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "M\u00e4nts\u00e4l\u00e4 Hirvihaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101166, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.62486, 60.63357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.22432, 25.31353], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Anjala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101194, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.69658, 60.71696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.79683, 26.81054], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi I majakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101783, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.38364, 65.38541], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.09605, 24.09615], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1981-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyvink\u00e4\u00e4 Hyvink\u00e4\u00e4nkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101130, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.59596, 60.59606], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([24.80313, 24.80323], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00f6kar Bogsk\u00e4r", new cljs.core.Keyword(null, "id", "id", 1013907597), 100921, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.50551, 
59.50561], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.35551, 20.35561], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lohja Porla", new cljs.core.Keyword(null, "id", "id", 1013907597), 100974, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.24399, 60.2502], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.04674, 24.04934], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Helsingin majakka", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101003, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.94844, 59.94854], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.9268, 24.9269], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2003-07-17T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Turku Rajakari", new cljs.core.Keyword(null, "id", "id", 1013907597), 100947, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.37783, 60.38347], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.0133, 22.09645], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-01-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kokkola Tankar", new cljs.core.Keyword(null, "id", "id", 1013907597), 101661, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.95021, 63.95092], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.84434, 22.8463], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-08-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rantasalmi Rukkasluoto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101436, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.06307, 62.06317], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.56594, 28.56604], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-09-10T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonkoski Simanala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101446, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.0503, 62.05568], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.04402, 29.0469], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "R\u00e4\u00e4kkyl\u00e4 kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101450, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.31132, 62.31142], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.6293, 
29.6294], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Korsn\u00e4s Bredsk\u00e4ret", new cljs.core.Keyword(null, "id", "id", 1013907597), 101479, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.93428, 62.93438], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.1852, 21.1853], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-01-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Maalahti Str\u00f6mmingsb\u00e5dan", new cljs.core.Keyword(null, "id", "id", 1013907597), 101481, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.97844, 
62.97854], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.73983, 20.73993], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-09-09T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhava lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101503, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10018, 63.1205], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.02966, 23.04371], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Halsua Kanala Purola", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101528, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.44559, 63.45033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.44417, 24.44646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Multia Karhila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101536, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.51039, 62.51049], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.80759, 24.80769], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-09-25T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Viitasaari Haapaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101537, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.0767, 63.08254], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.8482, 25.85867], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielavesi Venetm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101569, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.31502, 63.31707], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.97902, 26.97995], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1987-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola Hollihaka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101675, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.84439, 63.84449], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.12428, 23.12438], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "2008-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kilpisj\u00e4rvi kyl\u00e4keskus", new cljs.core.Keyword(null, "id", "id", 1013907597), 102016, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.04942, 69.04952], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([20.79112, 20.79122], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Tulliniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100946, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.80856, 
59.80866], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.91578, 22.91588], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1990-09-29T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Kevo Kevoj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 126737, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.75695, 69.75705], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01195, 27.01205], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2010-09-17T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Parainen Fagerholm", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100924, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.11158, 60.11168], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.69934, 21.69944], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-11-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Pello kk Museotie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101914, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.7667, 66.77283], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.96298, 23.9688], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Vaala Pelso", new cljs.core.Keyword(null, "id", "id", 1013907597), 101800, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.49185, 64.50149], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.42381, 26.47027], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Maasoja", new cljs.core.Keyword(null, "id", "id", 1013907597), 100976, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41678, 60.41882], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.39674, 24.39851], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101805, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.40009, 65.40019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.96306, 26.96316], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-08-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi Sarakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101877, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.78985, 65.80051], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.32952, 27.33297], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautavaara Ala-Luosta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101599, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.267, 
63.27154], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.46328, 28.47004], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Turku Artukainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 100949, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.45449, 60.45459], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.1783, 22.1784], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2003-01-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 Muuratj\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101352, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15021, 62.15503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.34658, 25.42475], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Tampere keskusta Satakunnankatu", new cljs.core.Keyword(null, "id", "id", 1013907597), 151049, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.50118, 61.50128], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76463, 23.76473], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2013-04-23T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Toholampi Oravala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101679, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.76357, 63.76701], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.28074, 24.29641], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Saviaho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101745, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.95036, 63.95518], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.42596, 28.42995], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen Vehuvarpee", new cljs.core.Keyword(null, "id", "id", 1013907597), 101277, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.73345, 61.73911], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.81317, 
22.82993], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla kk Myllytie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101959, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.83398, 66.83408], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.67422, 28.67432], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-07-20T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio Savilahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101586, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.89255, 
62.89265], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.6334, 27.6335], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2005-06-24T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi\u00f6nsaari V\u00e4n\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 100945, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.8667, 59.86957], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.19336, 22.19679], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-04T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Raasepori Jussar\u00f6", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100965, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.82051, 59.82061], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.57634, 23.57644], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-04T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kirkkonummi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100998, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.23343, 60.23353], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.38009, 24.38019], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-05-18T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Voikoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101211, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.25132, 61.25142], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.77899, 26.77909], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ristij\u00e4rvi Hiisij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101748, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.36621, 64.36715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.5798, 28.60769], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101398, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66813, 61.7349], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([27.1968, 27.3049], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Rantakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101402, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66691, 
61.67467], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.21341, 27.22234], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pori rautatieasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101064, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.47888, 61.47898], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.78315, 21.78325], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-10-09T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pori Tahkoluoto", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101267, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.63035, 61.63045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.37587, 21.37597], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-08-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Salla Naruska", new cljs.core.Keyword(null, "id", "id", 1013907597), 101966, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.16221, 67.16231], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.17761, 29.17771], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-09-21T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Uusikaupunki Nervanderinpuisto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101049, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.80004, 60.802], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.42463, 21.42999], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Rautatientori", new cljs.core.Keyword(null, "id", "id", 1013907597), 101007, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17164, 60.17174], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.94455, 24.94465], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"2009-11-02T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere Siilinkari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101311, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.51752, 61.51762], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.75364, 23.75374], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-11-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaala Pelso Puutteenper\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 134522, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.51128, 64.51138], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.46051, 26.46061], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2011-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kustavi Isokari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101059, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.7167, 
60.72235], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.01322, 21.02679], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utaj\u00e4rvi S\u00e4rkij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101809, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.9277, 64.9338], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.18862, 27.19641], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kaustinen Tastula", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101665, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.59356, 63.59366], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.71657, 23.71667], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Ylitornio Meltosj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101908, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.52947, 66.53127], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.64955, 24.64972], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joensuu Pyh\u00e4selk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101610, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.51701, 62.51716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.79679, 29.80783], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joensuu Linnunlahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101632, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.6015, 62.6016], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.72375, 29.72385], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "2008-11-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere H\u00e4rm\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101124, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.46567, 61.46577], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.74649, 
23.74659], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-05-08T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu Vihre\u00e4saari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101794, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.00616, 65.00626], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.39313, 25.39323], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-10-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Muonio Sammaltunturi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101983, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.96711, 
67.97337], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.11229, 24.11594], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-09-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Lammi Pappila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101154, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05403, 61.05413], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.03839, 25.03849], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Pirttikoski", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101143, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.00651, 61.08356], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.92004, 24.11342], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kotka Rankki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101030, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.3754, 60.3755], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.95843, 26.95853], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101920, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.5588, 66.5589], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.83144, 25.83154], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi rautatieasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101928, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.4984, 66.4985], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.70821, 25.70831], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-10-07T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi Apukka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101933, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.57856, 66.57941], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.01085, 26.01474], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nivala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101677, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.91694, 63.91704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.96299, 
24.96309], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-07-02T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101886, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.98255, 65.99629], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.18061, 29.22429], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juupajoki Hyyti\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101317, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.84563, 
61.85026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.27989, 24.2873], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vallisaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101010, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([60.13345, 60.13355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.9968, 24.9969], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1965-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Kumpula", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101004, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20277, 60.20312], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.96104, 24.96136], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2006-01-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kouvola Utti Lentoportintie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101219, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.89047, 60.89057], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.94125, 26.94135], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Siilinj\u00e4rvi Kuopion lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101570, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.00836, 63.00846], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.79913, 27.79923], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puumala kirkonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101435, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.53609, 61.53619], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.18875, 
28.18885], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-04T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Harmaja", new cljs.core.Keyword(null, "id", "id", 1013907597), 100996, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.10011, 60.10493], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([24.97541, 24.98023], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2013-04-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi Ajos", new cljs.core.Keyword(null, "id", "id", 1013907597), 101846, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.67287, 
65.73377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.51269, 24.5153], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-03T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu Oulunsalo Pellonp\u00e4\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101799, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.93783, 64.93793], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.37176, 25.37186], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani Pet\u00e4isenniska", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 126736, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.21662, 64.21672], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.75495, 27.75505], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2010-10-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Parainen Ut\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 100908, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.78334, 59.78428], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.36778, 21.3801], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Joensuu Huhtilampi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101460, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41702, 62.43656], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.39683, 30.40832], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Kiutak\u00f6ng\u00e4s", new cljs.core.Keyword(null, "id", "id", 1013907597), 101887, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.36994, 66.37004], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.31188, 29.31198], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1966-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaasa Klemettil\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101485, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.0987, 63.0988], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.63947, 
21.63957], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2010-05-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Kalb\u00e5dagrund", new cljs.core.Keyword(null, "id", "id", 1013907597), 101022, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.98513, 59.98523], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.5985, 25.5986], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Espoo Sep\u00e4nkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101005, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20769, 
60.20779], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.74117, 24.74127], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2005-02-02T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101339, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.39753, 62.39763], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.67082, 25.67092], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Russar\u00f6", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100932, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.77356, 59.77366], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.95189, 22.95199], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kaskinen S\u00e4lgrund", new cljs.core.Keyword(null, "id", "id", 1013907597), 101256, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.33344, 62.3337], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.17965, 21.1904], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Kaisaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100971, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17518, 60.17528], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.94454, 24.94464], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lahti Laune", new cljs.core.Keyword(null, "id", "id", 1013907597), 101152, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.96206, 60.96694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.63007, 25.63095], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Saltvik Kvarnbo", new cljs.core.Keyword(null, "id", "id", 1013907597), 100913, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.28332, 60.28342], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.04655, 
20.04665], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Geta \u00d6stergeta", new cljs.core.Keyword(null, "id", "id", 1013907597), 100914, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38332, 60.38342], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.9132, 19.9133], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Merimasku Sannainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 100916, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.4514, 
60.4515], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.84768, 21.84778], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kumlinge B\u00e4r\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 100920, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.30001, 60.30011], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.74658, 20.74668], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1983-12-30T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-12-19T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Naantali Raula", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 100923, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.39393, 60.40014], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.9431, 21.94673], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-11-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-05-07T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Jomala S\u00f6dersunda", new cljs.core.Keyword(null, "id", "id", 1013907597), 100925, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.14998, 60.15425], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.87184, 19.87999], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-01-01T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko kpki", new cljs.core.Keyword(null, "id", "id", 1013907597), 100933, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.81672, 59.81682], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.9634, 22.9635], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1964-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tammisaari Bromarv V\u00e4ttlax", new cljs.core.Keyword(null, "id", "id", 1013907597), 100937, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.93427, 59.93437], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.92761, 
22.92771], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi\u00f6 Mattk\u00e4rr", new cljs.core.Keyword(null, "id", "id", 1013907597), 100938, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.12949, 60.13348], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.63001, 22.64679], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-02-24T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Dragsfj\u00e4rd Skinnarvik", new cljs.core.Keyword(null, "id", "id", 1013907597), 100943, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([60.13338, 60.13348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.44668, 22.44678], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1973-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1984-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi\u00f6nsaari L\u00f6vb\u00f6le", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100944, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.15005, 60.15321], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.55779, 22.56345], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-07-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Suomusj\u00e4rvi Kettula", new cljs.core.Keyword(null, "id", "id", 1013907597), 100952, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40009, 60.40019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76338, 23.76348], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-01-02T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pohja Pohjankuru", new cljs.core.Keyword(null, "id", "id", 1013907597), 100954, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.10008, 60.10018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.53006, 23.54683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Bromarv Kivitok", new cljs.core.Keyword(null, "id", "id", 1013907597), 100956, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.00006, 60.00016], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.04672, 23.04682], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Katajaluoto", new cljs.core.Keyword(null, "id", "id", 1013907597), 100970, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.10011, 60.10021], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.91347, 24.91357], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1984-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Suontaka", new cljs.core.Keyword(null, "id", "id", 1013907597), 100979, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40011, 
60.40021], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.38007, 24.38017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-12-27T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Kotkaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100980, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40011, 60.40021], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.44674, 24.44684], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tuusula Ruotsinkyl\u00e4 Lehtola", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 100985, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.3668, 60.3669], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.9801, 24.9802], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1982-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Vihti Paloj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100987, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.28344, 60.28354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.38008, 24.38018], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1973-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Siippoo Liiri", new cljs.core.Keyword(null, "id", "id", 1013907597), 100989, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41678, 60.41688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.43007, 24.43017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-08-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Bengtsby", new cljs.core.Keyword(null, "id", "id", 1013907597), 101017, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.26389, 60.26691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.63015, 25.63439], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sipoo Talma", new cljs.core.Keyword(null, "id", "id", 1013907597), 101020, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40013, 60.40023], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.18011, 25.18021], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Isosaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101024, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.10012, 
60.10439], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.06792, 25.08024], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-10-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pernaja Sarvilahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101038, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.48349, 60.48359], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.13015, 26.13025], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1983-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mietoinen Saari", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101046, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.62977, 60.63348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.85492, 21.86336], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-05-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kustavi Kivimaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101048, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.55003, 60.55013], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.36325, 21.36335], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappi Kaukola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101052, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.06674, 61.06684], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.91321, 21.91331], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappi Kulanper\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101053, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.11673, 61.11835], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.74653, 21.7591], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rauma \u00c4yh\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 101054, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.15612, 61.15622], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.57297, 21.57307], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Maaninka Halola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101572, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.14338, 
63.14348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.31312, 27.31322], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suonenjoki Iisvesi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101578, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.66444, 62.66704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.02994, 27.04699], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hein\u00e4vesi Palokki", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101589, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.56698, 62.57058], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.56338, 28.59253], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Outokumpu Viuruniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101590, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.61699, 62.61736], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.94229, 28.94683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautavaara Yl\u00e4-Luosta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101603, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.37801, 63.38377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66161, 28.66338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1976-06-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa Koli", new cljs.core.Keyword(null, "id", "id", 1013907597), 101616, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10877, 63.10887], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.75841, 29.75851], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielisj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101635, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.30038, 63.30048], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.01337, 
30.01347], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa Lampela", new cljs.core.Keyword(null, "id", "id", 1013907597), 101636, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.30532, 63.32113], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.02397, 30.04583], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi Naarva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101641, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.03244, 
63.03254], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([31.05916, 31.05926], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi Mekrij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101651, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.76961, 62.76971], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.97528, 30.97538], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-09-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Luvia Per\u00e4nkyl\u00e4", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101055, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.32954, 61.3335], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.65344, 21.66327], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2010-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rauma majakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101058, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.15005, 61.15015], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.16317, 21.16327], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-10-16T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Laitila Palttila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101060, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.88338, 60.88348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.66323, 21.66333], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-11-11T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-10-17T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Huittinen Lauttakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101067, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.16676, 61.18352], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.71324, 22.78], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tarvasjoki Eura", new cljs.core.Keyword(null, "id", "id", 1013907597), 101069, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.56674, 60.56684], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.76331, 22.76341], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nousiainen Koljola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101071, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.61673, 
60.61683], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.11328, 22.11338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Yl\u00e4ne Vanhakartano", new cljs.core.Keyword(null, "id", "id", 1013907597), 101073, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.86674, 60.86684], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.39659, 22.39669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Eura Kauttua", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101076, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.10007, 61.10017], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.16322, 22.16332], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1983-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kokem\u00e4ki Kartano", new cljs.core.Keyword(null, "id", "id", 1013907597), 101078, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.23341, 61.23351], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.27987, 22.27997], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-01-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "P\u00f6yty\u00e4 Ky\u00f6stil\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101080, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.75008, 60.75018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.66329, 22.66339], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1972-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiukainen M\u00e4kel\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101082, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.1834, 61.1835], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.07987, 
22.07997], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1983-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nakkila Kivialho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101083, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.38341, 61.38351], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.06318, 22.06328], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiikoinen Jaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101084, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.41677, 
61.41687], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.57986, 22.57996], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Karkku Heinoo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101087, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.40011, 61.40021], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.97988, 22.97998], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tarvasjoki Liedonper\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101090, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.60188, 60.60198], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.6378, 22.6379], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Eura Haveri", new cljs.core.Keyword(null, "id", "id", 1013907597), 101092, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.9834, 60.9835], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.21324, 22.21334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alastaro Virttaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101094, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.95008, 60.95018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.64659, 22.64669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1975-08-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "S\u00e4kyl\u00e4 Huovinrinne", new cljs.core.Keyword(null, "id", "id", 1013907597), 101095, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.03341, 61.03351], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.46324, 
22.46334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1975-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Aura Lietsuo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101096, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.61674, 60.61684], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.62996, 22.63006], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Huittinen Raskala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101097, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.23343, 
61.23353], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.86324, 22.86334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Somero Suojoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101107, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51676, 60.5188], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.6753, 23.68012], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nummi-Pusula K\u00e4rk\u00f6l\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101108, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.629, 60.6291], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.92056, 23.92066], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Koski Sorvasto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101110, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.69703, 60.69713], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.13107, 23.13117], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kylm\u00e4koski Nauli", new cljs.core.Keyword(null, "id", "id", 1013907597), 101120, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.13345, 61.13355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.66329, 23.66339], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-10-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hattula Leteensuo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101131, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.0668, 61.0669], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.22999, 24.23009], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "P\u00e4lk\u00e4ne Mytt\u00e4\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101134, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.33347, 61.33802], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.20745, 24.21339], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-07-10T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Niipala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101142, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05015, 61.05025], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.98003, 24.98013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tuulos Teuro", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101144, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.07653, 61.07663], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.83278, 24.83288], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "P\u00e4lk\u00e4ne Padankoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101146, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.35016, 61.3537], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.81332, 24.82092], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Loppi Hevosoja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101147, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.66679, 60.68578], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.34671, 24.36181], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00e4rk\u00f6l\u00e4 H\u00e4hk\u00e4niemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101157, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.85015, 60.85025], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.2634, 
25.2635], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenkoski Palomaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101159, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05016, 61.06329], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.24421, 25.24681], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hollola kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101160, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.06739, 
61.06749], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.41421, 25.41431], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Tirmula", new cljs.core.Keyword(null, "id", "id", 1013907597), 101162, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05937, 61.06692], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.9967, 24.99683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Koski Hl Hyrkk\u00e4l\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101163, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.08349, 61.08359], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.23004, 25.23014], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1976-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lammi Vestola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101164, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.15016, 61.15026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.21337, 25.2468], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-05-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Padasjoki Syrj\u00e4ntaka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101165, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.36231, 61.36694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.22834, 25.2301], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orimattila Keituri", new cljs.core.Keyword(null, "id", "id", 1013907597), 101167, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.83348, 60.83358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.43007, 25.43017], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hollola Sairakkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101169, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.01683, 61.01693], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.31339, 25.31349], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenkoski K\u00e4ik\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101170, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05016, 61.05026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.16338, 25.16348], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Kuurikka", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101171, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.11683, 61.11693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.08002, 25.08012], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lammi Jahkola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101174, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.03348, 61.04164], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.01156, 25.01347], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-05-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Koski Hl Toijala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101175, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.01682, 61.01692], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13004, 25.13014], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1983-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Urjankangas", new cljs.core.Keyword(null, "id", "id", 1013907597), 101177, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.10016, 61.10026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13003, 25.13013], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00e4rk\u00f6l\u00e4 J\u00e4rvel\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101179, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.85015, 60.88358], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.24673, 25.2635], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1980-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4nts\u00e4l\u00e4 Purola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101183, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.57876, 60.58358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.48816, 25.49687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-10-07T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Lammi Iso-Evo", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101184, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.18294, 61.18304], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.03666, 25.03676], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1989-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-02-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Asikkala maatal.oppilaitos", new cljs.core.Keyword(null, "id", "id", 1013907597), 101186, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.21684, 61.21694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.4967, 25.4968], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-05-14T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusankoski keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101195, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.90019, 60.90029], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.6468, 26.6469], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Artj\u00e4rvi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101197, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.74706, 60.75027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.07797, 26.08021], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Anjalankoski Rautakorpi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101198, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.76686, 60.76696], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.76349, 26.76359], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valkeala Kouvola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101199, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.83352, 
60.83362], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.74681, 26.74691], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101202, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.86686, 60.86696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.73014, 26.73024], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Iitti Koskenniska", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101204, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.08352, 61.08362], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.18008, 26.18018], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "M\u00e4ntyharju P\u00e4rn\u00e4m\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101205, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.30021, 61.30031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.58008, 26.58018], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 
1014004813), "1970-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4ntyharju Paasola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101206, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.41689, 61.41699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.79675, 26.79685], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valkeala Kouvolankyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101212, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.85019, 60.85029], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([26.78014, 26.78024], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valkeala Sel\u00e4np\u00e4\u00e4 Verla", new cljs.core.Keyword(null, "id", "id", 1013907597), 101213, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.06687, 
61.06697], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.63011, 26.63021], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1968-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virolahti Ravijoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101220, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.53353, 60.53363], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.54689, 27.54699], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virolahti Ravij\u00e4rvi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101221, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.58353, 60.58363], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.48021, 27.48031], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Virolahti Nopala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101223, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.63353, 60.63363], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.44687, 27.44697], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Miehikk\u00e4l\u00e4 Hauhia", new cljs.core.Keyword(null, "id", "id", 1013907597), 101225, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.71688, 60.71698], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.69688, 27.69698], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Anjalankoski Sippola Hirvel\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101226, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.7502, 60.7503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.08017, 
27.08027], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4ntyharju Halmeniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101229, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.28355, 61.28365], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.21346, 27.21356], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomenniemi Punkankyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101230, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.35023, 61.35033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.48012, 27.48022], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Yl\u00e4maa Ylij\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101233, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.76689, 60.76699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.93021, 27.93031], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-10-23T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Ruokolahti Kotaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101238, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.36693, 61.36703], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66353, 28.66363], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-02-03T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutseno Honkalahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101239, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.13358, 61.13368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.4802, 28.4803], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruokolahti Kotaniemi Latosuo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101241, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.36694, 61.36704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.69686, 
28.69696], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruokolahti Kotalahti Sipinen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101242, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.38359, 61.38369], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66353, 28.66363], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruokolahti Syyspohja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101243, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.40026, 61.40036], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.63018, 28.63028], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1983-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Taipalsaari Kyl\u00e4niemi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101245, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.30497, 61.30507], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.17906, 28.17916], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-05-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-09-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Mouhij\u00e4rvi Selkee", new cljs.core.Keyword(null, "id", "id", 1013907597), 101271, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.51678, 61.51688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.97987, 22.97997], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen Kurkela", new cljs.core.Keyword(null, "id", "id", 1013907597), 101274, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.70012, 61.70022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.77984, 22.77994], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pomarkku kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101275, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.70009, 61.70019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.01314, 22.01324], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen Varpee", new cljs.core.Keyword(null, "id", "id", 1013907597), 101276, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.71679, 61.71689], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([22.7965, 22.7966], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4mij\u00e4rvi Pirttij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101278, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.73344, 61.73354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.71317, 22.71327], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Honkajoki Antila", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101279, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.91678, 61.91688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.22978, 22.22988], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Honkajoki Lauhala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101280, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.08344, 62.08354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.24643, 22.24653], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-06-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kullaa Saarij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101288, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.53342, 61.53352], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.2965, 22.2966], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuru L\u00e4nsi-Aure", new cljs.core.Keyword(null, "id", "id", 1013907597), 101293, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.94914, 61.98357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.3465, 23.37993], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kihni\u00f6 Aitoneva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101294, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.20015, 62.20025], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.31314, 23.31324], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Yl\u00f6j\u00e4rvi Taivalpohja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101296, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.68347, 61.68357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.62988, 23.62998], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen keskusta", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101297, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.7668, 61.7669], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.06318, 23.06328], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuru Riuttaskyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101300, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.06682, 62.06692], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.6465, 23.6466], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1994-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virrat J\u00e4\u00e4hdyspohja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101303, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.21684, 62.21694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.82982, 23.82992], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Yl\u00f6j\u00e4rvi Viljakkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101308, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.80014, 61.80024], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.49653, 
23.49663], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1979-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4ntt\u00e4 kpki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101318, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.03351, 62.03361], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.62989, 24.62999], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orivesi Uiherla", new cljs.core.Keyword(null, "id", "id", 1013907597), 101320, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.55016, 
61.55026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.52994, 24.53004], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orivesi Yliskyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101321, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.63349, 61.63359], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.29659, 24.29669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orivesi keskusta", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101322, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66683, 61.66693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.34659, 24.34669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Juupajoki H\u00f6yde", new cljs.core.Keyword(null, "id", "id", 1013907597), 101323, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.7835, 61.7836], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.54659, 24.54669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juupajoki Sahraj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101324, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.81684, 61.81694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.49658, 24.49668], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruovesi Pekkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101325, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.91683, 61.91693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.06321, 24.06331], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vilppula kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101326, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.01685, 62.01695], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.51323, 24.51333], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4ntt\u00e4 Raja-Aho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101327, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.01685, 62.01695], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.71324, 24.71334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vilppula Pohjaslahti", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101328, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15017, 62.15027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.04651, 24.04661], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-03-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Keuruu Suolahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101330, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.26686, 62.26696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.7132, 24.7133], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Keuruu Pihlajavesi Lapin koulu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101331, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.31685, 62.31695], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.12983, 24.12993], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1982-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Keuruu Pihlajavesi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101332, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.33351, 62.33361], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.2965, 
24.2966], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pietarsaari Kallan", new cljs.core.Keyword(null, "id", "id", 1013907597), 101660, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.75019, 63.75151], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.52285, 22.52964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-09-22T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kalajoki Pitk\u00e4senkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101683, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.23108, 
64.23368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01289, 24.01576], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kalajoki Mets\u00e4kyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101685, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.27359, 64.28369], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.19622, 24.20743], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylivieska lentokentt\u00e4", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101690, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.03666, 64.05023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.71879, 24.72417], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2000-05-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Ylivieska V\u00e4h\u00e4kangas", new cljs.core.Keyword(null, "id", "id", 1013907597), 101691, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.06666, 64.06676], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.67351, 24.67361], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2000-06-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Haapavesi Mustikkam\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101695, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.1421, 64.15039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.4245, 25.42974], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00e4rs\u00e4m\u00e4ki Venetpalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101700, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.88362, 63.90039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.76304, 25.7848], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Hiidenniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101706, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.61, 63.61], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([25.47, 25.47], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiuruvesi Korpijoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101712, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.72863, 
63.73373], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.34643, 26.36986], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani Saaresm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101721, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.05116, 64.0671], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.92531, 26.92984], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruovesi Kekkonen", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101334, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.88541, 61.88551], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01677, 24.03354], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Luhanka kirkonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101347, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.78353, 61.79113], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.67998, 25.68203], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-09-20T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4ms\u00e4 Seppola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101349, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.86686, 61.86696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.17994, 25.18004], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Korpilahti Muuratj\u00e4rvi Varrasm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101350, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.13354, 62.13364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.37992, 
25.38002], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmoinen Puukkoinen Kiviniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101357, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66685, 61.66695], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.1633, 25.1634], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4ms\u00e4 Himos", new cljs.core.Keyword(null, "id", "id", 1013907597), 101364, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.88603, 61.88613], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.32661, 25.32671], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-11-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-07-26T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Sauvuori", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101369, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.56688, 61.56698], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.23003, 26.23013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pertunmaa Ruorasm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101370, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.60021, 61.60031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.39671, 26.39681], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1991-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Ruskeala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101372, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.6002, 61.60474], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.01336, 26.01479], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa Jousa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101378, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.73354, 61.73364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.06334, 
26.06344], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa P\u00e4rn\u00e4m\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101379, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.76689, 61.76699], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.36335, 26.36345], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hirvensalmi Puukonsaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101380, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.80023, 61.80033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.84671, 26.84681], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa Mieskonm\u00e4ki S\u00e4yn\u00e4tniemi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101381, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.80022, 61.80032], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.21334, 26.21344], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kangasniemi kirkonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101385, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.98, 61.98], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.63, 26.64], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2013-05-24T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hankasalmi S\u00e4kinm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101389, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.48358, 62.48368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.46327, 26.46337], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pertunmaa Laukkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101393, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.53152, 61.53162], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.32732, 
26.32742], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Laukaa Savio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101396, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.33356, 62.33366], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.9966, 25.9967], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-05-18T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pieks\u00e4m\u00e4ki Nikkarila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101399, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.25026, 62.25036], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.24667, 27.24677], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1960-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Varkaus K\u00e4pykangas", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101400, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.30028, 62.33371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.84114, 27.88013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Mikkelin mlk Liukkola Ketola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101401, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.65023, 61.65033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.06341, 27.06351], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1978-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juva Hatsola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101405, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.86693, 61.86703], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.76342, 27.76352], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pieks\u00e4m\u00e4ki Bovallius ammattiopisto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101407, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.28359, 62.28369], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.16333, 
27.16343], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lepp\u00e4virta Sorsakoski Osmaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101408, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.45, 62.45], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.68, 27.68], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-06-08T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pieks\u00e4m\u00e4en mlk Naaraj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101413, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.28359, 62.28369], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.97998, 26.98008], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joroinen Montolanm\u00e4ki", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101414, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.1836, 62.1837], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.5967, 27.5968], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1979-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Juva kk Partala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101417, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.90026, 61.90036], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.88008, 27.88018], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puumala Sorjola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101422, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.56687, 61.56703], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.07563, 28.08023], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sulkava Kaipola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101424, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.81695, 61.81705], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.43012, 28.43022], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rantasalmi Tuusm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101426, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.9836, 61.9837], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.04675, 28.04685], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rantasalmi Osikonm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101427, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.03361, 62.03371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.28009, 28.28019], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hein\u00e4vesi Hasum\u00e4ki", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101428, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.40031, 62.40041], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.73007, 28.73017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-05-27T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Puumala Vesiniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101429, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.58359, 61.58369], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.18014, 28.18024], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-09-13T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Juvola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101432, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.08363, 62.08373], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.78012, 28.78022], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-12-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonkoski Karvila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101433, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.06697, 62.06707], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.84679, 28.84689], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1987-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kes\u00e4lahti kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101443, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.87942, 61.87952], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.82882, 29.82892], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kerim\u00e4ki Yl\u00e4kuona", new cljs.core.Keyword(null, "id", "id", 1013907597), 101444, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.91697, 61.9504], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.26349, 29.28026], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kerim\u00e4ki Rauvanniemi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101445, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.96698, 61.96708], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.4635, 29.48026], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Savonranta Leivonm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101447, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.31698, 62.31708], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.0801, 29.0802], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-01-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Savonranta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101448, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.16892, 62.18374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.19679, 29.27718], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-03-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2013-05-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kitee Puhossalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101449, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.11699, 62.11709], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.78016, 29.78026], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kes\u00e4lahti M\u00e4ntyniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101454, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.88081, 61.88374], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.83019, 29.83815], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kitee kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101458, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.10033, 
62.10043], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.13019, 30.13029], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "G\u00e5sh\u00e4llan/N\u00e4rpi\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 
101463, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.56677, 62.56687], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.0463, 21.0464], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "N\u00e4rpi\u00f6 Ylimarkku", new cljs.core.Keyword(null, "id", "id", 1013907597), 101467, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.61678, 62.61688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.46299, 21.46309], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-04-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "N\u00e4rpi\u00f6 Pirttikyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101470, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.73056, 62.73355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.64631, 21.65605], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oravainen Kimo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101487, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.26684, 63.30027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.39627, 
22.4297], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilmajoki Hiiripelto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101491, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.83349, 62.83359], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.64635, 22.64645], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylistaro J\u00e4\u00e4sk\u00e4njoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101492, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([62.88348, 62.88358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.52966, 22.52976], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylistaro asemanseutu", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101493, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.90016, 62.90026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54633, 22.54643], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Ylistaro Kainasto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101495, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.92, 62.92], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.61, 22.61], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Per\u00e4sein\u00e4joki Haukineva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101502, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.55015, 62.55025], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.9464, 22.9465], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1975-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alavus Autionm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101507, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.55017, 62.55027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.64644, 
23.64654], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-01-06T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lapua Haapakoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101510, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.95018, 62.95028], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.14636, 23.14646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alaj\u00e4rvi keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101511, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.98352, 62.98362], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.77972, 23.77982], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kortesj\u00e4rvi Saarij\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101512, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.34697, 63.35029], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.16297, 23.1639], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-09-19T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lapua Tiistenjoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101515, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.90019, 62.90029], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.27971, 23.27981], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1975-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-05-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Halsua Kanala Koski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101527, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.43356, 63.43366], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.49636, 24.49646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-02-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kyyj\u00e4rvi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101529, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.03355, 63.03365], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.56309, 24.56319], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-07-12T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Laukaa Nurmij\u00e4rvi Jokihaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101538, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.55024, 62.55034], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.9799, 25.98], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1969-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Viitasaari Huopana", new cljs.core.Keyword(null, "id", "id", 1013907597), 101543, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.05025, 
63.05035], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.5298, 25.5299], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Saarij\u00e4rvi H\u00e4kkil\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101546, 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.75023, 62.75033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.46318, 25.46328], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Pihtipudas Ilosjoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101547, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.29882, 63.30036], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.64326, 25.64655], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-08-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Laukaa \u00c4ij\u00e4l\u00e4 Hyypp\u00e4\u00e4nm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101558, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.53357, 62.53367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.01324, 26.01334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, 
"end", "end", 1014004813), "2005-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Konnevesi Lahdenkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101559, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.56692, 62.56702], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.27991, 26.28001], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielavesi S\u00e4vi\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101561, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.21695, 63.21705], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([26.46317, 26.46327], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielavesi Venetm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101562, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.31697, 
63.31707], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.96319, 26.96329], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Konnevesi Mertaj\u00e4rvi S\u00e4rkisalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 
101563, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.75025, 62.75035], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.16322, 26.16332], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Lepp\u00e4virta Kotalahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101573, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.55028, 62.56705], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.51332, 27.59676], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-06-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Varpaisj\u00e4rvi Pitk\u00e4l\u00e4nm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101575, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.38365, 63.38375], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.64655, 27.64665], true), new cljs.core.Keyword(null, "start", "start", 
1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Karttula Kallioranta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101579, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.85029, 62.85039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.27994, 
27.28004], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1982-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2013-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Ahonkyl\u00e4 Leppilampi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101591, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.63365, 62.63375], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.98006, 28.98016], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Lukanvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101592, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.65032, 62.65042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.98005, 28.98015], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Kuokkala", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101593, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.70032, 62.70042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.91338, 28.91348], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Outokumpu Maljasalmi Voutilainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101594, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.70032, 62.70042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.89671, 28.89681], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Maljasalmi Sarvij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101595, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.70032, 62.70042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.88004, 28.88014], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nilsi\u00e4 kk Uitti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101597, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.21699, 63.21709], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([28.06327, 28.06337], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nilsi\u00e4 Vuotj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101598, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.20033, 
63.20043], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.27994, 28.28004], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Varpaisj\u00e4rvi K\u00e4rs\u00e4m\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 
101600, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.367, 63.3671], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.99657, 27.99667], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-01-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Rautavaara Puumala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101605, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.40034, 63.40044], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.41327, 28.41337], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1989-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-09-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Kokonvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101613, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.78366, 62.78376], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.14672, 29.14682], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielisj\u00e4rvi Koli matkailuhotelli", new cljs.core.Keyword(null, "id", "id", 1013907597), 101617, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10036, 63.10046], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.79672, 
29.79682], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juuka J\u00e4rvikyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101620, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10035, 63.10045], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.46337, 29.46347], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Ahonkyl\u00e4 Kulmala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101622, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.667, 62.6671], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.09673, 29.09683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kaavi Sivakkavaara", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101624, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.01217, 63.01711], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.00679, 29.01345], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1977-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lieksa Hattusaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101625, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.23189, 63.23379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.69669, 29.71346], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-05-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-03-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101634, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.66704, 62.68381], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.93016, 30.94693], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiihtelysvaara R\u00f6ks\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101637, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.60035, 62.60045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.23013, 
30.23023], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Eno kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101638, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.78369, 62.78379], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.06344, 30.06354], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi Lehtovaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101640, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.80038, 62.80048], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([31.13016, 31.13026], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa kpki", new cljs.core.Keyword(null, "id", 
"id", 1013907597), 101642, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.31705, 63.31715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.03003, 30.03013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lieksa Ruunaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101643, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.43372, 63.43382], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.43004, 30.43014], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi V\u00e4livaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101645, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.86706, 62.86716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([31.24683, 31.24693], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1977-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Eno Kaltimo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101646, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.78369, 62.78379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.1301, 30.1302], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Eno L\u00f6yt\u00f6j\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101647, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.58369, 62.58379], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.33014, 30.33024], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1983-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pietarsaari M\u00e4ssk\u00e4r V\u00e4stersund", new cljs.core.Keyword(null, "id", "id", 1013907597), 101653, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([63.73352, 63.73362], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.57954, 22.57964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00e4lvi\u00e4 Maunum\u00e4ki", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101669, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.88355, 63.88365], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.42957, 23.42967], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "K\u00e4lvi\u00e4 Ruotsalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101670, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.91689, 63.91699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.39623, 23.39633], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kannus Ylikannus", new cljs.core.Keyword(null, "id", "id", 1013907597), 101680, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.86691, 63.86701], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.04628, 24.04638], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kalajoki K\u00e4\u00e4nn\u00e4nkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101682, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.20026, 64.20036], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.14623, 
24.14633], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulainen keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101684, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.26695, 64.26705], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.86293, 24.86303], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vierem\u00e4 Kaarakkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101726, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([63.83365, 63.84118], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.19646, 27.22062], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani Paltaniemi", new cljs.core.Keyword(null, "id", "id", 
1013907597), 101742, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.29149, 64.29159], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.63676, 27.63686], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2000-07-25T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Ristij\u00e4rvi Mustavaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101753, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.45039, 64.46966], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.61314, 28.61823], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuhmo Raiskio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101771, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.05567, 64.05577], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.3138, 29.3139], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo Kalliojoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101773, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.29781, 64.29791], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.16647, 30.16657], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-11-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Raahe Lapaluoto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101785, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.65, 64.68], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.41, 24.46], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1991-01-04T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tyrn\u00e4v\u00e4 Temmes", new cljs.core.Keyword(null, "id", "id", 1013907597), 101790, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.65032, 64.65848], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.59625, 
25.61718], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi Jaurakkaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101812, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.16067, 65.16716], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.61297, 27.64669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puolanka Kotila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101830, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.66594, 
64.66715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.02918, 28.0465], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1994-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puolanka Paljakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101831, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([64.66399, 64.66409], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.05668, 28.05678], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2009-10-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Merij\u00e4rvi Pirttim\u00e4ki", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101686, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.41694, 64.41704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.32954, 24.32964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rautio kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101688, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.0836, 64.0837], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.2296, 24.2297], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-06-01T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Haapaj\u00e4rvi maamieskoulu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101694, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.75027, 63.75037], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.3297, 25.3298], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00e4rs\u00e4m\u00e4ki kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101701, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.96696, 63.96706], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.72969, 
25.72979], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Haapavesi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101702, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.13362, 64.13372], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.37964, 25.37974], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihanti Ristonaho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101704, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.41696, 
64.41706], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.11293, 25.11303], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Ol Pyh\u00e4salmi", new cljs.core.Keyword(null, "id", "id", 1013907597), 
101709, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.65029, 63.65039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.04642, 26.04652], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Pyh\u00e4j\u00e4rvi Ol Vuohtom\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101710, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.58361, 63.58371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.0631, 26.0632], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-06-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4nt\u00e4 Ahokyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101715, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.05032, 64.05042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.52972, 26.52982], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4nt\u00e4 Tavastkenk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101716, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.10031, 64.10041], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.09636, 
26.09646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi M\u00e4kikyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101718, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.51695, 63.51705], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.12977, 26.12987], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiuruvesi Hautajoki Lappala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101719, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.61697, 63.61707], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.67979, 26.67989], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Ol Ramila Kuusenm\u00e4ki", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101723, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.70029, 63.70039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.2131, 26.2132], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pyh\u00e4nt\u00e4 Tavastkenk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101724, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.11699, 64.11709], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.54639, 26.54649], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2006-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Iisalmi keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101727, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.58059, 63.58069], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.17652, 27.17662], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-09-09T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sonkaj\u00e4rvi Rutakko", new cljs.core.Keyword(null, "id", "id", 1013907597), 101728, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.65033, 63.65043], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.52984, 
27.52994], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vuolijoki Otanm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101730, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.117, 64.1171], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.04641, 27.04651], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1984-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani kpki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101731, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.21702, 
64.21712], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.71311, 27.71321], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sonkaj\u00e4rvi Jyrkk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101732, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.77887, 63.78377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.80251, 27.81328], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-07-04T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vuolijoki Myllyl\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101734, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.20033, 64.20043], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01307, 27.01317], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Paltamo Ker\u00e4senvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101739, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.40036, 64.40046], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.57974, 27.57984], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1987-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1990-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sonkaj\u00e4rvi Aittokoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101740, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.70399, 63.70409], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.41761, 27.41771], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1995-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ristij\u00e4rvi Hiisij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101744, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.36705, 64.36715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([28.5798, 28.5799], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1968-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Ylisotkamo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101746, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.1337, 
64.1338], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.5465, 28.5466], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ristij\u00e4rvi Pyh\u00e4nt\u00e4 Karhuvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 
101750, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.41705, 64.41715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.46313, 28.46323], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Ristij\u00e4rvi Kivikyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101751, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.48371, 64.48381], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.1631, 28.1632], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-02-29T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautavaara Tiilikka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101752, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.53368, 63.53378], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.47991, 28.48001], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valtimo Koppelo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101754, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.75036, 63.76713], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.56322, 28.56333], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Laakaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101758, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.79591, 63.79601], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.22792, 28.22802], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2003-04-09T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-02-03T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101762, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.11707, 
64.13383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.47039, 29.54667], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi Tapanivaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101765, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.46707, 64.46717], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.12983, 29.12993], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo Jonkeri", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101766, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.76706, 63.76716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.84663, 29.84673], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuhmo Sumsa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101768, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.26708, 64.26718], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.8299, 29.83], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pattijoki Ylip\u00e4\u00e4 Nikkari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101777, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.63362, 64.65039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.67953, 24.72963], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pattijoki Jokela", new cljs.core.Keyword(null, "id", "id", 1013907597), 101778, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.66696, 64.66706], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.61286, 
24.61296], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Raahe kpki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101779, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.68362, 64.68372], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.47951, 24.47961], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Yli-Ii kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101792, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.36703, 
65.36713], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.84616, 25.84626], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2010-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaala Jylh\u00e4m\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101801, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.56701, 64.56711], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.77967, 26.77977], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylikiiminki Nuoritta", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101803, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.0837, 65.0838], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.46293, 26.46303], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pudasj\u00e4rvi Kurenalus", new cljs.core.Keyword(null, "id", "id", 1013907597), 101806, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.36706, 65.36716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01291, 27.01301], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1999-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi Sotkaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101811, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.31706, 65.31716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.34626, 27.34636], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puolanka kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101814, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.86705, 64.86715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.69635, 
27.69645], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1987-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ristij\u00e4rvi Koskenkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101817, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.50038, 64.50048], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.36311, 28.36321], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1983-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi Hoikka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101819, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([64.71707, 64.71717], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.6631, 28.6632], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi kk Jussila", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101820, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.66706, 64.66716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.49643, 28.49653], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Suomussalmi Aittokoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101821, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.83374, 64.83384], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.84643, 28.84653], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101823, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.7004, 64.7005], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.59643, 28.59653], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi \u00c4mm\u00e4nsaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101824, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.88374, 64.88384], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.9131, 
28.9132], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1976-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi Hannula", new cljs.core.Keyword(null, "id", "id", 1013907597), 101825, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.68372, 64.68382], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.5131, 28.5132], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi Hoikka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101828, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.71707, 
64.71717], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.62976, 28.62986], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101832, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.90289, 64.91966], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.01343, 29.01353], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi Moisiovaara", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101835, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.58374, 64.59634], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.11315, 29.12658], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2012-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Simo Simoniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101841, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.65035, 65.65045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.89606, 24.89616], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylitornio T\u00f6rm\u00e4sj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101843, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.38369, 66.38379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.14589, 24.14599], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Simo Maksniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101845, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.68367, 65.68377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.77938, 
24.77948], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1976-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tornio Liakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101847, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.88867, 65.88877], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.27071, 24.27081], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-11-05T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tervola K\u00e4tk\u00e4vaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101848, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([66.2337, 66.2338], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.81263, 24.81273], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1993-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk Pisavaara", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101855, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.31705, 66.31715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.16264, 25.16274], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuivaniemi Oij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101857, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.65037, 65.65047], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.94612, 25.94622], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk Hirvas", new cljs.core.Keyword(null, "id", "id", 1013907597), 101858, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.41706, 66.41716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.4293, 25.4294], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ranua Yliportimo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101862, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.13373, 66.13383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.16274, 26.16284], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk Pekkala Kivalokangas", new cljs.core.Keyword(null, "id", "id", 1013907597), 101865, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.33376, 66.33386], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.84608, 26.84618], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk Pekkala Telkk\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101869, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([66.30043, 66.30053], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.86276, 26.86286], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Taivalkoski Mustavaara", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101884, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.80043, 65.80053], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.04624, 28.04634], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1977-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuusamo Maanselk\u00e4 Ronkainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101888, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.90046, 65.90056], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.06297, 29.06307], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1997-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo K\u00e4rp\u00e4nkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101889, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.91715, 65.91725], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.86302, 29.86312], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1966-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo kk Ronkainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101890, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.91713, 65.93389], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.17963, 
29.22974], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Nissinvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101892, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.05047, 66.05357], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.14628, 29.15371], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Rukaj\u00e4rvi Rukatupa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101893, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([66.16714, 66.16724], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.1296, 29.1297], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Kurvinen", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101894, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.58379, 65.58389], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.51304, 29.51314], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuusamo Rukaj\u00e4rvi Rukan huippu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101895, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.16714, 66.16724], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.14627, 29.14637], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1988-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Irni", new cljs.core.Keyword(null, "id", "id", 1013907597), 101896, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.66712, 65.66722], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.16301, 29.16311], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1970-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1976-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pello Turtolankyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101903, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.58369, 66.58379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.89584, 
23.89594], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-06-12T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pello Ruuhij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101910, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.8504, 66.8505], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.66252, 24.66262], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-11-18T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk T\u00f6rm\u00e4nki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101916, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([66.87759, 66.88383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.96254, 24.96564], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kolari Venej\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101917, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.28373, 67.28383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.19575, 24.19585], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi Lehtoj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101922, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.61151, 66.61717], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.36261, 25.37243], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2008-11-04T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk Marrasj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101925, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.88374, 66.88384], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.17921, 25.17931], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1983-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-06-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemij\u00e4rvi Ryti-Lehtola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101945, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.56713, 66.56723], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.6961, 
27.6962], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski Tanhua", new cljs.core.Keyword(null, "id", "id", 1013907597), 101946, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.36717, 67.36727], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.71265, 27.71275], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1976-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemij\u00e4rvi Halosenranta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101948, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([66.66713, 66.66723], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.49608, 27.49618], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-02-08T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemij\u00e4rvi Lehtosalmi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101949, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.53379, 66.56723], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.6961, 27.76288], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Salla kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101951, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.81716, 66.82162], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66281, 28.67382], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Kursu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101953, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.76715, 66.76725], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.14611, 28.14621], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-08-22T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Salmivaara Lumimaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101954, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.78381, 66.78391], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.26278, 28.26288], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Salmivaara Lakij\u00e4nk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101955, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.81243, 66.81253], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.29194, 28.29204], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2010-09-07T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Hautaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101963, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([66.51716, 66.51726], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.02954, 29.02964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Naruskaj\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101965, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.3672, 67.3673], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.36278, 29.36288], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Muonio Tapoj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101970, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.53, 67.53], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.68, 23.68], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-04-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Hetta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101972, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.38378, 68.38388], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.62884, 23.62894], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Hetta lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101976, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.36238, 68.36248], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.42715, 
23.42725], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-10-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-04-06T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Hukkakumpu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101977, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.71711, 67.71721], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.84572, 24.84582], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Pallasj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101978, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([68.01711, 68.01721], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16229, 24.16239], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Pulju", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101980, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.2303, 68.2339], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.82896, 24.83731], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kittil\u00e4 Pallasj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101984, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.01711, 68.01721], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16229, 24.16239], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1996-09-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2002-02-24T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Pokka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101991, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.15049, 68.15059], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.79572, 25.79582], true), new cljs.core.Keyword(null, "start", "start", 
1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Tepsa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101995, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.56112, 67.56122], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.68747, 
25.68757], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1977-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-05-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kuttura", new cljs.core.Keyword(null, "id", "id", 1013907597), 101999, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.40051, 68.40061], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.46239, 26.46249], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1985-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Raja-Jooseppi Akuj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102008, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([68.47062, 68.47072], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.31614, 28.31624], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Tuntsa", new cljs.core.Keyword(null, "id", 
"id", 1013907597), 102010, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.56722, 67.56732], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.77944, 29.77954], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Tornio Aapaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101850, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.06956, 66.06966], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.14416, 24.14426], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2002-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tornio Torppi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101851, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.84701, 65.84711], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.17348, 24.17358], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-07-30T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Posio Raistakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101881, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.97877, 65.98387], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.1629, 28.17105], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1968-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Taivalkoski kk Kauppatie", new cljs.core.Keyword(null, "id", "id", 1013907597), 101885, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.57432, 65.57442], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.24436, 
28.24446], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2002-09-19T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Toranginaho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101891, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.95046, 65.95334], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.12963, 29.16307], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Rukatunturi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101897, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.16564, 
66.16724], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.14627, 29.15156], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1993-11-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pello Konttaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101909, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.83372, 66.84132], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.3625, 24.39594], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kolari Kattilamaa", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101913, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.3843, 67.40051], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01183, 24.17916], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kittil\u00e4 Alakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101918, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.26245, 67.26255], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.96584, 24.96594], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2004-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemij\u00e4rvi lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101950, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.71551, 66.71561], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.15907, 27.15917], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2006-05-23T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski Kemihaara RJV", new cljs.core.Keyword(null, "id", "id", 1013907597), 102011, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.96722, 67.96732], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.99598, 28.99608], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-08-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski Ainij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102013, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.76722, 67.76732], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([29.44605, 29.44615], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kalmankaltio", new cljs.core.Keyword(null, "id", "id", 1013907597), 102021, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.50048, 
68.50058], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.7289, 24.729], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Karigasniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102022, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.40054, 69.40222], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.84863, 25.86227], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Karigasniemi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 102025, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.43249, 69.43259], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.81515, 25.81525], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2001-11-26T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Inari Paadar", new cljs.core.Keyword(null, "id", "id", 1013907597), 102027, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.76719, 68.76729], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.22897, 26.22907], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Soloj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102029, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.87, 68.87], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.83, 26.83], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kiellajoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 102030, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.30056, 69.30066], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.72891, 26.72901], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-01-27T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Toivoniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102034, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.06789, 69.06799], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.08515, 27.11858], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-12-20T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Ivalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 102037, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.66722, 
68.67026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.56243, 27.56694], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Pikku-S\u00e4ytsj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102039, 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.40058, 69.40068], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.26222, 27.26232], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Utsjoki Lepp\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 102040, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.66364, 69.66374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.07354, 27.07364], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2013-06-01T00:00:00Z"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Sevettij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102050, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.55061, 69.55071], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.62901, 28.62911], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari N\u00e4\u00e4t\u00e4m\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 102056, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.6698, 69.68406], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.09264, 
29.12913], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jokioinen Jokioisten observatorio AWS", new cljs.core.Keyword(null, "id", "id", 1013907597), 101122, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.81399, 60.81409], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.49755, 23.49765], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-02-28T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2012-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylitornio Portimoj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101839, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.36702, 66.36712], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.91255, 23.91265], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Loviisa Valko", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101031, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40016, 60.40026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.24683, 26.24693], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Alaj\u00e4rvi Lippo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101524, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.78611, 62.78621], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.00391, 24.00401], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2012-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hollola Toivola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101178, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.00016, 61.00026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.28004, 25.28014], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-07-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Jernb\u00f6le", new cljs.core.Keyword(null, "id", "id", 1013907597), 101014, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40014, 60.43358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.6468, 25.66357], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sonkaj\u00e4rvi Sukeva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101733, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.88022, 63.90044], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.43544, 27.49657], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Evo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101180, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.20016, 
61.20026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13002, 25.13012], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101901, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.9838, 65.9839], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.22963, 29.22973], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-11-24T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-07-06T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kangasala K\u00f6yr\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101316, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.55015, 61.55025], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.22993, 24.23003], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1987-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Vihti Vanhala", new cljs.core.Keyword(null, "id", "id", 1013907597), 100992, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41486, 60.41688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.29673, 24.2995], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Paloj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102020, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.56712, 68.57172], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.32878, 23.34555], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1972-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-10-24T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Tipasoja Saukko", new cljs.core.Keyword(null, "id", "id", 1013907597), 101755, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.91703, 63.91713], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.69656, 
28.69666], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kivij\u00e4rvi Peltokangas", new cljs.core.Keyword(null, "id", "id", 1013907597), 101549, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.11691, 63.11701], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.07977, 25.07987], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Parkano Lamminkoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101299, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.10014, 62.11691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.01313, 23.0299], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiikala Kruusila", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100962, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.36675, 60.36685], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.43003, 23.43013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Puolanka kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101808, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.81705, 64.81715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.69636, 27.69646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-11-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alavus Pollari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101505, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.51684, 62.51694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.69645, 23.69655], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Norrveckoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101018, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38347, 60.39338], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.41346, 25.43092], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Kaskesniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101626, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.56701, 62.56711], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.64677, 29.64687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-09T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-09-16T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmalahti Puntari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101333, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.5, 
61.5], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.62, 24.62], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Putkij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101346, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.7502, 61.7503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.87999, 25.88009], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ii Yli-Olhava", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101859, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.53369, 65.53379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.49611, 25.49621], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi Pekkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101868, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.35043, 66.35053], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.82941, 26.82951], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valkeakoski Mytt\u00e4\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101145, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.31681, 61.31691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.04662, 24.04672], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Karstula kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101525, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.86689, 62.86699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.79646, 
24.79656], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101588, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.717, 62.7171], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.98005, 28.98015], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Taipale Mustapuro", new cljs.core.Keyword(null, "id", "id", 1013907597), 101614, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.79658, 62.79668], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.18534, 29.18544], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Karjaa Knapsby Mustio", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100960, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.15009, 60.15019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.83007, 23.83017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Karvia kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101281, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.13174, 62.13356], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54644, 22.56121], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Toijala Satama", new cljs.core.Keyword(null, "id", "id", 1013907597), 101114, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.18346, 61.18356], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.92996, 23.93006], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Murakka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101368, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.5502, 61.5503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.0967, 26.0968], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Partakko", new cljs.core.Keyword(null, "id", "id", 1013907597), 102038, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.18391, 69.18401], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([27.91236, 27.91246], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1984-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Multia Sahraj\u00e4rvi Linjala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101550, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.50021, 62.50031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.1632, 25.1633], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1982-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Ol Liittoper\u00e4", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101713, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.75029, 63.75039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.21309, 26.21319], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Outokumpu Sukkulansalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101615, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.817, 62.8171], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.08004, 29.08014], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1987-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joroinen Kiekka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101419, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.2336, 62.2337], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.58002, 27.58012], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-10-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Keminmaa Liedakkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101842, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.76701, 65.85045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.57934, 24.57945], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-09-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Huittinen Lauha", new cljs.core.Keyword(null, "id", "id", 1013907597), 101089, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.20009, 61.20019], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.56323, 22.56333], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suonenjoki kpla", new cljs.core.Keyword(null, "id", "id", 1013907597), 101574, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.60027, 
62.60037], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.19663, 27.19673], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Parikkala Tarvaslampi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101451, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.68363, 61.68373], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.38019, 29.39696], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1983-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-04-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Sevettij\u00e4rvi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 102051, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.50812, 69.50822], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.59315, 28.59325], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-07-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Karttula kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101560, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.91695, 62.91705], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.9799, 26.98], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Teuva kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101261, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.46679, 62.46689], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.74635, 21.74645], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemen mlk Meltaus", new cljs.core.Keyword(null, "id", "id", 1013907597), 101921, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.91708, 66.91718], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.24588, 25.24598], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joensuu Keskij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101648, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.56701, 62.56711], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.28015, 30.28025], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1985-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Toivakka kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101386, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.10022, 
62.10032], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.0633, 26.0634], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kolari \u00c4k\u00e4sjoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101973, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.51708, 67.51718], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.86235, 23.86245], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuivaniemi Halttula", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101852, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.51702, 65.51712], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.26277, 25.26287], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pihtipudas Tapiola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101548, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.36693, 63.36703], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.5631, 25.5632], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenkyr\u00f6 Kyr\u00f6spohja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101309, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.61679, 61.61689], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.1632, 23.1633], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-09-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kolari Teuravuoma", new cljs.core.Keyword(null, "id", "id", 1013907597), 101902, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.27933, 67.28382], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76239, 
23.76776], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Imatra Siitola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101240, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.16693, 61.16703], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.78022, 28.78032], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Luum\u00e4ki Saareks", new cljs.core.Keyword(null, "id", "id", 1013907597), 101227, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.00021, 61.00031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.21349, 27.21359], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruokolahti Valkj\u00e4rvi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101244, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.41694, 61.41704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.64685, 28.64695], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pudasj\u00e4rvi maatalousoppilaitos", new cljs.core.Keyword(null, "id", "id", 1013907597), 101804, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.38372, 65.39132], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.97956, 26.98633], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2007-01-23T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ranua Ylimaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101863, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.18373, 66.18383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.22939, 26.22949], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi Kilvenaapa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101870, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.20329, 66.20339], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.21173, 
26.21183], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi Misi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101935, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.62516, 66.63387], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.66269, 26.68169], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2013-02-03T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi autosynop", new cljs.core.Keyword(null, "id", "id", 1013907597), 101930, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([66.56707, 66.56717], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.8292, 25.8293], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1998-10-08T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-05-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tuusula Ruotsinkyl\u00e4", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101013, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.3668, 60.3669], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.9801, 24.99687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Posio Per\u00e4-Posio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101874, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.18377, 66.18387], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.87951, 27.87961], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101341, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.23355, 62.23365], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.72992, 25.73002], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Piikki\u00f6 Tuorla", new cljs.core.Keyword(null, "id", "id", 1013907597), 100935, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41673, 60.41683], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.42997, 22.43007], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1960-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Siuntio kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 100988, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.18343, 60.18353], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([24.19675, 24.19685], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Uusikaarlepyy keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101657, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.53351, 
63.53361], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.52957, 22.52967], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilmajoki Peurala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101489, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.71682, 62.73358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.56303, 22.59646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio autosynop", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101583, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.01698, 63.01708], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.79664, 27.79674], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1998-10-06T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-03-21T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Alaj\u00e4rvi M\u00f6ksy", new cljs.core.Keyword(null, "id", "id", 1013907597), 101522, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.05021, 63.08364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.26307, 24.27984], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lohja Nummi-Pusula Lepp\u00e4korpi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100963, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.49121, 60.49131], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76612, 23.76622], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lohja Immula", new cljs.core.Keyword(null, "id", "id", 1013907597), 100984, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.25009, 60.25019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16339, 24.16349], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Kaatamo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101611, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.53365, 62.53375], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.21342, 29.21352], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kolari tulli", new cljs.core.Keyword(null, "id", "id", 1013907597), 101906, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.30039, 
67.3505], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.74571, 23.82914], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielavesi S\u00e4vi\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101564, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.20028, 63.20038], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.66319, 26.66329], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ulkokalla/Kalajoki", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101663, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.33357, 64.33367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.44617, 23.44627], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1976-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Turku Kaarninko", new cljs.core.Keyword(null, "id", "id", 1013907597), 100940, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.43338, 60.43348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.27997, 22.28007], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Espoo Nupuri", new cljs.core.Keyword(null, "id", "id", 1013907597), 100986, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.21678, 60.22104], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.59677, 24.60131], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-01-26T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kotka Pookinm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101040, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.45018, 60.45445], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.94686, 26.94974], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1994-12-02T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-10-07T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kangasniemi Kutemaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101387, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.10024, 62.10034], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.72999, 26.73009], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Haukivuori Nyk\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101388, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.11692, 62.11702], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.96334, 26.96344], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alah\u00e4rm\u00e4 Yli-Eko", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101498, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.20017, 63.20027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.6963, 22.6964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Alavus Niinimaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101509, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.6335, 62.6336], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.41309, 23.41319], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-05-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Halsua kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101532, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.4669, 63.467], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16301, 24.16311], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-10-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautalampi Rastu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101565, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.71024, 62.71704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.77465, 26.78002], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1975-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa Hattusaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101618, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.15036, 63.15046], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.73004, 29.73014], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa Hattuvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101644, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.28372, 
63.28382], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.53007, 30.53017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-05-04T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101952, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.28383, 67.28604], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.1627, 28.1801], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Kelloselk\u00e4", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101956, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.93383, 66.94589], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.96281, 28.97596], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Enonteki\u00f6 Karesuvanto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101968, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.4504, 68.4505], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.49539, 22.49549], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Muonio Alamuonio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101969, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.96934, 67.96944], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.67164, 23.67174], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Levitunturi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101981, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.78467, 67.78477], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.85314, 24.85324], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1995-11-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Pokka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101994, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.16967, 68.16977], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.78301, 
25.78311], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Saariselk\u00e4 matkailukeskus", new cljs.core.Keyword(null, "id", "id", 1013907597), 102005, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.41501, 68.41833], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.41097, 27.41331], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1976-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Saariselk\u00e4 Kaunisp\u00e4\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 102006, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([68.43263, 68.43273], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.44466, 27.44476], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-11-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski Ruuvaoja", new cljs.core.Keyword(null, "id", "id", 
1013907597), 102007, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.65053, 67.65624], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.70901, 28.71278], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Inari Rajajooseppi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102009, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.47795, 68.47805], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.30118, 28.30128], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2003-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kiuruvesi Lapinsalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101720, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.93366, 63.93376], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.6131, 26.6132], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101741, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.28369, 64.28379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.6631, 27.6632], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1998-10-30T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-06-11T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemij\u00e4rvi Jumisko", new cljs.core.Keyword(null, "id", "id", 1013907597), 101944, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.51713, 66.51723], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.77945, 27.77955], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Nellim", new cljs.core.Keyword(null, "id", "id", 1013907597), 102048, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.84922, 68.84932], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.29909, 28.29919], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Nokankyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101373, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.61688, 61.61698], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.23003, 26.23013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hamina Onkamaa", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101224, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.6502, 60.6503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.41354, 27.41364], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pulkkila kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101703, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.26698, 64.28374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.86299, 25.89642], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere kpki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101307, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.50013, 61.50023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.71325, 23.71335], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suonenjoki Iisvesi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101576, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.66694, 62.66704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01328, 27.01338], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tyrn\u00e4v\u00e4 Leppioja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101793, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.80032, 64.80042], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.57956, 25.57966], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-18T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-11-15T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sievi asema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101681, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.95025, 
63.98368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.2796, 24.34638], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lemp\u00e4\u00e4l\u00e4 Kaakila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101115, 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.35012, 61.35022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.59659, 23.59669], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Geta \u00d6stergeta", new cljs.core.Keyword(null, "id", "id", 1013907597), 100922, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38332, 60.38342], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.87986, 19.87996], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-11-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-04-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Piikki\u00f6 Ylt\u00f6inen vertailuas", new cljs.core.Keyword(null, "id", "id", 1013907597), 100942, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38339, 60.38349], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54665, 22.54675], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1972-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vantaa Tikkurila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101012, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.28345, 60.28355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.06346, 25.06356], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rauma Kuuskajaskari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101045, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.13922, 61.13932], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.36484, 
21.36494], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-12-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "\u00c4ets\u00e4 Pehula", new cljs.core.Keyword(null, "id", "id", 1013907597), 101088, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.28343, 61.28353], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.69656, 22.69666], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-10-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "S\u00e4kyl\u00e4 Pyh\u00e4joki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101091, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.00008, 61.00018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.3799, 22.38], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kylm\u00e4koski Jokihaavisto", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101112, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.10687, 61.15022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.66329, 23.67678], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Tampere Hatanp\u00e4\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101123, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.48346, 61.48695], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76325, 23.77018], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2000-02-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2006-10-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Evo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101176, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.18349, 61.18359], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.2467, 25.2468], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1971-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hamina Poitsila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101222, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.55019, 60.56696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.14686, 
27.19697], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alavus Kattelus", new cljs.core.Keyword(null, "id", "id", 1013907597), 101306, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.4835, 62.4836], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76312, 23.76322], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Korpilahti Yl\u00e4-Muuratj\u00e4rvi Rinteel\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101351, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15021, 62.15031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.37992, 25.38002], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Multia Sahraj\u00e4rvi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101358, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41688, 62.44198], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.0132, 25.01496], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-12-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 Keljo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101361, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.20022, 62.20032], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.71327, 25.71337], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1999-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Otava", new cljs.core.Keyword(null, "id", "id", 1013907597), 101403, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66134, 61.667], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.0634, 27.07183], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2010-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Anttola Pihlajasalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101404, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66692, 61.66702], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.79677, 
27.79687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Liukkola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101409, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.65023, 61.65033], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.08007, 27.08017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Pitk\u00e4aho", new cljs.core.Keyword(null, "id", "id", 1013907597), 101415, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.95025, 61.95035], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.26338, 27.26348], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1980-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kitee Heinoniemi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101453, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.20032, 62.20042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.46348, 29.46358], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-05-31T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-07-02T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "\u00c4\u00e4nekoski keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101539, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.60023, 62.60033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.71321, 25.71331], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2008-02-03T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Sysm\u00e4nkyl\u00e4 Suvisranta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101612, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.66699, 62.66709], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.03007, 29.03017], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Peders\u00f6re Lappfors", new cljs.core.Keyword(null, "id", "id", 1013907597), 101664, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.51687, 63.51697], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([23.19628, 23.19638], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaala Manamansalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101735, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.40035, 
64.40045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.16305, 27.16315], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo Paloniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101767, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.10039, 64.10049], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.31323, 29.31333], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Puolanka Rasinkyl\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101827, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.81706, 64.81716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.04638, 28.04648], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Enonteki\u00f6 Kelottij\u00e4rvi Iitto", new cljs.core.Keyword(null, "id", "id", 1013907597), 102015, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.75041, 68.75051], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.41194, 21.41204], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1976-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 
1014004813), "1993-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Riutula", new cljs.core.Keyword(null, "id", "id", 1013907597), 102028, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.93388, 68.93398], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.81232, 26.81242], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101584, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.88697, 62.88709], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.6894, 
27.68953], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2001-06-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-06-20T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Ronni", new cljs.core.Keyword(null, "id", "id", 1013907597), 101172, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.08349, 61.08359], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13003, 25.13013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Evo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101155, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.18349, 
61.18359], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.08002, 25.08012], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1964-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kotka Sunila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101192, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.50019, 60.50029], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.96353, 26.96363], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orimattila K\u00e4kel\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101153, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.80016, 60.80665], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.76343, 25.76908], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1960-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Inari Kirakkaj\u00e4rvi Sanilanlampi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102053, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.57618, 69.58405], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.84319, 28.84579], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1993-11-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2011-04-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Karesuvanto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101967, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.45042, 68.45052], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.51208, 22.51218], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hattula Lepaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101132, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.11304, 61.12746], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.32595, 
24.33287], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Hotila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101343, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.54364, 61.5503], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.96336, 25.96657], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Multia Vehkoo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101523, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.51687, 
62.51697], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.6965, 24.6966], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101764, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.13373, 64.13383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.51323, 29.51333], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Suksela", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100982, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41678, 60.41688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.43007, 24.43017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Muhos Leppiniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101802, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.84284, 64.84294], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.04099, 26.04109], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hauho Hahkiala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101133, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.15, 61.15], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.58, 24.58], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-05-01T00:00:00Z", new cljs.core.Keyword(null, 
"end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Riihim\u00e4ki Kara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101137, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.7668, 60.7669], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.78005, 24.78015], true), new cljs.core.Keyword(null, 
"start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lammi Kostila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101173, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.12405, 61.15026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13002, 
25.13319], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kontiolahti Paihola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101623, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.70035, 62.70045], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.86344, 29.86354], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1973-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Kuivaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101207, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.46687, 61.46697], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.19671, 26.19681], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Turku Ruissalo", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100941, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.43338, 60.43348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.17996, 22.18006], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Turku lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101065, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51534, 60.51544], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.2741, 22.2742], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-01-17T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pietarsaari \u00d6stanlid", new cljs.core.Keyword(null, "id", "id", 1013907597), 101658, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.66686, 63.66696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.72956, 22.72966], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1979-10-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Eurajoki Verkkokari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101057, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.23339, 61.23349], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.62984, 21.62994], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1975-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Repojoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101992, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.43383, 68.43393], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.94568, 25.94578], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1982-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alavus Rantat\u00f6ys\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101508, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.61684, 62.61694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.59643, 23.59653], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 Kyp\u00e4r\u00e4m\u00e4ki", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101354, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.23355, 62.23365], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.71326, 25.71336], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi Juotasniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101864, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.3171, 66.32331], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.93276, 26.96286], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virrat Killinkoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101304, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.40017, 62.40027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.89647, 23.89657], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Ruunavuori", new cljs.core.Keyword(null, "id", "id", 1013907597), 101434, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.84084, 61.84094], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.84043, 28.84053], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-04T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2010-11-10T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Oravi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101431, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.10029, 62.10039], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66344, 28.66354], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1986-02-03T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1994-09-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio-Siilinj\u00e4rvi lentoas. Sade", new cljs.core.Keyword(null, "id", "id", 1013907597), 101585, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([63.01697, 63.01707], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.79689, 27.79699], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2005-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-01-04T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valtimo Elom\u00e4ki", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101749, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.78369, 63.78379], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.64656, 28.64666], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Savukoski V\u00e4rri\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 101957, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.46718, 67.46867], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.99182, 27.99609], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2010-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere Koivistonkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101117, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.4668, 61.4669], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.79659, 23.79669], true), new cljs.core.Keyword(null, "start", "start", 
1123661780), "1969-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1976-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kelottij\u00e4rvi Munnikurkkio", new cljs.core.Keyword(null, "id", "id", 1013907597), 102018, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.96711, 68.96721], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([22.12861, 22.12871], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Sevettij\u00e4rvi Varpuniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102049, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.55061, 
69.55071], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.62901, 28.62911], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pello Sirkkakoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101912, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.65038, 66.65048], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.4292, 24.4293], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sipoo Martinkyl\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101019, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40013, 60.40023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.23011, 25.23021], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pori lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101044, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.46564, 61.46574], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.7934, 21.7935], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-01-19T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio Inkil\u00e4nm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101571, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.9003, 62.9004], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.67995, 27.68005], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sonkaj\u00e4rvi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101729, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.70032, 63.70042], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.39649, 27.39659], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1995-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Saarij\u00e4rvi Leuhunkoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101540, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.66689, 62.66699], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.26318, 25.26328], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-09-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Parainen keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 100939, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.30005, 
60.30015], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.26332, 22.29675], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lapinj\u00e4rvi Ingermanninkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 
101193, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.61684, 60.6226], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.13991, 26.1469], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 
1124275658), "Pudasj\u00e4rvi Korpisenkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101810, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.10039, 65.10049], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.52964, 27.52974], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-05-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Juuka Halivaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101602, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.03367, 63.03377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.98001, 28.98011], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1974-08-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Alakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101911, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.28375, 67.28385], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.87912, 24.87922], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-03-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Taivalkoski kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101879, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.58376, 65.58386], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.24629, 28.24639], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-08-21T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Muhos kk Laitasaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101788, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([64.81525, 64.8171], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.97958, 25.97974], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu lentoasema", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101786, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.92894, 64.92904], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.34705, 25.34715], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-01-17T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Oulainen Ohineva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101687, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.23103, 64.23371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.8796, 24.88284], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmoinen L\u00e4stil\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101345, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66685, 61.66695], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.26331, 25.26341], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lisma-Aapa kansakoulu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101937, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.25046, 67.25056], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.54592, 
26.54602], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lisma-Aapa Juppura", new cljs.core.Keyword(null, "id", "id", 1013907597), 101938, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.26713, 67.26723], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.52924, 26.52934], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 AWS", new cljs.core.Keyword(null, "id", "id", 1013907597), 101941, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.36836, 67.36846], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.62868, 26.62878], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2001-06-13T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-02-03T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Madetkoski", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101997, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.80049, 67.80059], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.77918, 26.77928], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Sodankyl\u00e4 Madetkoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101998, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.92933, 67.93393], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.7701, 26.77925], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Vuotso virastotalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 102003, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.10171, 68.10181], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.11942, 27.11952], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-06-14T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lisma-Aapa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101934, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.25046, 67.25056], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.57925, 
26.57935], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-05-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lapin ilmatieteellinen tutkimuskeskus", new cljs.core.Keyword(null, "id", "id", 1013907597), 101932, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.36658, 
67.37974], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.62868, 26.646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lahti Kujala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101158, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.96684, 60.96694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.71341, 25.71351], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kiilop\u00e4\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 102004, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.35054, 68.35064], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.4458, 27.4459], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Enonteki\u00f6 N\u00e4kk\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 102019, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.60298, 68.60308], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.57594, 23.57604], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Angeli Lintupuoliselk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 102026, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.90291, 68.90301], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.73641, 25.73651], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"2008-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Ivalo lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 102033, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.59916, 68.61732], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.41242, 
27.43392], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari V\u00e4yl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 102042, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.07214, 69.07224], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.49245, 27.49255], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-08T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kaamanen", new cljs.core.Keyword(null, "id", "id", 1013907597), 102047, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.14084, 
69.14094], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.26562, 27.26572], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2008-08-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Nellim", new cljs.core.Keyword(null, "id", "id", 1013907597), 102052, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([68.84915, 68.84925], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.29905, 28.29915], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-01-04T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kilpisj\u00e4rvi Saana", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 102017, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.04269, 69.04279], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.85128, 20.85138], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-02T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Kruunupyy lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101662, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.71688, 63.71759], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.13869, 23.14635], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmij\u00e4rvi geofysiikan observatorio", new cljs.core.Keyword(null, "id", "id", 1013907597), 101149, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.50873, 60.51689], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.64674, 24.65378], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Huittinen Sallila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101075, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.02331, 61.02358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.69858, 22.6987], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Lehtim\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101027, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.36847, 60.36857], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([25.62375, 25.62385], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2006-01-20T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruotsinpyht\u00e4\u00e4 Reimars", new cljs.core.Keyword(null, "id", "id", 1013907597), 101034, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([60.36683, 60.36693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.39684, 26.39694], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi Hulkonniemi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101816, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.91708, 64.91718], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.94642, 28.94652], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Joroinen Kotkatlahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101406, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.18361, 62.18371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.91339, 27.91349], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-08-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tankar/\u00d6ja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101654, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.95021, 63.95031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.8462, 22.8463], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaala Jaalanka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101807, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.56702, 64.56712], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.16303, 27.16313], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kirkkonummi Pickala", new cljs.core.Keyword(null, "id", "id", 1013907597), 100977, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.1001, 60.1002], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([24.34677, 24.34687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1985-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Vihtamoj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101747, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.20037, 
64.20047], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.32981, 28.32991], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Virrat Vaskivesi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101301, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15016, 62.1552], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.64649, 23.65445], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-09-09T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Santala", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100959, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.88339, 59.88349], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.1134, 23.1135], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Tammela Mustiala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101106, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.81678, 60.81688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76333, 23.76343], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Raahe Pattijoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101782, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.65029, 64.65039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.72953, 24.72963], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1973-11-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi J\u00e4\u00e4sk\u00f6", new cljs.core.Keyword(null, "id", "id", 1013907597), 101923, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.03375, 67.03385], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.09585, 
25.09595], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4ntyharju Toivola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101208, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.50022, 61.50032], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.7134, 26.7135], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tornio K\u00f6n\u00f6l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101844, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([65.96702, 65.96712], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.46265, 24.46275], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Uusikaupunki Korsaari", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101051, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.84557, 60.86681], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.22987, 21.23964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Raahe Saloinen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101781, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.63362, 64.63372], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.47953, 24.47963], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1972-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-08-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rym\u00e4ttyl\u00e4 kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 100915, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.40004, 60.40014], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.9633, 21.9634], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lapua Siiril\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101504, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.96684, 62.96694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.01302, 23.01312], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1984-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Perho Salamaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101526, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.33356, 63.33366], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.61305, 24.61315], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-05-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1982-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pattijoki Ylip\u00e4\u00e4 Sorttanen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101780, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([64.66696, 64.66706], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.66286, 24.66296], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4ntyluoto/Pori", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101255, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.5834, 61.5835], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.47979, 21.47989], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kiihtelysvaara Ruskeakoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101461, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.43368, 62.43378], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.44683, 30.44693], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1980-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Naruska", new cljs.core.Keyword(null, "id", "id", 1013907597), 101964, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.15052, 67.21562], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.16279, 29.23733], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-03-21T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kilpisj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 102014, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.0504, 69.0505], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.79516, 
20.79526], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Kiistala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101993, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.86713, 67.86723], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.32906, 25.34583], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kihni\u00f6 Kankari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101302, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.18347, 62.18357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.07979, 23.07989], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Parikkala kk", new cljs.core.Keyword(null, "id", 
"id", 1013907597), 101442, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.55029, 61.55039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.49688, 29.49698], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kittil\u00e4 Kaukonen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101915, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.4671, 67.4672], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.91244, 24.9292], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1973-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-04-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kaamanen", new cljs.core.Keyword(null, "id", "id", 1013907597), 102041, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.11723, 69.11733], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.17898, 27.17908], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1988-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kannonkoski kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101542, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.9669, 62.967], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.24647, 25.24657], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi Piispaj\u00e4rvi Selkoskyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101834, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.36711, 65.37248], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.21305, 29.21848], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Espoo Otaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 100972, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.18344, 
60.18354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.83011, 24.83021], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mietoinen Ravea", new cljs.core.Keyword(null, "id", "id", 1013907597), 101056, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.66672, 60.66682], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.82992, 21.83002], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1984-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Janakkala Kiipula", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101140, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.88347, 60.88357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.7467, 24.7468], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1973-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lepp\u00e4virta kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101416, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.48, 62.48], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.78, 27.78], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-11-22T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kurikka keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101488, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.61681, 62.61693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.37969, 22.39268], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lohtaja Marinkainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101671, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.95023, 63.95033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.4629, 23.463], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylistaro Varrasj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101494, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.90016, 62.90026], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.69634, 22.69644], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alah\u00e4rm\u00e4 Vuoskoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101500, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([63.26685, 63.26695], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.71296, 22.71306], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Alah\u00e4rm\u00e4 Kuoppala", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101499, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.23351, 63.23361], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.64629, 22.64639], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1971-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Vaasa lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101462, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.04192, 63.04202], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.76407, 21.76417], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-01-17T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "V\u00e4h\u00e4kyr\u00f6 kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101497, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.05015, 63.05522], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.11296, 22.11667], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-11-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa Mieskonm\u00e4ki K\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101383, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.85022, 61.85032], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.26334, 
26.26344], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101382, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.80021, 61.80031], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.06334, 26.06344], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa Uimaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101377, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.68354, 
61.70031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.26336, 26.26346], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4nt\u00e4 Viitam\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101722, 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.93364, 63.93374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.41307, 26.41317], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2002-11-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Kalajoki Rahja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101672, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.21691, 64.21701], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.6962, 23.6963], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Jalasj\u00e4rvi Koskue", new cljs.core.Keyword(null, "id", "id", 1013907597), 101283, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.31681, 62.31691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.8631, 22.8632], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhajoki Muurahainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101287, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15012, 62.15022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.22975, 22.22985], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1986-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhajoki Muurahainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101290, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15012, 62.15022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.26307, 22.26317], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1989-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhajoki Nummij\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101282, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.28346, 62.28356], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.39641, 22.39651], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lahti Jalkaranta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101187, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.9835, 
60.99163], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.60126, 25.61351], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaasa Hietalahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101465, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.08347, 63.08357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.64626, 21.64636], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaasa Palosaari", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101480, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.08347, 63.10024], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.59625, 21.59636], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-06-29T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Vaasa keskusta Koulukatu", new cljs.core.Keyword(null, "id", "id", 1013907597), 101482, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.09709, 63.09719], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.60542, 21.60552], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2001-06-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2011-11-01T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mustasaari Bj\u00f6rk\u00f6by", new cljs.core.Keyword(null, "id", "id", 1013907597), 101476, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.35014, 63.35024], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.32953, 21.32963], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mustasaari Sulva Forsbacken", new cljs.core.Keyword(null, "id", "id", 1013907597), 101475, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.9668, 62.98356], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.67961, 
21.71305], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Sein\u00e4joki keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101490, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.78349, 62.78359], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.81303, 22.81313], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Mustasaari Sulva L\u00e5ngmossen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101471, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([62.95013, 62.95023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.69628, 21.69638], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Maalahti Berg\u00f6", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101473, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.9684, 62.9685], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.20136, 21.20146], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Maalahti \u00d6ver-Malax", new cljs.core.Keyword(null, "id", "id", 1013907597), 101472, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.95013, 62.95023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.62961, 21.62971], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2001-09-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Viikin koetila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101011, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.21679, 60.21689], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.03012, 25.03022], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1969-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Marjaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101021, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20012, 60.20022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.08013, 25.08023], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1987-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hartola Kirkkola Lepp\u00e4koski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101344, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.63353, 61.63363], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.88001, 25.88011], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyrynsalmi Kyt\u00f6m\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101829, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([64.8295, 64.83382], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.22972, 28.23305], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2009-07-06T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rauma kpki", new cljs.core.Keyword(null, "id", 
"id", 1013907597), 101047, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.11672, 61.11682], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.46319, 21.46329], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1975-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pohja Pinjainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 100958, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.08341, 60.08351], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.66341, 23.71351], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pohja Kuovila", new cljs.core.Keyword(null, "id", "id", 1013907597), 100964, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.11674, 60.11684], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.38005, 23.38015], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1980-07-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmes Porokyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101770, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.55036, 63.55046], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.07994, 29.08004], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-09-19T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmes Lipinlahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101621, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.4837, 63.4838], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.32997, 29.33007], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Savitaipale Peltoinlahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101228, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.20023, 61.20033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.68015, 27.68025], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Orip\u00e4\u00e4 kk", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101072, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.85008, 60.85018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.71328, 22.71338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Loimaa Vesikoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101111, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.85009, 60.85019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.02995, 23.03005], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-01-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pietarsaari Lepp\u00e4luoto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101655, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.66686, 63.66696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.64623, 22.64633], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruotsinpyht\u00e4\u00e4 Keitala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101033, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41684, 60.42221], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.36601, 
26.38027], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Outakoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 102023, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.58389, 69.58399], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.96214, 25.96224], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kristiinankaupunki keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101260, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.26677, 62.26687], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.39636, 21.39646], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1964-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Isojoki Sarviluoma", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101286, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.11678, 62.11688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.04641, 22.04651], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1969-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Isojoki Vanhakyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101259, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.18344, 62.18354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.79639, 21.79649], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola \u00d6ja M\u00e4rask\u00e4r", new cljs.core.Keyword(null, "id", "id", 1013907597), 101659, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.88354, 63.88364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.92954, 22.92964], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1991-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-02-28T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lestij\u00e4rvi kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101678, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.51691, 63.51701], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.66303, 
24.66313], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Reisj\u00e4rvi Levonper\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101697, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.70026, 63.71703], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.99635, 25.02979], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylistaro Pelma", new cljs.core.Keyword(null, "id", "id", 1013907597), 101496, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([62.93349, 62.93359], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.49633, 22.49643], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Somero Joensuu", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101109, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.63342, 60.63352], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.51334, 23.51344], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-02-24T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Anttola kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101412, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.58357, 61.58367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.64677, 27.64687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu Pateniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101791, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.08366, 65.08376], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.3795, 25.3796], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Ol Hiidenkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101696, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.56694, 63.56704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.74641, 
25.74651], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-01-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Loppi Vojakkala", new cljs.core.Keyword(null, "id", "id", 1013907597), 101138, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.78, 60.78], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16, 24.16], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-04-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pet\u00e4j\u00e4vesi Kuivasm\u00e4ki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101355, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([62.33354, 62.33364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.14655, 25.14665], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Keminmaa Kemi-Tornion lentoasema", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101840, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.78367, 65.78377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.57935, 24.57945], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", 
"title", 1124275658), "Hollola Ala-Okeroinen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101181, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.90016, 60.91693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.53007, 25.58017], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1991-10-30T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-06-03T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Espoo Kauklahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 100978, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.21678, 60.21688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.64677, 24.64687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-03-01T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Valkeala Uro", new cljs.core.Keyword(null, "id", "id", 1013907597), 101214, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.0002, 61.0003], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.78012, 26.78022], true), 
new cljs.core.Keyword(null, "start", "start", 1123661780), "1993-05-15T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-06-04T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nilsi\u00e4 Vuotj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101604, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.20033, 63.20043], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.26328, 28.26338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1989-07-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Laukaa Kuusa", new cljs.core.Keyword(null, "id", "id", 1013907597), 101359, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.48356, 
62.48366], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.91324, 25.91334], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1980-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Houtskari Hyppeis", new cljs.core.Keyword(null, "id", "id", 1013907597), 100912, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.21669, 60.21679], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.26328, 21.26338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Evij\u00e4rvi Lahdenkyl\u00e4", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101514, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.41687, 63.43336], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.36297, 23.41085], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Uusikaarlepyy Jepua Jungar", new cljs.core.Keyword(null, "id", "id", 1013907597), 101501, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.40018, 63.40028], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.64627, 22.64637], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Muonio kk Alaniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101971, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.9671, 67.9672], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.69559, 23.69569], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1970-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101990, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.65205, 67.65215], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.90157, 
24.90167], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2009-11-27T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi\u00f6nsaari Kemi\u00f6 kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 100951, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17145, 60.17155], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.75752, 22.75762], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2009-09-07T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Raahe Nahkiainen", new cljs.core.Keyword(null, "id", "id", 1013907597), 101775, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.61194, 
64.61204], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.89617, 23.89627], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-10-02T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi P\u00f6ts\u00f6nvaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101649, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.14228, 63.14238], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([31.04419, 31.04429], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ranua", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101867, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.93373, 65.93383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.56279, 26.56289], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Inari Seitalaassa", new cljs.core.Keyword(null, "id", "id", 1013907597), 129963, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.04827, 69.04837], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.75677, 27.75687], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2011-05-03T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Lapinlahti Lammink\u00e4yr\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101577, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.37753, 63.38374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.36987, 27.37996], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pelkosenniemi Pyh\u00e4tunturi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101958, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.02199, 67.02209], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.21835, 
27.21845], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1995-11-11T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Joroinen Varkauden lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101420, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.17389, 62.17399], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.86033, 27.86043], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-12-17T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Siikajoki Revonlahti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101787, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.68363, 
64.68401], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.08871, 25.09631], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Turku Kupittaa", new cljs.core.Keyword(null, "id", "id", 1013907597), 100948, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.45005, 60.45015], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.27996, 22.28006], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-07-14T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-07-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Asikkala Pulkkilanharju", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101156, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.28351, 61.30084], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.54253, 25.5468], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Ivalo lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 102044, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.60053, 68.60063], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.42905, 27.42915], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-10-05T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-04-05T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Korppoo Korpog\u00e5rd", new cljs.core.Keyword(null, "id", "id", 1013907597), 100911, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.1667, 60.1668], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.5633, 21.5634], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Anjalankoski Sippola Haukkasuo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101201, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.8502, 60.8503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.93015, 
26.93025], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1978-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Pori M\u00e4ntyluoto", new cljs.core.Keyword(null, "id", "id", 1013907597), 101264, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.60007, 61.60017], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.44645, 21.44655], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1984-01-06T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-08-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuortane kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101513, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.80018, 
62.80028], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.4964, 23.4965], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1976-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Karijoki Kankalo", new cljs.core.Keyword(null, "id", "id", 1013907597), 101266, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.31678, 62.32113], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.84491, 21.84648], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1993-12-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu Linnanmaa", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101789, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.017, 65.03376], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.47952, 25.47962], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1996-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Suomussalmi Ylivuokki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101833, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.71709, 64.71719], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.67983, 29.67993], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-09-30T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hirvensalmi Vahvaselk\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101371, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.60022, 61.60032], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.58005, 26.58015], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1977-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola K\u00e4lvi\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101668, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.86689, 63.86699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.42957, 23.42967], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere H\u00e4rm\u00e4l\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101105, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.4668, 61.4669], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.72991, 23.74668], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1999-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyvink\u00e4\u00e4 lentokentt\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101148, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([60.65013, 60.65023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.84673, 24.84683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1974-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kolari Kelloniemi", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101904, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.23372, 67.23382], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.57904, 23.57914], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1993-05-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Jyv\u00e4skyl\u00e4n mlk Tikkakoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101360, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.40022, 62.40032], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.59656, 25.59666], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1978-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"1988-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Viitasaari kk M\u00e4kipirtti", new cljs.core.Keyword(null, "id", "id", 1013907597), 101544, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.08359, 63.08369], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.84649, 25.84659], true), new cljs.core.Keyword(null, "start", 
"start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-10-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Espoo Nuuksio", new cljs.core.Keyword(null, "id", "id", 1013907597), 100991, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.31678, 60.31688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.54673, 
24.54683], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1981-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1989-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Saarij\u00e4rvi Kalmari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101551, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.78355, 62.78365], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.01315, 25.01325], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "N\u00e4rpi\u00f6 Ylimarkku Bodbacka", new cljs.core.Keyword(null, "id", "id", 1013907597), 101469, new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([62.68344, 62.68354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.3463, 21.3464], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-09-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2004-06-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Kevo", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 102045, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.75634, 69.75644], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.00759, 27.00769], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1999-07-12T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-05-24T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Ranua kk", new cljs.core.Keyword(null, "id", "id", 1013907597), 101861, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.93293, 65.93303], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.51265, 26.54608], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1963-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ranua Palovaara", new cljs.core.Keyword(null, "id", "id", 1013907597), 101871, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.13373, 66.13383], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.11273, 26.11283], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1976-05-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-03-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Ilmala", new cljs.core.Keyword(null, "id", "id", 1013907597), 100973, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20012, 60.20022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.91346, 24.91356], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Eno Pamilo Luhtapohja", new cljs.core.Keyword(null, "id", "id", 1013907597), 101639, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.80037, 62.80047], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.41346, 30.41356], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1961-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi Ruhtinansalmi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101836, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([65.21711, 65.21721], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.51309, 29.51319], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1970-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-06-29T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Harjavalta Torttila", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101079, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.31464, 61.31685], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.11319, 22.12381], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2007-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Pirkkala Tampere-Pirkkalan lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101118, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.42069, 61.42079], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.61991, 23.62001], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1979-10-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Korsn\u00e4s Moikip\u00e4\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101477, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.88344, 62.88354], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.09626, 21.09636], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1974-03-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1992-10-24T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Naantali keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 100936, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.46672, 60.46682], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.02995, 
22.03005], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1972-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nilsi\u00e4 Pieks\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101596, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10032, 63.10042], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.06328, 28.06338], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1966-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Loviisa keskusta", new cljs.core.Keyword(null, "id", "id", 1013907597), 101032, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.46683, 
60.46693], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.21349, 26.21359], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1979-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi Pirttikoski", new cljs.core.Keyword(null, "id", "id", 1013907597), 101875, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.35043, 66.35053], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.1461, 27.1462], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-01-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Salo Suomusj\u00e4rvi", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 100961, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.32398, 60.32408], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.7067, 23.7068], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1988-02-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2012-07-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi Jaatila", new cljs.core.Keyword(null, "id", "id", 1013907597), 101856, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.36706, 66.36716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.36265, 25.36275], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2003-08-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Tuusula Hyryl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101015, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.4168, 60.4169], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.0301, 25.0302], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "1991-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Herttoniemi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101026, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20023, 60.20033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.0465, 25.0466], 
true), new cljs.core.Keyword(null, "start", "start", 1123661780), "2002-11-29T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2005-08-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Haapavesi Piipsanneva", new cljs.core.Keyword(null, "id", "id", 1013907597), 101707, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.14112, 64.14122], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.60133, 25.60143], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1997-05-29T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2000-10-18T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Korpilahti Yl\u00e4-Muuratj\u00e4rvi Parkkola", new cljs.core.Keyword(null, "id", "id", 1013907597), 101353, new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15021, 62.15031], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.36325, 25.36335], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1967-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmij\u00e4rvi Rajam\u00e4ki", 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101136, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.53345, 60.53355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.74674, 24.74684], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Vantaa Helsinki-Vantaan lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 100968, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.32734, 60.32744], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.95706, 24.95716], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), 
"now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kristiinankaupunki Karhusaari", new cljs.core.Keyword(null, "id", "id", 1013907597), 101263, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.25009, 62.25769], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.31303, 21.32979], true), new cljs.core.Keyword(null, "start", "start", 1123661780), 
"1974-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2012-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Somero Hirsj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101119, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.58343, 60.58353], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.69669, 
23.69679], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1992-10-16T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1997-06-04T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Janakkala Turenki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101141, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.93347, 60.93357], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.68003, 24.68013], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmalahti Vehkaj\u00e4rvi", new cljs.core.Keyword(null, "id", "id", 1013907597), 101319, new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.50016, 61.50026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.81331, 24.81341], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1998-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Kruunupyy kk", new cljs.core.Keyword(null, "id", 
"id", 1013907597), 101666, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.71687, 63.71697], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.06291, 23.06301], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1982-12-31T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Puolanka Rasinkyl\u00e4", new cljs.core.Keyword(null, "id", "id", 1013907597), 101815, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.81706, 64.81716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.9297, 27.9298], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1987-11-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1990-12-31T00:00:00Z"], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Malmi lentoasema", new cljs.core.Keyword(null, "id", "id", 1013907597), 101009, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.25345, 60.25355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.0451, 25.0452], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", 
new cljs.core.Keyword(null, "end", "end", 1014004813), "2006-04-22T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "N\u00e4rpi\u00f6 Alamarkku", new cljs.core.Keyword(null, "id", "id", 1013907597), 101468, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.65012, 62.65022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.54632, 
21.54642], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1968-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2013-04-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "S\u00e4\u00e4havaintojen vuorokausiarvot", new cljs.core.Keyword(null, "id", "id", 1013907597), 1000565, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.78339, 69.75637], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.36783, 31.05921], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1959-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "now"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruotsinpyht\u00e4\u00e4 Tesjoki", new cljs.core.Keyword(null, "id", "id", 1013907597), 101035, new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.4335, 60.4336], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.36351, 26.36361], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1971-06-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "1981-09-30T00:00:00Z"], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "title", "title", 1124275658), "Luoto Eugmo", new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101656, new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.8002, 63.8003], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.74621, 22.74631], true), new cljs.core.Keyword(null, "start", "start", 1123661780), "1965-01-01T00:00:00Z", new cljs.core.Keyword(null, "end", "end", 1014004813), "2008-07-31T00:00:00Z"], true)], true);
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  var decodedPayload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(decodedPayload)) {
    service.callback(decodedPayload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = clojure.browser.event.event_types[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = clojure.browser.event.event_types["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13170) {
    var vec__13171 = p__13170;
    var k = cljs.core.nth.call(null, vec__13171, 0, null);
    var v = cljs.core.nth.call(null, vec__13171, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13172) {
    var vec__13173 = p__13172;
    var k = cljs.core.nth.call(null, vec__13173, 0, null);
    var v = cljs.core.nth.call(null, vec__13173, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen.cljs$core$IFn$_invoke$arity$3 = listen__3;
  listen.cljs$core$IFn$_invoke$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  listen_once.cljs$core$IFn$_invoke$arity$3 = listen_once__3;
  listen_once.cljs$core$IFn$_invoke$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core.get.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unlisten.cljs$core$IFn$_invoke$arity$3 = unlisten__3;
  unlisten.cljs$core$IFn$_invoke$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.net.xpc.CrossPageChannelRole");
goog.net.xpc.CrossPageChannelRole = {OUTER:0, INNER:1};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.pollsBeforeReconnect_ = 5;
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.prototype.reconnectFrame_ = null;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.isChannelAvailable = function() {
  return!this.isDisposed() && this.channel_.isPeerAvailable()
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrames_ = function() {
  try {
    if(this.isChannelAvailable()) {
      return this.channel_.getPeerWindowObject().frames || {}
    }
  }catch(e) {
    goog.net.xpc.logger.fine("error retrieving peer frames")
  }
  return{}
};
goog.net.xpc.IframePollingTransport.prototype.getPeerFrame_ = function(frameName) {
  return this.getPeerFrames_()[frameName]
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  if(!this.isChannelAvailable()) {
    return
  }
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.maybeInnerPeerReconnect_ = function() {
  if(this.reconnectFrame_ || this.pollsBeforeReconnect_-- > 0) {
    return
  }
  goog.net.xpc.logger.finest("Inner peer reconnect triggered.");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.getPeerFrames_();
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.maybeInnerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getMsgFrameName_()), goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.getPeerFrame_(this.getAckFrameName_()), goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.getPeerFrame_(frameName);
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.getPeerFrames_();
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.xpcDeliver(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.xpcDeliver(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  var receiver;
  var rcvd = false;
  try {
    for(var i = 0;receiver = receivers[i];i++) {
      rcvd = rcvd || receiver.receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    receiver.transport_.channel_.notifyTransportError();
    if(!receivers.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.iframeElm_ = this.channel_.getIframeElement();
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.xpcDeliver(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.xpcDeliver(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.getConfig()[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels[channelName].xpcDeliver(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '\x3ciframe onload\x3d"this.xpcOnload()"\x3e\x3c/iframe\x3e';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.async.Deferred");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper, opt_oneSidedHandshake, opt_protocolVersion) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.protocolVersion_ = opt_protocolVersion || 2;
  goog.asserts.assert(this.protocolVersion_ >= 1);
  goog.asserts.assert(this.protocolVersion_ <= 2);
  this.peerHostname_ = peerHostname || "*";
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.maybeAttemptToConnectTimer_ = new goog.Timer(100, this.getWindow());
  this.oneSidedHandshake_ = !!opt_oneSidedHandshake;
  this.setupAckReceived_ = new goog.async.Deferred;
  this.setupAckSent_ = new goog.async.Deferred;
  this.connected_ = new goog.async.Deferred;
  this.endpointId_ = goog.net.xpc.getRandomString(10);
  this.peerEndpointId_ = null;
  if(this.oneSidedHandshake_) {
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.INNER) {
      this.connected_.awaitDeferred(this.setupAckReceived_)
    }else {
      this.connected_.awaitDeferred(this.setupAckSent_)
    }
  }else {
    this.connected_.awaitDeferred(this.setupAckReceived_);
    if(this.protocolVersion_ == 2) {
      this.connected_.awaitDeferred(this.setupAckSent_)
    }
  }
  this.connected_.addCallback(this.notifyConnected_, this);
  this.connected_.callback(true);
  this.eventHandler_.listen(this.maybeAttemptToConnectTimer_, goog.Timer.TICK, this.maybeAttemptToConnect_);
  goog.net.xpc.logger.info("NativeMessagingTransport created.  " + "protocolVersion\x3d" + this.protocolVersion_ + ", oneSidedHandshake\x3d" + this.oneSidedHandshake_ + ", role\x3d" + this.channel_.getRole())
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ = 200;
goog.net.xpc.NativeMessagingTransport.prototype.peerProtocolVersion_ = null;
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_ = ",";
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.sendTimerId_ = 0;
goog.net.xpc.NativeMessagingTransport.prototype.couldPeerVersionBe_ = function(version) {
  return this.peerProtocolVersion_ == null || this.peerProtocolVersion_ == version
};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  if(!goog.isString(data)) {
    return false
  }
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel\x3d" + channelName + ", service\x3d" + service + ", payload\x3d" + payload);
  var channel = goog.net.xpc.channels[channelName];
  if(channel) {
    channel.xpcDeliver(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  var transportMessageType = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload)[0];
  for(var staleChannelName in goog.net.xpc.channels) {
    var staleChannel = goog.net.xpc.channels[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannelRole.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && (transportMessageType == goog.net.xpc.SETUP || transportMessageType == goog.net.xpc.SETUP_NTPV2)) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels[staleChannelName];
      goog.net.xpc.channels[channelName] = staleChannel;
      staleChannel.xpcDeliver(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  var transportParts = goog.net.xpc.NativeMessagingTransport.parseTransportPayload_(payload);
  var transportMessageType = transportParts[0];
  var peerEndpointId = transportParts[1];
  switch(transportMessageType) {
    case goog.net.xpc.SETUP_ACK_:
      this.setPeerProtocolVersion_(1);
      if(!this.setupAckReceived_.hasFired()) {
        this.setupAckReceived_.callback(true)
      }
      break;
    case goog.net.xpc.SETUP_ACK_NTPV2:
      if(this.protocolVersion_ == 2) {
        this.setPeerProtocolVersion_(2);
        if(!this.setupAckReceived_.hasFired()) {
          this.setupAckReceived_.callback(true)
        }
      }
      break;
    case goog.net.xpc.SETUP:
      this.setPeerProtocolVersion_(1);
      this.sendSetupAckMessage_(1);
      break;
    case goog.net.xpc.SETUP_NTPV2:
      if(this.protocolVersion_ == 2) {
        var prevPeerProtocolVersion = this.peerProtocolVersion_;
        this.setPeerProtocolVersion_(2);
        this.sendSetupAckMessage_(2);
        if((prevPeerProtocolVersion == 1 || this.peerEndpointId_ != null) && this.peerEndpointId_ != peerEndpointId) {
          goog.net.xpc.logger.info("Sending SETUP and changing peer ID to: " + peerEndpointId);
          this.sendSetupMessage_()
        }
        this.peerEndpointId_ = peerEndpointId
      }
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupMessage_ = function() {
  goog.asserts.assert(!(this.protocolVersion_ == 1 && this.peerProtocolVersion_ == 2));
  if(this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2)) {
    var payload = goog.net.xpc.SETUP_NTPV2;
    payload += goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_;
    payload += this.endpointId_;
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, payload)
  }
  if(this.couldPeerVersionBe_(1)) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.sendSetupAckMessage_ = function(protocolVersion) {
  goog.asserts.assert(this.protocolVersion_ != 1 || protocolVersion != 2, "Shouldn't try to send a v2 setup ack in v1 mode.");
  if(this.protocolVersion_ == 2 && this.couldPeerVersionBe_(2) && protocolVersion == 2) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_NTPV2)
  }else {
    if(this.couldPeerVersionBe_(1) && protocolVersion == 1) {
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_)
    }else {
      return
    }
  }
  if(!this.setupAckSent_.hasFired()) {
    this.setupAckSent_.callback(true)
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.setPeerProtocolVersion_ = function(version) {
  if(version > this.peerProtocolVersion_) {
    this.peerProtocolVersion_ = version
  }
  if(this.peerProtocolVersion_ == 1) {
    if(!this.setupAckSent_.hasFired() && !this.oneSidedHandshake_) {
      this.setupAckSent_.callback(true)
    }
    this.peerEndpointId_ = null
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.maybeAttemptToConnect_()
};
goog.net.xpc.NativeMessagingTransport.prototype.maybeAttemptToConnect_ = function() {
  var outerFrame = this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER;
  if(this.oneSidedHandshake_ && outerFrame || this.channel_.isConnected() || this.isDisposed()) {
    this.maybeAttemptToConnectTimer_.stop();
    return
  }
  this.maybeAttemptToConnectTimer_.start();
  this.sendSetupMessage_()
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.getPeerWindowObject();
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  this.send = function(service, payload) {
    var transport = this;
    var channelName = this.channel_.name;
    var sendFunctor = function() {
      transport.sendTimerId_ = 0;
      try {
        var obj = win.postMessage ? win : win.document;
        if(!obj.postMessage) {
          goog.net.xpc.logger.warning("Peer window had no postMessage " + "function.");
          return
        }
        obj.postMessage(channelName + "|" + service + ":" + payload, transport.peerHostname_);
        goog.net.xpc.logger.fine("send(): service\x3d" + service + " payload\x3d" + payload + " to hostname\x3d" + transport.peerHostname_)
      }catch(error) {
        goog.net.xpc.logger.warning("Error performing postMessage, ignoring.", error)
      }
    };
    this.sendTimerId_ = goog.Timer.callOnce(sendFunctor, 0)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.notifyConnected_ = function() {
  var delay = this.protocolVersion_ == 1 || this.peerProtocolVersion_ == 1 ? goog.net.xpc.NativeMessagingTransport.CONNECTION_DELAY_MS_ : undefined;
  this.channel_.notifyConnected(delay)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
  if(this.sendTimerId_) {
    goog.Timer.clear(this.sendTimerId_);
    this.sendTimerId_ = 0
  }
  goog.dispose(this.eventHandler_);
  delete this.eventHandler_;
  goog.dispose(this.maybeAttemptToConnectTimer_);
  delete this.maybeAttemptToConnectTimer_;
  this.setupAckReceived_.cancel();
  delete this.setupAckReceived_;
  this.setupAckSent_.cancel();
  delete this.setupAckSent_;
  this.connected_.cancel();
  delete this.connected_;
  delete this.send;
  goog.base(this, "disposeInternal")
};
goog.net.xpc.NativeMessagingTransport.parseTransportPayload_ = function(payload) {
  var transportParts = (payload.split(goog.net.xpc.NativeMessagingTransport.MESSAGE_DELIMITER_));
  transportParts[1] = transportParts[1] || null;
  return transportParts
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.Transport");
goog.require("goog.reflect");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.isNixSupported = function() {
  var isSupported = false;
  try {
    var oldOpener = window.opener;
    window.opener = ({});
    isSupported = goog.reflect.canAccessProperty(window, "opener");
    window.opener = oldOpener
  }catch(e) {
  }
  return isSupported
};
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport \x3d transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth \x3d auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken \x3d m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap \x3d New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " \x3d wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannelRole.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.getIframeElement();
  try {
    var theWindow = this.getWindow();
    var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
    innerFrame.contentWindow.opener = getWrapper(this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      var theWindow = this.getWindow();
      var getWrapper = theWindow[goog.net.xpc.NixTransport.NIX_GET_WRAPPER];
      this.nixChannel_["CreateChannel"](getWrapper(this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  var deliveryHandler = function() {
    this.channel_.xpcDeliver(serviceName, payload)
  };
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.async.Deferred");
goog.require("goog.async.Delay");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.CrossPageChannelRole");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  this.deferredDeliveries_ = [];
  this.peerLoadHandler_ = new goog.events.EventHandler(this);
  cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = cfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] || goog.uri.utils.getHost(this.domHelper_.getWindow().location.href) + "/robots.txt";
  cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = cfg[goog.net.xpc.CfgFields.PEER_POLL_URI] || goog.uri.utils.getHost(cfg[goog.net.xpc.CfgFields.PEER_URI] || "") + "/robots.txt";
  goog.net.xpc.channels[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.connectionDelay_ = null;
goog.net.xpc.CrossPageChannel.prototype.peerWindowDeferred_ = null;
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.getConfig = function() {
  return this.cfg_
};
goog.net.xpc.CrossPageChannel.prototype.getIframeElement = function() {
  return this.iframeElement_
};
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.getPeerWindowObject = function() {
  return this.peerWindowObject_
};
goog.net.xpc.CrossPageChannel.prototype.isPeerAvailable = function() {
  try {
    return!!this.peerWindowObject_ && !Boolean(this.peerWindowObject_.closed)
  }catch(e) {
    return false
  }
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE && goog.net.xpc.NixTransport.isNixSupported()) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      var protocolVersion = this.cfg_[goog.net.xpc.CfgFields.NATIVE_TRANSPORT_PROTOCOL_VERSION] || 2;
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_, !!this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE], protocolVersion);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  peerCfg[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE] = this.cfg_[goog.net.xpc.CfgFields.ONE_SIDED_HANDSHAKE];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if(role) {
    peerCfg[goog.net.xpc.CfgFields.ROLE] = role == goog.net.xpc.CrossPageChannelRole.INNER ? goog.net.xpc.CrossPageChannelRole.OUTER : goog.net.xpc.CrossPageChannelRole.INNER
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  goog.net.xpc.logger.info("createPeerIframe()");
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.getDomHelper(parentElm).createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  this.cleanUpIncompleteConnection_();
  this.peerWindowDeferred_ = new goog.async.Deferred(undefined, this);
  var peerUri = this.getPeerUri(opt_addCfgParam);
  this.peerLoadHandler_.listenOnce(iframeElm, "load", this.peerWindowDeferred_.callback, false, this.peerWindowDeferred_);
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    window.setTimeout(goog.bind(function() {
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return(iframeElm)
};
goog.net.xpc.CrossPageChannel.prototype.cleanUpIncompleteConnection_ = function() {
  if(this.peerWindowDeferred_) {
    this.peerWindowDeferred_.cancel();
    this.peerWindowDeferred_ = null
  }
  this.deferredDeliveries_.length = 0;
  this.peerLoadHandler_.removeAll()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerUri = function(opt_addCfgParam) {
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  return peerUri
};
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.peerWindowDeferred_) {
    this.peerWindowDeferred_.addCallback(this.continueConnection_)
  }else {
    this.continueConnection_()
  }
};
goog.net.xpc.CrossPageChannel.prototype.continueConnection_ = function() {
  goog.net.xpc.logger.info("continueConnection_()");
  this.peerWindowDeferred_ = null;
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == window.top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect();
  while(this.deferredDeliveries_.length > 0) {
    this.deferredDeliveries_.shift()()
  }
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  this.cleanUpIncompleteConnection_();
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  goog.dispose(this.transport_);
  this.transport_ = null;
  this.connectCb_ = null;
  goog.dispose(this.connectionDelay_);
  this.connectionDelay_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected = function(opt_delay) {
  if(this.isConnected() || this.connectionDelay_ && this.connectionDelay_.isActive()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  goog.dispose(this.connectionDelay_);
  if(opt_delay) {
    this.connectionDelay_ = new goog.async.Delay(this.connectCb_, opt_delay);
    this.connectionDelay_.start()
  }else {
    this.connectionDelay_ = null;
    this.connectCb_()
  }
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = goog.net.xpc.CrossPageChannel.prototype.notifyConnected;
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(!this.isPeerAvailable()) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.xpcDeliver = function(serviceName, payload, opt_origin) {
  if(this.peerWindowDeferred_) {
    this.deferredDeliveries_.push(goog.bind(this.xpcDeliver, this, serviceName, payload, opt_origin));
    return
  }
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::xpcDeliver(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::xpcDeliver(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  var role = this.cfg_[goog.net.xpc.CfgFields.ROLE];
  if(role) {
    return role
  }else {
    return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannelRole.INNER : goog.net.xpc.CrossPageChannelRole.OUTER
  }
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels[this.name];
  goog.dispose(this.peerLoadHandler_);
  delete this.peerLoadHandler_;
  goog.base(this, "disposeInternal")
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels) {
    goog.dispose(goog.net.xpc.channels[name])
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13158) {
  var vec__13159 = p__13158;
  var k = cljs.core.nth.call(null, vec__13159, 0, null);
  var v = cljs.core.nth.call(null, vec__13159, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.connect[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.connect["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  connect.cljs$core$IFn$_invoke$arity$1 = connect__1;
  connect.cljs$core$IFn$_invoke$arity$2 = connect__2;
  connect.cljs$core$IFn$_invoke$arity$3 = connect__3;
  connect.cljs$core$IFn$_invoke$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.transmit[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.transmit["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transmit.cljs$core$IFn$_invoke$arity$2 = transmit__2;
  transmit.cljs$core$IFn$_invoke$arity$3 = transmit__3;
  transmit.cljs$core$IFn$_invoke$arity$4 = transmit__4;
  transmit.cljs$core$IFn$_invoke$arity$5 = transmit__5;
  transmit.cljs$core$IFn$_invoke$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = clojure.browser.net.close[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = clojure.browser.net.close["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13160) {
    var vec__13161 = p__13160;
    var k = cljs.core.nth.call(null, vec__13161, 0, null);
    var v = cljs.core.nth.call(null, vec__13161, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__13162) {
  var vec__13163 = p__13162;
  var k = cljs.core.nth.call(null, vec__13163, 0, null);
  var v = cljs.core.nth.call(null, vec__13163, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k.toLowerCase()), v], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.register_service[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.register_service["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = clojure.browser.net.register_service[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = clojure.browser.net.register_service["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  register_service.cljs$core$IFn$_invoke$arity$3 = register_service__3;
  register_service.cljs$core$IFn$_invoke$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__4092__auto__ = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__4092__auto__)) {
      var config = temp__4092__auto__;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__13167) {
      var vec__13168 = p__13167;
      var k = cljs.core.nth.call(null, vec__13168, 0, null);
      var v = cljs.core.nth.call(null, vec__13168, 1, null);
      var temp__4090__auto__ = cljs.core.get.call(null, clojure.browser.net.xpc_config_fields, k);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var field = temp__4090__auto__;
        var G__13169 = sum;
        G__13169[field] = v;
        return G__13169
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  xpc_connection.cljs$core$IFn$_invoke$arity$0 = xpc_connection__0;
  xpc_connection.cljs$core$IFn$_invoke$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("goog.ui.ac.ArrayMatcher");
goog.require("goog.iter");
goog.require("goog.string");
goog.ui.ac.ArrayMatcher = function(rows, opt_noSimilar) {
  this.rows_ = rows;
  this.useSimilar_ = !opt_noSimilar
};
goog.ui.ac.ArrayMatcher.prototype.setRows = function(rows) {
  this.rows_ = rows
};
goog.ui.ac.ArrayMatcher.prototype.requestMatchingRows = function(token, maxMatches, matchHandler, opt_fullString) {
  var matches = this.getPrefixMatches(token, maxMatches);
  if(matches.length == 0 && this.useSimilar_) {
    matches = this.getSimilarRows(token, maxMatches)
  }
  matchHandler(token, matches)
};
goog.ui.ac.ArrayMatcher.prototype.getPrefixMatches = function(token, maxMatches) {
  var matches = [];
  if(token != "") {
    var escapedToken = goog.string.regExpEscape(token);
    var matcher = new RegExp("(^|\\W+)" + escapedToken, "i");
    goog.iter.some(this.rows_, function(row) {
      if(String(row).match(matcher)) {
        matches.push(row)
      }
      return matches.length >= maxMatches
    })
  }
  return matches
};
goog.ui.ac.ArrayMatcher.prototype.getSimilarRows = function(token, maxMatches) {
  var results = [];
  goog.iter.forEach(this.rows_, function(row, index) {
    var str = token.toLowerCase();
    var txt = String(row).toLowerCase();
    var score = 0;
    if(txt.indexOf(str) != -1) {
      score = parseInt((txt.indexOf(str) / 4).toString(), 10)
    }else {
      var arr = str.split("");
      var lastPos = -1;
      var penalty = 10;
      for(var i = 0, c;c = arr[i];i++) {
        var pos = txt.indexOf(c);
        if(pos > lastPos) {
          var diff = pos - lastPos - 1;
          if(diff > penalty - 5) {
            diff = penalty - 5
          }
          score += diff;
          lastPos = pos
        }else {
          score += penalty;
          penalty += 5
        }
      }
    }
    if(score < str.length * 6) {
      results.push({str:row, score:score, index:index})
    }
  });
  results.sort(function(a, b) {
    var diff = a.score - b.score;
    if(diff != 0) {
      return diff
    }
    return a.index - b.index
  });
  var matches = [];
  for(var i = 0;i < maxMatches && i < results.length;i++) {
    matches.push(results[i].str)
  }
  return matches
};
goog.provide("goog.ui.ac");
goog.require("goog.ui.ac.ArrayMatcher");
goog.require("goog.ui.ac.AutoComplete");
goog.require("goog.ui.ac.InputHandler");
goog.require("goog.ui.ac.Renderer");
goog.ui.ac.createSimpleAutoComplete = function(data, input, opt_multi, opt_useSimilar) {
  var matcher = new goog.ui.ac.ArrayMatcher(data, !opt_useSimilar);
  var renderer = new goog.ui.ac.Renderer;
  var inputHandler = new goog.ui.ac.InputHandler(null, null, !!opt_multi);
  var autoComplete = new goog.ui.ac.AutoComplete(matcher, renderer, inputHandler);
  inputHandler.attachAutoComplete(autoComplete);
  inputHandler.attachInputs(input);
  return autoComplete
};
goog.provide("weather_canvas.templates");
goog.require("cljs.core");
goog.require("dommy.core");
weather_canvas.templates.years = cljs.core.reverse.call(null, cljs.core.range.call(null, 1950, 1 + (new Date).getFullYear()));
weather_canvas.templates.id_generator = function id_generator(prefix) {
  return function(suffix) {
    return cljs.core.format.call(null, "%s-%s", prefix, suffix)
  }
};
weather_canvas.templates.id_stripper = function id_stripper(prefix) {
  return function(id) {
    return cljs.core.second.call(null, clojure.string.split.call(null, id, [cljs.core.str(prefix), cljs.core.str("-")].join("")))
  }
};
weather_canvas.templates.query_form = function query_form(sequence_no) {
  var id_prefix = cljs.core.format.call(null, "query-form-%d", sequence_no);
  var mk_id = weather_canvas.templates.id_generator.call(null, id_prefix);
  var year_options = function() {
    var iter__3494__auto__ = function(id_prefix, mk_id) {
      return function iter__11427(s__11428) {
        return new cljs.core.LazySeq(null, false, function(id_prefix, mk_id) {
          return function() {
            var s__11428__$1 = s__11428;
            while(true) {
              var temp__4092__auto__ = cljs.core.seq.call(null, s__11428__$1);
              if(temp__4092__auto__) {
                var s__11428__$2 = temp__4092__auto__;
                if(cljs.core.chunked_seq_QMARK_.call(null, s__11428__$2)) {
                  var c__3492__auto__ = cljs.core.chunk_first.call(null, s__11428__$2);
                  var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                  var b__11430 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                  if(function() {
                    var i__11429 = 0;
                    while(true) {
                      if(i__11429 < size__3493__auto__) {
                        var year = cljs.core._nth.call(null, c__3492__auto__, i__11429);
                        cljs.core.chunk_append.call(null, b__11430, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year], true), year], true));
                        var G__11441 = i__11429 + 1;
                        i__11429 = G__11441;
                        continue
                      }else {
                        return true
                      }
                      break
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11430), iter__11427.call(null, cljs.core.chunk_rest.call(null, s__11428__$2)))
                  }else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11430), null)
                  }
                }else {
                  var year = cljs.core.first.call(null, s__11428__$2);
                  return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year], true), year], true), iter__11427.call(null, cljs.core.rest.call(null, s__11428__$2)))
                }
              }else {
                return null
              }
              break
            }
          }
        }(id_prefix, mk_id), null)
      }
    }(id_prefix, mk_id);
    return iter__3494__auto__.call(null, weather_canvas.templates.years)
  }();
  var dom11431 = document.createElement("div");
  if("query-form-container") {
    dom11431.className = [cljs.core.str(dom11431.className), cljs.core.str(" "), cljs.core.str("query-form-container")].join("").trim()
  }else {
  }
  dom11431.appendChild(function() {
    var dom11432 = document.createElement("form");
    if(cljs.core.truth_(id_prefix)) {
      dom11432.setAttribute("id", id_prefix)
    }else {
    }
    dom11432.appendChild(dommy.template.__GT_node_like.call(null, weather_canvas.templates.group.call(null, cljs.core.PersistentVector.fromArray([weather_canvas.templates.with_label.call(null, "vuodesta", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "year-start"), year_options), weather_canvas.templates.with_label.call(null, "vuoteen", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "year-end"), year_options), weather_canvas.templates.with_label.call(null, 
    "paikassa", new cljs.core.Keyword(null, "input", "input", 1114262332), mk_id.call(null, "location"), null)], true))));
    dom11432.appendChild(dommy.template.__GT_node_like.call(null, weather_canvas.templates.group.call(null, cljs.core.PersistentVector.fromArray([weather_canvas.templates.with_label.call(null, "piirr\u00e4", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "quantity"), function() {
      var iter__3494__auto__ = function iter__11433(s__11434) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__11434__$1 = s__11434;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__11434__$1);
            if(temp__4092__auto__) {
              var s__11434__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__11434__$2)) {
                var c__3492__auto__ = cljs.core.chunk_first.call(null, s__11434__$2);
                var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                var b__11436 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                if(function() {
                  var i__11435 = 0;
                  while(true) {
                    if(i__11435 < size__3493__auto__) {
                      var c = cljs.core._nth.call(null, c__3492__auto__, i__11435);
                      cljs.core.chunk_append.call(null, b__11436, c);
                      var G__11442 = i__11435 + 1;
                      i__11435 = G__11442;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11436), iter__11433.call(null, cljs.core.chunk_rest.call(null, s__11434__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11436), null)
                }
              }else {
                var c = cljs.core.first.call(null, s__11434__$2);
                return cljs.core.cons.call(null, c, iter__11433.call(null, cljs.core.rest.call(null, s__11434__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3494__auto__.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "tday"], true), "keskil\u00e4mp\u00f6tila"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", 
      "value", 1125876963), "tmax"], true), "maksimil\u00e4mp\u00f6tila"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "tmin"], true), "minimil\u00e4mp\u00f6tila"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", 
      "value", 1125876963), "rrday"], true), "sadem\u00e4\u00e4r\u00e4"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "snow"], true), "lumensyvyys"], true)], true))
    }()), weather_canvas.templates.with_label.call(null, "j\u00e4rjest\u00e4", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "order"), function() {
      var iter__3494__auto__ = function iter__11437(s__11438) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__11438__$1 = s__11438;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__11438__$1);
            if(temp__4092__auto__) {
              var s__11438__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__11438__$2)) {
                var c__3492__auto__ = cljs.core.chunk_first.call(null, s__11438__$2);
                var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                var b__11440 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                if(function() {
                  var i__11439 = 0;
                  while(true) {
                    if(i__11439 < size__3493__auto__) {
                      var c = cljs.core._nth.call(null, c__3492__auto__, i__11439);
                      cljs.core.chunk_append.call(null, b__11440, c);
                      var G__11443 = i__11439 + 1;
                      i__11439 = G__11443;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11440), iter__11437.call(null, cljs.core.chunk_rest.call(null, s__11438__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11440), null)
                }
              }else {
                var c = cljs.core.first.call(null, s__11438__$2);
                return cljs.core.cons.call(null, c, iter__11437.call(null, cljs.core.rest.call(null, s__11438__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3494__auto__.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "default"], true), "ajan mukaan"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 
      1125876963), "value"], true), "l\u00e4mp\u00f6tilan mukaan"], true)], true))
    }()), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "input", "input", 1114262332), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "submit", new cljs.core.Keyword(null, "type", "type", 1017479852), "submit", new cljs.core.Keyword(null, "value", "value", 1125876963), "Toteuta!"], true)], true)], true))));
    return dom11432
  }());
  return dom11431
};
weather_canvas.templates.group = function group(contents) {
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "form-grouping"], true), function() {
    var iter__3494__auto__ = function iter__11448(s__11449) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__11449__$1 = s__11449;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__11449__$1);
          if(temp__4092__auto__) {
            var s__11449__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__11449__$2)) {
              var c__3492__auto__ = cljs.core.chunk_first.call(null, s__11449__$2);
              var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
              var b__11451 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
              if(function() {
                var i__11450 = 0;
                while(true) {
                  if(i__11450 < size__3493__auto__) {
                    var c = cljs.core._nth.call(null, c__3492__auto__, i__11450);
                    cljs.core.chunk_append.call(null, b__11451, c);
                    var G__11452 = i__11450 + 1;
                    i__11450 = G__11452;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11451), iter__11448.call(null, cljs.core.chunk_rest.call(null, s__11449__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11451), null)
              }
            }else {
              var c = cljs.core.first.call(null, s__11449__$2);
              return cljs.core.cons.call(null, c, iter__11448.call(null, cljs.core.rest.call(null, s__11449__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3494__auto__.call(null, contents)
  }()], true)
};
weather_canvas.templates.with_label = function with_label(label, type, id, contents) {
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "span", "span", 1017440956), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "form-element"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "label", "label", 1116631654), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "for", "for", 1014005819), id], true), label], true), cljs.core.PersistentVector.fromArray([type, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
  "id", "id", 1013907597), id, new cljs.core.Keyword(null, "name", "name", 1017277949), id], true), contents], true)], true)
};
goog.provide("weather_canvas.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("goog.ui.ac");
goog.require("dommy.utils");
goog.require("observation_data.observation_points");
goog.require("weather_canvas.weather");
goog.require("weather_canvas.templates");
weather_canvas.core.listen = function listen(el, type) {
  var c = cljs.core.async.chan.call(null);
  dommy.core.listen_BANG_.call(null, el, type, function(ev) {
    ev.preventDefault();
    ev.stopPropagation();
    return cljs.core.async.put_BANG_.call(null, c, ev)
  });
  return c
};
weather_canvas.core.init_ui = function init_ui() {
  var submit_form_17193 = dommy.core.append_BANG_.call(null, document.body, weather_canvas.templates.query_form.call(null, 1));
  var submit_channel_17194 = weather_canvas.core.listen.call(null, submit_form_17193, new cljs.core.Keyword(null, "submit", "submit", 4417336202));
  var canvas_17195 = function() {
    var dom17154 = document.createElement("canvas");
    if("weather-canvas") {
      dom17154.setAttribute("id", "weather-canvas")
    }else {
    }
    return dom17154
  }();
  var c__5205__auto___17196 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_17180) {
        var state_val_17181 = state_17180[1];
        if(state_val_17181 === 8) {
          var inst_17160 = state_17180[5];
          var inst_17163 = state_17180[2];
          var inst_17164 = dommy.core.append_BANG_.call(null, document.body, canvas_17195);
          var inst_17165 = inst_17160.call(null, "year-start");
          var inst_17166 = inst_17165 | 0;
          var inst_17167 = inst_17160.call(null, "year-end");
          var inst_17168 = inst_17167 | 0;
          var inst_17169 = inst_17160.call(null, "quantity");
          var inst_17170 = inst_17160.call(null, "order");
          var inst_17171 = cljs.core._EQ_.call(null, "value", inst_17170);
          var inst_17172 = weather_canvas.weather.draw_async_sheet.call(null, canvas_17195, inst_17166, inst_17168, inst_17169, inst_17171);
          var state_17180__$1 = function() {
            var statearr_17182 = state_17180;
            statearr_17182[6] = inst_17172;
            statearr_17182[7] = inst_17164;
            statearr_17182[8] = inst_17163;
            return statearr_17182
          }();
          var statearr_17183_17197 = state_17180__$1;
          statearr_17183_17197[2] = null;
          statearr_17183_17197[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_17181 === 7) {
            var inst_17158 = state_17180[2];
            var inst_17159 = inst_17158.target;
            var inst_17160 = weather_canvas.core.handle_form.call(null, inst_17159);
            var inst_17161 = cljs.core.async.timeout.call(null, 100);
            var state_17180__$1 = function() {
              var statearr_17184 = state_17180;
              statearr_17184[5] = inst_17160;
              return statearr_17184
            }();
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17180__$1, 8, inst_17161)
          }else {
            if(state_val_17181 === 6) {
              var inst_17176 = state_17180[2];
              var state_17180__$1 = state_17180;
              var statearr_17185_17198 = state_17180__$1;
              statearr_17185_17198[2] = inst_17176;
              statearr_17185_17198[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_17181 === 5) {
                var state_17180__$1 = state_17180;
                var statearr_17186_17199 = state_17180__$1;
                statearr_17186_17199[2] = null;
                statearr_17186_17199[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_17181 === 4) {
                  var state_17180__$1 = state_17180;
                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17180__$1, 7, submit_channel_17194)
                }else {
                  if(state_val_17181 === 3) {
                    var inst_17178 = state_17180[2];
                    var state_17180__$1 = state_17180;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17180__$1, inst_17178)
                  }else {
                    if(state_val_17181 === 2) {
                      var state_17180__$1 = state_17180;
                      if(true) {
                        var statearr_17187_17200 = state_17180__$1;
                        statearr_17187_17200[1] = 4
                      }else {
                        var statearr_17188_17201 = state_17180__$1;
                        statearr_17188_17201[1] = 5
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_17181 === 1) {
                        var state_17180__$1 = state_17180;
                        var statearr_17189_17202 = state_17180__$1;
                        statearr_17189_17202[2] = null;
                        statearr_17189_17202[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_17191 = new Array(9);
            statearr_17191[0] = state_machine__5156__auto__;
            statearr_17191[1] = 1;
            return statearr_17191
          };
          var state_machine__5156__auto____1 = function(state_17180) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_17180);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_17180) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_17180)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_17192 = f__5206__auto__.call(null);
      statearr_17192[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___17196;
      return statearr_17192
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  var a = cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, new cljs.core.Keyword(null, "title", "title", 1124275658), observation_data.observation_points.metadata));
  return goog.ui.ac.createSimpleAutoComplete(a, document.getElementById("query-form-1-location"), false)
};
weather_canvas.core.handle_form = function handle_form(form) {
  var id_prefix = dommy.core.attr.call(null, form, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var strip_prefix = weather_canvas.templates.id_stripper.call(null, id_prefix);
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.flatten.call(null, function() {
    var iter__3494__auto__ = function iter__17207(s__17208) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__17208__$1 = s__17208;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__17208__$1);
          if(temp__4092__auto__) {
            var s__17208__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__17208__$2)) {
              var c__3492__auto__ = cljs.core.chunk_first.call(null, s__17208__$2);
              var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
              var b__17210 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
              if(function() {
                var i__17209 = 0;
                while(true) {
                  if(i__17209 < size__3493__auto__) {
                    var el = cljs.core._nth.call(null, c__3492__auto__, i__17209);
                    var id = dommy.core.attr.call(null, el, new cljs.core.Keyword(null, "id", "id", 1013907597));
                    if(!(id == null)) {
                      cljs.core.chunk_append.call(null, b__17210, cljs.core.PersistentVector.fromArray([strip_prefix.call(null, id), dommy.core.value.call(null, el)], true));
                      var G__17211 = i__17209 + 1;
                      i__17209 = G__17211;
                      continue
                    }else {
                      var G__17212 = i__17209 + 1;
                      i__17209 = G__17212;
                      continue
                    }
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17210), iter__17207.call(null, cljs.core.chunk_rest.call(null, s__17208__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17210), null)
              }
            }else {
              var el = cljs.core.first.call(null, s__17208__$2);
              var id = dommy.core.attr.call(null, el, new cljs.core.Keyword(null, "id", "id", 1013907597));
              if(!(id == null)) {
                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([strip_prefix.call(null, id), dommy.core.value.call(null, el)], true), iter__17207.call(null, cljs.core.rest.call(null, s__17208__$2)))
              }else {
                var G__17213 = cljs.core.rest.call(null, s__17208__$2);
                s__17208__$1 = G__17213;
                continue
              }
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3494__auto__.call(null, dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, form).querySelectorAll("input,select")))
  }()))
};
weather_canvas.core.init_ui.call(null);
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__4090__auto__ = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var conn = temp__4090__auto__;
    return clojure.browser.net.transmit.call(null, conn, new cljs.core.Keyword(null, "print", "print", 1120839199), cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result = function() {
    try {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "success", "success", 3441701749), new cljs.core.Keyword(null, "value", "value", 1125876963), [cljs.core.str(eval(block))].join("")], true)
    }catch(e13157) {
      if(e13157 instanceof Error) {
        var e = e13157;
        return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "status", "status", 4416389988), new cljs.core.Keyword(null, "exception", "exception", 2495529921), new cljs.core.Keyword(null, "value", "value", 1125876963), cljs.core.pr_str.call(null, e), new cljs.core.Keyword(null, "stacktrace", "stacktrace", 3069736751), cljs.core.truth_(e.hasOwnProperty("stack")) ? e.stack : "No stacktrace available."], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e13157;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn, new cljs.core.Keyword(null, "error", "error", 1110689146), function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  send_print.cljs$core$IFn$_invoke$arity$2 = send_print__2;
  send_print.cljs$core$IFn$_invoke$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), t, new cljs.core.Keyword(null, "content", "content", 1965434859), data, new cljs.core.Keyword(null, "order", "order", 1119910592), cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)], true))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__4090__auto__ = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var repl_connection = temp__4090__auto__;
    var connection = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection, new cljs.core.Keyword(null, "success", "success", 3441701749), function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", 2953437843), e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 3729280372), function(data) {
      return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "result", "result", 4374444943), data))
    });
    clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "print", "print", 1120839199), function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "print", "print", 1120839199), data))
    });
    clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection, url, clojure.browser.repl.wrap_message.call(null, new cljs.core.Keyword(null, "ready", "ready", 1122290965), "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection = clojure.browser.net.xpc_connection.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "peer_uri", "peer_uri", 1083496577), repl_server_url], true));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection));
  clojure.browser.net.register_service.call(null, repl_connection, new cljs.core.Keyword(null, "evaluate-javascript", "evaluate-javascript", 2953437843), function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection, new cljs.core.Keyword(null, "send-result", "send-result", 3729280372), clojure.browser.repl.evaluate_javascript.call(null, repl_connection, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("modern_cljs.connect");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
clojure.browser.repl.connect.call(null, "http://localhost:9000/repl");
