var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
goog.exportSymbol("cljs.core.set_print_fn_BANG_", cljs.core.set_print_fn_BANG_);
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3941__auto__ = goog.isString(x);
  if(and__3941__auto__) {
    return!(x.charAt(0) === "\ufdd0")
  }else {
    return and__3941__auto__
  }
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3941__auto__ = ty;
    if(cljs.core.truth_(and__3941__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3941__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__9929__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__9929 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9929__delegate.call(this, array, i, idxs)
    };
    G__9929.cljs$lang$maxFixedArity = 2;
    G__9929.cljs$lang$applyTo = function(arglist__9930) {
      var array = cljs.core.first(arglist__9930);
      arglist__9930 = cljs.core.next(arglist__9930);
      var i = cljs.core.first(arglist__9930);
      var idxs = cljs.core.rest(arglist__9930);
      return G__9929__delegate(array, i, idxs)
    };
    G__9929.cljs$core$IFn$_invoke$arity$variadic = G__9929__delegate;
    return G__9929
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__9931__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__9931 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9931__delegate.call(this, array, idx, idx2, idxv)
    };
    G__9931.cljs$lang$maxFixedArity = 3;
    G__9931.cljs$lang$applyTo = function(arglist__9932) {
      var array = cljs.core.first(arglist__9932);
      arglist__9932 = cljs.core.next(arglist__9932);
      var idx = cljs.core.first(arglist__9932);
      arglist__9932 = cljs.core.next(arglist__9932);
      var idx2 = cljs.core.first(arglist__9932);
      var idxv = cljs.core.rest(arglist__9932);
      return G__9931__delegate(array, idx, idx2, idxv)
    };
    G__9931.cljs$core$IFn$_invoke$arity$variadic = G__9931__delegate;
    return G__9931
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3941__auto__ = this$;
      if(and__3941__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3941__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3394__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3943__auto__ = cljs.core._invoke[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._invoke["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._count[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._count["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._empty[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._empty["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._conj[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._nth[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._nth["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._first[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rest[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._next[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3394__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3941__auto__ = o;
      if(and__3941__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3394__auto__ = o == null ? null : o;
      return function() {
        var or__3943__auto__ = cljs.core._lookup[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._lookup["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._key[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._val[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._val["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._peek[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._peek["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._pop[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._meta[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._with_meta[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._with_meta["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3941__auto__ = coll;
      if(and__3941__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3394__auto__ = coll == null ? null : coll;
      return function() {
        var or__3943__auto__ = cljs.core._reduce[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core._reduce["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._equiv[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._equiv["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._hash[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._hash["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._seq[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._rseq[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._rseq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._entry_key[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._entry_key["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._comparator[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._comparator["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3394__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._write[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._write["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3941__auto__ = writer;
    if(and__3941__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3394__auto__ = writer == null ? null : writer;
    return function() {
      var or__3943__auto__ = cljs.core._flush[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._flush["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3941__auto__ = o;
    if(and__3941__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3394__auto__ = o == null ? null : o;
    return function() {
      var or__3943__auto__ = cljs.core._pr_writer[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3941__auto__ = d;
    if(and__3941__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3394__auto__ = d == null ? null : d;
    return function() {
      var or__3943__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._notify_watches[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._add_watch[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = cljs.core._remove_watch[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._as_transient[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._as_transient["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3941__auto__ = tcoll;
    if(and__3941__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3394__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3943__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._compare[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._compare["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._drop_first[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._drop_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_first[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3941__auto__ = coll;
    if(and__3941__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3394__auto__ = coll == null ? null : coll;
    return function() {
      var or__3943__auto__ = cljs.core._chunked_next[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._name[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._name["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._namespace[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._namespace["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
goog.provide("cljs.core.StringBufferWriter");
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
goog.provide("cljs.core.Symbol");
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var h__3215__auto__ = self__._hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_symbol.call(null, sym);
    self__._hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__9934 = null;
  var G__9934__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__9934__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__9934 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9934__2.call(this, self__, coll);
      case 3:
        return G__9934__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__9934
}();
cljs.core.Symbol.prototype.apply = function(self__, args9933) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args9933.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9936 = coll;
      if(G__9936) {
        if(function() {
          var or__3943__auto__ = G__9936.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__9936.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9938 = coll;
      if(G__9938) {
        if(function() {
          var or__3943__auto__ = G__9938.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__9938.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__9940 = coll;
      if(G__9940) {
        if(function() {
          var or__3943__auto__ = G__9940.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__9940.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(!(s == null)) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9942 = coll;
      if(G__9942) {
        if(function() {
          var or__3943__auto__ = G__9942.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__9942.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3943__auto__ = x === y;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__9943__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9944 = y;
            var G__9945 = cljs.core.first.call(null, more);
            var G__9946 = cljs.core.next.call(null, more);
            x = G__9944;
            y = G__9945;
            more = G__9946;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9943 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9943__delegate.call(this, x, y, more)
    };
    G__9943.cljs$lang$maxFixedArity = 2;
    G__9943.cljs$lang$applyTo = function(arglist__9947) {
      var x = cljs.core.first(arglist__9947);
      arglist__9947 = cljs.core.next(arglist__9947);
      var y = cljs.core.first(arglist__9947);
      var more = cljs.core.rest(arglist__9947);
      return G__9943__delegate(x, y, more)
    };
    G__9943.cljs$core$IFn$_invoke$arity$variadic = G__9943__delegate;
    return G__9943
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3941__auto__ = other instanceof Date;
  if(and__3941__auto__) {
    return o.toString() === other.toString()
  }else {
    return and__3941__auto__
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return Math.floor(o) % 2147483647
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
goog.provide("cljs.core.Reduced");
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__9948 = nval;
            var G__9949 = n + 1;
            val = G__9948;
            n = G__9949;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__9950 = nval;
          var G__9951 = n + 1;
          val__$1 = G__9950;
          n = G__9951;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__9952 = nval;
          var G__9953 = n + 1;
          val__$1 = G__9952;
          n = G__9953;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__9954 = nval;
            var G__9955 = n + 1;
            val = G__9954;
            n = G__9955;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__9956 = nval;
          var G__9957 = n + 1;
          val__$1 = G__9956;
          n = G__9957;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__9958 = nval;
          var G__9959 = n + 1;
          val__$1 = G__9958;
          n = G__9959;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9961 = x;
  if(G__9961) {
    if(function() {
      var or__3943__auto__ = G__9961.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__9961.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__9961.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__9961)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__9961)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9963 = x;
  if(G__9963) {
    if(function() {
      var or__3943__auto__ = G__9963.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__9963.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__9963.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9963)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9963)
  }
};
goog.provide("cljs.core.IndexedSeq");
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var c = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c > 0) {
    return new cljs.core.RSeq(coll, c - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function(col, f) {
  return cljs.core.array_reduce.call(null, col, f)
};
cljs.core._reduce["array"] = function(col, f, start) {
  return cljs.core.array_reduce.call(null, col, f, start)
};
goog.provide("cljs.core.RSeq");
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, col)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, col)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__9964 = sn;
      s = G__9964;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__9965__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__9966 = conj.call(null, coll, x);
          var G__9967 = cljs.core.first.call(null, xs);
          var G__9968 = cljs.core.next.call(null, xs);
          coll = G__9966;
          x = G__9967;
          xs = G__9968;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__9965 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9965__delegate.call(this, coll, x, xs)
    };
    G__9965.cljs$lang$maxFixedArity = 2;
    G__9965.cljs$lang$applyTo = function(arglist__9969) {
      var coll = cljs.core.first(arglist__9969);
      arglist__9969 = cljs.core.next(arglist__9969);
      var x = cljs.core.first(arglist__9969);
      var xs = cljs.core.rest(arglist__9969);
      return G__9965__delegate(coll, x, xs)
    };
    G__9965.cljs$core$IFn$_invoke$arity$variadic = G__9965__delegate;
    return G__9965
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__9970 = cljs.core.next.call(null, s);
      var G__9971 = acc + 1;
      s = G__9970;
      acc = G__9971;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__9973 = coll;
      if(G__9973) {
        if(function() {
          var or__3943__auto__ = G__9973.cljs$lang$protocol_mask$partition0$ & 2;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__9973.cljs$core$ICounted$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return coll.length
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__9974 = cljs.core.next.call(null, coll);
              var G__9975 = n - 1;
              coll = G__9974;
              n = G__9975;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__9976 = cljs.core.next.call(null, coll);
              var G__9977 = n - 1;
              var G__9978 = not_found;
              coll = G__9976;
              n = G__9977;
              not_found = G__9978;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__9983 = coll;
        if(G__9983) {
          if(function() {
            var or__3943__auto__ = G__9983.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__9983.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__9984 = coll;
                  if(G__9984) {
                    if(function() {
                      var or__3943__auto__ = G__9984.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__9984.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__9984.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9984)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9984)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__9985 = coll;
        if(G__9985) {
          if(function() {
            var or__3943__auto__ = G__9985.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__9985.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, coll)) {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__9986 = coll;
                  if(G__9986) {
                    if(function() {
                      var or__3943__auto__ = G__9986.cljs$lang$protocol_mask$partition0$ & 64;
                      if(or__3943__auto__) {
                        return or__3943__auto__
                      }else {
                        return G__9986.cljs$core$ISeq$
                      }
                    }()) {
                      return true
                    }else {
                      if(!G__9986.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9986)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9986)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__9989 = o;
        if(G__9989) {
          if(function() {
            var or__3943__auto__ = G__9989.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__9989.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__9990 = o;
        if(G__9990) {
          if(function() {
            var or__3943__auto__ = G__9990.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__9990.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(cljs.core.string_QMARK_.call(null, o)) {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.type_satisfies_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__9991__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__9992 = ret;
          var G__9993 = cljs.core.first.call(null, kvs);
          var G__9994 = cljs.core.second.call(null, kvs);
          var G__9995 = cljs.core.nnext.call(null, kvs);
          coll = G__9992;
          k = G__9993;
          v = G__9994;
          kvs = G__9995;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__9991 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9991__delegate.call(this, coll, k, v, kvs)
    };
    G__9991.cljs$lang$maxFixedArity = 3;
    G__9991.cljs$lang$applyTo = function(arglist__9996) {
      var coll = cljs.core.first(arglist__9996);
      arglist__9996 = cljs.core.next(arglist__9996);
      var k = cljs.core.first(arglist__9996);
      arglist__9996 = cljs.core.next(arglist__9996);
      var v = cljs.core.first(arglist__9996);
      var kvs = cljs.core.rest(arglist__9996);
      return G__9991__delegate(coll, k, v, kvs)
    };
    G__9991.cljs$core$IFn$_invoke$arity$variadic = G__9991__delegate;
    return G__9991
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__9997__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__9998 = ret;
          var G__9999 = cljs.core.first.call(null, ks);
          var G__10000 = cljs.core.next.call(null, ks);
          coll = G__9998;
          k = G__9999;
          ks = G__10000;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__9997 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9997__delegate.call(this, coll, k, ks)
    };
    G__9997.cljs$lang$maxFixedArity = 2;
    G__9997.cljs$lang$applyTo = function(arglist__10001) {
      var coll = cljs.core.first(arglist__10001);
      arglist__10001 = cljs.core.next(arglist__10001);
      var k = cljs.core.first(arglist__10001);
      var ks = cljs.core.rest(arglist__10001);
      return G__9997__delegate(coll, k, ks)
    };
    G__9997.cljs$core$IFn$_invoke$arity$variadic = G__9997__delegate;
    return G__9997
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3943__auto__ = goog.isFunction(f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__10003 = f;
    if(G__10003) {
      if(cljs.core.truth_(function() {
        var or__3943__auto____$1 = null;
        if(cljs.core.truth_(or__3943__auto____$1)) {
          return or__3943__auto____$1
        }else {
          return G__10003.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__10003.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__10003)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.Fn, G__10003)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(function() {
    var and__3941__auto__ = cljs.core.fn_QMARK_.call(null, o);
    if(and__3941__auto__) {
      return!function() {
        var G__10009 = o;
        if(G__10009) {
          if(function() {
            var or__3943__auto__ = G__10009.cljs$lang$protocol_mask$partition0$ & 262144;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__10009.cljs$core$IWithMeta$
            }
          }()) {
            return true
          }else {
            if(!G__10009.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__10009)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__10009)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t10010 !== "undefined") {
      }else {
        goog.provide("cljs.core.t10010");
        cljs.core.t10010 = function(meta, o, with_meta, meta10011) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta10011 = meta10011;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t10010.cljs$lang$type = true;
        cljs.core.t10010.cljs$lang$ctorStr = "cljs.core/t10010";
        cljs.core.t10010.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
          return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/t10010")
        };
        cljs.core.t10010.prototype.call = function() {
          var G__10014__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__10014 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__10014__delegate.call(this, self__, args)
          };
          G__10014.cljs$lang$maxFixedArity = 1;
          G__10014.cljs$lang$applyTo = function(arglist__10015) {
            var self__ = cljs.core.first(arglist__10015);
            var args = cljs.core.rest(arglist__10015);
            return G__10014__delegate(self__, args)
          };
          G__10014.cljs$core$IFn$_invoke$arity$variadic = G__10014__delegate;
          return G__10014
        }();
        cljs.core.t10010.prototype.apply = function(self__, args10013) {
          var self__ = this;
          return self__.call.apply(self__, [self__].concat(args10013.slice()))
        };
        cljs.core.t10010.prototype.cljs$core$Fn$ = true;
        cljs.core.t10010.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10012) {
          var self__ = this;
          return self__.meta10011
        };
        cljs.core.t10010.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10012, meta10011__$1) {
          var self__ = this;
          return new cljs.core.t10010(self__.meta, self__.o, self__.with_meta, meta10011__$1)
        };
        cljs.core.__GT_t10010 = function __GT_t10010(meta__$1, o__$1, with_meta__$1, meta10011) {
          return new cljs.core.t10010(meta__$1, o__$1, with_meta__$1, meta10011)
        }
      }
      return new cljs.core.t10010(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__10017 = o;
    if(G__10017) {
      if(function() {
        var or__3943__auto__ = G__10017.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10017.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__10017.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10017)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10017)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__10018__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__10019 = ret;
          var G__10020 = cljs.core.first.call(null, ks);
          var G__10021 = cljs.core.next.call(null, ks);
          coll = G__10019;
          k = G__10020;
          ks = G__10021;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__10018 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10018__delegate.call(this, coll, k, ks)
    };
    G__10018.cljs$lang$maxFixedArity = 2;
    G__10018.cljs$lang$applyTo = function(arglist__10022) {
      var coll = cljs.core.first(arglist__10022);
      arglist__10022 = cljs.core.next(arglist__10022);
      var k = cljs.core.first(arglist__10022);
      var ks = cljs.core.rest(arglist__10022);
      return G__10018__delegate(coll, k, ks)
    };
    G__10018.cljs$core$IFn$_invoke$arity$variadic = G__10018__delegate;
    return G__10018
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3941__auto__ = goog.isString(o);
      if(and__3941__auto__) {
        return check_cache
      }else {
        return and__3941__auto__
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash.cljs$core$IFn$_invoke$arity$1 = hash__1;
  hash.cljs$core$IFn$_invoke$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  var or__3943__auto__ = coll == null;
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
  }
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10024 = x;
    if(G__10024) {
      if(function() {
        var or__3943__auto__ = G__10024.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10024.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__10024.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__10024)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__10024)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10026 = x;
    if(G__10026) {
      if(function() {
        var or__3943__auto__ = G__10026.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10026.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__10026.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__10026)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__10026)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10028 = x;
  if(G__10028) {
    if(function() {
      var or__3943__auto__ = G__10028.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10028.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__10028.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__10028)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__10028)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10030 = x;
  if(G__10030) {
    if(function() {
      var or__3943__auto__ = G__10030.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10030.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__10030.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__10030)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__10030)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10032 = x;
  if(G__10032) {
    if(function() {
      var or__3943__auto__ = G__10032.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10032.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__10032.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10032)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__10032)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__10034 = x;
    if(G__10034) {
      if(function() {
        var or__3943__auto__ = G__10034.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10034.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__10034.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__10034)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__10034)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10036 = x;
  if(G__10036) {
    if(function() {
      var or__3943__auto__ = G__10036.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10036.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__10036.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__10036)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__10036)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10038 = x;
  if(G__10038) {
    if(function() {
      var or__3943__auto__ = G__10038.cljs$lang$protocol_mask$partition1$ & 512;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10038.cljs$core$IChunkedSeq$
      }
    }()) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__10039__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__10039 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10039__delegate.call(this, keyvals)
    };
    G__10039.cljs$lang$maxFixedArity = 0;
    G__10039.cljs$lang$applyTo = function(arglist__10040) {
      var keyvals = cljs.core.seq(arglist__10040);
      return G__10039__delegate(keyvals)
    };
    G__10039.cljs$core$IFn$_invoke$arity$variadic = G__10039__delegate;
    return G__10039
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__10041 = i__$1 + 1;
      var G__10042 = j__$1 + 1;
      var G__10043 = len__$1 - 1;
      i__$1 = G__10041;
      j__$1 = G__10042;
      len__$1 = G__10043;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__10044 = i__$1 - 1;
      var G__10045 = j__$1 - 1;
      var G__10046 = len__$1 - 1;
      i__$1 = G__10044;
      j__$1 = G__10045;
      len__$1 = G__10046;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__10048 = s;
    if(G__10048) {
      if(function() {
        var or__3943__auto__ = G__10048.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10048.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__10048.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10048)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__10048)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10050 = s;
  if(G__10050) {
    if(function() {
      var or__3943__auto__ = G__10050.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10050.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__10050.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10050)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__10050)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3943__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var G__10052 = f;
    if(G__10052) {
      if(function() {
        var or__3943__auto____$1 = G__10052.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          return G__10052.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__10052.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__10052)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__10052)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3941__auto__ = typeof n === "number";
  if(and__3941__auto__) {
    var and__3941__auto____$1 = !isNaN(n);
    if(and__3941__auto____$1) {
      var and__3941__auto____$2 = !(n === Infinity);
      if(and__3941__auto____$2) {
        return parseFloat(n) === parseInt(n, 10)
      }else {
        return and__3941__auto____$2
      }
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(function() {
    var and__3941__auto__ = !(coll == null);
    if(and__3941__auto__) {
      var and__3941__auto____$1 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3941__auto____$1) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3941__auto____$1
      }
    }else {
      return and__3941__auto__
    }
  }()) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__10053__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__10054 = cljs.core.conj.call(null, s, x__$1);
              var G__10055 = etc;
              s = G__10054;
              xs = G__10055;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__10053 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10053__delegate.call(this, x, y, more)
    };
    G__10053.cljs$lang$maxFixedArity = 2;
    G__10053.cljs$lang$applyTo = function(arglist__10056) {
      var x = cljs.core.first(arglist__10056);
      arglist__10056 = cljs.core.next(arglist__10056);
      var y = cljs.core.first(arglist__10056);
      var more = cljs.core.rest(arglist__10056);
      return G__10053__delegate(x, y, more)
    };
    G__10053.cljs$core$IFn$_invoke$arity$variadic = G__10053__delegate;
    return G__10053
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__10058 = x;
            if(G__10058) {
              if(function() {
                var or__3943__auto__ = G__10058.cljs$lang$protocol_mask$partition1$ & 2048;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return G__10058.cljs$core$IComparable$
                }
              }()) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3941__auto__ = d === 0;
        if(and__3941__auto__) {
          return n + 1 < len
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__10059 = xs;
        var G__10060 = ys;
        var G__10061 = len;
        var G__10062 = n + 1;
        xs = G__10059;
        ys = G__10060;
        len = G__10061;
        n = G__10062;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__10063 = nval;
          var G__10064 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__10063;
          coll__$1 = G__10064;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__10067 = coll;
      if(G__10067) {
        if(function() {
          var or__3943__auto__ = G__10067.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__10067.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__10068 = coll;
      if(G__10068) {
        if(function() {
          var or__3943__auto__ = G__10068.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__10068.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(cljs.core.string_QMARK_.call(null, coll)) {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.type_satisfies_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__10069__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__10069 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10069__delegate.call(this, x, y, more)
    };
    G__10069.cljs$lang$maxFixedArity = 2;
    G__10069.cljs$lang$applyTo = function(arglist__10070) {
      var x = cljs.core.first(arglist__10070);
      arglist__10070 = cljs.core.next(arglist__10070);
      var y = cljs.core.first(arglist__10070);
      var more = cljs.core.rest(arglist__10070);
      return G__10069__delegate(x, y, more)
    };
    G__10069.cljs$core$IFn$_invoke$arity$variadic = G__10069__delegate;
    return G__10069
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__10071__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__10071 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10071__delegate.call(this, x, y, more)
    };
    G__10071.cljs$lang$maxFixedArity = 2;
    G__10071.cljs$lang$applyTo = function(arglist__10072) {
      var x = cljs.core.first(arglist__10072);
      arglist__10072 = cljs.core.next(arglist__10072);
      var y = cljs.core.first(arglist__10072);
      var more = cljs.core.rest(arglist__10072);
      return G__10071__delegate(x, y, more)
    };
    G__10071.cljs$core$IFn$_invoke$arity$variadic = G__10071__delegate;
    return G__10071
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__10073__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__10073 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10073__delegate.call(this, x, y, more)
    };
    G__10073.cljs$lang$maxFixedArity = 2;
    G__10073.cljs$lang$applyTo = function(arglist__10074) {
      var x = cljs.core.first(arglist__10074);
      arglist__10074 = cljs.core.next(arglist__10074);
      var y = cljs.core.first(arglist__10074);
      var more = cljs.core.rest(arglist__10074);
      return G__10073__delegate(x, y, more)
    };
    G__10073.cljs$core$IFn$_invoke$arity$variadic = G__10073__delegate;
    return G__10073
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__10075__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__10075 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10075__delegate.call(this, x, y, more)
    };
    G__10075.cljs$lang$maxFixedArity = 2;
    G__10075.cljs$lang$applyTo = function(arglist__10076) {
      var x = cljs.core.first(arglist__10076);
      arglist__10076 = cljs.core.next(arglist__10076);
      var y = cljs.core.first(arglist__10076);
      var more = cljs.core.rest(arglist__10076);
      return G__10075__delegate(x, y, more)
    };
    G__10075.cljs$core$IFn$_invoke$arity$variadic = G__10075__delegate;
    return G__10075
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__10077__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__10078 = y;
            var G__10079 = cljs.core.first.call(null, more);
            var G__10080 = cljs.core.next.call(null, more);
            x = G__10078;
            y = G__10079;
            more = G__10080;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10077 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10077__delegate.call(this, x, y, more)
    };
    G__10077.cljs$lang$maxFixedArity = 2;
    G__10077.cljs$lang$applyTo = function(arglist__10081) {
      var x = cljs.core.first(arglist__10081);
      arglist__10081 = cljs.core.next(arglist__10081);
      var y = cljs.core.first(arglist__10081);
      var more = cljs.core.rest(arglist__10081);
      return G__10077__delegate(x, y, more)
    };
    G__10077.cljs$core$IFn$_invoke$arity$variadic = G__10077__delegate;
    return G__10077
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__10082__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__10083 = y;
            var G__10084 = cljs.core.first.call(null, more);
            var G__10085 = cljs.core.next.call(null, more);
            x = G__10083;
            y = G__10084;
            more = G__10085;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10082 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10082__delegate.call(this, x, y, more)
    };
    G__10082.cljs$lang$maxFixedArity = 2;
    G__10082.cljs$lang$applyTo = function(arglist__10086) {
      var x = cljs.core.first(arglist__10086);
      arglist__10086 = cljs.core.next(arglist__10086);
      var y = cljs.core.first(arglist__10086);
      var more = cljs.core.rest(arglist__10086);
      return G__10082__delegate(x, y, more)
    };
    G__10082.cljs$core$IFn$_invoke$arity$variadic = G__10082__delegate;
    return G__10082
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__10087__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__10088 = y;
            var G__10089 = cljs.core.first.call(null, more);
            var G__10090 = cljs.core.next.call(null, more);
            x = G__10088;
            y = G__10089;
            more = G__10090;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10087 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10087__delegate.call(this, x, y, more)
    };
    G__10087.cljs$lang$maxFixedArity = 2;
    G__10087.cljs$lang$applyTo = function(arglist__10091) {
      var x = cljs.core.first(arglist__10091);
      arglist__10091 = cljs.core.next(arglist__10091);
      var y = cljs.core.first(arglist__10091);
      var more = cljs.core.rest(arglist__10091);
      return G__10087__delegate(x, y, more)
    };
    G__10087.cljs$core$IFn$_invoke$arity$variadic = G__10087__delegate;
    return G__10087
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__10092__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__10093 = y;
            var G__10094 = cljs.core.first.call(null, more);
            var G__10095 = cljs.core.next.call(null, more);
            x = G__10093;
            y = G__10094;
            more = G__10095;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10092 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10092__delegate.call(this, x, y, more)
    };
    G__10092.cljs$lang$maxFixedArity = 2;
    G__10092.cljs$lang$applyTo = function(arglist__10096) {
      var x = cljs.core.first(arglist__10096);
      arglist__10096 = cljs.core.next(arglist__10096);
      var y = cljs.core.first(arglist__10096);
      var more = cljs.core.rest(arglist__10096);
      return G__10092__delegate(x, y, more)
    };
    G__10092.cljs$core$IFn$_invoke$arity$variadic = G__10092__delegate;
    return G__10092
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3116__auto__ = x;
    var y__3117__auto__ = y;
    return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
  };
  var max__3 = function() {
    var G__10097__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3116__auto__ = x;
        var y__3117__auto__ = y;
        return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
      }(), more)
    };
    var G__10097 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10097__delegate.call(this, x, y, more)
    };
    G__10097.cljs$lang$maxFixedArity = 2;
    G__10097.cljs$lang$applyTo = function(arglist__10098) {
      var x = cljs.core.first(arglist__10098);
      arglist__10098 = cljs.core.next(arglist__10098);
      var y = cljs.core.first(arglist__10098);
      var more = cljs.core.rest(arglist__10098);
      return G__10097__delegate(x, y, more)
    };
    G__10097.cljs$core$IFn$_invoke$arity$variadic = G__10097__delegate;
    return G__10097
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3123__auto__ = x;
    var y__3124__auto__ = y;
    return x__3123__auto__ < y__3124__auto__ ? x__3123__auto__ : y__3124__auto__
  };
  var min__3 = function() {
    var G__10099__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3123__auto__ = x;
        var y__3124__auto__ = y;
        return x__3123__auto__ < y__3124__auto__ ? x__3123__auto__ : y__3124__auto__
      }(), more)
    };
    var G__10099 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10099__delegate.call(this, x, y, more)
    };
    G__10099.cljs$lang$maxFixedArity = 2;
    G__10099.cljs$lang$applyTo = function(arglist__10100) {
      var x = cljs.core.first(arglist__10100);
      arglist__10100 = cljs.core.next(arglist__10100);
      var y = cljs.core.first(arglist__10100);
      var more = cljs.core.rest(arglist__10100);
      return G__10099__delegate(x, y, more)
    };
    G__10099.cljs$core$IFn$_invoke$arity$variadic = G__10099__delegate;
    return G__10099
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(function() {
      var and__3941__auto__ = cljs.core.string_QMARK_.call(null, x);
      if(and__3941__auto__) {
        return x.length === 1
      }else {
        return and__3941__auto__
      }
    }()) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__10101__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__10101 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10101__delegate.call(this, x, y, more)
    };
    G__10101.cljs$lang$maxFixedArity = 2;
    G__10101.cljs$lang$applyTo = function(arglist__10102) {
      var x = cljs.core.first(arglist__10102);
      arglist__10102 = cljs.core.next(arglist__10102);
      var y = cljs.core.first(arglist__10102);
      var more = cljs.core.rest(arglist__10102);
      return G__10101__delegate(x, y, more)
    };
    G__10101.cljs$core$IFn$_invoke$arity$variadic = G__10101__delegate;
    return G__10101
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__10103__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__10103 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10103__delegate.call(this, x, y, more)
    };
    G__10103.cljs$lang$maxFixedArity = 2;
    G__10103.cljs$lang$applyTo = function(arglist__10104) {
      var x = cljs.core.first(arglist__10104);
      arglist__10104 = cljs.core.next(arglist__10104);
      var y = cljs.core.first(arglist__10104);
      var more = cljs.core.rest(arglist__10104);
      return G__10103__delegate(x, y, more)
    };
    G__10103.cljs$core$IFn$_invoke$arity$variadic = G__10103__delegate;
    return G__10103
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__10105__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__10105 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10105__delegate.call(this, x, y, more)
    };
    G__10105.cljs$lang$maxFixedArity = 2;
    G__10105.cljs$lang$applyTo = function(arglist__10106) {
      var x = cljs.core.first(arglist__10106);
      arglist__10106 = cljs.core.next(arglist__10106);
      var y = cljs.core.first(arglist__10106);
      var more = cljs.core.rest(arglist__10106);
      return G__10105__delegate(x, y, more)
    };
    G__10105.cljs$core$IFn$_invoke$arity$variadic = G__10105__delegate;
    return G__10105
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__10107__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__10107 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10107__delegate.call(this, x, y, more)
    };
    G__10107.cljs$lang$maxFixedArity = 2;
    G__10107.cljs$lang$applyTo = function(arglist__10108) {
      var x = cljs.core.first(arglist__10108);
      arglist__10108 = cljs.core.next(arglist__10108);
      var y = cljs.core.first(arglist__10108);
      var more = cljs.core.rest(arglist__10108);
      return G__10107__delegate(x, y, more)
    };
    G__10107.cljs$core$IFn$_invoke$arity$variadic = G__10107__delegate;
    return G__10107
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__10109__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__10109 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10109__delegate.call(this, x, y, more)
    };
    G__10109.cljs$lang$maxFixedArity = 2;
    G__10109.cljs$lang$applyTo = function(arglist__10110) {
      var x = cljs.core.first(arglist__10110);
      arglist__10110 = cljs.core.next(arglist__10110);
      var y = cljs.core.first(arglist__10110);
      var more = cljs.core.rest(arglist__10110);
      return G__10109__delegate(x, y, more)
    };
    G__10109.cljs$core$IFn$_invoke$arity$variadic = G__10109__delegate;
    return G__10109
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__10111__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__10111 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10111__delegate.call(this, x, y, more)
    };
    G__10111.cljs$lang$maxFixedArity = 2;
    G__10111.cljs$lang$applyTo = function(arglist__10112) {
      var x = cljs.core.first(arglist__10112);
      arglist__10112 = cljs.core.next(arglist__10112);
      var y = cljs.core.first(arglist__10112);
      var more = cljs.core.rest(arglist__10112);
      return G__10111__delegate(x, y, more)
    };
    G__10111.cljs$core$IFn$_invoke$arity$variadic = G__10111__delegate;
    return G__10111
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__10113__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__10113 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10113__delegate.call(this, x, y, more)
    };
    G__10113.cljs$lang$maxFixedArity = 2;
    G__10113.cljs$lang$applyTo = function(arglist__10114) {
      var x = cljs.core.first(arglist__10114);
      arglist__10114 = cljs.core.next(arglist__10114);
      var y = cljs.core.first(arglist__10114);
      var more = cljs.core.rest(arglist__10114);
      return G__10113__delegate(x, y, more)
    };
    G__10113.cljs$core$IFn$_invoke$arity$variadic = G__10113__delegate;
    return G__10113
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__10115__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__10116 = y;
            var G__10117 = cljs.core.first.call(null, more);
            var G__10118 = cljs.core.next.call(null, more);
            x = G__10116;
            y = G__10117;
            more = G__10118;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__10115 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10115__delegate.call(this, x, y, more)
    };
    G__10115.cljs$lang$maxFixedArity = 2;
    G__10115.cljs$lang$applyTo = function(arglist__10119) {
      var x = cljs.core.first(arglist__10119);
      arglist__10119 = cljs.core.next(arglist__10119);
      var y = cljs.core.first(arglist__10119);
      var more = cljs.core.rest(arglist__10119);
      return G__10115__delegate(x, y, more)
    };
    G__10115.cljs$core$IFn$_invoke$arity$variadic = G__10115__delegate;
    return G__10115
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = xs;
      if(and__3941__auto__) {
        return n__$1 > 0
      }else {
        return and__3941__auto__
      }
    }())) {
      var G__10120 = n__$1 - 1;
      var G__10121 = cljs.core.next.call(null, xs);
      n__$1 = G__10120;
      xs = G__10121;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__10122__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__10123 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__10124 = cljs.core.next.call(null, more);
            sb = G__10123;
            more = G__10124;
            continue
          }else {
            return sb.toString()
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__10122 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10122__delegate.call(this, x, ys)
    };
    G__10122.cljs$lang$maxFixedArity = 1;
    G__10122.cljs$lang$applyTo = function(arglist__10125) {
      var x = cljs.core.first(arglist__10125);
      var ys = cljs.core.rest(arglist__10125);
      return G__10122__delegate(x, ys)
    };
    G__10122.cljs$core$IFn$_invoke$arity$variadic = G__10122__delegate;
    return G__10122
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__10126) {
    var fmt = cljs.core.first(arglist__10126);
    var args = cljs.core.rest(arglist__10126);
    return format__delegate(fmt, args)
  };
  format.cljs$core$IFn$_invoke$arity$variadic = format__delegate;
  return format
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__10127 = cljs.core.next.call(null, xs);
            var G__10128 = cljs.core.next.call(null, ys);
            xs = G__10127;
            ys = G__10128;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__10129_SHARP_, p2__10130_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__10129_SHARP_, cljs.core.hash.call(null, p2__10130_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__10131 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__10132 = cljs.core.next.call(null, s);
      h = G__10131;
      s = G__10132;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__10133 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__10134 = cljs.core.next.call(null, s__$1);
      h = G__10133;
      s__$1 = G__10134;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__10141_10147 = cljs.core.seq.call(null, fn_map);
  var chunk__10142_10148 = null;
  var count__10143_10149 = 0;
  var i__10144_10150 = 0;
  while(true) {
    if(i__10144_10150 < count__10143_10149) {
      var vec__10145_10151 = cljs.core._nth.call(null, chunk__10142_10148, i__10144_10150);
      var key_name_10152 = cljs.core.nth.call(null, vec__10145_10151, 0, null);
      var f_10153 = cljs.core.nth.call(null, vec__10145_10151, 1, null);
      var str_name_10154 = cljs.core.name.call(null, key_name_10152);
      obj[str_name_10154] = f_10153;
      var G__10155 = seq__10141_10147;
      var G__10156 = chunk__10142_10148;
      var G__10157 = count__10143_10149;
      var G__10158 = i__10144_10150 + 1;
      seq__10141_10147 = G__10155;
      chunk__10142_10148 = G__10156;
      count__10143_10149 = G__10157;
      i__10144_10150 = G__10158;
      continue
    }else {
      var temp__4092__auto___10159 = cljs.core.seq.call(null, seq__10141_10147);
      if(temp__4092__auto___10159) {
        var seq__10141_10160__$1 = temp__4092__auto___10159;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__10141_10160__$1)) {
          var c__3525__auto___10161 = cljs.core.chunk_first.call(null, seq__10141_10160__$1);
          var G__10162 = cljs.core.chunk_rest.call(null, seq__10141_10160__$1);
          var G__10163 = c__3525__auto___10161;
          var G__10164 = cljs.core.count.call(null, c__3525__auto___10161);
          var G__10165 = 0;
          seq__10141_10147 = G__10162;
          chunk__10142_10148 = G__10163;
          count__10143_10149 = G__10164;
          i__10144_10150 = G__10165;
          continue
        }else {
          var vec__10146_10166 = cljs.core.first.call(null, seq__10141_10160__$1);
          var key_name_10167 = cljs.core.nth.call(null, vec__10146_10166, 0, null);
          var f_10168 = cljs.core.nth.call(null, vec__10146_10166, 1, null);
          var str_name_10169 = cljs.core.name.call(null, key_name_10167);
          obj[str_name_10169] = f_10168;
          var G__10170 = cljs.core.next.call(null, seq__10141_10160__$1);
          var G__10171 = null;
          var G__10172 = 0;
          var G__10173 = 0;
          seq__10141_10147 = G__10170;
          chunk__10142_10148 = G__10171;
          count__10143_10149 = G__10172;
          i__10144_10150 = G__10173;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
goog.provide("cljs.core.List");
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, coll, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
goog.provide("cljs.core.EmptyList");
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__10175 = coll;
  if(G__10175) {
    if(function() {
      var or__3943__auto__ = G__10175.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10175.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__10175.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__10175)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__10175)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__10176 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__10176;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__10177 = i - 1;
        var G__10178 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__10177;
        r = G__10178;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__10179) {
    var xs = cljs.core.seq(arglist__10179);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
goog.provide("cljs.core.Cons");
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.Cons(null, o, coll, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3943__auto__ = coll == null;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var G__10181 = coll;
      if(G__10181) {
        if(function() {
          var or__3943__auto____$1 = G__10181.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            return G__10181.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__10183 = x;
  if(G__10183) {
    if(function() {
      var or__3943__auto__ = G__10183.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return G__10183.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__10183.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__10183)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__10183)
  }
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
goog.provide("cljs.core.Keyword");
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10187 = null;
  var G__10187__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__10185 = coll;
        if(G__10185) {
          if(function() {
            var or__3943__auto__ = G__10185.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__10185.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__10185.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10185)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10185)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, null)
      }else {
        return null
      }
    }
  };
  var G__10187__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    if(coll == null) {
      return not_found
    }else {
      if(function() {
        var G__10186 = coll;
        if(G__10186) {
          if(function() {
            var or__3943__auto__ = G__10186.cljs$lang$protocol_mask$partition0$ & 256;
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return G__10186.cljs$core$ILookup$
            }
          }()) {
            return true
          }else {
            if(!G__10186.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10186)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10186)
        }
      }()) {
        return cljs.core._lookup.call(null, coll, kw, not_found)
      }else {
        return null
      }
    }
  };
  G__10187 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10187__2.call(this, self__, coll);
      case 3:
        return G__10187__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10187
}();
cljs.core.Keyword.prototype.apply = function(self__, args10184) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10184.slice()))
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(function() {
      var and__3941__auto__ = x instanceof cljs.core.Keyword;
      if(and__3941__auto__) {
        return y instanceof cljs.core.Keyword
      }else {
        return and__3941__auto__
      }
    }()) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return new cljs.core.Keyword(null, name, name, null)
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, cljs.core.name.call(null, name), cljs.core.name.call(null, name), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.Keyword(null, name, name, null)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x = lazy_seq.x;
  if(lazy_seq.realized) {
    return x
  }else {
    lazy_seq.x = x.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
goog.provide("cljs.core.LazySeq");
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.LazySeq(meta__$1, self__.realized, self__.x, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, realized, x, __hash) {
  return new cljs.core.LazySeq(meta, realized, x, __hash)
};
goog.provide("cljs.core.ChunkBuffer");
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
goog.provide("cljs.core.ArrayChunk");
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = i >= 0;
    if(and__3941__auto__) {
      return i < self__.end - self__.off
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
goog.provide("cljs.core.ChunkedCons");
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__10189 = s;
    if(G__10189) {
      if(function() {
        var or__3943__auto__ = G__10189.cljs$lang$protocol_mask$partition1$ & 1024;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10189.cljs$core$IChunkedNext$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__10190 = cljs.core.next.call(null, s__$1);
      s__$1 = G__10190;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_10191 = 0;
  var xs_10192 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_10192) {
      ret[i_10191] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_10192));
      var G__10193 = i_10191 + 1;
      var G__10194 = cljs.core.next.call(null, xs_10192);
      i_10191 = G__10193;
      xs_10192 = G__10194;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10195 = i + 1;
          var G__10196 = cljs.core.next.call(null, s__$1);
          i = G__10195;
          s__$1 = G__10196;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___10197 = size;
      var i_10198 = 0;
      while(true) {
        if(i_10198 < n__3572__auto___10197) {
          a[i_10198] = init_val_or_seq;
          var G__10199 = i_10198 + 1;
          i_10198 = G__10199;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10200 = i + 1;
          var G__10201 = cljs.core.next.call(null, s__$1);
          i = G__10200;
          s__$1 = G__10201;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___10202 = size;
      var i_10203 = 0;
      while(true) {
        if(i_10203 < n__3572__auto___10202) {
          a[i_10203] = init_val_or_seq;
          var G__10204 = i_10203 + 1;
          i_10203 = G__10204;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10205 = i + 1;
          var G__10206 = cljs.core.next.call(null, s__$1);
          i = G__10205;
          s__$1 = G__10206;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___10207 = size;
      var i_10208 = 0;
      while(true) {
        if(i_10208 < n__3572__auto___10207) {
          a[i_10208] = init_val_or_seq;
          var G__10209 = i_10208 + 1;
          i_10208 = G__10209;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = s__$1;
          if(and__3941__auto__) {
            return i < size
          }else {
            return and__3941__auto__
          }
        }())) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__10210 = i + 1;
          var G__10211 = cljs.core.next.call(null, s__$1);
          i = G__10210;
          s__$1 = G__10211;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3572__auto___10212 = size;
      var i_10213 = 0;
      while(true) {
        if(i_10213 < n__3572__auto___10212) {
          a[i_10213] = init_val_or_seq;
          var G__10214 = i_10213 + 1;
          i_10213 = G__10214;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = i > 0;
        if(and__3941__auto__) {
          return cljs.core.seq.call(null, s__$1)
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__10215 = cljs.core.next.call(null, s__$1);
        var G__10216 = i - 1;
        var G__10217 = sum + 1;
        s__$1 = G__10215;
        i = G__10216;
        sum = G__10217;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__10218__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__10218 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10218__delegate.call(this, x, y, zs)
    };
    G__10218.cljs$lang$maxFixedArity = 2;
    G__10218.cljs$lang$applyTo = function(arglist__10219) {
      var x = cljs.core.first(arglist__10219);
      arglist__10219 = cljs.core.next(arglist__10219);
      var y = cljs.core.first(arglist__10219);
      var zs = cljs.core.rest(arglist__10219);
      return G__10218__delegate(x, y, zs)
    };
    G__10218.cljs$core$IFn$_invoke$arity$variadic = G__10218__delegate;
    return G__10218
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__10220__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__10220 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10220__delegate.call(this, a, b, c, d, more)
    };
    G__10220.cljs$lang$maxFixedArity = 4;
    G__10220.cljs$lang$applyTo = function(arglist__10221) {
      var a = cljs.core.first(arglist__10221);
      arglist__10221 = cljs.core.next(arglist__10221);
      var b = cljs.core.first(arglist__10221);
      arglist__10221 = cljs.core.next(arglist__10221);
      var c = cljs.core.first(arglist__10221);
      arglist__10221 = cljs.core.next(arglist__10221);
      var d = cljs.core.first(arglist__10221);
      var more = cljs.core.rest(arglist__10221);
      return G__10220__delegate(a, b, c, d, more)
    };
    G__10220.cljs$core$IFn$_invoke$arity$variadic = G__10220__delegate;
    return G__10220
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__10222__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__10222 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10222__delegate.call(this, f, a, b, c, d, args)
    };
    G__10222.cljs$lang$maxFixedArity = 5;
    G__10222.cljs$lang$applyTo = function(arglist__10223) {
      var f = cljs.core.first(arglist__10223);
      arglist__10223 = cljs.core.next(arglist__10223);
      var a = cljs.core.first(arglist__10223);
      arglist__10223 = cljs.core.next(arglist__10223);
      var b = cljs.core.first(arglist__10223);
      arglist__10223 = cljs.core.next(arglist__10223);
      var c = cljs.core.first(arglist__10223);
      arglist__10223 = cljs.core.next(arglist__10223);
      var d = cljs.core.first(arglist__10223);
      var args = cljs.core.rest(arglist__10223);
      return G__10222__delegate(f, a, b, c, d, args)
    };
    G__10222.cljs$core$IFn$_invoke$arity$variadic = G__10222__delegate;
    return G__10222
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__10224) {
    var obj = cljs.core.first(arglist__10224);
    arglist__10224 = cljs.core.next(arglist__10224);
    var f = cljs.core.first(arglist__10224);
    var args = cljs.core.rest(arglist__10224);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__10225__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__10225 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10225__delegate.call(this, x, y, more)
    };
    G__10225.cljs$lang$maxFixedArity = 2;
    G__10225.cljs$lang$applyTo = function(arglist__10226) {
      var x = cljs.core.first(arglist__10226);
      arglist__10226 = cljs.core.next(arglist__10226);
      var y = cljs.core.first(arglist__10226);
      var more = cljs.core.rest(arglist__10226);
      return G__10225__delegate(x, y, more)
    };
    G__10225.cljs$core$IFn$_invoke$arity$variadic = G__10225__delegate;
    return G__10225
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__10227 = pred;
        var G__10228 = cljs.core.next.call(null, coll);
        pred = G__10227;
        coll = G__10228;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3943__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        var G__10229 = pred;
        var G__10230 = cljs.core.next.call(null, coll);
        pred = G__10229;
        coll = G__10230;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__10231 = null;
    var G__10231__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__10231__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__10231__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__10231__3 = function() {
      var G__10232__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__10232 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__10232__delegate.call(this, x, y, zs)
      };
      G__10232.cljs$lang$maxFixedArity = 2;
      G__10232.cljs$lang$applyTo = function(arglist__10233) {
        var x = cljs.core.first(arglist__10233);
        arglist__10233 = cljs.core.next(arglist__10233);
        var y = cljs.core.first(arglist__10233);
        var zs = cljs.core.rest(arglist__10233);
        return G__10232__delegate(x, y, zs)
      };
      G__10232.cljs$core$IFn$_invoke$arity$variadic = G__10232__delegate;
      return G__10232
    }();
    G__10231 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10231__0.call(this);
        case 1:
          return G__10231__1.call(this, x);
        case 2:
          return G__10231__2.call(this, x, y);
        default:
          return G__10231__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10231.cljs$lang$maxFixedArity = 2;
    G__10231.cljs$lang$applyTo = G__10231__3.cljs$lang$applyTo;
    return G__10231
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__10234__delegate = function(args) {
      return x
    };
    var G__10234 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10234__delegate.call(this, args)
    };
    G__10234.cljs$lang$maxFixedArity = 0;
    G__10234.cljs$lang$applyTo = function(arglist__10235) {
      var args = cljs.core.seq(arglist__10235);
      return G__10234__delegate(args)
    };
    G__10234.cljs$core$IFn$_invoke$arity$variadic = G__10234__delegate;
    return G__10234
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__10236 = null;
      var G__10236__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__10236__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__10236__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__10236__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__10236__4 = function() {
        var G__10237__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10237 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10237__delegate.call(this, x, y, z, args)
        };
        G__10237.cljs$lang$maxFixedArity = 3;
        G__10237.cljs$lang$applyTo = function(arglist__10238) {
          var x = cljs.core.first(arglist__10238);
          arglist__10238 = cljs.core.next(arglist__10238);
          var y = cljs.core.first(arglist__10238);
          arglist__10238 = cljs.core.next(arglist__10238);
          var z = cljs.core.first(arglist__10238);
          var args = cljs.core.rest(arglist__10238);
          return G__10237__delegate(x, y, z, args)
        };
        G__10237.cljs$core$IFn$_invoke$arity$variadic = G__10237__delegate;
        return G__10237
      }();
      G__10236 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10236__0.call(this);
          case 1:
            return G__10236__1.call(this, x);
          case 2:
            return G__10236__2.call(this, x, y);
          case 3:
            return G__10236__3.call(this, x, y, z);
          default:
            return G__10236__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10236.cljs$lang$maxFixedArity = 3;
      G__10236.cljs$lang$applyTo = G__10236__4.cljs$lang$applyTo;
      return G__10236
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__10239 = null;
      var G__10239__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__10239__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__10239__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__10239__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__10239__4 = function() {
        var G__10240__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__10240 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10240__delegate.call(this, x, y, z, args)
        };
        G__10240.cljs$lang$maxFixedArity = 3;
        G__10240.cljs$lang$applyTo = function(arglist__10241) {
          var x = cljs.core.first(arglist__10241);
          arglist__10241 = cljs.core.next(arglist__10241);
          var y = cljs.core.first(arglist__10241);
          arglist__10241 = cljs.core.next(arglist__10241);
          var z = cljs.core.first(arglist__10241);
          var args = cljs.core.rest(arglist__10241);
          return G__10240__delegate(x, y, z, args)
        };
        G__10240.cljs$core$IFn$_invoke$arity$variadic = G__10240__delegate;
        return G__10240
      }();
      G__10239 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10239__0.call(this);
          case 1:
            return G__10239__1.call(this, x);
          case 2:
            return G__10239__2.call(this, x, y);
          case 3:
            return G__10239__3.call(this, x, y, z);
          default:
            return G__10239__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10239.cljs$lang$maxFixedArity = 3;
      G__10239.cljs$lang$applyTo = G__10239__4.cljs$lang$applyTo;
      return G__10239
    }()
  };
  var comp__4 = function() {
    var G__10242__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__10243__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__10244 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__10245 = cljs.core.next.call(null, fs__$2);
              ret = G__10244;
              fs__$2 = G__10245;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__10243 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__10243__delegate.call(this, args)
        };
        G__10243.cljs$lang$maxFixedArity = 0;
        G__10243.cljs$lang$applyTo = function(arglist__10246) {
          var args = cljs.core.seq(arglist__10246);
          return G__10243__delegate(args)
        };
        G__10243.cljs$core$IFn$_invoke$arity$variadic = G__10243__delegate;
        return G__10243
      }()
    };
    var G__10242 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10242__delegate.call(this, f1, f2, f3, fs)
    };
    G__10242.cljs$lang$maxFixedArity = 3;
    G__10242.cljs$lang$applyTo = function(arglist__10247) {
      var f1 = cljs.core.first(arglist__10247);
      arglist__10247 = cljs.core.next(arglist__10247);
      var f2 = cljs.core.first(arglist__10247);
      arglist__10247 = cljs.core.next(arglist__10247);
      var f3 = cljs.core.first(arglist__10247);
      var fs = cljs.core.rest(arglist__10247);
      return G__10242__delegate(f1, f2, f3, fs)
    };
    G__10242.cljs$core$IFn$_invoke$arity$variadic = G__10242__delegate;
    return G__10242
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__10248__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__10248 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10248__delegate.call(this, args)
      };
      G__10248.cljs$lang$maxFixedArity = 0;
      G__10248.cljs$lang$applyTo = function(arglist__10249) {
        var args = cljs.core.seq(arglist__10249);
        return G__10248__delegate(args)
      };
      G__10248.cljs$core$IFn$_invoke$arity$variadic = G__10248__delegate;
      return G__10248
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__10250__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__10250 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10250__delegate.call(this, args)
      };
      G__10250.cljs$lang$maxFixedArity = 0;
      G__10250.cljs$lang$applyTo = function(arglist__10251) {
        var args = cljs.core.seq(arglist__10251);
        return G__10250__delegate(args)
      };
      G__10250.cljs$core$IFn$_invoke$arity$variadic = G__10250__delegate;
      return G__10250
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__10252__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__10252 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__10252__delegate.call(this, args)
      };
      G__10252.cljs$lang$maxFixedArity = 0;
      G__10252.cljs$lang$applyTo = function(arglist__10253) {
        var args = cljs.core.seq(arglist__10253);
        return G__10252__delegate(args)
      };
      G__10252.cljs$core$IFn$_invoke$arity$variadic = G__10252__delegate;
      return G__10252
    }()
  };
  var partial__5 = function() {
    var G__10254__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__10255__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__10255 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__10255__delegate.call(this, args)
        };
        G__10255.cljs$lang$maxFixedArity = 0;
        G__10255.cljs$lang$applyTo = function(arglist__10256) {
          var args = cljs.core.seq(arglist__10256);
          return G__10255__delegate(args)
        };
        G__10255.cljs$core$IFn$_invoke$arity$variadic = G__10255__delegate;
        return G__10255
      }()
    };
    var G__10254 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10254__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__10254.cljs$lang$maxFixedArity = 4;
    G__10254.cljs$lang$applyTo = function(arglist__10257) {
      var f = cljs.core.first(arglist__10257);
      arglist__10257 = cljs.core.next(arglist__10257);
      var arg1 = cljs.core.first(arglist__10257);
      arglist__10257 = cljs.core.next(arglist__10257);
      var arg2 = cljs.core.first(arglist__10257);
      arglist__10257 = cljs.core.next(arglist__10257);
      var arg3 = cljs.core.first(arglist__10257);
      var more = cljs.core.rest(arglist__10257);
      return G__10254__delegate(f, arg1, arg2, arg3, more)
    };
    G__10254.cljs$core$IFn$_invoke$arity$variadic = G__10254__delegate;
    return G__10254
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__10258 = null;
      var G__10258__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__10258__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__10258__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__10258__4 = function() {
        var G__10259__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__10259 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10259__delegate.call(this, a, b, c, ds)
        };
        G__10259.cljs$lang$maxFixedArity = 3;
        G__10259.cljs$lang$applyTo = function(arglist__10260) {
          var a = cljs.core.first(arglist__10260);
          arglist__10260 = cljs.core.next(arglist__10260);
          var b = cljs.core.first(arglist__10260);
          arglist__10260 = cljs.core.next(arglist__10260);
          var c = cljs.core.first(arglist__10260);
          var ds = cljs.core.rest(arglist__10260);
          return G__10259__delegate(a, b, c, ds)
        };
        G__10259.cljs$core$IFn$_invoke$arity$variadic = G__10259__delegate;
        return G__10259
      }();
      G__10258 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__10258__1.call(this, a);
          case 2:
            return G__10258__2.call(this, a, b);
          case 3:
            return G__10258__3.call(this, a, b, c);
          default:
            return G__10258__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10258.cljs$lang$maxFixedArity = 3;
      G__10258.cljs$lang$applyTo = G__10258__4.cljs$lang$applyTo;
      return G__10258
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__10261 = null;
      var G__10261__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__10261__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__10261__4 = function() {
        var G__10262__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__10262 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10262__delegate.call(this, a, b, c, ds)
        };
        G__10262.cljs$lang$maxFixedArity = 3;
        G__10262.cljs$lang$applyTo = function(arglist__10263) {
          var a = cljs.core.first(arglist__10263);
          arglist__10263 = cljs.core.next(arglist__10263);
          var b = cljs.core.first(arglist__10263);
          arglist__10263 = cljs.core.next(arglist__10263);
          var c = cljs.core.first(arglist__10263);
          var ds = cljs.core.rest(arglist__10263);
          return G__10262__delegate(a, b, c, ds)
        };
        G__10262.cljs$core$IFn$_invoke$arity$variadic = G__10262__delegate;
        return G__10262
      }();
      G__10261 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10261__2.call(this, a, b);
          case 3:
            return G__10261__3.call(this, a, b, c);
          default:
            return G__10261__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10261.cljs$lang$maxFixedArity = 3;
      G__10261.cljs$lang$applyTo = G__10261__4.cljs$lang$applyTo;
      return G__10261
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__10264 = null;
      var G__10264__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__10264__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__10264__4 = function() {
        var G__10265__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__10265 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10265__delegate.call(this, a, b, c, ds)
        };
        G__10265.cljs$lang$maxFixedArity = 3;
        G__10265.cljs$lang$applyTo = function(arglist__10266) {
          var a = cljs.core.first(arglist__10266);
          arglist__10266 = cljs.core.next(arglist__10266);
          var b = cljs.core.first(arglist__10266);
          arglist__10266 = cljs.core.next(arglist__10266);
          var c = cljs.core.first(arglist__10266);
          var ds = cljs.core.rest(arglist__10266);
          return G__10265__delegate(a, b, c, ds)
        };
        G__10265.cljs$core$IFn$_invoke$arity$variadic = G__10265__delegate;
        return G__10265
      }();
      G__10264 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__10264__2.call(this, a, b);
          case 3:
            return G__10264__3.call(this, a, b, c);
          default:
            return G__10264__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10264.cljs$lang$maxFixedArity = 3;
      G__10264.cljs$lang$applyTo = G__10264__4.cljs$lang$applyTo;
      return G__10264
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3572__auto___10267 = size;
          var i_10268 = 0;
          while(true) {
            if(i_10268 < n__3572__auto___10267) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_10268, cljs.core._nth.call(null, c, i_10268)));
              var G__10269 = i_10268 + 1;
              i_10268 = G__10269;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3572__auto___10270 = size;
        var i_10271 = 0;
        while(true) {
          if(i_10271 < n__3572__auto___10270) {
            var x_10272 = f.call(null, cljs.core._nth.call(null, c, i_10271));
            if(x_10272 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_10272)
            }
            var G__10273 = i_10271 + 1;
            i_10271 = G__10273;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3572__auto___10274 = size;
          var i_10275 = 0;
          while(true) {
            if(i_10275 < n__3572__auto___10274) {
              var x_10276 = f.call(null, idx + i_10275, cljs.core._nth.call(null, c, i_10275));
              if(x_10276 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_10276)
              }
              var G__10277 = i_10275 + 1;
              i_10275 = G__10277;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p.call(null, y)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__10284__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__10284 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10284__delegate.call(this, x, y, z, args)
        };
        G__10284.cljs$lang$maxFixedArity = 3;
        G__10284.cljs$lang$applyTo = function(arglist__10285) {
          var x = cljs.core.first(arglist__10285);
          arglist__10285 = cljs.core.next(arglist__10285);
          var y = cljs.core.first(arglist__10285);
          arglist__10285 = cljs.core.next(arglist__10285);
          var z = cljs.core.first(arglist__10285);
          var args = cljs.core.rest(arglist__10285);
          return G__10284__delegate(x, y, z, args)
        };
        G__10284.cljs$core$IFn$_invoke$arity$variadic = G__10284__delegate;
        return G__10284
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__10286__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10278_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__10278_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  return p2.call(null, p1__10278_SHARP_)
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__10286 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10286__delegate.call(this, x, y, z, args)
        };
        G__10286.cljs$lang$maxFixedArity = 3;
        G__10286.cljs$lang$applyTo = function(arglist__10287) {
          var x = cljs.core.first(arglist__10287);
          arglist__10287 = cljs.core.next(arglist__10287);
          var y = cljs.core.first(arglist__10287);
          arglist__10287 = cljs.core.next(arglist__10287);
          var z = cljs.core.first(arglist__10287);
          var args = cljs.core.rest(arglist__10287);
          return G__10286__delegate(x, y, z, args)
        };
        G__10286.cljs$core$IFn$_invoke$arity$variadic = G__10286__delegate;
        return G__10286
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3941__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3941__auto____$1)) {
              var and__3941__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3941__auto____$2)) {
                var and__3941__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3941__auto____$3)) {
                  var and__3941__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3941__auto____$4)) {
                    var and__3941__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3941__auto____$5)) {
                      var and__3941__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3941__auto____$6)) {
                        var and__3941__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3941__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3941__auto____$7
                        }
                      }else {
                        return and__3941__auto____$6
                      }
                    }else {
                      return and__3941__auto____$5
                    }
                  }else {
                    return and__3941__auto____$4
                  }
                }else {
                  return and__3941__auto____$3
                }
              }else {
                return and__3941__auto____$2
              }
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__10288__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3941__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3941__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__10279_SHARP_) {
                var and__3941__auto____$1 = p1.call(null, p1__10279_SHARP_);
                if(cljs.core.truth_(and__3941__auto____$1)) {
                  var and__3941__auto____$2 = p2.call(null, p1__10279_SHARP_);
                  if(cljs.core.truth_(and__3941__auto____$2)) {
                    return p3.call(null, p1__10279_SHARP_)
                  }else {
                    return and__3941__auto____$2
                  }
                }else {
                  return and__3941__auto____$1
                }
              }, args)
            }else {
              return and__3941__auto__
            }
          }())
        };
        var G__10288 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10288__delegate.call(this, x, y, z, args)
        };
        G__10288.cljs$lang$maxFixedArity = 3;
        G__10288.cljs$lang$applyTo = function(arglist__10289) {
          var x = cljs.core.first(arglist__10289);
          arglist__10289 = cljs.core.next(arglist__10289);
          var y = cljs.core.first(arglist__10289);
          arglist__10289 = cljs.core.next(arglist__10289);
          var z = cljs.core.first(arglist__10289);
          var args = cljs.core.rest(arglist__10289);
          return G__10288__delegate(x, y, z, args)
        };
        G__10288.cljs$core$IFn$_invoke$arity$variadic = G__10288__delegate;
        return G__10288
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__10290__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__10280_SHARP_) {
            return p1__10280_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__10281_SHARP_) {
            var and__3941__auto__ = p1__10281_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              return p1__10281_SHARP_.call(null, y)
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__10282_SHARP_) {
            var and__3941__auto__ = p1__10282_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3941__auto__)) {
              var and__3941__auto____$1 = p1__10282_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3941__auto____$1)) {
                return p1__10282_SHARP_.call(null, z)
              }else {
                return and__3941__auto____$1
              }
            }else {
              return and__3941__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__10291__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3941__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3941__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__10283_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__10283_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3941__auto__
              }
            }())
          };
          var G__10291 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10291__delegate.call(this, x, y, z, args)
          };
          G__10291.cljs$lang$maxFixedArity = 3;
          G__10291.cljs$lang$applyTo = function(arglist__10292) {
            var x = cljs.core.first(arglist__10292);
            arglist__10292 = cljs.core.next(arglist__10292);
            var y = cljs.core.first(arglist__10292);
            arglist__10292 = cljs.core.next(arglist__10292);
            var z = cljs.core.first(arglist__10292);
            var args = cljs.core.rest(arglist__10292);
            return G__10291__delegate(x, y, z, args)
          };
          G__10291.cljs$core$IFn$_invoke$arity$variadic = G__10291__delegate;
          return G__10291
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__10290 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10290__delegate.call(this, p1, p2, p3, ps)
    };
    G__10290.cljs$lang$maxFixedArity = 3;
    G__10290.cljs$lang$applyTo = function(arglist__10293) {
      var p1 = cljs.core.first(arglist__10293);
      arglist__10293 = cljs.core.next(arglist__10293);
      var p2 = cljs.core.first(arglist__10293);
      arglist__10293 = cljs.core.next(arglist__10293);
      var p3 = cljs.core.first(arglist__10293);
      var ps = cljs.core.rest(arglist__10293);
      return G__10290__delegate(p1, p2, p3, ps)
    };
    G__10290.cljs$core$IFn$_invoke$arity$variadic = G__10290__delegate;
    return G__10290
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3943__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__10300__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__10300 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10300__delegate.call(this, x, y, z, args)
        };
        G__10300.cljs$lang$maxFixedArity = 3;
        G__10300.cljs$lang$applyTo = function(arglist__10301) {
          var x = cljs.core.first(arglist__10301);
          arglist__10301 = cljs.core.next(arglist__10301);
          var y = cljs.core.first(arglist__10301);
          arglist__10301 = cljs.core.next(arglist__10301);
          var z = cljs.core.first(arglist__10301);
          var args = cljs.core.rest(arglist__10301);
          return G__10300__delegate(x, y, z, args)
        };
        G__10300.cljs$core$IFn$_invoke$arity$variadic = G__10300__delegate;
        return G__10300
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10302__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__10294_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__10294_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p2.call(null, p1__10294_SHARP_)
              }
            }, args)
          }
        };
        var G__10302 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10302__delegate.call(this, x, y, z, args)
        };
        G__10302.cljs$lang$maxFixedArity = 3;
        G__10302.cljs$lang$applyTo = function(arglist__10303) {
          var x = cljs.core.first(arglist__10303);
          arglist__10303 = cljs.core.next(arglist__10303);
          var y = cljs.core.first(arglist__10303);
          arglist__10303 = cljs.core.next(arglist__10303);
          var z = cljs.core.first(arglist__10303);
          var args = cljs.core.rest(arglist__10303);
          return G__10302__delegate(x, y, z, args)
        };
        G__10302.cljs$core$IFn$_invoke$arity$variadic = G__10302__delegate;
        return G__10302
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3943__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3943__auto____$1)) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3943__auto____$2)) {
              return or__3943__auto____$2
            }else {
              var or__3943__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$3)) {
                return or__3943__auto____$3
              }else {
                var or__3943__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3943__auto____$4)) {
                  return or__3943__auto____$4
                }else {
                  var or__3943__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3943__auto____$5)) {
                    return or__3943__auto____$5
                  }else {
                    var or__3943__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3943__auto____$6)) {
                      return or__3943__auto____$6
                    }else {
                      var or__3943__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3943__auto____$7)) {
                        return or__3943__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10304__delegate = function(x, y, z, args) {
          var or__3943__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.some.call(null, function(p1__10295_SHARP_) {
              var or__3943__auto____$1 = p1.call(null, p1__10295_SHARP_);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                var or__3943__auto____$2 = p2.call(null, p1__10295_SHARP_);
                if(cljs.core.truth_(or__3943__auto____$2)) {
                  return or__3943__auto____$2
                }else {
                  return p3.call(null, p1__10295_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__10304 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10304__delegate.call(this, x, y, z, args)
        };
        G__10304.cljs$lang$maxFixedArity = 3;
        G__10304.cljs$lang$applyTo = function(arglist__10305) {
          var x = cljs.core.first(arglist__10305);
          arglist__10305 = cljs.core.next(arglist__10305);
          var y = cljs.core.first(arglist__10305);
          arglist__10305 = cljs.core.next(arglist__10305);
          var z = cljs.core.first(arglist__10305);
          var args = cljs.core.rest(arglist__10305);
          return G__10304__delegate(x, y, z, args)
        };
        G__10304.cljs$core$IFn$_invoke$arity$variadic = G__10304__delegate;
        return G__10304
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__10306__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__10296_SHARP_) {
            return p1__10296_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__10297_SHARP_) {
            var or__3943__auto__ = p1__10297_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return p1__10297_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__10298_SHARP_) {
            var or__3943__auto__ = p1__10298_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              var or__3943__auto____$1 = p1__10298_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3943__auto____$1)) {
                return or__3943__auto____$1
              }else {
                return p1__10298_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__10307__delegate = function(x, y, z, args) {
            var or__3943__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.some.call(null, function(p1__10299_SHARP_) {
                return cljs.core.some.call(null, p1__10299_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__10307 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10307__delegate.call(this, x, y, z, args)
          };
          G__10307.cljs$lang$maxFixedArity = 3;
          G__10307.cljs$lang$applyTo = function(arglist__10308) {
            var x = cljs.core.first(arglist__10308);
            arglist__10308 = cljs.core.next(arglist__10308);
            var y = cljs.core.first(arglist__10308);
            arglist__10308 = cljs.core.next(arglist__10308);
            var z = cljs.core.first(arglist__10308);
            var args = cljs.core.rest(arglist__10308);
            return G__10307__delegate(x, y, z, args)
          };
          G__10307.cljs$core$IFn$_invoke$arity$variadic = G__10307__delegate;
          return G__10307
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__10306 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10306__delegate.call(this, p1, p2, p3, ps)
    };
    G__10306.cljs$lang$maxFixedArity = 3;
    G__10306.cljs$lang$applyTo = function(arglist__10309) {
      var p1 = cljs.core.first(arglist__10309);
      arglist__10309 = cljs.core.next(arglist__10309);
      var p2 = cljs.core.first(arglist__10309);
      arglist__10309 = cljs.core.next(arglist__10309);
      var p3 = cljs.core.first(arglist__10309);
      var ps = cljs.core.rest(arglist__10309);
      return G__10306__delegate(p1, p2, p3, ps)
    };
    G__10306.cljs$core$IFn$_invoke$arity$variadic = G__10306__delegate;
    return G__10306
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3572__auto___10311 = size;
          var i_10312 = 0;
          while(true) {
            if(i_10312 < n__3572__auto___10311) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_10312)));
              var G__10313 = i_10312 + 1;
              i_10312 = G__10313;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          var and__3941__auto____$1 = s2;
          if(and__3941__auto____$1) {
            return s3
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__10314__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__10310_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10310_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__10314 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10314__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10314.cljs$lang$maxFixedArity = 4;
    G__10314.cljs$lang$applyTo = function(arglist__10315) {
      var f = cljs.core.first(arglist__10315);
      arglist__10315 = cljs.core.next(arglist__10315);
      var c1 = cljs.core.first(arglist__10315);
      arglist__10315 = cljs.core.next(arglist__10315);
      var c2 = cljs.core.first(arglist__10315);
      arglist__10315 = cljs.core.next(arglist__10315);
      var c3 = cljs.core.first(arglist__10315);
      var colls = cljs.core.rest(arglist__10315);
      return G__10314__delegate(f, c1, c2, c3, colls)
    };
    G__10314.cljs$core$IFn$_invoke$arity$variadic = G__10314__delegate;
    return G__10314
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = n__$1 > 0;
        if(and__3941__auto__) {
          return s
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__10316 = n__$1 - 1;
        var G__10317 = cljs.core.rest.call(null, s);
        n__$1 = G__10316;
        coll__$1 = G__10317;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__10318 = cljs.core.next.call(null, s);
      var G__10319 = cljs.core.next.call(null, lead);
      s = G__10318;
      lead = G__10319;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = s;
        if(and__3941__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__10320 = pred__$1;
        var G__10321 = cljs.core.rest.call(null, s);
        pred__$1 = G__10320;
        coll__$1 = G__10321;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3941__auto__ = s1;
        if(and__3941__auto__) {
          return s2
        }else {
          return and__3941__auto__
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__10322__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null)
    };
    var G__10322 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10322__delegate.call(this, c1, c2, colls)
    };
    G__10322.cljs$lang$maxFixedArity = 2;
    G__10322.cljs$lang$applyTo = function(arglist__10323) {
      var c1 = cljs.core.first(arglist__10323);
      arglist__10323 = cljs.core.next(arglist__10323);
      var c2 = cljs.core.first(arglist__10323);
      var colls = cljs.core.rest(arglist__10323);
      return G__10322__delegate(c1, c2, colls)
    };
    G__10322.cljs$core$IFn$_invoke$arity$variadic = G__10322__delegate;
    return G__10322
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__10324__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__10324 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10324__delegate.call(this, f, coll, colls)
    };
    G__10324.cljs$lang$maxFixedArity = 2;
    G__10324.cljs$lang$applyTo = function(arglist__10325) {
      var f = cljs.core.first(arglist__10325);
      arglist__10325 = cljs.core.next(arglist__10325);
      var coll = cljs.core.first(arglist__10325);
      var colls = cljs.core.rest(arglist__10325);
      return G__10324__delegate(f, coll, colls)
    };
    G__10324.cljs$core$IFn$_invoke$arity$variadic = G__10324__delegate;
    return G__10324
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3572__auto___10326 = size;
        var i_10327 = 0;
        while(true) {
          if(i_10327 < n__3572__auto___10326) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_10327)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_10327))
            }else {
            }
            var G__10328 = i_10327 + 1;
            i_10327 = G__10328;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10329_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10329_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__10331 = to;
      if(G__10331) {
        if(function() {
          var or__3943__auto__ = G__10331.cljs$lang$protocol_mask$partition1$ & 4;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__10331.cljs$core$IEditableCollection$
          }
        }()) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__10332__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__10332 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10332__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10332.cljs$lang$maxFixedArity = 4;
    G__10332.cljs$lang$applyTo = function(arglist__10333) {
      var f = cljs.core.first(arglist__10333);
      arglist__10333 = cljs.core.next(arglist__10333);
      var c1 = cljs.core.first(arglist__10333);
      arglist__10333 = cljs.core.next(arglist__10333);
      var c2 = cljs.core.first(arglist__10333);
      arglist__10333 = cljs.core.next(arglist__10333);
      var c3 = cljs.core.first(arglist__10333);
      var colls = cljs.core.rest(arglist__10333);
      return G__10332__delegate(f, c1, c2, c3, colls)
    };
    G__10332.cljs$core$IFn$_invoke$arity$variadic = G__10332__delegate;
    return G__10332
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__10335 = m__$1;
          if(G__10335) {
            if(function() {
              var or__3943__auto__ = G__10335.cljs$lang$protocol_mask$partition0$ & 256;
              if(or__3943__auto__) {
                return or__3943__auto__
              }else {
                return G__10335.cljs$core$ILookup$
              }
            }()) {
              return true
            }else {
              if(!G__10335.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10335)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.ILookup, G__10335)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__10336 = sentinel;
            var G__10337 = m__$2;
            var G__10338 = cljs.core.next.call(null, ks__$1);
            sentinel = G__10336;
            m__$1 = G__10337;
            ks__$1 = G__10338;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__10339, v) {
  var vec__10341 = p__10339;
  var k = cljs.core.nth.call(null, vec__10341, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10341, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__10342, f) {
    var vec__10352 = p__10342;
    var k = cljs.core.nth.call(null, vec__10352, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10352, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__10343, f, a) {
    var vec__10353 = p__10343;
    var k = cljs.core.nth.call(null, vec__10353, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10353, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__10344, f, a, b) {
    var vec__10354 = p__10344;
    var k = cljs.core.nth.call(null, vec__10354, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10354, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__10345, f, a, b, c) {
    var vec__10355 = p__10345;
    var k = cljs.core.nth.call(null, vec__10355, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__10355, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__10357__delegate = function(m, p__10346, f, a, b, c, args) {
      var vec__10356 = p__10346;
      var k = cljs.core.nth.call(null, vec__10356, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__10356, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__10357 = function(m, p__10346, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__10357__delegate.call(this, m, p__10346, f, a, b, c, args)
    };
    G__10357.cljs$lang$maxFixedArity = 6;
    G__10357.cljs$lang$applyTo = function(arglist__10358) {
      var m = cljs.core.first(arglist__10358);
      arglist__10358 = cljs.core.next(arglist__10358);
      var p__10346 = cljs.core.first(arglist__10358);
      arglist__10358 = cljs.core.next(arglist__10358);
      var f = cljs.core.first(arglist__10358);
      arglist__10358 = cljs.core.next(arglist__10358);
      var a = cljs.core.first(arglist__10358);
      arglist__10358 = cljs.core.next(arglist__10358);
      var b = cljs.core.first(arglist__10358);
      arglist__10358 = cljs.core.next(arglist__10358);
      var c = cljs.core.first(arglist__10358);
      var args = cljs.core.rest(arglist__10358);
      return G__10357__delegate(m, p__10346, f, a, b, c, args)
    };
    G__10357.cljs$core$IFn$_invoke$arity$variadic = G__10357__delegate;
    return G__10357
  }();
  update_in = function(m, p__10346, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__10346, f);
      case 4:
        return update_in__4.call(this, m, p__10346, f, a);
      case 5:
        return update_in__5.call(this, m, p__10346, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__10346, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__10346, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
goog.provide("cljs.core.VectorNode");
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__10359 = ll - 5;
      var G__10360 = r;
      ll = G__10359;
      ret = G__10360;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < pv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__10361 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__10362 = level - 5;
          node = G__10361;
          level = G__10362;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentVector");
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= k;
    if(and__3941__auto__) {
      return k < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10364 = null;
  var G__10364__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__10364__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__10364 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10364__2.call(this, self__, k);
      case 3:
        return G__10364__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10364
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10363) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10363.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__10365 = j + 1;
              var G__10366 = init__$2;
              j = G__10365;
              init__$1 = G__10366;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__10367 = i + step_init[0];
        i = G__10367;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(function() {
            var and__3941__auto__ = 5 < self__.shift;
            if(and__3941__auto__) {
              return cljs.core.pv_aget.call(null, new_root, 1) == null
            }else {
              return and__3941__auto__
            }
          }()) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__10368 = i + 1;
        var G__10369 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__10368;
        out = G__10369;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10370) {
    var args = cljs.core.seq(arglist__10370);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
goog.provide("cljs.core.ChunkedSeq");
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
goog.provide("cljs.core.Subvec");
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3116__auto__ = self__.end;
    var y__3117__auto__ = v_pos + 1;
    return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__10372 = null;
  var G__10372__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, k)
  };
  var G__10372__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
  };
  G__10372 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10372__2.call(this, self__, k);
      case 3:
        return G__10372__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10372
}();
cljs.core.Subvec.prototype.apply = function(self__, args10371) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10371.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, coll, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var or__3943__auto__ = n < 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return self__.end <= self__.start + n
    }
  }()) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__10373 = meta;
      var G__10374 = v.v;
      var G__10375 = v.start + start;
      var G__10376 = v.start + end;
      var G__10377 = __hash;
      meta = G__10373;
      v = G__10374;
      start = G__10375;
      end = G__10376;
      __hash = G__10377;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(function() {
        var or__3943__auto__ = start < 0;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = end < 0;
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            var or__3943__auto____$2 = start > c;
            if(or__3943__auto____$2) {
              return or__3943__auto____$2
            }else {
              return end > c
            }
          }
        }
      }()) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(function() {
      var and__3941__auto__ = new_child == null;
      if(and__3941__auto__) {
        return subidx === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3941__auto__ = 0 <= i;
    if(and__3941__auto__) {
      return i < tv.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__10378 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__10379 = level - 5;
          node = G__10378;
          level = G__10379;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
goog.provide("cljs.core.TransientVector");
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10381 = null;
  var G__10381__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10381__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10381 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10381__2.call(this, self__, k);
      case 3:
        return G__10381__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10381
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10380) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10380.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = 0 <= n;
    if(and__3941__auto__) {
      return n < self__.cnt
    }else {
      return and__3941__auto__
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  if(self__.root.edit) {
    if(function() {
      var and__3941__auto__ = 0 <= n;
      if(and__3941__auto__) {
        return n < self__.cnt
      }else {
        return and__3941__auto__
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        self__.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll
      }
    }else {
      if(n === self__.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(function() {
              var and__3941__auto__ = 5 < self__.shift;
              if(and__3941__auto__) {
                return cljs.core.pv_aget.call(null, new_root, 1) == null
              }else {
                return and__3941__auto__
              }
            }()) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
goog.provide("cljs.core.PersistentQueueSeq");
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
goog.provide("cljs.core.PersistentQueue");
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3943__auto__ = self__.rear;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = self__.front;
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
goog.provide("cljs.core.NeverEquiv");
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__10382 = i + incr;
        i = G__10382;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__10383 = i + 1;
      var G__10384 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__10383;
      out = G__10384;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_10385 = 0;
  while(true) {
    if(i_10385 < l) {
      var k_10386 = ks[i_10385];
      new_obj[k_10386] = obj[k_10386];
      var G__10387 = i_10385 + 1;
      i_10385 = G__10387;
      continue
    }else {
    }
    break
  }
  return new_obj
};
goog.provide("cljs.core.ObjMap");
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3943__auto__ = self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10390 = null;
  var G__10390__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10390__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10390 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10390__2.call(this, self__, k);
      case 3:
        return G__10390__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10390
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10389) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10389.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__10391 = cljs.core.rest.call(null, keys__$1);
        var G__10392 = init__$2;
        keys__$1 = G__10391;
        init__$1 = G__10392;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10388_SHARP_) {
      return cljs.core.vector.call(null, p1__10388_SHARP_, self__.strobj[p1__10388_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(function() {
    var and__3941__auto__ = goog.isString(k);
    if(and__3941__auto__) {
      return!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)
    }else {
      return and__3941__auto__
    }
  }()) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10393 = i + 2;
          i = G__10393;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Keyword;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.fqn
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10394 = i + 2;
          i = G__10394;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        var and__3941__auto__ = k_SINGLEQUOTE_ instanceof cljs.core.Symbol;
        if(and__3941__auto__) {
          return kstr === k_SINGLEQUOTE_.str
        }else {
          return and__3941__auto__
        }
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10395 = i + 2;
          i = G__10395;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10396 = i + 2;
          i = G__10396;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__10397 = i + 2;
          i = G__10397;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(function() {
      var or__3943__auto__ = goog.isString(k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return typeof k === "number"
      }
    }()) {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10398 = 0;
  while(true) {
    if(i_10398 < l) {
      narr[i_10398] = arr[i_10398];
      var G__10399 = i_10398 + 1;
      i_10398 = G__10399;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
goog.provide("cljs.core.PersistentArrayMapSeq");
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
goog.provide("cljs.core.PersistentArrayMap");
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__10401 = self__.arr.slice();
          G__10401[idx + 1] = v;
          return G__10401
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10402 = null;
  var G__10402__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10402__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10402 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10402__2.call(this, self__, k);
      case 3:
        return G__10402__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10402
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10400) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10400.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__10403 = i + 2;
        var G__10404 = init__$2;
        i = G__10403;
        init__$1 = G__10404;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var idx = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__10405 = s + 2;
            var G__10406 = d;
            s = G__10405;
            d = G__10406;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__10407 = s + 2;
              var G__10408 = d + 2;
              s = G__10407;
              d = G__10408;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
goog.provide("cljs.core.TransientArrayMap");
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10409_10411 = self__.arr;
      G__10409_10411.pop();
      G__10409_10411.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll
      }else {
        self__.arr[idx + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__10410 = o;
      if(G__10410) {
        if(function() {
          var or__3943__auto__ = G__10410.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__10410.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10410.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10410)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10410)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10412 = cljs.core.next.call(null, es);
          var G__10413 = tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__$1, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10412;
          tcoll__$1 = G__10413;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__10414 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__10415 = i + 2;
      out = G__10414;
      i = G__10415;
      continue
    }else {
      return out
    }
    break
  }
};
goog.provide("cljs.core.Box");
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10418 = arr.slice();
    G__10418[i] = a;
    return G__10418
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10419 = arr.slice();
    G__10419[i] = a;
    G__10419[j] = b;
    return G__10419
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__10420 = i + 2;
        var G__10421 = init__$2;
        i = G__10420;
        init__$1 = G__10421;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
goog.provide("cljs.core.BitmapIndexedNode");
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10422 = 0;
        var j_10423 = 0;
        while(true) {
          if(i_10422 < 32) {
            if((self__.bitmap >>> i_10422 & 1) === 0) {
              var G__10424 = i_10422 + 1;
              var G__10425 = j_10423;
              i_10422 = G__10424;
              j_10423 = G__10425;
              continue
            }else {
              nodes[i_10422] = !(self__.arr[j_10423] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_10423]), self__.arr[j_10423], self__.arr[j_10423 + 1], added_leaf_QMARK_) : self__.arr[j_10423 + 1];
              var G__10426 = i_10422 + 1;
              var G__10427 = j_10423 + 2;
              i_10422 = G__10426;
              j_10423 = G__10427;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10428 = 0;
      var j_10429 = 0;
      while(true) {
        if(i_10428 < 32) {
          if((self__.bitmap >>> i_10428 & 1) === 0) {
            var G__10430 = i_10428 + 1;
            var G__10431 = j_10429;
            i_10428 = G__10430;
            j_10429 = G__10431;
            continue
          }else {
            nodes[i_10428] = !(self__.arr[j_10429] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_10429]), self__.arr[j_10429], self__.arr[j_10429 + 1], added_leaf_QMARK_) : self__.arr[j_10429 + 1];
            var G__10432 = i_10428 + 1;
            var G__10433 = j_10429 + 2;
            i_10428 = G__10432;
            j_10429 = G__10433;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(function() {
        var and__3941__auto__ = !(i === idx);
        if(and__3941__auto__) {
          return!(arr[i] == null)
        }else {
          return and__3941__auto__
        }
      }()) {
        new_arr[j] = arr[i];
        var G__10434 = i + 1;
        var G__10435 = j + 2;
        var G__10436 = bitmap | 1 << i;
        i = G__10434;
        j = G__10435;
        bitmap = G__10436;
        continue
      }else {
        var G__10437 = i + 1;
        var G__10438 = j;
        var G__10439 = bitmap;
        i = G__10437;
        j = G__10438;
        bitmap = G__10439;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
goog.provide("cljs.core.ArrayNode");
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__10440 = i + 1;
          var G__10441 = init__$2;
          i = G__10440;
          init__$1 = G__10441;
          continue
        }
      }else {
        var G__10442 = i + 1;
        var G__10443 = init__$1;
        i = G__10442;
        init__$1 = G__10443;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__10444 = i + 2;
        i = G__10444;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
goog.provide("cljs.core.HashCollisionNode");
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = self__.arr.length;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
goog.provide("cljs.core.NodeSeq");
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__10445 = j + 2;
                j = G__10445;
                continue
              }
            }else {
              var G__10446 = j + 2;
              j = G__10446;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
goog.provide("cljs.core.ArrayNodeSeq");
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__10447 = j + 1;
              j = G__10447;
              continue
            }
          }else {
            var G__10448 = j + 1;
            j = G__10448;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
goog.provide("cljs.core.PersistentHashMap");
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  if(k == null) {
    if(function() {
      var and__3941__auto__ = self__.has_nil_QMARK_;
      if(and__3941__auto__) {
        return v === self__.nil_val
      }else {
        return and__3941__auto__
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__10450 = null;
  var G__10450__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10450__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10450 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10450__2.call(this, self__, k);
      case 3:
        return G__10450__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10450
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args10449) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10449.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(self__.root == null) {
      return coll
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__10451 = i + 1;
      var G__10452 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__10451;
      out = G__10452;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
goog.provide("cljs.core.TransientHashMap");
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__10453 = o;
      if(G__10453) {
        if(function() {
          var or__3943__auto__ = G__10453.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return G__10453.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10453.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10453)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10453)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__10454 = cljs.core.next.call(null, es);
          var G__10455 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__10454;
          tcoll__$1 = G__10455;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__10456 = ascending_QMARK_ ? t.left : t.right;
      var G__10457 = cljs.core.conj.call(null, stack__$1, t);
      t = G__10456;
      stack__$1 = G__10457;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
goog.provide("cljs.core.PersistentTreeMapSeq");
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3941__auto__ = right instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return right.left instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3941__auto__ = left instanceof cljs.core.RedNode;
        if(and__3941__auto__) {
          return left.right instanceof cljs.core.BlackNode
        }else {
          return and__3941__auto__
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
goog.provide("cljs.core.BlackNode");
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__10459 = null;
  var G__10459__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__10459__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__10459 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10459__2.call(this, self__, k);
      case 3:
        return G__10459__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10459
}();
cljs.core.BlackNode.prototype.apply = function(self__, args10458) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10458.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
goog.provide("cljs.core.RedNode");
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__10461 = null;
  var G__10461__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(node, k)
  };
  var G__10461__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(node, k, not_found)
  };
  G__10461 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10461__2.call(this, self__, k);
      case 3:
        return G__10461__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10461
}();
cljs.core.RedNode.prototype.apply = function(self__, args10460) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10460.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3943__auto__ = !(del == null);
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3943__auto__ = !(del == null);
            if(or__3943__auto__) {
              return or__3943__auto__
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs.core.PersistentTreeMap");
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_imap.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var n = coll.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__10463 = null;
  var G__10463__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10463__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10463 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10463__2.call(this, self__, k);
      case 3:
        return G__10463__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10463
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args10462) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10462.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__10464 = t.left;
          t = G__10464;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__10465 = t.right;
            t = G__10465;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__10466 = cljs.core.conj.call(null, stack, t);
              var G__10467 = t.left;
              stack = G__10466;
              t = G__10467;
              continue
            }else {
              var G__10468 = stack;
              var G__10469 = t.right;
              stack = G__10468;
              t = G__10469;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__10470 = cljs.core.conj.call(null, stack, t);
                var G__10471 = t.right;
                stack = G__10470;
                t = G__10471;
                continue
              }else {
                var G__10472 = stack;
                var G__10473 = t.left;
                stack = G__10472;
                t = G__10473;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__10474 = cljs.core.nnext.call(null, in$);
        var G__10475 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10474;
        out = G__10475;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__10476) {
    var keyvals = cljs.core.seq(arglist__10476);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__10477) {
    var keyvals = cljs.core.seq(arglist__10477);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__10478 = cljs.core.nnext.call(null, kvs);
        kvs = G__10478;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__10479) {
    var keyvals = cljs.core.seq(arglist__10479);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__10480 = cljs.core.nnext.call(null, in$);
        var G__10481 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10480;
        out = G__10481;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__10482) {
    var keyvals = cljs.core.seq(arglist__10482);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__10483 = cljs.core.nnext.call(null, in$);
        var G__10484 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__10483;
        out = G__10484;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__10485) {
    var comparator = cljs.core.first(arglist__10485);
    var keyvals = cljs.core.rest(arglist__10485);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
goog.provide("cljs.core.KeySeq");
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__10486 = self__.mseq;
    if(G__10486) {
      if(function() {
        var or__3943__auto__ = G__10486.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10486.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__10486.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10486)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10486)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__10487 = self__.mseq;
    if(G__10487) {
      if(function() {
        var or__3943__auto__ = G__10487.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10487.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__10487.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10487)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10487)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
goog.provide("cljs.core.ValSeq");
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__10488 = self__.mseq;
    if(G__10488) {
      if(function() {
        var or__3943__auto__ = G__10488.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10488.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__10488.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10488)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10488)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  return cljs.core.seq_reduce.call(null, f, start, coll)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return coll
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var nseq = function() {
    var G__10489 = self__.mseq;
    if(G__10489) {
      if(function() {
        var or__3943__auto__ = G__10489.cljs$lang$protocol_mask$partition0$ & 128;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10489.cljs$core$INext$
        }
      }()) {
        return true
      }else {
        if(!G__10489.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10489)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__10489)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__10490_SHARP_, p2__10491_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3943__auto__ = p1__10490_SHARP_;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__10491_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__10492) {
    var maps = cljs.core.seq(arglist__10492);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3943__auto__ = m1;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__10493) {
    var f = cljs.core.first(arglist__10493);
    var maps = cljs.core.rest(arglist__10493);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__10494 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__10495 = cljs.core.next.call(null, keys);
      ret = G__10494;
      keys = G__10495;
      continue
    }else {
      return ret
    }
    break
  }
};
goog.provide("cljs.core.PersistentHashSet");
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__10498 = null;
  var G__10498__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10498__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10498 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10498__2.call(this, self__, k);
      case 3:
        return G__10498__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10498
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args10497) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10497.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__10496_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10496_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__10499 = i + 2;
        var G__10500 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__10499;
        out = G__10500;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
goog.provide("cljs.core.TransientHashSet");
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__10502 = null;
  var G__10502__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__10502__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__10502 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10502__2.call(this, self__, k);
      case 3:
        return G__10502__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10502
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args10501) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10501.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
goog.provide("cljs.core.PersistentTreeSet");
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_iset.call(null, coll);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__10505 = null;
  var G__10505__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(coll, k)
  };
  var G__10505__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, not_found)
  };
  G__10505 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10505__2.call(this, self__, k);
      case 3:
        return G__10505__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__10505
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args10504) {
  var self__ = this;
  return self__.call.apply(self__, [self__].concat(args10504.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var and__3941__auto__ = cljs.core.set_QMARK_.call(null, other);
  if(and__3941__auto__) {
    var and__3941__auto____$1 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3941__auto____$1) {
      return cljs.core.every_QMARK_.call(null, function(p1__10503_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__10503_SHARP_)
      }, other)
    }else {
      return and__3941__auto____$1
    }
  }else {
    return and__3941__auto__
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__3566__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__3566__auto__.length) {
        var G__10506 = i + 1;
        var G__10507 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__10506;
        res = G__10507;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__10508 = cljs.core._next.call(null, in$__$1);
            var G__10509 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__10508;
            out = G__10509;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__10510__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__10510 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10510__delegate.call(this, keys)
    };
    G__10510.cljs$lang$maxFixedArity = 0;
    G__10510.cljs$lang$applyTo = function(arglist__10511) {
      var keys = cljs.core.seq(arglist__10511);
      return G__10510__delegate(keys)
    };
    G__10510.cljs$core$IFn$_invoke$arity$variadic = G__10510__delegate;
    return G__10510
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__10512) {
    var keys = cljs.core.seq(arglist__10512);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__10513) {
    var comparator = cljs.core.first(arglist__10513);
    var keys = cljs.core.rest(arglist__10513);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__10514_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__10514_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__10514_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__10521, seen__$1) {
        while(true) {
          var vec__10522 = p__10521;
          var f = cljs.core.nth.call(null, vec__10522, 0, null);
          var xs__$1 = vec__10522;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__10523 = cljs.core.rest.call(null, s);
              var G__10524 = seen__$1;
              p__10521 = G__10523;
              seen__$1 = G__10524;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__10525 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__10526 = cljs.core.next.call(null, s__$1);
      ret = G__10525;
      s__$1 = G__10526;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__10528 = x;
    if(G__10528) {
      if(function() {
        var or__3943__auto__ = G__10528.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10528.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(cljs.core.string_QMARK_.call(null, x)) {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__10530 = x;
    if(G__10530) {
      if(function() {
        var or__3943__auto__ = G__10530.cljs$lang$protocol_mask$partition1$ & 4096;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return G__10530.cljs$core$INamed$
        }
      }()) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3941__auto__ = ks;
      if(and__3941__auto__) {
        return vs
      }else {
        return and__3941__auto__
      }
    }()) {
      var G__10531 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__10532 = cljs.core.next.call(null, ks);
      var G__10533 = cljs.core.next.call(null, vs);
      map = G__10531;
      ks = G__10532;
      vs = G__10533;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__10536__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10534_SHARP_, p2__10535_SHARP_) {
        return max_key.call(null, k, p1__10534_SHARP_, p2__10535_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__10536 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10536__delegate.call(this, k, x, y, more)
    };
    G__10536.cljs$lang$maxFixedArity = 3;
    G__10536.cljs$lang$applyTo = function(arglist__10537) {
      var k = cljs.core.first(arglist__10537);
      arglist__10537 = cljs.core.next(arglist__10537);
      var x = cljs.core.first(arglist__10537);
      arglist__10537 = cljs.core.next(arglist__10537);
      var y = cljs.core.first(arglist__10537);
      var more = cljs.core.rest(arglist__10537);
      return G__10536__delegate(k, x, y, more)
    };
    G__10536.cljs$core$IFn$_invoke$arity$variadic = G__10536__delegate;
    return G__10536
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__10540__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__10538_SHARP_, p2__10539_SHARP_) {
        return min_key.call(null, k, p1__10538_SHARP_, p2__10539_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__10540 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10540__delegate.call(this, k, x, y, more)
    };
    G__10540.cljs$lang$maxFixedArity = 3;
    G__10540.cljs$lang$applyTo = function(arglist__10541) {
      var k = cljs.core.first(arglist__10541);
      arglist__10541 = cljs.core.next(arglist__10541);
      var x = cljs.core.first(arglist__10541);
      arglist__10541 = cljs.core.next(arglist__10541);
      var y = cljs.core.first(arglist__10541);
      var more = cljs.core.rest(arglist__10541);
      return G__10540__delegate(k, x, y, more)
    };
    G__10540.cljs$core$IFn$_invoke$arity$variadic = G__10540__delegate;
    return G__10540
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__10544 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10544, 0, null);
        var s = vec__10544;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__10545 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10545, 0, null);
      var s = vec__10545;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__10548 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__10548, 0, null);
        var s = vec__10548;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__10549 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__10549, 0, null);
      var s = vec__10549;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
goog.provide("cljs.core.Range");
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var h__3215__auto__ = self__.__hash;
  if(!(h__3215__auto__ == null)) {
    return h__3215__auto__
  }else {
    var h__3215__auto____$1 = cljs.core.hash_coll.call(null, rng);
    self__.__hash = h__3215__auto____$1;
    return h__3215__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return self__.start + n * self__.step
  }else {
    if(function() {
      var and__3941__auto__ = self__.start > self__.end;
      if(and__3941__auto__) {
        return self__.step === 0
      }else {
        return and__3941__auto__
      }
    }()) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__10550_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__10550_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__10561 = null;
      var G__10561__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__10561__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__10561__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__10561__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__10561__4 = function() {
        var G__10562__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__10562 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10562__delegate.call(this, x, y, z, args)
        };
        G__10562.cljs$lang$maxFixedArity = 3;
        G__10562.cljs$lang$applyTo = function(arglist__10563) {
          var x = cljs.core.first(arglist__10563);
          arglist__10563 = cljs.core.next(arglist__10563);
          var y = cljs.core.first(arglist__10563);
          arglist__10563 = cljs.core.next(arglist__10563);
          var z = cljs.core.first(arglist__10563);
          var args = cljs.core.rest(arglist__10563);
          return G__10562__delegate(x, y, z, args)
        };
        G__10562.cljs$core$IFn$_invoke$arity$variadic = G__10562__delegate;
        return G__10562
      }();
      G__10561 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10561__0.call(this);
          case 1:
            return G__10561__1.call(this, x);
          case 2:
            return G__10561__2.call(this, x, y);
          case 3:
            return G__10561__3.call(this, x, y, z);
          default:
            return G__10561__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10561.cljs$lang$maxFixedArity = 3;
      G__10561.cljs$lang$applyTo = G__10561__4.cljs$lang$applyTo;
      return G__10561
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__10564 = null;
      var G__10564__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__10564__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__10564__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__10564__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__10564__4 = function() {
        var G__10565__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__10565 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10565__delegate.call(this, x, y, z, args)
        };
        G__10565.cljs$lang$maxFixedArity = 3;
        G__10565.cljs$lang$applyTo = function(arglist__10566) {
          var x = cljs.core.first(arglist__10566);
          arglist__10566 = cljs.core.next(arglist__10566);
          var y = cljs.core.first(arglist__10566);
          arglist__10566 = cljs.core.next(arglist__10566);
          var z = cljs.core.first(arglist__10566);
          var args = cljs.core.rest(arglist__10566);
          return G__10565__delegate(x, y, z, args)
        };
        G__10565.cljs$core$IFn$_invoke$arity$variadic = G__10565__delegate;
        return G__10565
      }();
      G__10564 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10564__0.call(this);
          case 1:
            return G__10564__1.call(this, x);
          case 2:
            return G__10564__2.call(this, x, y);
          case 3:
            return G__10564__3.call(this, x, y, z);
          default:
            return G__10564__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10564.cljs$lang$maxFixedArity = 3;
      G__10564.cljs$lang$applyTo = G__10564__4.cljs$lang$applyTo;
      return G__10564
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__10567 = null;
      var G__10567__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__10567__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__10567__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__10567__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__10567__4 = function() {
        var G__10568__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__10568 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10568__delegate.call(this, x, y, z, args)
        };
        G__10568.cljs$lang$maxFixedArity = 3;
        G__10568.cljs$lang$applyTo = function(arglist__10569) {
          var x = cljs.core.first(arglist__10569);
          arglist__10569 = cljs.core.next(arglist__10569);
          var y = cljs.core.first(arglist__10569);
          arglist__10569 = cljs.core.next(arglist__10569);
          var z = cljs.core.first(arglist__10569);
          var args = cljs.core.rest(arglist__10569);
          return G__10568__delegate(x, y, z, args)
        };
        G__10568.cljs$core$IFn$_invoke$arity$variadic = G__10568__delegate;
        return G__10568
      }();
      G__10567 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__10567__0.call(this);
          case 1:
            return G__10567__1.call(this, x);
          case 2:
            return G__10567__2.call(this, x, y);
          case 3:
            return G__10567__3.call(this, x, y, z);
          default:
            return G__10567__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10567.cljs$lang$maxFixedArity = 3;
      G__10567.cljs$lang$applyTo = G__10567__4.cljs$lang$applyTo;
      return G__10567
    }()
  };
  var juxt__4 = function() {
    var G__10570__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__10571 = null;
        var G__10571__0 = function() {
          return cljs.core.reduce.call(null, function(p1__10551_SHARP_, p2__10552_SHARP_) {
            return cljs.core.conj.call(null, p1__10551_SHARP_, p2__10552_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__10571__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__10553_SHARP_, p2__10554_SHARP_) {
            return cljs.core.conj.call(null, p1__10553_SHARP_, p2__10554_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__10571__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__10555_SHARP_, p2__10556_SHARP_) {
            return cljs.core.conj.call(null, p1__10555_SHARP_, p2__10556_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__10571__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__10557_SHARP_, p2__10558_SHARP_) {
            return cljs.core.conj.call(null, p1__10557_SHARP_, p2__10558_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__10571__4 = function() {
          var G__10572__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__10559_SHARP_, p2__10560_SHARP_) {
              return cljs.core.conj.call(null, p1__10559_SHARP_, cljs.core.apply.call(null, p2__10560_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__10572 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10572__delegate.call(this, x, y, z, args)
          };
          G__10572.cljs$lang$maxFixedArity = 3;
          G__10572.cljs$lang$applyTo = function(arglist__10573) {
            var x = cljs.core.first(arglist__10573);
            arglist__10573 = cljs.core.next(arglist__10573);
            var y = cljs.core.first(arglist__10573);
            arglist__10573 = cljs.core.next(arglist__10573);
            var z = cljs.core.first(arglist__10573);
            var args = cljs.core.rest(arglist__10573);
            return G__10572__delegate(x, y, z, args)
          };
          G__10572.cljs$core$IFn$_invoke$arity$variadic = G__10572__delegate;
          return G__10572
        }();
        G__10571 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__10571__0.call(this);
            case 1:
              return G__10571__1.call(this, x);
            case 2:
              return G__10571__2.call(this, x, y);
            case 3:
              return G__10571__3.call(this, x, y, z);
            default:
              return G__10571__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10571.cljs$lang$maxFixedArity = 3;
        G__10571.cljs$lang$applyTo = G__10571__4.cljs$lang$applyTo;
        return G__10571
      }()
    };
    var G__10570 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10570__delegate.call(this, f, g, h, fs)
    };
    G__10570.cljs$lang$maxFixedArity = 3;
    G__10570.cljs$lang$applyTo = function(arglist__10574) {
      var f = cljs.core.first(arglist__10574);
      arglist__10574 = cljs.core.next(arglist__10574);
      var g = cljs.core.first(arglist__10574);
      arglist__10574 = cljs.core.next(arglist__10574);
      var h = cljs.core.first(arglist__10574);
      var fs = cljs.core.rest(arglist__10574);
      return G__10570__delegate(f, g, h, fs)
    };
    G__10570.cljs$core$IFn$_invoke$arity$variadic = G__10570__delegate;
    return G__10570
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__10575 = cljs.core.next.call(null, coll);
        coll = G__10575;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = cljs.core.seq.call(null, coll);
        if(and__3941__auto__) {
          return n > 0
        }else {
          return and__3941__auto__
        }
      }())) {
        var G__10576 = n - 1;
        var G__10577 = cljs.core.next.call(null, coll);
        n = G__10576;
        coll = G__10577;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data, re_seq.call(null, re, post_match))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__10579 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__10579, 0, null);
  var flags = cljs.core.nth.call(null, vec__10579, 1, null);
  var pattern = cljs.core.nth.call(null, vec__10579, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__10584_10588 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__10585_10589 = null;
  var count__10586_10590 = 0;
  var i__10587_10591 = 0;
  while(true) {
    if(i__10587_10591 < count__10586_10590) {
      var o_10592 = cljs.core._nth.call(null, chunk__10585_10589, i__10587_10591);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_10592, writer, opts);
      var G__10593 = seq__10584_10588;
      var G__10594 = chunk__10585_10589;
      var G__10595 = count__10586_10590;
      var G__10596 = i__10587_10591 + 1;
      seq__10584_10588 = G__10593;
      chunk__10585_10589 = G__10594;
      count__10586_10590 = G__10595;
      i__10587_10591 = G__10596;
      continue
    }else {
      var temp__4092__auto___10597 = cljs.core.seq.call(null, seq__10584_10588);
      if(temp__4092__auto___10597) {
        var seq__10584_10598__$1 = temp__4092__auto___10597;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__10584_10598__$1)) {
          var c__3525__auto___10599 = cljs.core.chunk_first.call(null, seq__10584_10598__$1);
          var G__10600 = cljs.core.chunk_rest.call(null, seq__10584_10598__$1);
          var G__10601 = c__3525__auto___10599;
          var G__10602 = cljs.core.count.call(null, c__3525__auto___10599);
          var G__10603 = 0;
          seq__10584_10588 = G__10600;
          chunk__10585_10589 = G__10601;
          count__10586_10590 = G__10602;
          i__10587_10591 = G__10603;
          continue
        }else {
          var o_10604 = cljs.core.first.call(null, seq__10584_10598__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_10604, writer, opts);
          var G__10605 = cljs.core.next.call(null, seq__10584_10598__$1);
          var G__10606 = null;
          var G__10607 = 0;
          var G__10608 = 0;
          seq__10584_10588 = G__10605;
          chunk__10585_10589 = G__10606;
          count__10586_10590 = G__10607;
          i__10587_10591 = G__10608;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__10613 = cljs.core.seq.call(null, ss);
    var chunk__10614 = null;
    var count__10615 = 0;
    var i__10616 = 0;
    while(true) {
      if(i__10616 < count__10615) {
        var s = cljs.core._nth.call(null, chunk__10614, i__10616);
        cljs.core._write.call(null, writer, s);
        var G__10617 = seq__10613;
        var G__10618 = chunk__10614;
        var G__10619 = count__10615;
        var G__10620 = i__10616 + 1;
        seq__10613 = G__10617;
        chunk__10614 = G__10618;
        count__10615 = G__10619;
        i__10616 = G__10620;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__10613);
        if(temp__4092__auto__) {
          var seq__10613__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__10613__$1)) {
            var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__10613__$1);
            var G__10621 = cljs.core.chunk_rest.call(null, seq__10613__$1);
            var G__10622 = c__3525__auto__;
            var G__10623 = cljs.core.count.call(null, c__3525__auto__);
            var G__10624 = 0;
            seq__10613 = G__10621;
            chunk__10614 = G__10622;
            count__10615 = G__10623;
            i__10616 = G__10624;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__10613__$1);
            cljs.core._write.call(null, writer, s);
            var G__10625 = cljs.core.next.call(null, seq__10613__$1);
            var G__10626 = null;
            var G__10627 = 0;
            var G__10628 = 0;
            seq__10613 = G__10625;
            chunk__10614 = G__10626;
            count__10615 = G__10627;
            i__10616 = G__10628;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__10629) {
    var writer = cljs.core.first(arglist__10629);
    var ss = cljs.core.rest(arglist__10629);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3941__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3941__auto__)) {
            var and__3941__auto____$1 = function() {
              var G__10633 = obj;
              if(G__10633) {
                if(function() {
                  var or__3943__auto__ = G__10633.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__10633.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__10633.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10633)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__10633)
              }
            }();
            if(cljs.core.truth_(and__3941__auto____$1)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3941__auto____$1
            }
          }else {
            return and__3941__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__10634 = obj;
              if(G__10634) {
                if(function() {
                  var or__3943__auto__ = G__10634.cljs$lang$protocol_mask$partition0$ & 2147483648;
                  if(or__3943__auto__) {
                    return or__3943__auto__
                  }else {
                    return G__10634.cljs$core$IPrintWithWriter$
                  }
                }()) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(function() {
                var or__3943__auto__ = cljs.core.type.call(null, obj) === Boolean;
                if(or__3943__auto__) {
                  return or__3943__auto__
                }else {
                  return typeof obj === "number"
                }
              }()) {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).call(null, opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__10636 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__10636;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__10635 = obj;
                            if(G__10635) {
                              if(function() {
                                var or__3943__auto__ = G__10635.cljs$lang$protocol_mask$partition0$ & 2147483648;
                                if(or__3943__auto__) {
                                  return or__3943__auto__
                                }else {
                                  return G__10635.cljs$core$IPrintWithWriter$
                                }
                              }()) {
                                return true
                              }else {
                                if(!G__10635.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__10635)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.type_satisfies_.call(null, cljs.core.IPrintWithWriter, G__10635)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__10641 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__10642 = null;
  var count__10643 = 0;
  var i__10644 = 0;
  while(true) {
    if(i__10644 < count__10643) {
      var obj = cljs.core._nth.call(null, chunk__10642, i__10644);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__10645 = seq__10641;
      var G__10646 = chunk__10642;
      var G__10647 = count__10643;
      var G__10648 = i__10644 + 1;
      seq__10641 = G__10645;
      chunk__10642 = G__10646;
      count__10643 = G__10647;
      i__10644 = G__10648;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10641);
      if(temp__4092__auto__) {
        var seq__10641__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__10641__$1)) {
          var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__10641__$1);
          var G__10649 = cljs.core.chunk_rest.call(null, seq__10641__$1);
          var G__10650 = c__3525__auto__;
          var G__10651 = cljs.core.count.call(null, c__3525__auto__);
          var G__10652 = 0;
          seq__10641 = G__10649;
          chunk__10642 = G__10650;
          count__10643 = G__10651;
          i__10644 = G__10652;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__10641__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__10653 = cljs.core.next.call(null, seq__10641__$1);
          var G__10654 = null;
          var G__10655 = 0;
          var G__10656 = 0;
          seq__10641 = G__10653;
          chunk__10642 = G__10654;
          count__10643 = G__10655;
          i__10644 = G__10656;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__10657) {
    var objs = cljs.core.seq(arglist__10657);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__10658) {
    var objs = cljs.core.seq(arglist__10658);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__10659) {
    var objs = cljs.core.seq(arglist__10659);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__10660) {
    var objs = cljs.core.seq(arglist__10660);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__10661) {
    var objs = cljs.core.seq(arglist__10661);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__10662) {
    var objs = cljs.core.seq(arglist__10662);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__10663) {
    var objs = cljs.core.seq(arglist__10663);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__10664) {
    var objs = cljs.core.seq(arglist__10664);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__10665) {
    var fmt = cljs.core.first(arglist__10665);
    var args = cljs.core.rest(arglist__10665);
    return printf__delegate(fmt, args)
  };
  printf.cljs$core$IFn$_invoke$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
goog.provide("cljs.core.Atom");
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var seq__10666 = cljs.core.seq.call(null, self__.watches);
  var chunk__10667 = null;
  var count__10668 = 0;
  var i__10669 = 0;
  while(true) {
    if(i__10669 < count__10668) {
      var vec__10670 = cljs.core._nth.call(null, chunk__10667, i__10669);
      var key = cljs.core.nth.call(null, vec__10670, 0, null);
      var f = cljs.core.nth.call(null, vec__10670, 1, null);
      f.call(null, key, this$, oldval, newval);
      var G__10672 = seq__10666;
      var G__10673 = chunk__10667;
      var G__10674 = count__10668;
      var G__10675 = i__10669 + 1;
      seq__10666 = G__10672;
      chunk__10667 = G__10673;
      count__10668 = G__10674;
      i__10669 = G__10675;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__10666);
      if(temp__4092__auto__) {
        var seq__10666__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__10666__$1)) {
          var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__10666__$1);
          var G__10676 = cljs.core.chunk_rest.call(null, seq__10666__$1);
          var G__10677 = c__3525__auto__;
          var G__10678 = cljs.core.count.call(null, c__3525__auto__);
          var G__10679 = 0;
          seq__10666 = G__10676;
          chunk__10667 = G__10677;
          count__10668 = G__10678;
          i__10669 = G__10679;
          continue
        }else {
          var vec__10671 = cljs.core.first.call(null, seq__10666__$1);
          var key = cljs.core.nth.call(null, vec__10671, 0, null);
          var f = cljs.core.nth.call(null, vec__10671, 1, null);
          f.call(null, key, this$, oldval, newval);
          var G__10680 = cljs.core.next.call(null, seq__10666__$1);
          var G__10681 = null;
          var G__10682 = 0;
          var G__10683 = 0;
          seq__10666 = G__10680;
          chunk__10667 = G__10681;
          count__10668 = G__10682;
          i__10669 = G__10683;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  return this$.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  return this$.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  return o === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__10687__delegate = function(x, p__10684) {
      var map__10686 = p__10684;
      var map__10686__$1 = cljs.core.seq_QMARK_.call(null, map__10686) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10686) : map__10686;
      var validator = cljs.core.get.call(null, map__10686__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__10686__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__10687 = function(x, var_args) {
      var p__10684 = null;
      if(arguments.length > 1) {
        p__10684 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10687__delegate.call(this, x, p__10684)
    };
    G__10687.cljs$lang$maxFixedArity = 1;
    G__10687.cljs$lang$applyTo = function(arglist__10688) {
      var x = cljs.core.first(arglist__10688);
      var p__10684 = cljs.core.rest(arglist__10688);
      return G__10687__delegate(x, p__10684)
    };
    G__10687.cljs$core$IFn$_invoke$arity$variadic = G__10687__delegate;
    return G__10687
  }();
  atom = function(x, var_args) {
    var p__10684 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___10689 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___10689)) {
    var validate_10690 = temp__4092__auto___10689;
    if(cljs.core.truth_(validate_10690.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_10691 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_10691, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__10692__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__10692 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__10692__delegate.call(this, a, f, x, y, z, more)
    };
    G__10692.cljs$lang$maxFixedArity = 5;
    G__10692.cljs$lang$applyTo = function(arglist__10693) {
      var a = cljs.core.first(arglist__10693);
      arglist__10693 = cljs.core.next(arglist__10693);
      var f = cljs.core.first(arglist__10693);
      arglist__10693 = cljs.core.next(arglist__10693);
      var x = cljs.core.first(arglist__10693);
      arglist__10693 = cljs.core.next(arglist__10693);
      var y = cljs.core.first(arglist__10693);
      arglist__10693 = cljs.core.next(arglist__10693);
      var z = cljs.core.first(arglist__10693);
      var more = cljs.core.rest(arglist__10693);
      return G__10692__delegate(a, f, x, y, z, more)
    };
    G__10692.cljs$core$IFn$_invoke$arity$variadic = G__10692__delegate;
    return G__10692
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__10694) {
    var iref = cljs.core.first(arglist__10694);
    arglist__10694 = cljs.core.next(arglist__10694);
    var f = cljs.core.first(arglist__10694);
    var args = cljs.core.rest(arglist__10694);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
goog.provide("cljs.core.Delay");
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).call(null, cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).call(null, cljs.core.swap_BANG_.call(null, self__.state, function(p__10695) {
    var map__10696 = p__10695;
    var map__10696__$1 = cljs.core.seq_QMARK_.call(null, map__10696) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10696) : map__10696;
    var curr_state = map__10696__$1;
    var done = cljs.core.get.call(null, map__10696__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__10698 = k;
    if(G__10698) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__10698.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__10698.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__10698)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__10698)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, k);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = typeof k === "number";
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          var or__3943__auto____$2 = k instanceof cljs.core.Keyword;
          if(or__3943__auto____$2) {
            return or__3943__auto____$2
          }else {
            return k instanceof cljs.core.Symbol
          }
        }
      }
    }()) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__10706 = x;
      if(G__10706) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__10706.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__10706.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__10706)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IEncodeJS, G__10706)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__10707_10713 = cljs.core.seq.call(null, x);
            var chunk__10708_10714 = null;
            var count__10709_10715 = 0;
            var i__10710_10716 = 0;
            while(true) {
              if(i__10710_10716 < count__10709_10715) {
                var vec__10711_10717 = cljs.core._nth.call(null, chunk__10708_10714, i__10710_10716);
                var k_10718 = cljs.core.nth.call(null, vec__10711_10717, 0, null);
                var v_10719 = cljs.core.nth.call(null, vec__10711_10717, 1, null);
                m[cljs.core.key__GT_js.call(null, k_10718)] = clj__GT_js.call(null, v_10719);
                var G__10720 = seq__10707_10713;
                var G__10721 = chunk__10708_10714;
                var G__10722 = count__10709_10715;
                var G__10723 = i__10710_10716 + 1;
                seq__10707_10713 = G__10720;
                chunk__10708_10714 = G__10721;
                count__10709_10715 = G__10722;
                i__10710_10716 = G__10723;
                continue
              }else {
                var temp__4092__auto___10724 = cljs.core.seq.call(null, seq__10707_10713);
                if(temp__4092__auto___10724) {
                  var seq__10707_10725__$1 = temp__4092__auto___10724;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__10707_10725__$1)) {
                    var c__3525__auto___10726 = cljs.core.chunk_first.call(null, seq__10707_10725__$1);
                    var G__10727 = cljs.core.chunk_rest.call(null, seq__10707_10725__$1);
                    var G__10728 = c__3525__auto___10726;
                    var G__10729 = cljs.core.count.call(null, c__3525__auto___10726);
                    var G__10730 = 0;
                    seq__10707_10713 = G__10727;
                    chunk__10708_10714 = G__10728;
                    count__10709_10715 = G__10729;
                    i__10710_10716 = G__10730;
                    continue
                  }else {
                    var vec__10712_10731 = cljs.core.first.call(null, seq__10707_10725__$1);
                    var k_10732 = cljs.core.nth.call(null, vec__10712_10731, 0, null);
                    var v_10733 = cljs.core.nth.call(null, vec__10712_10731, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_10732)] = clj__GT_js.call(null, v_10733);
                    var G__10734 = cljs.core.next.call(null, seq__10707_10725__$1);
                    var G__10735 = null;
                    var G__10736 = 0;
                    var G__10737 = 0;
                    seq__10707_10713 = G__10734;
                    chunk__10708_10714 = G__10735;
                    count__10709_10715 = G__10736;
                    i__10710_10716 = G__10737;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3941__auto__ = x;
    if(and__3941__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3394__auto__ = x == null ? null : x;
    return function() {
      var or__3943__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], true))
  };
  var js__GT_clj__2 = function() {
    var G__10758__delegate = function(x, opts) {
      if(function() {
        var G__10748 = cljs.core.IEncodeClojure;
        if(G__10748) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__10748.cljs$core$x$
            }
          }())) {
            return true
          }else {
            if(!G__10748.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, x, G__10748)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, x, G__10748)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__10749 = opts;
          var map__10749__$1 = cljs.core.seq_QMARK_.call(null, map__10749) ? cljs.core.apply.call(null, cljs.core.hash_map, map__10749) : map__10749;
          var keywordize_keys = cljs.core.get.call(null, map__10749__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__10749, map__10749__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3494__auto__ = function(map__10749, map__10749__$1, keywordize_keys, keyfn) {
                          return function iter__10754(s__10755) {
                            return new cljs.core.LazySeq(null, false, function(map__10749, map__10749__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__10755__$1 = s__10755;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__10755__$1);
                                  if(temp__4092__auto__) {
                                    var s__10755__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__10755__$2)) {
                                      var c__3492__auto__ = cljs.core.chunk_first.call(null, s__10755__$2);
                                      var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                                      var b__10757 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                                      if(function() {
                                        var i__10756 = 0;
                                        while(true) {
                                          if(i__10756 < size__3493__auto__) {
                                            var k = cljs.core._nth.call(null, c__3492__auto__, i__10756);
                                            cljs.core.chunk_append.call(null, b__10757, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__10759 = i__10756 + 1;
                                            i__10756 = G__10759;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10757), iter__10754.call(null, cljs.core.chunk_rest.call(null, s__10755__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10757), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__10755__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__10754.call(null, cljs.core.rest.call(null, s__10755__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__10749, map__10749__$1, keywordize_keys, keyfn), null)
                          }
                        }(map__10749, map__10749__$1, keywordize_keys, keyfn);
                        return iter__3494__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__10749, map__10749__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__10758 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10758__delegate.call(this, x, opts)
    };
    G__10758.cljs$lang$maxFixedArity = 1;
    G__10758.cljs$lang$applyTo = function(arglist__10760) {
      var x = cljs.core.first(arglist__10760);
      var opts = cljs.core.rest(arglist__10760);
      return G__10758__delegate(x, opts)
    };
    G__10758.cljs$core$IFn$_invoke$arity$variadic = G__10758__delegate;
    return G__10758
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__10761__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__10761 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__10761__delegate.call(this, args)
    };
    G__10761.cljs$lang$maxFixedArity = 0;
    G__10761.cljs$lang$applyTo = function(arglist__10762) {
      var args = cljs.core.seq(arglist__10762);
      return G__10761__delegate(args)
    };
    G__10761.cljs$core$IFn$_invoke$arity$variadic = G__10761__delegate;
    return G__10761
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__10763 = ret;
        f = G__10763;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__10764__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__10764 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__10764__delegate.call(this, f, args)
    };
    G__10764.cljs$lang$maxFixedArity = 1;
    G__10764.cljs$lang$applyTo = function(arglist__10765) {
      var f = cljs.core.first(arglist__10765);
      var args = cljs.core.rest(arglist__10765);
      return G__10764__delegate(f, args)
    };
    G__10764.cljs$core$IFn$_invoke$arity$variadic = G__10764__delegate;
    return G__10764
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__10766) {
    var f = cljs.core.first(arglist__10766);
    var args = cljs.core.rest(arglist__10766);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3943__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      var or__3943__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h).call(null, child), parent);
      if(or__3943__auto____$1) {
        return or__3943__auto____$1
      }else {
        var and__3941__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3941__auto__) {
          var and__3941__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3941__auto____$1) {
            var and__3941__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3941__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(function() {
                  var or__3943__auto____$2 = cljs.core.not.call(null, ret);
                  if(or__3943__auto____$2) {
                    return or__3943__auto____$2
                  }else {
                    return i === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret
                }else {
                  var G__10767 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__10768 = i + 1;
                  ret = G__10767;
                  i = G__10768;
                  continue
                }
                break
              }
            }else {
              return and__3941__auto____$2
            }
          }else {
            return and__3941__auto____$1
          }
        }else {
          return and__3941__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3943__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).call(null, h), tag, td, 
      parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).call(null, h), parent, ta, tag, td)], true)
    }();
    if(cljs.core.truth_(or__3943__auto__)) {
      return or__3943__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).call(null, h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__10769_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__10769_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__10769_SHARP_), cljs.core.second.call(null, p1__10769_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__10770_SHARP_, p2__10771_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__10770_SHARP_, p2__10771_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = xprefs;
    if(cljs.core.truth_(and__3941__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3941__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var or__3943__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__10772 = cljs.core.rest.call(null, ps);
          ps = G__10772;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3943__auto____$1)) {
      return or__3943__auto____$1
    }else {
      var or__3943__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__10773 = cljs.core.rest.call(null, ps);
            ps = G__10773;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3943__auto____$2)) {
        return or__3943__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3943__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__10776) {
    var vec__10777 = p__10776;
    var k = cljs.core.nth.call(null, vec__10777, 0, null);
    var _ = cljs.core.nth.call(null, vec__10777, 1, null);
    var e = vec__10777;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3943__auto__ = be == null;
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._reset[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._reset["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._add_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._add_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._remove_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._remove_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefer_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._get_method[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._get_method["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._methods[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._methods["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._prefers[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._prefers["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3941__auto__ = mf;
    if(and__3941__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3394__auto__ = mf == null ? null : mf;
    return function() {
      var or__3943__auto__ = cljs.core._dispatch[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core._dispatch["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
goog.provide("cljs.core.MultiFn");
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$1) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$1) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  return cljs.core.do_dispatch.call(null, mf, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__10778__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__10778 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__10778__delegate.call(this, _, args)
  };
  G__10778.cljs$lang$maxFixedArity = 1;
  G__10778.cljs$lang$applyTo = function(arglist__10779) {
    var _ = cljs.core.first(arglist__10779);
    var args = cljs.core.rest(arglist__10779);
    return G__10778__delegate(_, args)
  };
  G__10778.cljs$core$IFn$_invoke$arity$variadic = G__10778__delegate;
  return G__10778
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
goog.provide("cljs.core.UUID");
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var and__3941__auto__ = other instanceof cljs.core.UUID;
  if(and__3941__auto__) {
    return self__.uuid === other.uuid
  }else {
    return and__3941__auto__
  }
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
goog.provide("cljs.core.ExceptionInfo");
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "try*", "try*", -1636962424, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, 
  new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, 
  "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("observation_data.observation_points");
goog.require("cljs.core");
observation_data.observation_points.metadata = cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1970, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lohja Immula 1970-1970", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.25009, 60.25019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([24.16339, 24.16349], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100984], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1970, new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi Hulkonniemi 1970-1970", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.91708, 64.91718], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.94642, 28.94652], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101816], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1972, new cljs.core.Keyword(null, "end", "end", 1014004813), 1972, new cljs.core.Keyword(null, "title", "title", 1124275658), "Piikki\u00f6 Ylt\u00f6inen vertailuas 1972-1972", new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38339, 60.38349], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54665, 22.54675], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100942], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, "end", "end", 1014004813), 2006, new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Enonteki\u00f6 Hetta lentoasema 1999-2006", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.36238, 68.36248], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.42715, 23.42725], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101976], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 
1014004813), 2006, new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Malmi lentoasema 1959-2006", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.25345, 60.25355], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.0451, 25.0452], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101009], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 2006, new cljs.core.Keyword(null, "end", "end", 1014004813), 2006, new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Lehtim\u00e4ki 2006-2006", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.36847, 60.36857], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.62375, 25.62385], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101027], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 2011, new cljs.core.Keyword(null, "title", "title", 1124275658), "Turku lentoasema 1959-2011", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51534, 60.51544], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.2741, 22.2742], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101065], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 2011, new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu lentoasema 1959-2011", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.92894, 64.92904], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.34705, 25.34715], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101786], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 2011, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaasa lentoasema 1959-2011", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.04192, 63.04202], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.76407, 21.76417], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101462], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 2011, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pori lentoasema 1959-2011", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.46564, 61.46574], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.7934, 21.7935], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101044], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 2013, new cljs.core.Keyword(null, "title", "title", 1124275658), "N\u00e4rpi\u00f6 Alamarkku 1968-2013", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.65012, 62.65022], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.54632, 21.54642], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101468], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1982, new cljs.core.Keyword(null, "end", "end", 1014004813), 2013, new cljs.core.Keyword(null, "title", "title", 1124275658), "Karttula Kallioranta 1982-2013", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.85029, 62.85039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.27994, 27.28004], 
true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101579], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 2013, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kangasniemi kirkonkyl\u00e4 1965-2013", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.98, 61.98], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([26.63, 26.64], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101385], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 2013, new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Savonranta 1970-2013", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.16892, 62.18374], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.19679, 29.27718], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101448], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1969, new cljs.core.Keyword(null, "end", "end", 1014004813), 2013, new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Lepp\u00e4l\u00e4 1969-2013", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([69.66364, 69.66374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.07354, 27.07364], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102040], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Joensuun lentoasema 1959-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.65989, 62.65999], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.61143, 29.61153], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101608], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Lemland Nyhamn 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.95905, 59.96674], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.94658, 19.96336], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100909], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", 
"end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hailuoto Ojakyl\u00e4 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.01698, 65.03374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.71281, 24.77957], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101776], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kaarina Ylt\u00f6inen 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.38339, 60.38683], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54665, 22.55147], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100934], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Jokioinen Jokioisten observatorio 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.81396, 60.81406], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.49756, 23.49766], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101104], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Utti lentokentt\u00e4 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.89048, 60.9003], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.93014, 26.94109], 
true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101191], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "\u00c4ht\u00e4ri Myllym\u00e4ki 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.53352, 62.53501], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([24.11314, 24.2174], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101520], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Salo K\u00e4rkk\u00e4 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.36674, 
60.37378], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.09668, 23.11289], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100955], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lokka 1959-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([67.82049, 67.82156], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.73688, 27.7464], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102E3], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Vuotso 1959-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.08417, 68.10259], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.1221, 27.18823], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102001], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kajaani lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.2827, 64.2828], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.67327, 27.67337], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101725], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Punkaharju Laukansaari 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.8003, 61.80209], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.31512, 29.33027], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101441], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vesanto Sonkari 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.92173, 62.94831], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.39766, 26.42475], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101555], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Jomala Maarianhaminan lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.11665, 60.1248], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.89656, 19.90349], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100907], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tohmaj\u00e4rvi Kemie 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.23534, 62.23544], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.34657, 30.34667], true), 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101459], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Heinola Asemantaus 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.2, 61.2001], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.04945, 
26.04955], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101196], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kankaanp\u00e4\u00e4 Niinisalo Puolustusvoimat 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.83856, 61.83866], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.4634, 22.4635], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101270], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa Leivonm\u00e4ki Savenaho 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.87937, 
61.87947], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.09473, 26.09483], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101367], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sein\u00e4joki Pelmaa 1959-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([62.93699, 62.93813], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.48736, 22.48883], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101486], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Mustasaari Valassaaret 1959-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.43543, 63.43553], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.0645, 21.0646], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101464], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kokem\u00e4ki Rausenkulma 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.25997, 61.27102], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.22747, 22.24883], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101068], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautj\u00e4rvi Simpele Kangaskoski 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.42265, 61.43371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.34689, 29.39166], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101253], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.04416, 61.08367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.14686, 28.15104], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101237], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Anjala 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.69658, 60.71696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.79683, 26.81054], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101194], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hyvink\u00e4\u00e4 Hyvink\u00e4\u00e4nkyl\u00e4 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.59596, 60.59606], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.80313, 24.80323], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 
101130], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lohja Porla 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.24399, 60.2502], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.04674, 24.04934], true), 
new cljs.core.Keyword(null, "id", "id", 1013907597), 100974], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhava lentokentt\u00e4 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10018, 63.1205], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([23.02966, 23.04371], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101503], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaala Pelso 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.49185, 64.50149], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.42381, 26.47027], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101800], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Maasoja 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.41678, 
60.41882], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.39674, 24.39851], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100976], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([61.66813, 61.7349], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.1968, 27.3049], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101398], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kotka Rankki 1959-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.3754, 60.3755], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.95843, 26.95853], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101030], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.5588, 66.5589], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.83144, 25.83154], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101920], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Rovaniemi Apukka 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.57856, 66.57941], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.01085, 26.01474], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101933], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.98255, 65.99629], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.18061, 29.22429], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101886], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Juupajoki Hyyti\u00e4l\u00e4 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.84563, 61.85026], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.27989, 24.2873], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101317], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Siilinj\u00e4rvi Kuopion lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.00836, 63.00846], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.79913, 27.79923], 
true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101570], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Parainen Ut\u00f6 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.78334, 59.78428], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([21.36778, 21.3801], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100908], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.39753, 
62.39763], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.67082, 25.67092], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101339], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Russar\u00f6 1959-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([59.77356, 59.77366], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.95189, 22.95199], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100932], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kaskinen S\u00e4lgrund 1959-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.33344, 62.3337], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.17965, 21.1904], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101256], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Helsinki Kaisaniemi 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17518, 60.17528], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.94454, 24.94464], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100971], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Maaninka Halola 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.14338, 63.14348], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.31312, 27.31322], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101572], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Haapavesi Mustikkam\u00e4ki 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.1421, 64.15039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.4245, 25.42974], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101695], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vierem\u00e4 Kaarakkala 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.83365, 63.84118], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.19646, 27.22062], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101726], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Muonio Alamuonio 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.96934, 67.96944], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.67164, 23.67174], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101969], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sodankyl\u00e4 Lapin ilmatieteellinen tutkimuskeskus 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.36658, 67.37974], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.62868, 26.646], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 
101932], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Ivalo lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.59916, 68.61732], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.41242, 27.43392], 
true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102033], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Keminmaa Kemi-Tornion lentoasema 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.78367, 65.78377], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([24.57935, 24.57945], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101840], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Siikajoki Revonlahti 1959-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.68363, 
64.68401], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.08871, 25.09631], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101787], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1959, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vantaa Helsinki-Vantaan lentoasema 1959-", new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.32734, 60.32744], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.95706, 24.95716], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100968], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1961, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Enonkoski Simanala 1961-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.0503, 62.05568], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.04402, 29.0469], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101446], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1961, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, 
new cljs.core.Keyword(null, "title", "title", 1124275658), "Lahti Laune 1961-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.96206, 60.96694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.63007, 25.63095], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101152], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1961, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 N\u00e4kk\u00e4l\u00e4 1961-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.60298, 68.60308], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.57594, 23.57604], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102019], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1961, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kruunupyy lentoasema 1961-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.71688, 63.71759], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.13869, 23.14635], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101662], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1962, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Juuka Niemel\u00e4 1962-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.21702, 63.25045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.21333, 29.24677], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101609], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1962, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Kevo 1962-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.75632, 69.75642], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.00673, 27.00683], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102035], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1962, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inkoo B\u00e5gask\u00e4r 1962-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.93105, 59.93351], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01344, 24.01412], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100969], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1963, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Tv\u00e4rminne 1963-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.84395, 59.84405], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.2484, 23.2485], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100953], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1963, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hausj\u00e4rvi Lavinto 1963-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.80514, 60.81691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.84361, 
24.84682], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101139], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1963, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Lammi Pappila 1963-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05403, 61.05413], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([25.03839, 25.03849], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101154], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1964, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylitornio Meltosj\u00e4rvi 1964-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.52947, 
66.53127], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.64955, 24.64972], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101908], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1964, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hein\u00e4vesi Palokki 1964-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([62.56698, 62.57058], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.56338, 28.59253], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101589], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1964, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski kk 1964-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.28383, 67.28604], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.1627, 28.1801], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101952], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1964, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "J\u00e4ms\u00e4 Halli lentokentt\u00e4 1964-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.85018, 61.85667], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.78576, 24.79669], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101315], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Teuva Kauppilankyl\u00e4 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.46678, 62.49189], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.61301, 21.76312], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101262], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sysm\u00e4 Joutsj\u00e4rvi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.51091, 61.51696], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.81133, 25.81346], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101342], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lavia Riiho 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.61454, 61.61688], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.54094, 22.5466], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101273], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Yl\u00f6j\u00e4rvi Mets\u00e4kyl\u00e4 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.60013, 61.6169], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.49655, 
23.50415], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101295], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen Vahoj\u00e4rvi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.92119, 61.92129], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([23.09238, 23.09248], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101298], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sulkava Halttula 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.91695, 
61.92371], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.31344, 28.3202], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101425], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00f6yli\u00f6 Yttil\u00e4 1965-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([61.10008, 61.11018], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.36323, 22.37416], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101077], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Viitasaari Kolima K\u00e4rn\u00e4 1965-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.16693, 63.16758], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.92981, 25.93602], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101545], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "\u00c4\u00e4nekoski Kalaniemi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.86692, 62.88368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.82984, 25.86329], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101541], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Siikalatva Kestil\u00e4 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.35032, 64.3557], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.27967, 26.29894], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101717], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhajoki kaupunki 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41546, 62.4169], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.16305, 22.18992], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101284], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Nokia Tottij\u00e4rvi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.39643, 61.39653], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.33632, 23.33642], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101116], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vihti Hiiskula 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51679, 60.52494], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.5134, 24.51572], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101135], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "P\u00f6yty\u00e4 Yl\u00e4ne 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.87136, 60.87146], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.38795, 22.38805], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101093], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieto Tammentaka 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.56673, 60.57391], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.42996, 22.44673], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101070], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Jyv\u00e4skyl\u00e4 Muuratj\u00e4rvi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.15021, 62.15503], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.34658, 
25.42475], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101352], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Toholampi Oravala 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.76357, 63.76701], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([24.28074, 24.29641], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101679], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Rantakyl\u00e4 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.66691, 
61.67467], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.21341, 27.22234], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101402], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Uusikaupunki Nervanderinpuisto 1965-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.80004, 60.802], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.42463, 21.42999], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101049], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Utaj\u00e4rvi S\u00e4rkij\u00e4rvi 1965-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.9277, 64.9338], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.18862, 27.19641], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101809], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kaustinen Tastula 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.59356, 63.59366], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.71657, 23.71667], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101665], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Joensuu Pyh\u00e4selk\u00e4 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.51701, 62.51716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.79679, 29.80783], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101610], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Joensuu Huhtilampi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41702, 62.43656], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.39683, 30.40832], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101460], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Outokumpu Viuruniemi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.61699, 62.61736], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.94229, 28.94683], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101590], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kalajoki Mets\u00e4kyl\u00e4 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.27359, 64.28369], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.19622, 24.20743], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101685], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00e4rs\u00e4m\u00e4ki Venetpalo 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.88362, 63.90039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.76304, 25.7848], 
true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101700], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kiuruvesi Korpijoki 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.72863, 63.73373], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([26.34643, 26.36986], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101712], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Raja-Jooseppi Akuj\u00e4rvi 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.47062, 
68.47072], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.31614, 28.31624], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102008], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pello Konttaj\u00e4rvi 1965-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([66.83372, 66.84132], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.3625, 24.39594], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101909], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Kelloselk\u00e4 1965-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.93383, 66.94589], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.96281, 28.97596], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101956], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1965, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Huittinen Sallila 1965-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.02331, 61.02358], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.69858, 22.6987], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101075], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1966, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Alavus Sulkavankyl\u00e4 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.44928, 62.45027], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.54645, 23.55497], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101305], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1966, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ikaalinen Vehuvarpee 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.73345, 61.73911], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.81317, 22.82993], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101277], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1966, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Karvia Alkkia 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.1832, 62.19066], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.70373, 22.79977], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101272], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1966, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Laitila Haukka 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.83311, 60.83321], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.75685, 21.75695], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101050], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1966, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Pirttikoski 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.00651, 61.08356], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.92004, 24.11342], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101143], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1966, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmes Mujej\u00e4rvi 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.78371, 63.82492], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.4466, 29.46338], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101763], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1966, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Kiutak\u00f6ng\u00e4s 1966-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.36994, 66.37004], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.31188, 
29.31198], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101887], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1967, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Merikarvia Tuorila Alakyl\u00e4 1967-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.84842, 61.84852], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.65087, 21.65097], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101257], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1967, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Halsua Kanala Purola 1967-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.44559, 
63.45033], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.44417, 24.44646], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101528], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1967, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Saviaho 1967-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([63.95036, 63.95518], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.42596, 28.42995], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101745], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1967, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tyrn\u00e4v\u00e4 Temmes 1967-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.65032, 64.65848], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.59625, 25.61718], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101790], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1967, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kuusamo Toranginaho 1967-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.95046, 65.95334], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.12963, 29.16307], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101891], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1967, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Joutsa P\u00e4rn\u00e4m\u00e4ki 1967-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.76605, 61.76699], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.39225, 26.39679], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101390], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Utsjoki Nuorgam 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([70.08198, 70.08888], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.89135, 27.9406], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102036], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Luhanka Tammij\u00e4rvi 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.83532, 61.83542], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.85365, 25.85375], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101348], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna Laukansaari 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.79598, 61.80039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.83015, 28.84617], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101423], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Isojoki K\u00e4rjenkoski 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.13283, 62.13293], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.67357, 21.67367], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101258], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola Korplax 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.85021, 63.88365], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.19623, 23.23466], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101667], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Posio Raistakka 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.97877, 65.98387], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.1629, 
28.17105], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101881], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1968, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ristij\u00e4rvi Hiisij\u00e4rvi 1968-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.36621, 64.36715], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.5798, 28.60769], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101748], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1969, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Mustasaari Riimala 1969-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.96681, 
62.98357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.74628, 21.77971], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101474], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1969, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kalajoki Pitk\u00e4senkyl\u00e4 1969-", new cljs.core.Keyword(null, 
"lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.23108, 64.23368], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01289, 24.01576], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101683], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1969, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), 
"Lohja Nummi-Pusula Lepp\u00e4korpi 1969-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.49121, 60.49131], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76612, 23.76622], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100963], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1969, new cljs.core.Keyword(null, "end", "end", 
1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Savukoski Ruuvaoja 1969-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.65053, 67.65624], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.70901, 28.71278], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102007], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 
1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Angeli 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.90959, 68.90969], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.66231, 25.66241], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102024], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Taivalkoski Inkee 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.73377, 65.7346], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.54629, 28.56086], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101882], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi N\u00e4lj\u00e4nk\u00e4 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.21708, 65.23969], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.41302, 28.44839], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101822], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Mikkeli Pitk\u00e4hiekka 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.01692, 62.03424], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.19392, 27.1968], true), 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101410], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Iitti Kausala 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.88765, 60.93361], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.26344, 
26.35349], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101210], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Orip\u00e4\u00e4 Teinikivi 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.90008, 60.90435], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([22.6966, 22.7117], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101081], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pelkosenniemi kirkonkyl\u00e4 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.1002, 
67.10058], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.49601, 27.51], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101947], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Jalasj\u00e4rvi Hirvij\u00e4rvi 1970-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([62.47293, 62.47303], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.91002, 22.91012], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101285], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Valtimo kk 1970-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.66703, 63.66735], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.82922, 28.83001], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101743], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Asikkala Uraj\u00e4rvi 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.13351, 61.13722], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.79256, 25.79683], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101168], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "M\u00e4nts\u00e4l\u00e4 Hirvihaara 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.62486, 60.63357], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.22432, 25.31353], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101166], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Viitasaari Haapaniemi 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.0767, 63.08254], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.8482, 25.85867], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101537], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi Sarakyl\u00e4 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.78985, 65.80051], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.32952, 27.33297], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101877], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Rautavaara Ala-Luosta 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.267, 63.27154], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.46328, 28.47004], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101599], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Voikoski 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.25132, 61.25142], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.77899, 
26.77909], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101211], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa Koli 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.10877, 63.10887], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([29.75841, 29.75851], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101616], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lieksa Lampela 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.30532, 63.32113], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.02397, 30.04583], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101636], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi Naarva 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.03244, 
63.03254], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([31.05916, 31.05926], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101641], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani Saaresm\u00e4ki 1970-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([64.05116, 64.0671], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.92531, 26.92984], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101721], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi Jaurakkaj\u00e4rvi 1970-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.16067, 65.16716], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.61297, 27.64669], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101812], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kolari Kattilamaa 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.3843, 67.40051], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.01183, 24.17916], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101913], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Nurmij\u00e4rvi geofysiikan observatorio 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.50873, 60.51689], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.64674, 24.65378], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101149], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lapinlahti Lammink\u00e4yr\u00e4 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.37753, 63.38374], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.36987, 27.37996], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101577], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1970, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pello kk Museotie 1970-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.7667, 66.77283], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.96298, 23.9688], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101914], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1971, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "R\u00e4\u00e4kkyl\u00e4 kk 1971-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.31132, 62.31142], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.6293, 
29.6294], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101450], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1971, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Jomala Jomalaby 1971-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17831, 60.18341], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([19.97989, 19.98638], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100917], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1971, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Pokka 1971-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.16967, 68.16977], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.78301, 25.78311], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101994], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1974, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla V\u00e4rri\u00f6tunturi 1974-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([67.74806, 67.74816], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.61107, 29.61117], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102012], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1974, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Savonlinna lentoasema 1974-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.9464, 61.95039], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.93153, 28.94691], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101430], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1976, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rautavaara Yl\u00e4-Luosta 1976-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.37801, 63.38377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66161, 28.66338], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101603], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1976, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Saariselk\u00e4 matkailukeskus 1976-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.41501, 68.41833], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.41097, 27.41331], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102005], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1977, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Virolahti Koivuniemi 1977-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.51688, 60.53364], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.67268, 27.68033], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101231], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1978, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Suonenjoki Iisvesi 1978-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.66444, 62.66704], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.02994, 27.04699], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101578], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1978, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ristij\u00e4rvi Mustavaara 1978-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.45039, 64.46966], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.61314, 28.61823], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101753], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1978, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kilpisj\u00e4rvi kyl\u00e4keskus 1978-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.04942, 69.04952], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.79112, 
20.79122], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102016], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1979, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pirkkala Tampere-Pirkkalan lentoasema 1979-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.42069, 61.42079], true), new cljs.core.Keyword(null, 
"lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.61991, 23.62001], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101118], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1980, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kurikka Py\u00f6rni 1980-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.73346, 
62.73384], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.95939, 21.97976], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101478], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1981, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Suomussalmi Pesi\u00f6 1981-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([64.93122, 64.93132], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.74668, 28.74678], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101826], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1981, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi I majakka 1981-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.38364, 65.38541], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.09605, 24.09615], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101783], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1981, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Porvoo Kalb\u00e5dagrund 1981-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.98513, 59.98523], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.5985, 25.5986], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101022], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1981, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kalajoki Ulkokalla 1981-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.33099, 64.33367], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.44617, 23.44652], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101673], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 1981, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hammarland M\u00e4rket 1981-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.29996, 60.30103], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([19.12984, 19.13147], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100919], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1981, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi P\u00f6ts\u00f6nvaara 1981-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.14228, 63.14238], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([31.04419, 31.04429], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101649], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1983, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Hetta 1983-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.38601, 68.40055], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.58773, 23.72894], true), 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101974], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1984, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi Ajos 1984-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.67287, 65.73377], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.51269, 
24.5153], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101846], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1984, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hailuoto Marjaniemi 1984-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.03364, 65.03999], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([24.56144, 24.5629], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101784], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1984, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Loviisa Orrengrund 1984-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.27483, 
60.27493], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.44452, 26.44462], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101039], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1984, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Em\u00e4salo 1984-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([60.20375, 60.21691], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.62543, 25.63025], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101023], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1984, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "K\u00f6kar Bogsk\u00e4r 1984-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.50551, 59.50561], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.35551, 20.35561], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100921], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1984, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kustavi Isokari 1984-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.7167, 60.72235], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.01322, 21.02679], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101059], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1986, new cljs.core.Keyword(null, "end", 
"end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kotka Haapasaari 1986-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.28657, 60.28667], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.18522, 27.18532], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101042], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 
1123661780), 1987, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pielavesi Venetm\u00e4ki 1987-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.31502, 63.31707], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.97902, 26.97995], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101569], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1990, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hanko Tulliniemi 1990-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.80856, 59.80866], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.91578, 22.91588], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100946], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Multia Pirttiper\u00e4 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.41041, 62.41056], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.04991, 25.05061], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101363], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi\u00f6nsaari V\u00e4n\u00f6 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.8667, 59.86957], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.19336, 22.19679], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100945], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Raasepori Jussar\u00f6 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.82051, 59.82061], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.57634, 23.57644], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 100965], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Raahe Lapaluoto 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.65, 64.68], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.41, 
24.46], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101785], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Nellim 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.84915, 68.84925], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([28.29905, 28.29915], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102052], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio Ritoniemi 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.79888, 62.8004], true), 
new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.90492, 27.91341], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101580], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Rauma Kylm\u00e4pihlaja 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.14472, 61.15015], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.29651, 21.30278], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101061], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Kilpisj\u00e4rvi Saana 1991-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.04269, 69.04279], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.85128, 20.85138], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102017], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Inari V\u00e4yl\u00e4 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.07214, 69.07224], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.49245, 27.49255], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102042], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1991, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Luhanka Judinsalo 1991-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.70019, 61.70448], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.49665, 25.50525], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101362], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Asikkala Pulkkilanharju 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.26506, 61.26694], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.52014, 25.53013], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101185], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Turku Rajakari 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.37783, 60.38347], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.0133, 22.09645], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100947], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Korsn\u00e4s Bredsk\u00e4ret 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.93428, 62.93438], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.1852, 21.1853], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101479], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Enonteki\u00f6 Karesuvanto 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.4504, 68.4505], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.49539, 22.49549], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101968], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Sotkamo Kuolaniemi 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.11148, 64.11714], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.32982, 
28.33881], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101756], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kirkkonummi M\u00e4kiluoto 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.91676, 59.92019], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([24.34679, 24.34939], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100997], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Virrat \u00c4ij\u00e4nneva 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.32778, 
62.32788], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.54223, 23.54233], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101310], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhajoki Kuja-Kokko 1992-", new cljs.core.Keyword(null, "lat", "lat", 
1014011153), cljs.core.PersistentVector.fromArray([62.4134, 62.4135], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.18367, 22.18377], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101289], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Juva Partala 1992-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.89225, 61.89235], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.88523, 27.88533], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101418], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Toholampi Laitala 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.78357, 63.82145], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.16296, 24.16361], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101689], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1992, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Ojakyl\u00e4 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.73595, 63.75038], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.70564, 25.71316], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101705], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta Konnunsuo 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.03874, 61.03884], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.5639, 28.564], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101246], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Parikkala Koitsanlahti 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.44462, 61.44472], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.46103, 29.46113], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101254], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Parainen Fagerholm 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.11158, 60.11168], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.69934, 21.69944], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100924], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1992, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere Siilinkari 1992-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.51752, 61.51762], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.75364, 23.75374], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101311], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1993, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Rukatunturi 1993-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.16564, 66.16724], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.14627, 29.15156], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101897], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1994, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Puolanka Kotila 1994-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.66594, 64.66715], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.02918, 28.0465], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101830], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1995, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta Lepola 1995-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.05024, 61.05759], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.19687, 28.20878], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101247], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1995, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pietarsaari Kallan 1995-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.75019, 63.75151], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.52285, 22.52964], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101660], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1995, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pelkosenniemi Pyh\u00e4tunturi 1995-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.02199, 67.02209], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.21835, 27.21845], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101958], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1995, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Levitunturi 1995-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.78467, 67.78477], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.85314, 24.85324], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101981], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1995, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Saariselk\u00e4 Kaunisp\u00e4\u00e4 1995-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.43263, 68.43273], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.44466, 
27.44476], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102006], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1996, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Alaj\u00e4rvi M\u00f6ksy 1996-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.08354, 63.08906], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([24.26093, 24.26317], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101533], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1996, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola Tankar 1996-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.95021, 
63.95092], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.84434, 22.8463], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101661], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1996, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pori Tahkoluoto 1996-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.63035, 61.63045], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.37587, 21.37597], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101267], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1996, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Muonio Laukukero 1996-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.06279, 68.06289], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.0333, 24.0334], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101982], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1996, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Muonio Sammaltunturi 1996-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.96711, 67.97337], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.11229, 24.11594], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101983], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1996, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu Vihre\u00e4saari 1996-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.00616, 65.00626], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.39313, 25.39323], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101794], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pyh\u00e4j\u00e4rvi Hiidenniemi 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.61, 63.61], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.47, 25.47], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101706], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere H\u00e4rm\u00e4l\u00e4 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.46567, 61.46577], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.74649, 23.74659], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101124], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Liperi Tuiskavanluoto 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.54617, 62.54627], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.66845, 29.66855], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101628], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Maalahti Str\u00f6mmingsb\u00e5dan 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.97844, 62.97854], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([20.73983, 
20.73993], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101481], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Rantasalmi Rukkasluoto 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.06307, 62.06317], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([28.56594, 28.56604], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101436], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kristiinankaupunki Majakka 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.20343, 
62.20353], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.16966, 21.16976], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101268], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo Raiskio 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([64.05567, 64.05577], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.3138, 29.3139], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101771], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Raahe Nahkiainen 1997-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.61194, 64.61204], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.89617, 23.89627], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101775], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Rovaniemi rautatieasema 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.4984, 66.4985], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.70821, 25.70831], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101928], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1997, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuhmo Kalliojoki 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.29781, 64.29791], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.16647, 30.16657], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101773], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 1997, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ruokolahti Kotaniemi Siitonen 1997-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.36693, 61.36847], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.66353, 28.68024], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101248], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 1998, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kankaanp\u00e4\u00e4 Niinisalo lentokentt\u00e4 1998-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.83844, 61.84188], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.46314, 22.46379], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 
101291], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1998, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuusamo Teeriranta 1998-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.52007, 65.52017], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.52072, 29.52082], 
true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101898], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla kk Myllytie 1999-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.83398, 66.83408], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([28.67422, 28.67432], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101959], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pudasj\u00e4rvi lentokentt\u00e4 1999-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.40009, 
65.40019], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.96306, 26.96316], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101805], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ilomantsi Mekrij\u00e4rvi 1999-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([62.76961, 62.76971], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([30.97528, 30.97538], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101651], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Salla Naruska 1999-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.16221, 67.16231], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.17761, 29.17771], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101966], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kittil\u00e4 lentoasema 1999-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.68377, 67.69607], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.84572, 24.85821], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101986], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 1999, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Joroinen Varkauden lentoasema 1999-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.17389, 62.17399], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.86033, 27.86043], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101420], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2E3, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylivieska lentokentt\u00e4 2000-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.03666, 64.05023], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.71879, 24.72417], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101690], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2E3, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ylivieska V\u00e4h\u00e4kangas 2000-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.06666, 64.06676], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.67351, 24.67361], true), 
new cljs.core.Keyword(null, "id", "id", 1013907597), 101691], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2E3, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani Paltaniemi 2000-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.29149, 64.29159], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.63676, 
27.63686], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101742], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2E3, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kumlinge kirkonkyl\u00e4 2000-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.25807, 60.25817], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([20.74715, 20.74725], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100928], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2001, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Katinen 2001-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.99931, 
60.99941], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.49139, 24.49149], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101150], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2002, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Salo Kiikala lentokentt\u00e4 2002-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([60.46409, 60.46419], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.64976, 23.64986], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100967], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2002, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Taivalkoski kk Kauppatie 2002-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.57432, 65.57442], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.24436, 28.24446], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101885], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2002, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kittil\u00e4 Kentt\u00e4rova 2002-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.98723, 67.98733], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.24283, 24.24293], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101987], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2002, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tornio Aapaj\u00e4rvi 2002-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.06956, 66.06966], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.14416, 24.14426], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101850], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2003, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Turku Artukainen 2003-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.45449, 60.45459], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.1783, 22.1784], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100949], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2003, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Rajajooseppi 2003-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.47795, 68.47805], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.30118, 28.30128], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102009], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2003, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Helsingin majakka 2003-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([59.94844, 59.94854], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.9268, 24.9269], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101003], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2003, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari kirkonkyl\u00e4 2003-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.90582, 68.90592], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01397, 27.01407], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 102046], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2004, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Alakyl\u00e4 2004-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.26245, 67.26255], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.96584, 
24.96594], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101918], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2005, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Espoo Sep\u00e4nkyl\u00e4 2005-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20769, 60.20779], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([24.74117, 24.74127], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101005], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2005, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kuopio Savilahti 2005-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.89255, 
62.89265], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.6334, 27.6335], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101586], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2005, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "H\u00e4meenlinna Lammi Evo 2005-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([61.21655, 61.21665], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.13278, 25.13288], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101189], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2006, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Kumpula 2006-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.20277, 60.20312], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.96104, 24.96136], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101004], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2006, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Kemij\u00e4rvi lentokentt\u00e4 2006-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([66.71551, 66.71561], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.15907, 27.15917], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101950], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2006, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Porvoo Harabacka 2006-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.39153, 60.39163], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.60818, 25.60828], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101028], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 2006, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Hattula Lepaa 2006-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.11473, 61.11483], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.3244, 24.3245], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101151], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Varkaus Kosulanniemi 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.32223, 62.32233], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.90782, 27.90792], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101421], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokkola Hollihaka 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.84439, 63.84449], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.12428, 23.12438], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101675], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Oulu Oulunsalo Pellonp\u00e4\u00e4 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.93783, 64.93793], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.37176, 25.37186], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101799], 
true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tornio Torppi 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.84701, 65.84711], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.17348, 24.17358], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101851], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kaamanen 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.14084, 69.14094], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.26562, 
27.26572], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102047], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Ranua lentokentt\u00e4 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([65.97679, 65.97689], true), new cljs.core.Keyword(null, "lon", "lon", 
1014011581), cljs.core.PersistentVector.fromArray([26.36749, 26.36759], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101873], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Multia Karhila 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.51039, 62.51049], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.80759, 24.80769], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101536], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "J\u00e4ms\u00e4 Halli Lentoasemantie 2008-", new cljs.core.Keyword(null, "lat", 
"lat", 1014011153), cljs.core.PersistentVector.fromArray([61.85962, 61.85972], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.81492, 24.81502], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101338], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kouvola Utti Lentoportintie 2008-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.89047, 60.89057], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([26.94125, 26.94135], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101219], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Inari Angeli Lintupuoliselk\u00e4 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([68.90291, 68.90301], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([25.73641, 25.73651], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102026], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2008, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Pori rautatieasema 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.47888, 61.47898], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.78315, 21.78325], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101064], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", 
"start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kauhava kk Uunimaantie 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.12018, 63.12028], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.04355, 23.04365], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101519], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2008, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Joensuu Linnunlahti 2008-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([62.6015, 62.6016], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([29.72375, 29.72385], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101632], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2009, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Kirakkaj\u00e4rvi 2009-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.58245, 69.58255], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.89404, 28.89414], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 102055], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2009, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kemi\u00f6nsaari Kemi\u00f6 kk 2009-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17145, 60.17155], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.75752, 22.75762], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100951], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2009, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Puolanka Paljakka 2009-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.66399, 64.66409], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.05668, 28.05678], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 101831], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2009, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Rautatientori 2009-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.17164, 60.17174], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.94455, 
24.94465], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101007], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2009, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 kk 2009-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.65205, 67.65215], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), 
cljs.core.PersistentVector.fromArray([24.90157, 24.90167], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101990], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2009, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Lappeenranta Hiekkapakka 2009-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.19803, 61.19813], 
true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.47269, 28.47279], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101252], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2010, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kokem\u00e4ki Tulkkila 2010-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([61.25289, 61.25299], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([22.34608, 22.34618], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101103], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2010, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaasa Klemettil\u00e4 2010-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([63.0987, 63.0988], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([21.63947, 21.63957], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101485], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2010, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, 
"title", "title", 1124275658), "Utsjoki Kevo Kevoj\u00e4rvi 2010-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.75695, 69.75705], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.01195, 27.01205], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 126737], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2010, new cljs.core.Keyword(null, 
"end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kittil\u00e4 Matorova 2010-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([67.99993, 68.00003], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.23998, 24.24008], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101985], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"start", "start", 1123661780), 2010, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Kajaani Pet\u00e4isenniska 2010-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.21662, 64.21672], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.75495, 27.75505], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 126736], true), 
cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2011, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Inari Seitalaassa 2011-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([69.04827, 69.04837], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([27.75677, 27.75687], true), new cljs.core.Keyword(null, 
"id", "id", 1013907597), 129963], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2011, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Somero Salkola 2011-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([60.6465, 60.6466], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.80584, 
23.80594], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 101128], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2011, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Vaala Pelso Puutteenper\u00e4 2011-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([64.51128, 64.51138], true), new cljs.core.Keyword(null, "lon", 
"lon", 1014011581), cljs.core.PersistentVector.fromArray([26.46051, 26.46061], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 134522], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2012, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Puumala kk Urheilukentt\u00e4 2012-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.52237, 
61.52247], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([28.18486, 28.18496], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 150168], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2013, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Helsinki Harmaja 2013-", new cljs.core.Keyword(null, "lat", "lat", 1014011153), 
cljs.core.PersistentVector.fromArray([60.10011, 60.10493], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([24.97541, 24.98023], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 100996], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "start", "start", 1123661780), 2013, new cljs.core.Keyword(null, "end", "end", 1014004813), 1E4, new cljs.core.Keyword(null, "title", "title", 1124275658), "Tampere keskusta Satakunnankatu 2013-", 
new cljs.core.Keyword(null, "lat", "lat", 1014011153), cljs.core.PersistentVector.fromArray([61.50118, 61.50128], true), new cljs.core.Keyword(null, "lon", "lon", 1014011581), cljs.core.PersistentVector.fromArray([23.76463, 23.76473], true), new cljs.core.Keyword(null, "id", "id", 1013907597), 151049], true)], true);
observation_data.observation_points.name_to_record = cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.flatten.call(null, cljs.core.map.call(null, function(el) {
  return cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword(null, "title", "title", 1124275658)).call(null, el), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), (new cljs.core.Keyword(null, "id", "id", 1013907597)).call(null, el), new cljs.core.Keyword(null, "start", "start", 1123661780), (new cljs.core.Keyword(null, "start", "start", 1123661780)).call(null, el), new cljs.core.Keyword(null, "end", "end", 1014004813), (new cljs.core.Keyword(null, 
  "end", "end", 1014004813)).call(null, el)], true)], true)
}, observation_data.observation_points.metadata)));
observation_data.observation_points.name_to_id = function name_to_id(name) {
  return(new cljs.core.Keyword(null, "id", "id", 1013907597)).call(null, observation_data.observation_points.name_to_record.call(null, name))
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
    this.creationStack = (new Error).stack;
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.MonitoringMode = {OFF:0, PERMANENT:1, INTERACTIVE:2};
goog.Disposable.MONITORING_MODE = 0;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.onDisposeCallbacks_;
goog.Disposable.prototype.creationStack;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.MONITORING_MODE != goog.Disposable.MonitoringMode.OFF) {
      var uid = goog.getUid(this);
      if(goog.Disposable.MONITORING_MODE == goog.Disposable.MonitoringMode.PERMANENT && !goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable))
};
goog.Disposable.prototype.addOnDisposeCallback = function(callback, opt_scope) {
  if(!this.onDisposeCallbacks_) {
    this.onDisposeCallbacks_ = []
  }
  this.onDisposeCallbacks_.push(goog.bind(callback, opt_scope))
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.onDisposeCallbacks_) {
    while(this.onDisposeCallbacks_.length) {
      this.onDisposeCallbacks_.shift()()
    }
  }
};
goog.Disposable.isDisposed = function(obj) {
  if(obj && typeof obj.isDisposed == "function") {
    return obj.isDisposed()
  }
  return false
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.ASSUME_ANY_VERSION = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.ASSUME_ANDROID = false;
goog.userAgent.ASSUME_IPHONE = false;
goog.userAgent.ASSUME_IPAD = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && ua.indexOf("Android") >= 0;
  goog.userAgent.detectedIPhone_ = !!ua && ua.indexOf("iPhone") >= 0;
  goog.userAgent.detectedIPad_ = !!ua && ua.indexOf("iPad") >= 0
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode
};
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if(!doc || !goog.userAgent.IE) {
    return undefined
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5)
}();
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), HAS_NAVIGATOR_ONLINE_PROPERTY:!goog.userAgent.WEBKIT || goog.userAgent.isVersion("528"), HAS_HTML5_NETWORK_EVENT_SUPPORT:goog.userAgent.GECKO && goog.userAgent.isVersion("1.9b") || goog.userAgent.IE && goog.userAgent.isVersion("8") || goog.userAgent.OPERA && 
goog.userAgent.isVersion("9.5") || goog.userAgent.WEBKIT && goog.userAgent.isVersion("528"), HTML5_NETWORK_EVENTS_FIRE_ON_BODY:goog.userAgent.GECKO && !goog.userAgent.isVersion("8") || goog.userAgent.IE && !goog.userAgent.isVersion("9"), TOUCH_ENABLED:"ontouchstart" in goog.global || !!(goog.global["document"] && document.documentElement && "ontouchstart" in document.documentElement) || !!(goog.global["navigator"] && goog.global["navigator"]["msMaxTouchPoints"])};
goog.provide("goog.events.Event");
goog.provide("goog.events.EventLike");
goog.require("goog.Disposable");
goog.events.EventLike;
goog.events.Event = function(type, opt_target) {
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.events.Event.prototype.disposeInternal = function() {
};
goog.events.Event.prototype.dispose = function() {
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.defaultPrevented = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.defaultPrevented = true;
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAG:"drag", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", DRAGEND:"dragend", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", BEFOREUNLOAD:"beforeunload", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", 
POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", ONLINE:"online", OFFLINE:"offline", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend", MSGESTURECHANGE:"MSGestureChange", MSGESTUREEND:"MSGestureEnd", MSGESTUREHOLD:"MSGestureHold", MSGESTURESTART:"MSGestureStart", MSGESTURETAP:"MSGestureTap", MSGOTPOINTERCAPTURE:"MSGotPointerCapture", 
MSINERTIASTART:"MSInertiaStart", MSLOSTPOINTERCAPTURE:"MSLostPointerCapture", MSPOINTERCANCEL:"MSPointerCancel", MSPOINTERDOWN:"MSPointerDown", MSPOINTERMOVE:"MSPointerMove", MSPOINTEROVER:"MSPointerOver", MSPOINTEROUT:"MSPointerOut", MSPOINTERUP:"MSPointerUp", TEXTINPUT:"textinput", COMPOSITIONSTART:"compositionstart", COMPOSITIONUPDATE:"compositionupdate", COMPOSITIONEND:"compositionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = (e.target) || e.srcElement;
  this.currentTarget = (opt_currentTarget);
  var relatedTarget = (e.relatedTarget);
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = goog.userAgent.WEBKIT || e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = goog.userAgent.WEBKIT || e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  if(e.defaultPrevented) {
    this.preventDefault()
  }
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
};
goog.provide("goog.events.Listenable");
goog.provide("goog.events.ListenableKey");
goog.require("goog.events.EventLike");
goog.events.Listenable = function() {
};
goog.events.Listenable.USE_LISTENABLE_INTERFACE = false;
goog.events.Listenable.IMPLEMENTED_BY_PROP_ = "__closure_listenable";
goog.events.Listenable.addImplementation = function(cls) {
  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP_] = true
};
goog.events.Listenable.isImplementedBy = function(obj) {
  return!!(obj && obj[goog.events.Listenable.IMPLEMENTED_BY_PROP_])
};
goog.events.Listenable.prototype.listen;
goog.events.Listenable.prototype.listenOnce;
goog.events.Listenable.prototype.unlisten;
goog.events.Listenable.prototype.unlistenByKey;
goog.events.Listenable.prototype.dispatchEvent;
goog.events.Listenable.prototype.removeAllListeners;
goog.events.Listenable.prototype.fireListeners;
goog.events.Listenable.prototype.getListeners;
goog.events.Listenable.prototype.getListener;
goog.events.Listenable.prototype.hasListener;
goog.events.ListenableKey = function() {
};
goog.events.ListenableKey.counter_ = 0;
goog.events.ListenableKey.reserveKey = function() {
  return++goog.events.ListenableKey.counter_
};
goog.events.ListenableKey.prototype.src;
goog.events.ListenableKey.prototype.type;
goog.events.ListenableKey.prototype.listener;
goog.events.ListenableKey.prototype.capture;
goog.events.ListenableKey.prototype.handler;
goog.events.ListenableKey.prototype.key;
goog.provide("goog.events.Listener");
goog.require("goog.events.ListenableKey");
goog.events.Listener = function() {
  if(goog.events.Listener.ENABLE_MONITORING) {
    this.creationStack = (new Error).stack
  }
};
goog.events.Listener.ENABLE_MONITORING = false;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.creationStack;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = goog.events.ListenableKey.reserveKey();
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.provide("goog.events.Key");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.Key;
goog.events.ListenableType;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listen((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, false, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listen_ = function(src, type, listener, callOnce, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }
  var capture = !!opt_capt;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    map[type] = {count_:0, remaining_:0}
  }
  map = map[type];
  if(!(capture in map)) {
    map[capture] = {count_:0, remaining_:0};
    map.count_++
  }
  map = map[capture];
  var srcUid = goog.getUid(src);
  var listenerArray, listenerObj;
  map.remaining_++;
  if(!map[srcUid]) {
    listenerArray = map[srcUid] = [];
    map.count_++
  }else {
    listenerArray = map[srcUid];
    for(var i = 0;i < listenerArray.length;i++) {
      listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
        if(listenerObj.removed) {
          break
        }
        if(!callOnce) {
          listenerArray[i].callOnce = false
        }
        return listenerArray[i]
      }
    }
  }
  var proxy = goog.events.getProxy();
  listenerObj = new goog.events.Listener;
  listenerObj.init(listener, proxy, src, type, capture, opt_handler);
  listenerObj.callOnce = callOnce;
  proxy.src = src;
  proxy.listener = listenerObj;
  listenerArray.push(listenerObj);
  if(!goog.events.sources_[srcUid]) {
    goog.events.sources_[srcUid] = []
  }
  goog.events.sources_[srcUid].push(listenerObj);
  if(src.addEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.addEventListener(type, proxy, capture)
    }
  }else {
    src.attachEvent(goog.events.getOnString_(type), proxy)
  }
  return listenerObj
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.listener, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.listener, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var listenableKey;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    listenableKey = src.listenOnce((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }else {
    listenableKey = goog.events.listen_((src), type, listener, true, opt_capt, opt_handler)
  }
  var key = listenableKey.key;
  goog.events.listeners_[key] = listenableKey;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlisten((type), goog.events.wrapListener_(listener), opt_capt, opt_handler)
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  var listener = goog.events.listeners_[key];
  if(!listener) {
    return false
  }
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.unlistenByKey(listener)
  }
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(listenerArray) {
    listenerArray.needsCleanup_ = true;
    goog.events.cleanUp_(type, capture, srcUid, listenerArray)
  }
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp = function(listenableKey) {
  delete goog.events.listeners_[listenableKey.key]
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  if(!noObj) {
    if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && opt_obj && goog.events.Listenable.isImplementedBy(opt_obj)) {
      return opt_obj.removeAllListeners(opt_type)
    }
    var srcUid = goog.getUid((opt_obj));
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if(noType || opt_type == listener.type) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.listeners_, function(listener, key) {
      goog.events.unlistenByKey(key);
      count++
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.getListeners(type, capture)
  }else {
    return goog.events.getListeners_(obj, type, capture) || []
  }
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(src)) {
    return src.getListener((type), goog.events.wrapListener_(listener), capture, opt_handler)
  }
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.hasListener(opt_type, opt_capture)
  }
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " \x3d " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " \x3d " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE && goog.events.Listenable.isImplementedBy(obj)) {
    return obj.fireListeners(type, capture, eventObject)
  }
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    var remaining = --map.remaining_;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      map.remaining_ = Math.max(remaining, map.remaining_);
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return listener.handleEvent(eventObject)
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    return src.dispatchEvent(e)
  }
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event((type), src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(listener, opt_evt) {
  if(listener.removed) {
    return true
  }
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || (goog.getObjectByName("window.event"));
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, (this));
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, (this));
  retval = goog.events.fireListener(listener, be);
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || (e.returnValue) == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.LISTENER_WRAPPER_PROP_ = "__closure_events_fn_" + (Math.random() * 1E9 >>> 0);
goog.events.wrapListener_ = function(listener) {
  if(goog.isFunction(listener)) {
    return listener
  }
  return listener[goog.events.LISTENER_WRAPPER_PROP_] || (listener[goog.events.LISTENER_WRAPPER_PROP_] = function(e) {
    return listener.handleEvent(e)
  })
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.Listenable");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.events.EventTarget = function() {
  goog.Disposable.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.eventTargetListeners_ = {};
    this.reallyDisposed_ = false;
    this.actualEventTarget_ = this
  }
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.Listenable.addImplementation(goog.events.EventTarget)
}
goog.events.EventTarget.MAX_ANCESTORS_ = 1E3;
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    if(this.reallyDisposed_) {
      return true
    }
    var ancestorsTree, ancestor = this.getParentEventTarget();
    if(ancestor) {
      ancestorsTree = [];
      var ancestorCount = 1;
      for(;ancestor;ancestor = ancestor.getParentEventTarget()) {
        ancestorsTree.push(ancestor);
        goog.asserts.assert(++ancestorCount < goog.events.EventTarget.MAX_ANCESTORS_, "infinite loop")
      }
    }
    return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree)
  }else {
    return goog.events.dispatchEvent(this, e)
  }
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
    this.removeAllListeners();
    this.reallyDisposed_ = true
  }else {
    goog.events.removeAll(this)
  }
  this.parentEventTarget_ = null
};
if(goog.events.Listenable.USE_LISTENABLE_INTERFACE) {
  goog.events.EventTarget.prototype.listen = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, false, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenOnce = function(type, listener, opt_useCapture, opt_listenerScope) {
    return this.listenInternal_(type, listener, true, opt_useCapture, opt_listenerScope)
  };
  goog.events.EventTarget.prototype.listenInternal_ = function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not listen on disposed object.");
    var listenerArray = this.eventTargetListeners_[type] || (this.eventTargetListeners_[type] = []);
    var listenerObj;
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      listenerObj = listenerArray[index];
      if(!callOnce) {
        listenerObj.callOnce = false
      }
      return listenerObj
    }
    listenerObj = new goog.events.Listener;
    listenerObj.init(listener, null, this, type, !!opt_useCapture, opt_listenerScope);
    listenerObj.callOnce = callOnce;
    listenerArray.push(listenerObj);
    return listenerObj
  };
  goog.events.EventTarget.prototype.unlisten = function(type, listener, opt_useCapture, opt_listenerScope) {
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var listenerArray = this.eventTargetListeners_[type];
    var index = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);
    if(index > -1) {
      var listenerObj = listenerArray[index];
      goog.events.cleanUp(listenerObj);
      listenerObj.removed = true;
      return goog.array.removeAt(listenerArray, index)
    }
    return false
  };
  goog.events.EventTarget.prototype.unlistenByKey = function(key) {
    var type = key.type;
    if(!(type in this.eventTargetListeners_)) {
      return false
    }
    var removed = goog.array.remove(this.eventTargetListeners_[type], key);
    if(removed) {
      goog.events.cleanUp(key);
      key.removed = true
    }
    return removed
  };
  goog.events.EventTarget.prototype.removeAllListeners = function(opt_type, opt_capture) {
    var count = 0;
    for(var type in this.eventTargetListeners_) {
      if(!opt_type || type == opt_type) {
        var listenerArray = this.eventTargetListeners_[type];
        for(var i = 0;i < listenerArray.length;i++) {
          ++count;
          goog.events.cleanUp(listenerArray[i]);
          listenerArray[i].removed = true
        }
        listenerArray.length = 0
      }
    }
    return count
  };
  goog.events.EventTarget.prototype.fireListeners = function(type, capture, eventObject) {
    goog.asserts.assert(!this.reallyDisposed_, "Can not fire listeners after dispose() completed.");
    if(!(type in this.eventTargetListeners_)) {
      return true
    }
    var rv = true;
    var listenerArray = goog.array.clone(this.eventTargetListeners_[type]);
    for(var i = 0;i < listenerArray.length;++i) {
      var listener = listenerArray[i];
      if(listener && !listener.removed && listener.capture == capture) {
        if(listener.callOnce) {
          this.unlistenByKey(listener)
        }
        rv = listener.handleEvent(eventObject) !== false && rv
      }
    }
    return rv && eventObject.returnValue_ != false
  };
  goog.events.EventTarget.prototype.getListeners = function(type, capture) {
    var listenerArray = this.eventTargetListeners_[type];
    var rv = [];
    if(listenerArray) {
      for(var i = 0;i < listenerArray.length;++i) {
        var listenerObj = listenerArray[i];
        if(listenerObj.capture == capture) {
          rv.push(listenerObj)
        }
      }
    }
    return rv
  };
  goog.events.EventTarget.prototype.getListener = function(type, listener, capture, opt_listenerScope) {
    var listenerArray = this.eventTargetListeners_[type];
    var i = -1;
    if(listenerArray) {
      i = goog.events.EventTarget.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope)
    }
    return i > -1 ? listenerArray[i] : null
  };
  goog.events.EventTarget.prototype.hasListener = function(opt_type, opt_capture) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    return goog.object.some(this.eventTargetListeners_, function(listenersArray, type) {
      for(var i = 0;i < listenersArray.length;++i) {
        if((!hasType || listenersArray[i].type == opt_type) && (!hasCapture || listenersArray[i].capture == opt_capture)) {
          return true
        }
      }
      return false
    })
  };
  goog.events.EventTarget.prototype.setTargetForTesting = function(target) {
    this.actualEventTarget_ = target
  };
  goog.events.EventTarget.dispatchEventInternal_ = function(target, e, opt_ancestorsTree) {
    var type = e.type || (e);
    if(goog.isString(e)) {
      e = new goog.events.Event(e, target)
    }else {
      if(!(e instanceof goog.events.Event)) {
        var oldEvent = e;
        e = new goog.events.Event(type, target);
        goog.object.extend(e, oldEvent)
      }else {
        e.target = e.target || target
      }
    }
    var rv = true, currentTarget;
    if(opt_ancestorsTree) {
      for(var i = opt_ancestorsTree.length - 1;!e.propagationStopped_ && i >= 0;i--) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, true, e) && rv
      }
    }
    if(!e.propagationStopped_) {
      currentTarget = e.currentTarget = target;
      rv = currentTarget.fireListeners(type, true, e) && rv;
      if(!e.propagationStopped_) {
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    if(opt_ancestorsTree) {
      for(i = 0;!e.propagationStopped_ && i < opt_ancestorsTree.length;i++) {
        currentTarget = e.currentTarget = opt_ancestorsTree[i];
        rv = currentTarget.fireListeners(type, false, e) && rv
      }
    }
    return rv
  };
  goog.events.EventTarget.findListenerIndex_ = function(listenerArray, listener, opt_useCapture, opt_listenerScope) {
    for(var i = 0;i < listenerArray.length;++i) {
      var listenerObj = listenerArray[i];
      if(listenerObj.listener == listener && listenerObj.capture == !!opt_useCapture && listenerObj.handler == opt_listenerScope) {
        return i
      }
    }
    return-1
  }
}
;goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global;
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.a11y.aria.Role");
goog.a11y.aria.Role = {ALERT:"alert", ALERTDIALOG:"alertdialog", APPLICATION:"application", ARTICLE:"article", BANNER:"banner", BUTTON:"button", CHECKBOX:"checkbox", COLUMNHEADER:"columnheader", COMBOBOX:"combobox", COMPLEMENTARY:"complementary", CONTENTINFO:"contentinfo", DEFINITION:"definition", DIALOG:"dialog", DIRECTORY:"directory", DOCUMENT:"document", FORM:"form", GRID:"grid", GRIDCELL:"gridcell", GROUP:"group", HEADING:"heading", IMG:"img", LINK:"link", LIST:"list", LISTBOX:"listbox", LISTITEM:"listitem", 
LOG:"log", MAIN:"main", MARQUEE:"marquee", MATH:"math", MENU:"menu", MENUBAR:"menubar", MENU_ITEM:"menuitem", MENU_ITEM_CHECKBOX:"menuitemcheckbox", MENU_ITEM_RADIO:"menuitemradio", NAVIGATION:"navigation", NOTE:"note", OPTION:"option", PRESENTATION:"presentation", PROGRESSBAR:"progressbar", RADIO:"radio", RADIOGROUP:"radiogroup", REGION:"region", ROW:"row", ROWGROUP:"rowgroup", ROWHEADER:"rowheader", SCROLLBAR:"scrollbar", SEARCH:"search", SEPARATOR:"separator", SLIDER:"slider", SPINBUTTON:"spinbutton", 
STATUS:"status", TAB:"tab", TAB_LIST:"tablist", TAB_PANEL:"tabpanel", TEXTBOX:"textbox", TIMER:"timer", TOOLBAR:"toolbar", TOOLTIP:"tooltip", TREE:"tree", TREEGRID:"treegrid", TREEITEM:"treeitem"};
goog.provide("goog.a11y.aria.LivePriority");
goog.provide("goog.a11y.aria.State");
goog.a11y.aria.State = {ACTIVEDESCENDANT:"activedescendant", ATOMIC:"atomic", AUTOCOMPLETE:"autocomplete", BUSY:"busy", CHECKED:"checked", CONTROLS:"controls", DESCRIBEDBY:"describedby", DISABLED:"disabled", DROPEFFECT:"dropeffect", EXPANDED:"expanded", FLOWTO:"flowto", GRABBED:"grabbed", HASPOPUP:"haspopup", HIDDEN:"hidden", INVALID:"invalid", LABEL:"label", LABELLEDBY:"labelledby", LEVEL:"level", LIVE:"live", MULTILINE:"multiline", MULTISELECTABLE:"multiselectable", ORIENTATION:"orientation", OWNS:"owns", 
POSINSET:"posinset", PRESSED:"pressed", READONLY:"readonly", RELEVANT:"relevant", REQUIRED:"required", SELECTED:"selected", SETSIZE:"setsize", SORT:"sort", VALUEMAX:"valuemax", VALUEMIN:"valuemin", VALUENOW:"valuenow", VALUETEXT:"valuetext"};
goog.a11y.aria.LivePriority = {OFF:"off", POLITE:"polite", ASSERTIVE:"assertive"};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return goog.isString(className) && className.match(/\S+/g) || []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var expectedCount = classes.length + args.length;
  goog.dom.classes.add_(classes, args);
  goog.dom.classes.set(element, classes.join(" "));
  return classes.length == expectedCount
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var newClasses = goog.dom.classes.getDifference_(classes, args);
  goog.dom.classes.set(element, newClasses.join(" "));
  return newClasses.length == classes.length - args.length
};
goog.dom.classes.add_ = function(classes, args) {
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i])
    }
  }
};
goog.dom.classes.getDifference_ = function(arr1, arr2) {
  return goog.array.filter(arr1, function(item) {
    return!goog.array.contains(arr2, item)
  })
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    goog.dom.classes.set(element, classes.join(" "))
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      classes = goog.dom.classes.getDifference_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  goog.dom.classes.set(element, classes.join(" "))
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0))
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15))
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15))
};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y)
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y
  }else {
    this.x += tx;
    if(goog.isNumber(opt_ty)) {
      this.y += opt_ty
    }
  }
  return this
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector)
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if(attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content))
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e")
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild))
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild))
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return(element.removeNode(false))
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return(goog.dom.removeNode(element))
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return(node).firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return(node).lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return(node).nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return(node).previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return(node)
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.getParentElement = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    return element.parentElement
  }
  var parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9)) {
    if(node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1
    }
    if(node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1
    }
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document)
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(String(text)))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if(!opt_tag && !opt_class) {
    return null
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true))
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content))
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.a11y.aria");
goog.require("goog.a11y.aria.Role");
goog.require("goog.a11y.aria.State");
goog.require("goog.dom");
goog.a11y.aria.setRole = function(element, roleName) {
  element.setAttribute("role", roleName)
};
goog.a11y.aria.getRole = function(element) {
  return(element.getAttribute("role")) || ""
};
goog.a11y.aria.setState = function(element, state, value) {
  element.setAttribute("aria-" + state, value)
};
goog.a11y.aria.getState = function(element, stateName) {
  var attrb = (element.getAttribute("aria-" + stateName));
  if(attrb === true || attrb === false) {
    return attrb ? "true" : "false"
  }else {
    if(!attrb) {
      return""
    }else {
      return String(attrb)
    }
  }
};
goog.a11y.aria.getActiveDescendant = function(element) {
  var id = goog.a11y.aria.getState(element, goog.a11y.aria.State.ACTIVEDESCENDANT);
  return goog.dom.getOwnerDocument(element).getElementById(id)
};
goog.a11y.aria.setActiveDescendant = function(element, activeElement) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.ACTIVEDESCENDANT, activeElement ? activeElement.id : "")
};
goog.a11y.aria.getLabel = function(element) {
  return goog.a11y.aria.getState(element, goog.a11y.aria.State.LABEL)
};
goog.a11y.aria.setLabel = function(element, label) {
  goog.a11y.aria.setState(element, goog.a11y.aria.State.LABEL, label)
};
goog.provide("goog.dom.selection");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.selection.setStart = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionStart = pos
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
        range.collapse(true);
        range.move("character", pos);
        range.select()
      }
    }
  }
};
goog.dom.selection.getStart = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, true)[0]
};
goog.dom.selection.getEndPointsTextareaIe_ = function(range, selRange, getOnlyStart) {
  var selectionRange = selRange.duplicate();
  var beforeSelectionText = range.text;
  var untrimmedBeforeSelectionText = beforeSelectionText;
  var selectionText = selectionRange.text;
  var untrimmedSelectionText = selectionText;
  var isRangeEndTrimmed = false;
  while(!isRangeEndTrimmed) {
    if(range.compareEndPoints("StartToEnd", range) == 0) {
      isRangeEndTrimmed = true
    }else {
      range.moveEnd("character", -1);
      if(range.text == beforeSelectionText) {
        untrimmedBeforeSelectionText += "\r\n"
      }else {
        isRangeEndTrimmed = true
      }
    }
  }
  if(getOnlyStart) {
    return[untrimmedBeforeSelectionText.length, -1]
  }
  var isSelectionRangeEndTrimmed = false;
  while(!isSelectionRangeEndTrimmed) {
    if(selectionRange.compareEndPoints("StartToEnd", selectionRange) == 0) {
      isSelectionRangeEndTrimmed = true
    }else {
      selectionRange.moveEnd("character", -1);
      if(selectionRange.text == selectionText) {
        untrimmedSelectionText += "\r\n"
      }else {
        isSelectionRangeEndTrimmed = true
      }
    }
  }
  return[untrimmedBeforeSelectionText.length, untrimmedBeforeSelectionText.length + untrimmedSelectionText.length]
};
goog.dom.selection.getEndPoints = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, false)
};
goog.dom.selection.getEndPoints_ = function(textfield, getOnlyStart) {
  var startPos = 0;
  var endPos = 0;
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    startPos = textfield.selectionStart;
    endPos = getOnlyStart ? -1 : textfield.selectionEnd
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        range.setEndPoint("EndToStart", selectionRange);
        if(textfield.type == "textarea") {
          return goog.dom.selection.getEndPointsTextareaIe_(range, selectionRange, getOnlyStart)
        }
        startPos = range.text.length;
        if(!getOnlyStart) {
          endPos = range.text.length + selectionRange.text.length
        }else {
          endPos = -1
        }
      }
    }
  }
  return[startPos, endPos]
};
goog.dom.selection.setEnd = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionEnd = pos
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(range.inRange(selectionRange)) {
        pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
        var startCursorPos = goog.dom.selection.canonicalizePositionIe_(textfield, goog.dom.selection.getStart(textfield));
        selectionRange.collapse(true);
        selectionRange.moveEnd("character", pos - startCursorPos);
        selectionRange.select()
      }
    }
  }
};
goog.dom.selection.getEnd = function(textfield) {
  return goog.dom.selection.getEndPoints_(textfield, false)[1]
};
goog.dom.selection.setCursorPosition = function(textfield, pos) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    textfield.selectionStart = pos;
    textfield.selectionEnd = pos
  }else {
    if(goog.userAgent.IE) {
      pos = goog.dom.selection.canonicalizePositionIe_(textfield, pos);
      var sel = textfield.createTextRange();
      sel.collapse(true);
      sel.move("character", pos);
      sel.select()
    }
  }
};
goog.dom.selection.setText = function(textfield, text) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    var value = textfield.value;
    var oldSelectionStart = textfield.selectionStart;
    var before = value.substr(0, oldSelectionStart);
    var after = value.substr(textfield.selectionEnd);
    textfield.value = before + text + after;
    textfield.selectionStart = oldSelectionStart;
    textfield.selectionEnd = oldSelectionStart + text.length
  }else {
    if(goog.userAgent.IE) {
      var tmp = goog.dom.selection.getRangeIe_(textfield);
      var range = tmp[0];
      var selectionRange = tmp[1];
      if(!range.inRange(selectionRange)) {
        return
      }
      var range2 = selectionRange.duplicate();
      selectionRange.text = text;
      selectionRange.setEndPoint("StartToStart", range2);
      selectionRange.select()
    }else {
      throw Error("Cannot set the selection end");
    }
  }
};
goog.dom.selection.getText = function(textfield) {
  if(goog.dom.selection.useSelectionProperties_(textfield)) {
    var s = textfield.value;
    return s.substring(textfield.selectionStart, textfield.selectionEnd)
  }
  if(goog.userAgent.IE) {
    var tmp = goog.dom.selection.getRangeIe_(textfield);
    var range = tmp[0];
    var selectionRange = tmp[1];
    if(!range.inRange(selectionRange)) {
      return""
    }else {
      if(textfield.type == "textarea") {
        return goog.dom.selection.getSelectionRangeText_(selectionRange)
      }
    }
    return selectionRange.text
  }
  throw Error("Cannot get the selection text");
};
goog.dom.selection.getSelectionRangeText_ = function(selRange) {
  var selectionRange = selRange.duplicate();
  var selectionText = selectionRange.text;
  var untrimmedSelectionText = selectionText;
  var isSelectionRangeEndTrimmed = false;
  while(!isSelectionRangeEndTrimmed) {
    if(selectionRange.compareEndPoints("StartToEnd", selectionRange) == 0) {
      isSelectionRangeEndTrimmed = true
    }else {
      selectionRange.moveEnd("character", -1);
      if(selectionRange.text == selectionText) {
        untrimmedSelectionText += "\r\n"
      }else {
        isSelectionRangeEndTrimmed = true
      }
    }
  }
  return untrimmedSelectionText
};
goog.dom.selection.getRangeIe_ = function(el) {
  var doc = el.ownerDocument || el.document;
  var selectionRange = doc.selection.createRange();
  var range;
  if(el.type == "textarea") {
    range = doc.body.createTextRange();
    range.moveToElementText(el)
  }else {
    range = el.createTextRange()
  }
  return[range, selectionRange]
};
goog.dom.selection.canonicalizePositionIe_ = function(textfield, pos) {
  if(textfield.type == "textarea") {
    var value = textfield.value.substring(0, pos);
    pos = goog.string.canonicalizeNewlines(value).length
  }
  return pos
};
goog.dom.selection.useSelectionProperties_ = function(el) {
  try {
    return typeof el.selectionStart == "number"
  }catch(e) {
    return false
  }
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = (type);
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = (goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this));
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = (goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this));
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_ || this, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyCodes = {WIN_KEY_FF_LINUX:0, MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, FF_EQUALS:61, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, L:76, M:77, 
N:78, O:79, P:80, Q:81, R:82, S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, 
SEMICOLON:186, DASH:189, EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return!goog.userAgent.GECKO;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!goog.userAgent.IE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersion("525"))) {
    return true
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey) {
    return false
  }
  if(!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT || goog.userAgent.MAC && opt_heldKeyCode == goog.events.KeyCodes.META)) {
    return false
  }
  if(goog.userAgent.WEBKIT && opt_ctrlKey && opt_shiftKey) {
    switch(keyCode) {
      case goog.events.KeyCodes.BACKSLASH:
      ;
      case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      ;
      case goog.events.KeyCodes.TILDE:
      ;
      case goog.events.KeyCodes.SEMICOLON:
      ;
      case goog.events.KeyCodes.DASH:
      ;
      case goog.events.KeyCodes.EQUALS:
      ;
      case goog.events.KeyCodes.COMMA:
      ;
      case goog.events.KeyCodes.PERIOD:
      ;
      case goog.events.KeyCodes.SLASH:
      ;
      case goog.events.KeyCodes.APOSTROPHE:
      ;
      case goog.events.KeyCodes.SINGLE_QUOTE:
        return false
    }
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentMode(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true
  }
  if(goog.userAgent.WEBKIT && keyCode == 0) {
    return true
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.FF_EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false
  }
};
goog.events.KeyCodes.normalizeGeckoKeyCode = function(keyCode) {
  switch(keyCode) {
    case goog.events.KeyCodes.FF_EQUALS:
      return goog.events.KeyCodes.EQUALS;
    case goog.events.KeyCodes.FF_SEMICOLON:
      return goog.events.KeyCodes.SEMICOLON;
    case goog.events.KeyCodes.MAC_FF_META:
      return goog.events.KeyCodes.META;
    case goog.events.KeyCodes.WIN_KEY_FF_LINUX:
      return goog.events.KeyCodes.WIN_KEY;
    default:
      return keyCode
  }
};
goog.provide("goog.events.KeyEvent");
goog.provide("goog.events.KeyHandler");
goog.provide("goog.events.KeyHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  if(opt_element) {
    this.attach(opt_element, opt_capture)
  }
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.prototype.altKey_ = false;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {"Up":goog.events.KeyCodes.UP, "Down":goog.events.KeyCodes.DOWN, "Left":goog.events.KeyCodes.LEFT, "Right":goog.events.KeyCodes.RIGHT, "Enter":goog.events.KeyCodes.ENTER, "F1":goog.events.KeyCodes.F1, "F2":goog.events.KeyCodes.F2, "F3":goog.events.KeyCodes.F3, "F4":goog.events.KeyCodes.F4, "F5":goog.events.KeyCodes.F5, "F6":goog.events.KeyCodes.F6, "F7":goog.events.KeyCodes.F7, "F8":goog.events.KeyCodes.F8, "F9":goog.events.KeyCodes.F9, "F10":goog.events.KeyCodes.F10, 
"F11":goog.events.KeyCodes.F11, "F12":goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, "Home":goog.events.KeyCodes.HOME, "End":goog.events.KeyCodes.END, "PageUp":goog.events.KeyCodes.PAGE_UP, "PageDown":goog.events.KeyCodes.PAGE_DOWN, "Insert":goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersion("525");
goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_ = goog.userAgent.MAC && goog.userAgent.GECKO;
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  if(goog.userAgent.WEBKIT) {
    if(this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey || goog.userAgent.MAC && this.lastKey_ == goog.events.KeyCodes.META && !e.metaKey) {
      this.lastKey_ = -1;
      this.keyCode_ = -1
    }
  }
  if(this.lastKey_ == -1) {
    if(e.ctrlKey && e.keyCode != goog.events.KeyCodes.CTRL) {
      this.lastKey_ = goog.events.KeyCodes.CTRL
    }else {
      if(e.altKey && e.keyCode != goog.events.KeyCodes.ALT) {
        this.lastKey_ = goog.events.KeyCodes.ALT
      }else {
        if(e.metaKey && e.keyCode != goog.events.KeyCodes.META) {
          this.lastKey_ = goog.events.KeyCodes.META
        }
      }
    }
  }
  if(goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey)) {
    this.handleEvent(e)
  }else {
    this.keyCode_ = goog.userAgent.GECKO ? goog.events.KeyCodes.normalizeGeckoKeyCode(e.keyCode) : e.keyCode;
    if(goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
      this.altKey_ = e.altKey
    }
  }
};
goog.events.KeyHandler.prototype.resetState = function() {
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.resetState();
  this.altKey_ = e.altKey
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var keyCode, charCode;
  var altKey = be.altKey;
  if(goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {
    keyCode = this.keyCode_;
    charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0
  }else {
    if(goog.userAgent.WEBKIT && e.type == goog.events.EventType.KEYPRESS) {
      keyCode = this.keyCode_;
      charCode = be.charCode >= 0 && be.charCode < 63232 && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0
    }else {
      if(goog.userAgent.OPERA) {
        keyCode = this.keyCode_;
        charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0
      }else {
        keyCode = be.keyCode || this.keyCode_;
        charCode = be.charCode || 0;
        if(goog.events.KeyHandler.SAVE_ALT_FOR_KEYPRESS_) {
          altKey = this.altKey_
        }
        if(goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && keyCode == goog.events.KeyCodes.WIN_KEY) {
          keyCode = goog.events.KeyCodes.SLASH
        }
      }
    }
  }
  var key = keyCode;
  var keyIdentifier = be.keyIdentifier;
  if(keyCode) {
    if(keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {
      key = goog.events.KeyHandler.safariKey_[keyCode]
    }else {
      if(keyCode == 25 && e.shiftKey) {
        key = 9
      }
    }
  }else {
    if(keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {
      key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier]
    }
  }
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  event.altKey = altKey;
  this.dispatchEvent(event)
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  if(this.keyUpKey_) {
    this.detach()
  }
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this)
};
goog.events.KeyHandler.prototype.detach = function() {
  if(this.keyPressKey_) {
    goog.events.unlistenByKey(this.keyPressKey_);
    goog.events.unlistenByKey(this.keyDownKey_);
    goog.events.unlistenByKey(this.keyUpKey_);
    this.keyPressKey_ = null;
    this.keyDownKey_ = null;
    this.keyUpKey_ = null
  }
  this.element_ = null;
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach()
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
goog.provide("goog.userAgent.product");
goog.require("goog.userAgent");
goog.userAgent.product.ASSUME_FIREFOX = false;
goog.userAgent.product.ASSUME_CAMINO = false;
goog.userAgent.product.ASSUME_IPHONE = false;
goog.userAgent.product.ASSUME_IPAD = false;
goog.userAgent.product.ASSUME_ANDROID = false;
goog.userAgent.product.ASSUME_CHROME = false;
goog.userAgent.product.ASSUME_SAFARI = false;
goog.userAgent.product.PRODUCT_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_OPERA || goog.userAgent.product.ASSUME_FIREFOX || goog.userAgent.product.ASSUME_CAMINO || goog.userAgent.product.ASSUME_IPHONE || goog.userAgent.product.ASSUME_IPAD || goog.userAgent.product.ASSUME_ANDROID || goog.userAgent.product.ASSUME_CHROME || goog.userAgent.product.ASSUME_SAFARI;
goog.userAgent.product.init_ = function() {
  goog.userAgent.product.detectedFirefox_ = false;
  goog.userAgent.product.detectedCamino_ = false;
  goog.userAgent.product.detectedIphone_ = false;
  goog.userAgent.product.detectedIpad_ = false;
  goog.userAgent.product.detectedAndroid_ = false;
  goog.userAgent.product.detectedChrome_ = false;
  goog.userAgent.product.detectedSafari_ = false;
  var ua = goog.userAgent.getUserAgentString();
  if(!ua) {
    return
  }
  if(ua.indexOf("Firefox") != -1) {
    goog.userAgent.product.detectedFirefox_ = true
  }else {
    if(ua.indexOf("Camino") != -1) {
      goog.userAgent.product.detectedCamino_ = true
    }else {
      if(ua.indexOf("iPhone") != -1 || ua.indexOf("iPod") != -1) {
        goog.userAgent.product.detectedIphone_ = true
      }else {
        if(ua.indexOf("iPad") != -1) {
          goog.userAgent.product.detectedIpad_ = true
        }else {
          if(ua.indexOf("Android") != -1) {
            goog.userAgent.product.detectedAndroid_ = true
          }else {
            if(ua.indexOf("Chrome") != -1) {
              goog.userAgent.product.detectedChrome_ = true
            }else {
              if(ua.indexOf("Safari") != -1) {
                goog.userAgent.product.detectedSafari_ = true
              }
            }
          }
        }
      }
    }
  }
};
if(!goog.userAgent.product.PRODUCT_KNOWN_) {
  goog.userAgent.product.init_()
}
goog.userAgent.product.OPERA = goog.userAgent.OPERA;
goog.userAgent.product.IE = goog.userAgent.IE;
goog.userAgent.product.FIREFOX = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_FIREFOX : goog.userAgent.product.detectedFirefox_;
goog.userAgent.product.CAMINO = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CAMINO : goog.userAgent.product.detectedCamino_;
goog.userAgent.product.IPHONE = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPHONE : goog.userAgent.product.detectedIphone_;
goog.userAgent.product.IPAD = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_IPAD : goog.userAgent.product.detectedIpad_;
goog.userAgent.product.ANDROID = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_ANDROID : goog.userAgent.product.detectedAndroid_;
goog.userAgent.product.CHROME = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_CHROME : goog.userAgent.product.detectedChrome_;
goog.userAgent.product.SAFARI = goog.userAgent.product.PRODUCT_KNOWN_ ? goog.userAgent.product.ASSUME_SAFARI : goog.userAgent.product.detectedSafari_;
goog.provide("goog.ui.ac.InputHandler");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.require("goog.a11y.aria");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.selection");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.events.KeyHandler.EventType");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.require("goog.userAgent.product");
goog.ui.ac.InputHandler = function(opt_separators, opt_literals, opt_multi, opt_throttleTime) {
  goog.Disposable.call(this);
  var throttleTime = opt_throttleTime || 150;
  this.multi_ = opt_multi != null ? opt_multi : true;
  this.setSeparators(opt_separators || goog.ui.ac.InputHandler.STANDARD_LIST_SEPARATORS);
  this.literals_ = opt_literals || "";
  this.preventDefaultOnTab_ = this.multi_;
  this.timer_ = throttleTime > 0 ? new goog.Timer(throttleTime) : null;
  this.eh_ = new goog.events.EventHandler(this);
  this.activateHandler_ = new goog.events.EventHandler(this);
  this.keyHandler_ = new goog.events.KeyHandler;
  this.lastKeyCode_ = -1
};
goog.inherits(goog.ui.ac.InputHandler, goog.Disposable);
goog.ui.ac.InputHandler.REQUIRES_ASYNC_BLUR_ = (goog.userAgent.product.IPHONE || goog.userAgent.product.IPAD) && !goog.userAgent.isVersion("533.17.9");
goog.ui.ac.InputHandler.STANDARD_LIST_SEPARATORS = ",;";
goog.ui.ac.InputHandler.QUOTE_LITERALS = '"';
goog.ui.ac.InputHandler.prototype.ac_;
goog.ui.ac.InputHandler.prototype.separators_;
goog.ui.ac.InputHandler.prototype.defaultSeparator_;
goog.ui.ac.InputHandler.prototype.trimmer_;
goog.ui.ac.InputHandler.prototype.separatorCheck_;
goog.ui.ac.InputHandler.prototype.whitespaceWrapEntries_ = true;
goog.ui.ac.InputHandler.prototype.generateNewTokenOnLiteral_ = true;
goog.ui.ac.InputHandler.prototype.upsideDown_ = false;
goog.ui.ac.InputHandler.prototype.separatorUpdates_ = true;
goog.ui.ac.InputHandler.prototype.separatorSelects_ = true;
goog.ui.ac.InputHandler.prototype.activeTimeoutId_ = null;
goog.ui.ac.InputHandler.prototype.activeElement_ = null;
goog.ui.ac.InputHandler.prototype.lastValue_ = "";
goog.ui.ac.InputHandler.prototype.waitingForIme_ = false;
goog.ui.ac.InputHandler.prototype.rowJustSelected_ = false;
goog.ui.ac.InputHandler.prototype.updateDuringTyping_ = true;
goog.ui.ac.InputHandler.prototype.attachAutoComplete = function(ac) {
  this.ac_ = ac
};
goog.ui.ac.InputHandler.prototype.getAutoComplete = function() {
  return this.ac_
};
goog.ui.ac.InputHandler.prototype.getActiveElement = function() {
  return this.activeElement_
};
goog.ui.ac.InputHandler.prototype.getValue = function() {
  return this.activeElement_.value
};
goog.ui.ac.InputHandler.prototype.setValue = function(value) {
  this.activeElement_.value = value
};
goog.ui.ac.InputHandler.prototype.getCursorPosition = function() {
  return goog.dom.selection.getStart(this.activeElement_)
};
goog.ui.ac.InputHandler.prototype.setCursorPosition = function(pos) {
  goog.dom.selection.setStart(this.activeElement_, pos);
  goog.dom.selection.setEnd(this.activeElement_, pos)
};
goog.ui.ac.InputHandler.prototype.attachInput = function(target) {
  if(goog.dom.isElement(target)) {
    var el = (target);
    goog.a11y.aria.setState(el, "haspopup", true)
  }
  this.eh_.listen(target, goog.events.EventType.FOCUS, this.handleFocus);
  this.eh_.listen(target, goog.events.EventType.BLUR, this.handleBlur);
  if(!this.activeElement_) {
    this.activateHandler_.listen(target, goog.events.EventType.KEYDOWN, this.onKeyDownOnInactiveElement_);
    if(goog.dom.isElement(target)) {
      var ownerDocument = goog.dom.getOwnerDocument((target));
      if(goog.dom.getActiveElement(ownerDocument) == target) {
        this.processFocus((target))
      }
    }
  }
};
goog.ui.ac.InputHandler.prototype.detachInput = function(target) {
  if(target == this.activeElement_) {
    this.handleBlur()
  }
  this.eh_.unlisten(target, goog.events.EventType.FOCUS, this.handleFocus);
  this.eh_.unlisten(target, goog.events.EventType.BLUR, this.handleBlur);
  if(!this.activeElement_) {
    this.activateHandler_.unlisten(target, goog.events.EventType.KEYDOWN, this.onKeyDownOnInactiveElement_)
  }
};
goog.ui.ac.InputHandler.prototype.attachInputs = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    this.attachInput(arguments[i])
  }
};
goog.ui.ac.InputHandler.prototype.detachInputs = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    this.detachInput(arguments[i])
  }
};
goog.ui.ac.InputHandler.prototype.selectRow = function(row, opt_multi) {
  this.setTokenText(row.toString(), opt_multi);
  return false
};
goog.ui.ac.InputHandler.prototype.setTokenText = function(tokenText, opt_multi) {
  if(goog.isDef(opt_multi) ? opt_multi : this.multi_) {
    var index = this.getTokenIndex_(this.getValue(), this.getCursorPosition());
    var entries = this.splitInput_(this.getValue());
    var replaceValue = tokenText;
    if(!this.separatorCheck_.test(replaceValue)) {
      replaceValue = goog.string.trimRight(replaceValue) + this.defaultSeparator_
    }
    if(this.whitespaceWrapEntries_) {
      if(index != 0 && !goog.string.isEmpty(entries[index - 1])) {
        replaceValue = " " + replaceValue
      }
      if(index == entries.length - 1) {
        replaceValue = replaceValue + " "
      }
    }
    if(replaceValue != entries[index]) {
      entries[index] = replaceValue;
      var el = this.activeElement_;
      if(goog.userAgent.GECKO || goog.userAgent.IE && goog.userAgent.isVersion("9")) {
        el.blur()
      }
      el.value = entries.join("");
      var pos = 0;
      for(var i = 0;i <= index;i++) {
        pos += entries[i].length
      }
      el.focus();
      this.setCursorPosition(pos)
    }
  }else {
    this.setValue(tokenText)
  }
  this.rowJustSelected_ = true
};
goog.ui.ac.InputHandler.prototype.disposeInternal = function() {
  goog.ui.ac.InputHandler.superClass_.disposeInternal.call(this);
  if(this.activeTimeoutId_ != null) {
    window.clearTimeout(this.activeTimeoutId_)
  }
  this.eh_.dispose();
  delete this.eh_;
  this.activateHandler_.dispose();
  this.keyHandler_.dispose()
};
goog.ui.ac.InputHandler.prototype.setSeparators = function(separators) {
  this.separators_ = separators;
  this.defaultSeparator_ = this.separators_.substring(0, 1);
  var wspaceExp = this.multi_ ? "[\\s" + this.separators_ + "]+" : "[\\s]+";
  this.trimmer_ = new RegExp("^" + wspaceExp + "|" + wspaceExp + "$", "g");
  this.separatorCheck_ = new RegExp("\\s*[" + this.separators_ + "]$")
};
goog.ui.ac.InputHandler.prototype.setUpsideDown = function(upsideDown) {
  this.upsideDown_ = upsideDown
};
goog.ui.ac.InputHandler.prototype.setWhitespaceWrapEntries = function(newValue) {
  this.whitespaceWrapEntries_ = newValue
};
goog.ui.ac.InputHandler.prototype.setGenerateNewTokenOnLiteral = function(newValue) {
  this.generateNewTokenOnLiteral_ = newValue
};
goog.ui.ac.InputHandler.prototype.setTrimmingRegExp = function(trimmer) {
  this.trimmer_ = trimmer
};
goog.ui.ac.InputHandler.prototype.setPreventDefaultOnTab = function(newValue) {
  this.preventDefaultOnTab_ = newValue
};
goog.ui.ac.InputHandler.prototype.setSeparatorCompletes = function(newValue) {
  this.separatorUpdates_ = newValue;
  this.separatorSelects_ = newValue
};
goog.ui.ac.InputHandler.prototype.setSeparatorSelects = function(newValue) {
  this.separatorSelects_ = newValue
};
goog.ui.ac.InputHandler.prototype.getThrottleTime = function() {
  return this.timer_ ? this.timer_.getInterval() : -1
};
goog.ui.ac.InputHandler.prototype.setRowJustSelected = function(justSelected) {
  this.rowJustSelected_ = justSelected
};
goog.ui.ac.InputHandler.prototype.setThrottleTime = function(time) {
  if(time < 0) {
    this.timer_.dispose();
    this.timer_ = null;
    return
  }
  if(this.timer_) {
    this.timer_.setInterval(time)
  }else {
    this.timer_ = new goog.Timer(time)
  }
};
goog.ui.ac.InputHandler.prototype.getUpdateDuringTyping = function() {
  return this.updateDuringTyping_
};
goog.ui.ac.InputHandler.prototype.setUpdateDuringTyping = function(value) {
  this.updateDuringTyping_ = value
};
goog.ui.ac.InputHandler.prototype.handleKeyEvent = function(e) {
  switch(e.keyCode) {
    case goog.events.KeyCodes.DOWN:
      if(this.ac_.isOpen()) {
        this.moveDown_();
        e.preventDefault();
        return true
      }else {
        if(!this.multi_) {
          this.update(true);
          e.preventDefault();
          return true
        }
      }
      break;
    case goog.events.KeyCodes.UP:
      if(this.ac_.isOpen()) {
        this.moveUp_();
        e.preventDefault();
        return true
      }
      break;
    case goog.events.KeyCodes.TAB:
      if(this.ac_.isOpen() && !e.shiftKey) {
        this.update();
        if(this.ac_.selectHilited() && this.preventDefaultOnTab_) {
          e.preventDefault();
          return true
        }
      }else {
        this.ac_.dismiss()
      }
      break;
    case goog.events.KeyCodes.ENTER:
      if(this.ac_.isOpen()) {
        this.update();
        if(this.ac_.selectHilited()) {
          e.preventDefault();
          e.stopPropagation();
          return true
        }
      }else {
        this.ac_.dismiss()
      }
      break;
    case goog.events.KeyCodes.ESC:
      if(this.ac_.isOpen()) {
        this.ac_.dismiss();
        e.preventDefault();
        e.stopPropagation();
        return true
      }
      break;
    case goog.events.KeyCodes.WIN_IME:
      if(!this.waitingForIme_) {
        this.startWaitingForIme_();
        return true
      }
      break;
    default:
      if(this.timer_ && !this.updateDuringTyping_) {
        this.timer_.stop();
        this.timer_.start()
      }
  }
  return this.handleSeparator_(e)
};
goog.ui.ac.InputHandler.prototype.handleSeparator_ = function(e) {
  var isSeparatorKey = this.multi_ && e.charCode && this.separators_.indexOf(String.fromCharCode(e.charCode)) != -1;
  if(this.separatorUpdates_ && isSeparatorKey) {
    this.update()
  }
  if(this.separatorSelects_ && isSeparatorKey) {
    if(this.ac_.selectHilited()) {
      e.preventDefault();
      return true
    }
  }
  return false
};
goog.ui.ac.InputHandler.prototype.needKeyUpListener = function() {
  return false
};
goog.ui.ac.InputHandler.prototype.handleKeyUp = function(e) {
  return false
};
goog.ui.ac.InputHandler.prototype.addEventHandlers_ = function() {
  this.keyHandler_.attach(this.activeElement_);
  this.eh_.listen(this.keyHandler_, goog.events.KeyHandler.EventType.KEY, this.onKey_);
  if(this.needKeyUpListener()) {
    this.eh_.listen(this.activeElement_, goog.events.EventType.KEYUP, this.handleKeyUp)
  }
  this.eh_.listen(this.activeElement_, goog.events.EventType.MOUSEDOWN, this.onMouseDown_);
  if(goog.userAgent.IE) {
    this.eh_.listen(this.activeElement_, goog.events.EventType.KEYPRESS, this.onIeKeyPress_)
  }
};
goog.ui.ac.InputHandler.prototype.removeEventHandlers_ = function() {
  this.eh_.unlisten(this.keyHandler_, goog.events.KeyHandler.EventType.KEY, this.onKey_);
  this.keyHandler_.detach();
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYUP, this.handleKeyUp);
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.MOUSEDOWN, this.onMouseDown_);
  if(goog.userAgent.IE) {
    this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYPRESS, this.onIeKeyPress_)
  }
  if(this.waitingForIme_) {
    this.stopWaitingForIme_()
  }
};
goog.ui.ac.InputHandler.prototype.handleFocus = function(e) {
  this.processFocus((e.target || null))
};
goog.ui.ac.InputHandler.prototype.processFocus = function(target) {
  this.activateHandler_.removeAll();
  if(this.ac_) {
    this.ac_.cancelDelayedDismiss()
  }
  if(target != this.activeElement_) {
    this.activeElement_ = target;
    if(this.timer_) {
      this.timer_.start();
      this.eh_.listen(this.timer_, goog.Timer.TICK, this.onTick_)
    }
    this.lastValue_ = this.getValue();
    this.addEventHandlers_()
  }
};
goog.ui.ac.InputHandler.prototype.handleBlur = function(opt_e) {
  if(goog.ui.ac.InputHandler.REQUIRES_ASYNC_BLUR_) {
    this.activeTimeoutId_ = window.setTimeout(goog.bind(this.processBlur_, this), 0);
    return
  }else {
    this.processBlur_()
  }
};
goog.ui.ac.InputHandler.prototype.processBlur_ = function() {
  if(this.activeElement_) {
    this.removeEventHandlers_();
    this.activeElement_ = null;
    if(this.timer_) {
      this.timer_.stop();
      this.eh_.unlisten(this.timer_, goog.Timer.TICK, this.onTick_)
    }
    if(this.ac_) {
      this.ac_.dismissOnDelay()
    }
  }
};
goog.ui.ac.InputHandler.prototype.onTick_ = function(e) {
  this.update()
};
goog.ui.ac.InputHandler.prototype.onKeyDownOnInactiveElement_ = function(e) {
  this.handleFocus(e)
};
goog.ui.ac.InputHandler.prototype.onKey_ = function(e) {
  this.lastKeyCode_ = e.keyCode;
  if(this.ac_) {
    this.handleKeyEvent(e)
  }
};
goog.ui.ac.InputHandler.prototype.onKeyPress_ = function(e) {
  if(this.waitingForIme_ && this.lastKeyCode_ != goog.events.KeyCodes.WIN_IME) {
    this.stopWaitingForIme_()
  }
};
goog.ui.ac.InputHandler.prototype.onKeyUp_ = function(e) {
  if(this.waitingForIme_ && (e.keyCode == goog.events.KeyCodes.ENTER || e.keyCode == goog.events.KeyCodes.M && e.ctrlKey)) {
    this.stopWaitingForIme_()
  }
};
goog.ui.ac.InputHandler.prototype.onMouseDown_ = function(e) {
  if(this.ac_) {
    this.handleMouseDown(e)
  }
};
goog.ui.ac.InputHandler.prototype.handleMouseDown = function(e) {
};
goog.ui.ac.InputHandler.prototype.startWaitingForIme_ = function() {
  if(this.waitingForIme_) {
    return
  }
  this.eh_.listen(this.activeElement_, goog.events.EventType.KEYUP, this.onKeyUp_);
  this.eh_.listen(this.activeElement_, goog.events.EventType.KEYPRESS, this.onKeyPress_);
  this.waitingForIme_ = true
};
goog.ui.ac.InputHandler.prototype.stopWaitingForIme_ = function() {
  if(!this.waitingForIme_) {
    return
  }
  this.waitingForIme_ = false;
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYPRESS, this.onKeyPress_);
  this.eh_.unlisten(this.activeElement_, goog.events.EventType.KEYUP, this.onKeyUp_)
};
goog.ui.ac.InputHandler.prototype.onIeKeyPress_ = function(e) {
  this.handleSeparator_(e)
};
goog.ui.ac.InputHandler.prototype.update = function(opt_force) {
  if(this.activeElement_ && (opt_force || this.getValue() != this.lastValue_)) {
    if(opt_force || !this.rowJustSelected_) {
      var token = this.parseToken();
      if(this.ac_) {
        this.ac_.setTarget(this.activeElement_);
        this.ac_.setToken(token, this.getValue())
      }
    }
    this.lastValue_ = this.getValue()
  }
  this.rowJustSelected_ = false
};
goog.ui.ac.InputHandler.prototype.parseToken = function() {
  return this.parseToken_()
};
goog.ui.ac.InputHandler.prototype.moveUp_ = function() {
  return this.upsideDown_ ? this.ac_.hiliteNext() : this.ac_.hilitePrev()
};
goog.ui.ac.InputHandler.prototype.moveDown_ = function() {
  return this.upsideDown_ ? this.ac_.hilitePrev() : this.ac_.hiliteNext()
};
goog.ui.ac.InputHandler.prototype.parseToken_ = function() {
  var caret = this.getCursorPosition();
  var text = this.getValue();
  return this.trim_(this.splitInput_(text)[this.getTokenIndex_(text, caret)])
};
goog.ui.ac.InputHandler.prototype.trim_ = function(text) {
  return this.trimmer_ ? String(text).replace(this.trimmer_, "") : text
};
goog.ui.ac.InputHandler.prototype.getTokenIndex_ = function(text, caret) {
  var entries = this.splitInput_(text);
  if(caret == text.length) {
    return entries.length - 1
  }
  var current = 0;
  for(var i = 0, pos = 0;i < entries.length && pos <= caret;i++) {
    pos += entries[i].length;
    current = i
  }
  return current
};
goog.ui.ac.InputHandler.prototype.splitInput_ = function(text) {
  if(!this.multi_) {
    return[text]
  }
  var arr = String(text).split("");
  var parts = [];
  var cache = [];
  for(var i = 0, inLiteral = false;i < arr.length;i++) {
    if(this.literals_ && this.literals_.indexOf(arr[i]) != -1) {
      if(this.generateNewTokenOnLiteral_ && !inLiteral) {
        parts.push(cache.join(""));
        cache.length = 0
      }
      cache.push(arr[i]);
      inLiteral = !inLiteral
    }else {
      if(!inLiteral && this.separators_.indexOf(arr[i]) != -1) {
        cache.push(arr[i]);
        parts.push(cache.join(""));
        cache.length = 0
      }else {
        cache.push(arr[i])
      }
    }
  }
  parts.push(cache.join(""));
  return parts
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370db", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#db7093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.Rgb;
goog.color.Hsv;
goog.color.Hsl;
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.fx.TransitionBase");
goog.provide("goog.fx.TransitionBase.State");
goog.require("goog.events.EventTarget");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.fx.TransitionBase = function() {
  goog.base(this);
  this.state_ = goog.fx.TransitionBase.State.STOPPED;
  this.startTime = null;
  this.endTime = null
};
goog.inherits(goog.fx.TransitionBase, goog.events.EventTarget);
goog.fx.TransitionBase.State = {STOPPED:0, PAUSED:-1, PLAYING:1};
goog.fx.TransitionBase.prototype.play = goog.abstractMethod;
goog.fx.TransitionBase.prototype.stop = goog.abstractMethod;
goog.fx.TransitionBase.prototype.pause = goog.abstractMethod;
goog.fx.TransitionBase.prototype.getStateInternal = function() {
  return this.state_
};
goog.fx.TransitionBase.prototype.setStatePlaying = function() {
  this.state_ = goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.setStatePaused = function() {
  this.state_ = goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.setStateStopped = function() {
  this.state_ = goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.isPlaying = function() {
  return this.state_ == goog.fx.TransitionBase.State.PLAYING
};
goog.fx.TransitionBase.prototype.isPaused = function() {
  return this.state_ == goog.fx.TransitionBase.State.PAUSED
};
goog.fx.TransitionBase.prototype.isStopped = function() {
  return this.state_ == goog.fx.TransitionBase.State.STOPPED
};
goog.fx.TransitionBase.prototype.onBegin = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.BEGIN)
};
goog.fx.TransitionBase.prototype.onEnd = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.END)
};
goog.fx.TransitionBase.prototype.onFinish = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.FINISH)
};
goog.fx.TransitionBase.prototype.onPause = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PAUSE)
};
goog.fx.TransitionBase.prototype.onPlay = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.PLAY)
};
goog.fx.TransitionBase.prototype.onResume = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.RESUME)
};
goog.fx.TransitionBase.prototype.onStop = function() {
  this.dispatchAnimationEvent(goog.fx.Transition.EventType.STOP)
};
goog.fx.TransitionBase.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(type)
};
goog.provide("goog.Delay");
goog.provide("goog.async.Delay");
goog.require("goog.Disposable");
goog.require("goog.Timer");
goog.async.Delay = function(listener, opt_interval, opt_handler) {
  goog.Disposable.call(this);
  this.listener_ = listener;
  this.interval_ = opt_interval || 0;
  this.handler_ = opt_handler;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.Delay, goog.Disposable);
goog.Delay = goog.async.Delay;
goog.async.Delay.prototype.id_ = 0;
goog.async.Delay.prototype.disposeInternal = function() {
  goog.async.Delay.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.listener_;
  delete this.handler_
};
goog.async.Delay.prototype.start = function(opt_interval) {
  this.stop();
  this.id_ = goog.Timer.callOnce(this.callback_, goog.isDef(opt_interval) ? opt_interval : this.interval_)
};
goog.async.Delay.prototype.stop = function() {
  if(this.isActive()) {
    goog.Timer.clear(this.id_)
  }
  this.id_ = 0
};
goog.async.Delay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.Delay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.Delay.prototype.isActive = function() {
  return this.id_ != 0
};
goog.async.Delay.prototype.doAction_ = function() {
  this.id_ = 0;
  if(this.listener_) {
    this.listener_.call(this.handler_)
  }
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs))
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.provide("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.functions");
goog.async.AnimationDelay = function(listener, opt_window, opt_handler) {
  goog.base(this);
  this.listener_ = listener;
  this.handler_ = opt_handler;
  this.win_ = opt_window || window;
  this.callback_ = goog.bind(this.doAction_, this)
};
goog.inherits(goog.async.AnimationDelay, goog.Disposable);
goog.async.AnimationDelay.prototype.id_ = null;
goog.async.AnimationDelay.prototype.usingListeners_ = false;
goog.async.AnimationDelay.TIMEOUT = 20;
goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_ = "MozBeforePaint";
goog.async.AnimationDelay.prototype.start = function() {
  this.stop();
  this.usingListeners_ = false;
  var raf = this.getRaf_();
  var cancelRaf = this.getCancelRaf_();
  if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
    this.id_ = goog.events.listen(this.win_, goog.async.AnimationDelay.MOZ_BEFORE_PAINT_EVENT_, this.callback_);
    this.win_.mozRequestAnimationFrame(null);
    this.usingListeners_ = true
  }else {
    if(raf && cancelRaf) {
      this.id_ = raf.call(this.win_, this.callback_)
    }else {
      this.id_ = this.win_.setTimeout(goog.functions.lock(this.callback_), goog.async.AnimationDelay.TIMEOUT)
    }
  }
};
goog.async.AnimationDelay.prototype.stop = function() {
  if(this.isActive()) {
    var raf = this.getRaf_();
    var cancelRaf = this.getCancelRaf_();
    if(raf && !cancelRaf && this.win_.mozRequestAnimationFrame) {
      goog.events.unlistenByKey(this.id_)
    }else {
      if(raf && cancelRaf) {
        cancelRaf.call(this.win_, (this.id_))
      }else {
        this.win_.clearTimeout((this.id_))
      }
    }
  }
  this.id_ = null
};
goog.async.AnimationDelay.prototype.fire = function() {
  this.stop();
  this.doAction_()
};
goog.async.AnimationDelay.prototype.fireIfActive = function() {
  if(this.isActive()) {
    this.fire()
  }
};
goog.async.AnimationDelay.prototype.isActive = function() {
  return this.id_ != null
};
goog.async.AnimationDelay.prototype.doAction_ = function() {
  if(this.usingListeners_ && this.id_) {
    goog.events.unlistenByKey(this.id_)
  }
  this.id_ = null;
  this.listener_.call(this.handler_, goog.now())
};
goog.async.AnimationDelay.prototype.disposeInternal = function() {
  this.stop();
  goog.base(this, "disposeInternal")
};
goog.async.AnimationDelay.prototype.getRaf_ = function() {
  var win = this.win_;
  return win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || null
};
goog.async.AnimationDelay.prototype.getCancelRaf_ = function() {
  var win = this.win_;
  return win.cancelRequestAnimationFrame || win.webkitCancelRequestAnimationFrame || win.mozCancelRequestAnimationFrame || win.oCancelRequestAnimationFrame || win.msCancelRequestAnimationFrame || null
};
goog.provide("goog.fx.anim");
goog.provide("goog.fx.anim.Animated");
goog.require("goog.async.AnimationDelay");
goog.require("goog.async.Delay");
goog.require("goog.object");
goog.fx.anim.Animated = function() {
};
goog.fx.anim.Animated.prototype.onAnimationFrame;
goog.fx.anim.TIMEOUT = goog.async.AnimationDelay.TIMEOUT;
goog.fx.anim.activeAnimations_ = {};
goog.fx.anim.animationWindow_ = null;
goog.fx.anim.animationDelay_ = null;
goog.fx.anim.registerAnimation = function(animation) {
  var uid = goog.getUid(animation);
  if(!(uid in goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.activeAnimations_[uid] = animation
  }
  goog.fx.anim.requestAnimationFrame_()
};
goog.fx.anim.unregisterAnimation = function(animation) {
  var uid = goog.getUid(animation);
  delete goog.fx.anim.activeAnimations_[uid];
  if(goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.cancelAnimationFrame_()
  }
};
goog.fx.anim.tearDown = function() {
  goog.fx.anim.animationWindow_ = null;
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.activeAnimations_ = {}
};
goog.fx.anim.setAnimationWindow = function(animationWindow) {
  var hasTimer = goog.fx.anim.animationDelay_ && goog.fx.anim.animationDelay_.isActive();
  goog.dispose(goog.fx.anim.animationDelay_);
  goog.fx.anim.animationDelay_ = null;
  goog.fx.anim.animationWindow_ = animationWindow;
  if(hasTimer) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.fx.anim.requestAnimationFrame_ = function() {
  if(!goog.fx.anim.animationDelay_) {
    if(goog.fx.anim.animationWindow_) {
      goog.fx.anim.animationDelay_ = new goog.async.AnimationDelay(function(now) {
        goog.fx.anim.cycleAnimations_(now)
      }, goog.fx.anim.animationWindow_)
    }else {
      goog.fx.anim.animationDelay_ = new goog.async.Delay(function() {
        goog.fx.anim.cycleAnimations_(goog.now())
      }, goog.fx.anim.TIMEOUT)
    }
  }
  var delay = goog.fx.anim.animationDelay_;
  if(!delay.isActive()) {
    delay.start()
  }
};
goog.fx.anim.cancelAnimationFrame_ = function() {
  if(goog.fx.anim.animationDelay_) {
    goog.fx.anim.animationDelay_.stop()
  }
};
goog.fx.anim.cycleAnimations_ = function(now) {
  goog.object.forEach(goog.fx.anim.activeAnimations_, function(anim) {
    anim.onAnimationFrame(now)
  });
  if(!goog.object.isEmpty(goog.fx.anim.activeAnimations_)) {
    goog.fx.anim.requestAnimationFrame_()
  }
};
goog.provide("goog.fx.Animation");
goog.provide("goog.fx.Animation.EventType");
goog.provide("goog.fx.Animation.State");
goog.provide("goog.fx.AnimationEvent");
goog.require("goog.array");
goog.require("goog.events.Event");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.fx.TransitionBase.State");
goog.require("goog.fx.anim");
goog.require("goog.fx.anim.Animated");
goog.fx.Animation = function(start, end, duration, opt_acc) {
  goog.base(this);
  if(!goog.isArray(start) || !goog.isArray(end)) {
    throw Error("Start and end parameters must be arrays");
  }
  if(start.length != end.length) {
    throw Error("Start and end points must be the same length");
  }
  this.startPoint = start;
  this.endPoint = end;
  this.duration = duration;
  this.accel_ = opt_acc;
  this.coords = [];
  this.useRightPositioningForRtl_ = false
};
goog.inherits(goog.fx.Animation, goog.fx.TransitionBase);
goog.fx.Animation.prototype.enableRightPositioningForRtl = function(useRightPositioningForRtl) {
  this.useRightPositioningForRtl_ = useRightPositioningForRtl
};
goog.fx.Animation.prototype.isRightPositioningForRtlEnabled = function() {
  return this.useRightPositioningForRtl_
};
goog.fx.Animation.EventType = {PLAY:goog.fx.Transition.EventType.PLAY, BEGIN:goog.fx.Transition.EventType.BEGIN, RESUME:goog.fx.Transition.EventType.RESUME, END:goog.fx.Transition.EventType.END, STOP:goog.fx.Transition.EventType.STOP, FINISH:goog.fx.Transition.EventType.FINISH, PAUSE:goog.fx.Transition.EventType.PAUSE, ANIMATE:"animate", DESTROY:"destroy"};
goog.fx.Animation.TIMEOUT = goog.fx.anim.TIMEOUT;
goog.fx.Animation.State = goog.fx.TransitionBase.State;
goog.fx.Animation.setAnimationWindow = function(animationWindow) {
  goog.fx.anim.setAnimationWindow(animationWindow)
};
goog.fx.Animation.prototype.fps_ = 0;
goog.fx.Animation.prototype.progress = 0;
goog.fx.Animation.prototype.lastFrame = null;
goog.fx.Animation.prototype.play = function(opt_restart) {
  if(opt_restart || this.isStopped()) {
    this.progress = 0;
    this.coords = this.startPoint
  }else {
    if(this.isPlaying()) {
      return false
    }
  }
  goog.fx.anim.unregisterAnimation(this);
  var now = (goog.now());
  this.startTime = now;
  if(this.isPaused()) {
    this.startTime -= this.duration * this.progress
  }
  this.endTime = this.startTime + this.duration;
  this.lastFrame = this.startTime;
  if(!this.progress) {
    this.onBegin()
  }
  this.onPlay();
  if(this.isPaused()) {
    this.onResume()
  }
  this.setStatePlaying();
  goog.fx.anim.registerAnimation(this);
  this.cycle(now);
  return true
};
goog.fx.Animation.prototype.stop = function(opt_gotoEnd) {
  goog.fx.anim.unregisterAnimation(this);
  this.setStateStopped();
  if(!!opt_gotoEnd) {
    this.progress = 1
  }
  this.updateCoords_(this.progress);
  this.onStop();
  this.onEnd()
};
goog.fx.Animation.prototype.pause = function() {
  if(this.isPlaying()) {
    goog.fx.anim.unregisterAnimation(this);
    this.setStatePaused();
    this.onPause()
  }
};
goog.fx.Animation.prototype.getProgress = function() {
  return this.progress
};
goog.fx.Animation.prototype.setProgress = function(progress) {
  this.progress = progress;
  if(this.isPlaying()) {
    var now = goog.now();
    this.startTime = now - this.duration * this.progress;
    this.endTime = this.startTime + this.duration
  }
};
goog.fx.Animation.prototype.disposeInternal = function() {
  if(!this.isStopped()) {
    this.stop(false)
  }
  this.onDestroy();
  goog.base(this, "disposeInternal")
};
goog.fx.Animation.prototype.destroy = function() {
  this.dispose()
};
goog.fx.Animation.prototype.onAnimationFrame = function(now) {
  this.cycle(now)
};
goog.fx.Animation.prototype.cycle = function(now) {
  this.progress = (now - this.startTime) / (this.endTime - this.startTime);
  if(this.progress >= 1) {
    this.progress = 1
  }
  this.fps_ = 1E3 / (now - this.lastFrame);
  this.lastFrame = now;
  this.updateCoords_(this.progress);
  if(this.progress == 1) {
    this.setStateStopped();
    goog.fx.anim.unregisterAnimation(this);
    this.onFinish();
    this.onEnd()
  }else {
    if(this.isPlaying()) {
      this.onAnimate()
    }
  }
};
goog.fx.Animation.prototype.updateCoords_ = function(t) {
  if(goog.isFunction(this.accel_)) {
    t = this.accel_(t)
  }
  this.coords = new Array(this.startPoint.length);
  for(var i = 0;i < this.startPoint.length;i++) {
    this.coords[i] = (this.endPoint[i] - this.startPoint[i]) * t + this.startPoint[i]
  }
};
goog.fx.Animation.prototype.onAnimate = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.ANIMATE)
};
goog.fx.Animation.prototype.onDestroy = function() {
  this.dispatchAnimationEvent(goog.fx.Animation.EventType.DESTROY)
};
goog.fx.Animation.prototype.dispatchAnimationEvent = function(type) {
  this.dispatchEvent(new goog.fx.AnimationEvent(type, this))
};
goog.fx.AnimationEvent = function(type, anim) {
  goog.base(this, type);
  this.coords = anim.coords;
  this.x = anim.coords[0];
  this.y = anim.coords[1];
  this.z = anim.coords[2];
  this.duration = anim.duration;
  this.progress = anim.getProgress();
  this.fps = anim.fps_;
  this.state = anim.getStateInternal();
  this.anim = anim
};
goog.inherits(goog.fx.AnimationEvent, goog.events.Event);
goog.fx.AnimationEvent.prototype.coordsAsInts = function() {
  return goog.array.map(this.coords, Math.round)
};
goog.provide("goog.dom.vendor");
goog.require("goog.userAgent");
goog.dom.vendor.getVendorJsPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"Webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"Moz"
    }else {
      if(goog.userAgent.IE) {
        return"ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"O"
        }
      }
    }
  }
  return null
};
goog.dom.vendor.getVendorPrefix = function() {
  if(goog.userAgent.WEBKIT) {
    return"-webkit"
  }else {
    if(goog.userAgent.GECKO) {
      return"-moz"
    }else {
      if(goog.userAgent.IE) {
        return"-ms"
      }else {
        if(goog.userAgent.OPERA) {
          return"-o"
        }
      }
    }
  }
  return null
};
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.relativePositionX = function(box, coord) {
  if(coord.x < box.left) {
    return coord.x - box.left
  }else {
    if(coord.x > box.right) {
      return coord.x - box.right
    }
  }
  return 0
};
goog.math.Box.relativePositionY = function(box, coord) {
  if(coord.y < box.top) {
    return coord.y - box.top
  }else {
    if(coord.y > box.bottom) {
      return coord.y - box.bottom
    }
  }
  return 0
};
goog.math.Box.distance = function(box, coord) {
  var x = goog.math.Box.relativePositionX(box, coord);
  var y = goog.math.Box.relativePositionY(box, coord);
  return Math.sqrt(x * x + y * y)
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.math.Box.prototype.ceil = function() {
  this.top = Math.ceil(this.top);
  this.right = Math.ceil(this.right);
  this.bottom = Math.ceil(this.bottom);
  this.left = Math.ceil(this.left);
  return this
};
goog.math.Box.prototype.floor = function() {
  this.top = Math.floor(this.top);
  this.right = Math.floor(this.right);
  this.bottom = Math.floor(this.bottom);
  this.left = Math.floor(this.left);
  return this
};
goog.math.Box.prototype.round = function() {
  this.top = Math.round(this.top);
  this.right = Math.round(this.right);
  this.bottom = Math.round(this.bottom);
  this.left = Math.round(this.left);
  return this
};
goog.math.Box.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.right += tx.x;
    this.top += tx.y;
    this.bottom += tx.y
  }else {
    this.left += tx;
    this.right += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty;
      this.bottom += opt_ty
    }
  }
  return this
};
goog.math.Box.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.right *= sx;
  this.top *= sy;
  this.bottom *= sy;
  return this
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.math.Rect.prototype.ceil = function() {
  this.left = Math.ceil(this.left);
  this.top = Math.ceil(this.top);
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Rect.prototype.floor = function() {
  this.left = Math.floor(this.left);
  this.top = Math.floor(this.top);
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Rect.prototype.round = function() {
  this.left = Math.round(this.left);
  this.top = Math.round(this.top);
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Rect.prototype.translate = function(tx, opt_ty) {
  if(tx instanceof goog.math.Coordinate) {
    this.left += tx.x;
    this.top += tx.y
  }else {
    this.left += tx;
    if(goog.isNumber(opt_ty)) {
      this.top += opt_ty
    }
  }
  return this
};
goog.math.Rect.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.left *= sx;
  this.width *= sx;
  this.top *= sy;
  this.height *= sy;
  return this
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.vendor");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  var propertyName = goog.style.getVendorJsStyleName_(element, style);
  if(propertyName) {
    element.style[propertyName] = value
  }
};
goog.style.getVendorJsStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return prefixedStyle
    }
  }
  return camelStyle
};
goog.style.getVendorStyleName_ = function(element, style) {
  var camelStyle = goog.string.toCamelCase(style);
  if(element.style[camelStyle] === undefined) {
    var prefixedStyle = goog.dom.vendor.getVendorJsPrefix() + goog.string.toTitleCase(style);
    if(element.style[prefixedStyle] !== undefined) {
      return goog.dom.vendor.getVendorPrefix() + "-" + style
    }
  }
  return style
};
goog.style.getStyle = function(element, property) {
  var styleValue = element.style[goog.string.toCamelCase(property)];
  if(typeof styleValue !== "undefined") {
    return styleValue
  }
  return element.style[goog.style.getVendorJsStyleName_(element, property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property) || ""
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style && element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_((x), buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_((y), buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    doc = goog.dom.getOwnerDocument(opt_node)
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getViewportPageOffset = function(doc) {
  var body = doc.body;
  var documentElement = doc.documentElement;
  var scrollLeft = body.scrollLeft || documentElement.scrollLeft;
  var scrollTop = body.scrollTop || documentElement.scrollTop;
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return(rect)
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(8)) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_((parent), "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return(parent)
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.getContainerOffsetToScrollInto = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  var scrollLeft = container.scrollLeft;
  var scrollTop = container.scrollTop;
  if(opt_center) {
    scrollLeft += relX - spaceX / 2;
    scrollTop += relY - spaceY / 2
  }else {
    scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
  return new goog.math.Coordinate(scrollLeft, scrollTop)
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var offset = goog.style.getContainerOffsetToScrollInto(element, container, opt_center);
  container.scrollLeft = offset.x;
  container.scrollTop = offset.y
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  goog.asserts.assertObject(el, "Parameter is required");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    el = (el);
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
    if(goog.userAgent.GECKO && !goog.userAgent.isVersion(12)) {
      pos = goog.math.Coordinate.sum(pos, goog.style.getCssTranslation(el))
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, (w));
  goog.style.setHeight(element, (h))
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity\x3d" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src\x3d"' + src + '", sizingMethod\x3d"crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || (styleSheet);
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    element.innerHTML = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = Math.max(size.width, 0) + "px";
  style.height = Math.max(size.height, 0) + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  var value = goog.style.getCascadedStyle(element, propName);
  return value ? goog.style.getIePixelValue_(element, value, "left", "pixelLeft") : 0
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, stylePrefix + "Left"));
    var right = (goog.style.getComputedStyle(element, stylePrefix + "Right"));
    var top = (goog.style.getComputedStyle(element, stylePrefix + "Top"));
    var bottom = (goog.style.getComputedStyle(element, stylePrefix + "Bottom"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = (goog.style.getComputedStyle(element, "borderLeftWidth"));
    var right = (goog.style.getComputedStyle(element, "borderRightWidth"));
    var top = (goog.style.getComputedStyle(element, "borderTopWidth"));
    var bottom = (goog.style.getComputedStyle(element, "borderBottomWidth"));
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = (el.parentNode);
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.style.MATRIX_TRANSLATION_REGEX_ = new RegExp("matrix\\([0-9\\.\\-]+, [0-9\\.\\-]+, " + "[0-9\\.\\-]+, [0-9\\.\\-]+, " + "([0-9\\.\\-]+)p?x?, ([0-9\\.\\-]+)p?x?\\)");
goog.style.getCssTranslation = function(element) {
  var property;
  if(goog.userAgent.IE) {
    property = "-ms-transform"
  }else {
    if(goog.userAgent.WEBKIT) {
      property = "-webkit-transform"
    }else {
      if(goog.userAgent.OPERA) {
        property = "-o-transform"
      }else {
        if(goog.userAgent.GECKO) {
          property = "-moz-transform"
        }
      }
    }
  }
  var transform;
  if(property) {
    transform = goog.style.getStyle_(element, property)
  }
  if(!transform) {
    transform = goog.style.getStyle_(element, "transform")
  }
  if(!transform) {
    return new goog.math.Coordinate(0, 0)
  }
  var matches = transform.match(goog.style.MATRIX_TRANSLATION_REGEX_);
  if(!matches) {
    return new goog.math.Coordinate(0, 0)
  }
  return new goog.math.Coordinate(parseFloat(matches[1]), parseFloat(matches[2]))
};
goog.provide("goog.style.bidi");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.style.bidi.getScrollLeft = function(element) {
  var isRtl = goog.style.isRightToLeft(element);
  if(isRtl && goog.userAgent.GECKO) {
    return-element.scrollLeft
  }else {
    if(isRtl && !(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
      var overflowX = goog.style.getComputedOverflowX(element);
      if(overflowX == "visible") {
        return element.scrollLeft
      }else {
        return element.scrollWidth - element.clientWidth - element.scrollLeft
      }
    }
  }
  return element.scrollLeft
};
goog.style.bidi.getOffsetStart = function(element) {
  var offsetLeftForReal = element.offsetLeft;
  var bestParent = element.offsetParent;
  if(!bestParent && goog.style.getComputedPosition(element) == "fixed") {
    bestParent = goog.dom.getOwnerDocument(element).documentElement
  }
  if(!bestParent) {
    return offsetLeftForReal
  }
  if(goog.userAgent.GECKO) {
    var borderWidths = goog.style.getBorderBox(bestParent);
    offsetLeftForReal += borderWidths.left
  }else {
    if(goog.userAgent.isDocumentMode(8)) {
      var borderWidths = goog.style.getBorderBox(bestParent);
      offsetLeftForReal -= borderWidths.left
    }
  }
  if(goog.style.isRightToLeft(bestParent)) {
    var elementRightOffset = offsetLeftForReal + element.offsetWidth;
    return bestParent.clientWidth - elementRightOffset
  }
  return offsetLeftForReal
};
goog.style.bidi.setScrollOffset = function(element, offsetStart) {
  offsetStart = Math.max(offsetStart, 0);
  if(!goog.style.isRightToLeft(element)) {
    element.scrollLeft = offsetStart
  }else {
    if(goog.userAgent.GECKO) {
      element.scrollLeft = -offsetStart
    }else {
      if(!(goog.userAgent.IE && goog.userAgent.isVersion("8"))) {
        element.scrollLeft = element.scrollWidth - offsetStart - element.clientWidth
      }else {
        element.scrollLeft = offsetStart
      }
    }
  }
};
goog.style.bidi.setPosition = function(elem, left, top, isRtl) {
  if(!goog.isNull(top)) {
    elem.style.top = top + "px"
  }
  if(isRtl) {
    elem.style.right = left + "px";
    elem.style.left = ""
  }else {
    elem.style.left = left + "px";
    elem.style.right = ""
  }
};
goog.provide("goog.fx.dom");
goog.provide("goog.fx.dom.BgColorTransform");
goog.provide("goog.fx.dom.ColorTransform");
goog.provide("goog.fx.dom.Fade");
goog.provide("goog.fx.dom.FadeIn");
goog.provide("goog.fx.dom.FadeInAndShow");
goog.provide("goog.fx.dom.FadeOut");
goog.provide("goog.fx.dom.FadeOutAndHide");
goog.provide("goog.fx.dom.PredefinedEffect");
goog.provide("goog.fx.dom.Resize");
goog.provide("goog.fx.dom.ResizeHeight");
goog.provide("goog.fx.dom.ResizeWidth");
goog.provide("goog.fx.dom.Scroll");
goog.provide("goog.fx.dom.Slide");
goog.provide("goog.fx.dom.SlideFrom");
goog.provide("goog.fx.dom.Swipe");
goog.require("goog.color");
goog.require("goog.events");
goog.require("goog.fx.Animation");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.fx.dom.PredefinedEffect = function(element, start, end, time, opt_acc) {
  goog.fx.Animation.call(this, start, end, time, opt_acc);
  this.element = element;
  this.rightToLeft_
};
goog.inherits(goog.fx.dom.PredefinedEffect, goog.fx.Animation);
goog.fx.dom.PredefinedEffect.prototype.updateStyle = goog.nullFunction;
goog.fx.dom.PredefinedEffect.prototype.rightToLeft_;
goog.fx.dom.PredefinedEffect.prototype.isRightToLeft = function() {
  if(!goog.isDef(this.rightToLeft_)) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.element)
  }
  return this.rightToLeft_
};
goog.fx.dom.PredefinedEffect.prototype.onAnimate = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onAnimate.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onEnd = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onEnd.call(this)
};
goog.fx.dom.PredefinedEffect.prototype.onBegin = function() {
  this.updateStyle();
  goog.fx.dom.PredefinedEffect.superClass_.onBegin.call(this)
};
goog.fx.dom.Slide = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Slide, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Slide.prototype.updateStyle = function() {
  var pos = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "right" : "left";
  this.element.style[pos] = Math.round(this.coords[0]) + "px";
  this.element.style.top = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.SlideFrom = function(element, end, time, opt_acc) {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(element) : element.offsetLeft;
  var start = [offsetLeft, element.offsetTop];
  goog.fx.dom.Slide.call(this, element, start, end, time, opt_acc)
};
goog.inherits(goog.fx.dom.SlideFrom, goog.fx.dom.Slide);
goog.fx.dom.SlideFrom.prototype.onBegin = function() {
  var offsetLeft = this.isRightPositioningForRtlEnabled() ? goog.style.bidi.getOffsetStart(this.element) : this.element.offsetLeft;
  this.startPoint = [offsetLeft, this.element.offsetTop];
  goog.fx.dom.SlideFrom.superClass_.onBegin.call(this)
};
goog.fx.dom.Swipe = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments);
  this.maxWidth_ = Math.max(this.endPoint[0], this.startPoint[0]);
  this.maxHeight_ = Math.max(this.endPoint[1], this.startPoint[1])
};
goog.inherits(goog.fx.dom.Swipe, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Swipe.prototype.updateStyle = function() {
  var x = this.coords[0];
  var y = this.coords[1];
  this.clip_(Math.round(x), Math.round(y), this.maxWidth_, this.maxHeight_);
  this.element.style.width = Math.round(x) + "px";
  var marginX = this.isRightPositioningForRtlEnabled() && this.isRightToLeft() ? "marginRight" : "marginLeft";
  this.element.style[marginX] = Math.round(x) - this.maxWidth_ + "px";
  this.element.style.marginTop = Math.round(y) - this.maxHeight_ + "px"
};
goog.fx.dom.Swipe.prototype.clip_ = function(x, y, w, h) {
  this.element.style.clip = "rect(" + (h - y) + "px " + w + "px " + h + "px " + (w - x) + "px)"
};
goog.fx.dom.Scroll = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Scroll, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Scroll.prototype.updateStyle = function() {
  if(this.isRightPositioningForRtlEnabled()) {
    goog.style.bidi.setScrollOffset(this.element, Math.round(this.coords[0]))
  }else {
    this.element.scrollLeft = Math.round(this.coords[0])
  }
  this.element.scrollTop = Math.round(this.coords[1])
};
goog.fx.dom.Resize = function(element, start, end, time, opt_acc) {
  if(start.length != 2 || end.length != 2) {
    throw Error("Start and end points must be 2D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.Resize, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Resize.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px";
  this.element.style.height = Math.round(this.coords[1]) + "px"
};
goog.fx.dom.ResizeWidth = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeWidth, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeWidth.prototype.updateStyle = function() {
  this.element.style.width = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.ResizeHeight = function(element, start, end, time, opt_acc) {
  goog.fx.dom.PredefinedEffect.call(this, element, [start], [end], time, opt_acc)
};
goog.inherits(goog.fx.dom.ResizeHeight, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ResizeHeight.prototype.updateStyle = function() {
  this.element.style.height = Math.round(this.coords[0]) + "px"
};
goog.fx.dom.Fade = function(element, start, end, time, opt_acc) {
  if(goog.isNumber(start)) {
    start = [start]
  }
  if(goog.isNumber(end)) {
    end = [end]
  }
  goog.fx.dom.PredefinedEffect.call(this, element, start, end, time, opt_acc);
  if(start.length != 1 || end.length != 1) {
    throw Error("Start and end points must be 1D");
  }
};
goog.inherits(goog.fx.dom.Fade, goog.fx.dom.PredefinedEffect);
goog.fx.dom.Fade.prototype.updateStyle = function() {
  goog.style.setOpacity(this.element, this.coords[0])
};
goog.fx.dom.Fade.prototype.show = function() {
  this.element.style.display = ""
};
goog.fx.dom.Fade.prototype.hide = function() {
  this.element.style.display = "none"
};
goog.fx.dom.FadeOut = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOut, goog.fx.dom.Fade);
goog.fx.dom.FadeIn = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeIn, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 1, 0, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeOutAndHide, goog.fx.dom.Fade);
goog.fx.dom.FadeOutAndHide.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeOutAndHide.superClass_.onBegin.call(this)
};
goog.fx.dom.FadeOutAndHide.prototype.onEnd = function() {
  this.hide();
  goog.fx.dom.FadeOutAndHide.superClass_.onEnd.call(this)
};
goog.fx.dom.FadeInAndShow = function(element, time, opt_acc) {
  goog.fx.dom.Fade.call(this, element, 0, 1, time, opt_acc)
};
goog.inherits(goog.fx.dom.FadeInAndShow, goog.fx.dom.Fade);
goog.fx.dom.FadeInAndShow.prototype.onBegin = function() {
  this.show();
  goog.fx.dom.FadeInAndShow.superClass_.onBegin.call(this)
};
goog.fx.dom.BgColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.BgColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.BgColorTransform.prototype.setColor = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.backgroundColor = color
};
goog.fx.dom.BgColorTransform.prototype.updateStyle = function() {
  this.setColor()
};
goog.fx.dom.bgColorFadeIn = function(element, start, time, opt_eventHandler) {
  var initialBgColor = element.style.backgroundColor || "";
  var computedBgColor = goog.style.getBackgroundColor(element);
  var end;
  if(computedBgColor && computedBgColor != "transparent" && computedBgColor != "rgba(0, 0, 0, 0)") {
    end = goog.color.hexToRgb(goog.color.parse(computedBgColor).hex)
  }else {
    end = [255, 255, 255]
  }
  var anim = new goog.fx.dom.BgColorTransform(element, start, end, time);
  function setBgColor() {
    element.style.backgroundColor = initialBgColor
  }
  if(opt_eventHandler) {
    opt_eventHandler.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }else {
    goog.events.listen(anim, goog.fx.Transition.EventType.END, setBgColor)
  }
  anim.play()
};
goog.fx.dom.ColorTransform = function(element, start, end, time, opt_acc) {
  if(start.length != 3 || end.length != 3) {
    throw Error("Start and end points must be 3D");
  }
  goog.fx.dom.PredefinedEffect.apply(this, arguments)
};
goog.inherits(goog.fx.dom.ColorTransform, goog.fx.dom.PredefinedEffect);
goog.fx.dom.ColorTransform.prototype.updateStyle = function() {
  var coordsAsInts = [];
  for(var i = 0;i < this.coords.length;i++) {
    coordsAsInts[i] = Math.round(this.coords[i])
  }
  var color = "rgb(" + coordsAsInts.join(",") + ")";
  this.element.style.color = color
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__11170 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__11170;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(function() {
    var or__3943__auto__ = limit <= 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return limit >= 2 + cljs.core.count.call(null, s)
    }
  }()) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__11174 = cljs.core._EQ_;
    var expr__11175 = limit;
    if(pred__11174.call(null, 1, expr__11175)) {
      return cljs.core.vector.call(null, s)
    }else {
      if(pred__11174.call(null, 2, expr__11175)) {
        return cljs.core.vector.call(null, "", s)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__11177 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__11178 = limit__$1 - 1;
            var G__11179 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__11177;
            limit__$1 = G__11178;
            parts = G__11179;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(function() {
        var or__3943__auto__ = cljs.core._EQ_.call(null, ch, "\n");
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          return cljs.core._EQ_.call(null, ch, "\r")
        }
      }()) {
        var G__11180 = index - 1;
        index = G__11180;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___11181 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___11181)) {
        var replacement_11182 = temp__4090__auto___11181;
        buffer.append([cljs.core.str(replacement_11182)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__11183 = index + 1;
      index = G__11183;
      continue
    }
    break
  }
};
goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3941__auto__ = function() {
    var or__3943__auto__ = idx === 0;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return" " === class_name.charAt(idx - 1)
    }
  }();
  if(cljs.core.truth_(and__3941__auto__)) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if(stop <= total_len) {
      var or__3943__auto__ = stop === total_len;
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return" " === class_name.charAt(stop)
      }
    }else {
      return null
    }
  }else {
    return and__3941__auto__
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while(true) {
    var i = class_name.indexOf(class$, start_from);
    if(i >= 0) {
      if(dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i
      }else {
        var G__11334 = i + class$.length;
        start_from = G__11334;
        continue
      }
    }else {
      return null
    }
    break
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1)
  }else {
    var temp__4092__auto__ = elem__$1.className;
    if(cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if(cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if(cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___11359 = elem__$1.classList;
      if(cljs.core.truth_(temp__4090__auto___11359)) {
        var class_list_11360 = temp__4090__auto___11359;
        var seq__11347_11361 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__11348_11362 = null;
        var count__11349_11363 = 0;
        var i__11350_11364 = 0;
        while(true) {
          if(i__11350_11364 < count__11349_11363) {
            var class_11365 = cljs.core._nth.call(null, chunk__11348_11362, i__11350_11364);
            class_list_11360.add(class_11365);
            var G__11366 = seq__11347_11361;
            var G__11367 = chunk__11348_11362;
            var G__11368 = count__11349_11363;
            var G__11369 = i__11350_11364 + 1;
            seq__11347_11361 = G__11366;
            chunk__11348_11362 = G__11367;
            count__11349_11363 = G__11368;
            i__11350_11364 = G__11369;
            continue
          }else {
            var temp__4092__auto___11370 = cljs.core.seq.call(null, seq__11347_11361);
            if(temp__4092__auto___11370) {
              var seq__11347_11371__$1 = temp__4092__auto___11370;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__11347_11371__$1)) {
                var c__3525__auto___11372 = cljs.core.chunk_first.call(null, seq__11347_11371__$1);
                var G__11373 = cljs.core.chunk_rest.call(null, seq__11347_11371__$1);
                var G__11374 = c__3525__auto___11372;
                var G__11375 = cljs.core.count.call(null, c__3525__auto___11372);
                var G__11376 = 0;
                seq__11347_11361 = G__11373;
                chunk__11348_11362 = G__11374;
                count__11349_11363 = G__11375;
                i__11350_11364 = G__11376;
                continue
              }else {
                var class_11377 = cljs.core.first.call(null, seq__11347_11371__$1);
                class_list_11360.add(class_11377);
                var G__11378 = cljs.core.next.call(null, seq__11347_11371__$1);
                var G__11379 = null;
                var G__11380 = 0;
                var G__11381 = 0;
                seq__11347_11361 = G__11378;
                chunk__11348_11362 = G__11379;
                count__11349_11363 = G__11380;
                i__11350_11364 = G__11381;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        var class_name_11382 = elem__$1.className;
        var seq__11351_11383 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__11352_11384 = null;
        var count__11353_11385 = 0;
        var i__11354_11386 = 0;
        while(true) {
          if(i__11354_11386 < count__11353_11385) {
            var class_11387 = cljs.core._nth.call(null, chunk__11352_11384, i__11354_11386);
            if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_11382, class_11387))) {
            }else {
              elem__$1.className = class_name_11382 === "" ? class_11387 : [cljs.core.str(class_name_11382), cljs.core.str(" "), cljs.core.str(class_11387)].join("")
            }
            var G__11388 = seq__11351_11383;
            var G__11389 = chunk__11352_11384;
            var G__11390 = count__11353_11385;
            var G__11391 = i__11354_11386 + 1;
            seq__11351_11383 = G__11388;
            chunk__11352_11384 = G__11389;
            count__11353_11385 = G__11390;
            i__11354_11386 = G__11391;
            continue
          }else {
            var temp__4092__auto___11392 = cljs.core.seq.call(null, seq__11351_11383);
            if(temp__4092__auto___11392) {
              var seq__11351_11393__$1 = temp__4092__auto___11392;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__11351_11393__$1)) {
                var c__3525__auto___11394 = cljs.core.chunk_first.call(null, seq__11351_11393__$1);
                var G__11395 = cljs.core.chunk_rest.call(null, seq__11351_11393__$1);
                var G__11396 = c__3525__auto___11394;
                var G__11397 = cljs.core.count.call(null, c__3525__auto___11394);
                var G__11398 = 0;
                seq__11351_11383 = G__11395;
                chunk__11352_11384 = G__11396;
                count__11353_11385 = G__11397;
                i__11354_11386 = G__11398;
                continue
              }else {
                var class_11399 = cljs.core.first.call(null, seq__11351_11393__$1);
                if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_11382, class_11399))) {
                }else {
                  elem__$1.className = class_name_11382 === "" ? class_11399 : [cljs.core.str(class_name_11382), cljs.core.str(" "), cljs.core.str(class_11399)].join("")
                }
                var G__11400 = cljs.core.next.call(null, seq__11351_11393__$1);
                var G__11401 = null;
                var G__11402 = 0;
                var G__11403 = 0;
                seq__11351_11383 = G__11400;
                chunk__11352_11384 = G__11401;
                count__11353_11385 = G__11402;
                i__11354_11386 = G__11403;
                continue
              }
            }else {
            }
          }
          break
        }
      }
    }else {
    }
    return elem__$1
  };
  var add_class_BANG___3 = function() {
    var G__11404__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__11355_11405 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__11356_11406 = null;
      var count__11357_11407 = 0;
      var i__11358_11408 = 0;
      while(true) {
        if(i__11358_11408 < count__11357_11407) {
          var c_11409 = cljs.core._nth.call(null, chunk__11356_11406, i__11358_11408);
          add_class_BANG_.call(null, elem__$1, c_11409);
          var G__11410 = seq__11355_11405;
          var G__11411 = chunk__11356_11406;
          var G__11412 = count__11357_11407;
          var G__11413 = i__11358_11408 + 1;
          seq__11355_11405 = G__11410;
          chunk__11356_11406 = G__11411;
          count__11357_11407 = G__11412;
          i__11358_11408 = G__11413;
          continue
        }else {
          var temp__4092__auto___11414 = cljs.core.seq.call(null, seq__11355_11405);
          if(temp__4092__auto___11414) {
            var seq__11355_11415__$1 = temp__4092__auto___11414;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__11355_11415__$1)) {
              var c__3525__auto___11416 = cljs.core.chunk_first.call(null, seq__11355_11415__$1);
              var G__11417 = cljs.core.chunk_rest.call(null, seq__11355_11415__$1);
              var G__11418 = c__3525__auto___11416;
              var G__11419 = cljs.core.count.call(null, c__3525__auto___11416);
              var G__11420 = 0;
              seq__11355_11405 = G__11417;
              chunk__11356_11406 = G__11418;
              count__11357_11407 = G__11419;
              i__11358_11408 = G__11420;
              continue
            }else {
              var c_11421 = cljs.core.first.call(null, seq__11355_11415__$1);
              add_class_BANG_.call(null, elem__$1, c_11421);
              var G__11422 = cljs.core.next.call(null, seq__11355_11415__$1);
              var G__11423 = null;
              var G__11424 = 0;
              var G__11425 = 0;
              seq__11355_11405 = G__11422;
              chunk__11356_11406 = G__11423;
              count__11357_11407 = G__11424;
              i__11358_11408 = G__11425;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__11404 = function(elem, classes, var_args) {
      var more_classes = null;
      if(arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11404__delegate.call(this, elem, classes, more_classes)
    };
    G__11404.cljs$lang$maxFixedArity = 2;
    G__11404.cljs$lang$applyTo = function(arglist__11426) {
      var elem = cljs.core.first(arglist__11426);
      arglist__11426 = cljs.core.next(arglist__11426);
      var classes = cljs.core.first(arglist__11426);
      var more_classes = cljs.core.rest(arglist__11426);
      return G__11404__delegate(elem, classes, more_classes)
    };
    G__11404.cljs$core$IFn$_invoke$arity$variadic = G__11404__delegate;
    return G__11404
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while(true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__11427 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("")
      }();
      class_name = G__11427;
      continue
    }else {
      return class_name
    }
    break
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___11436 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___11436)) {
      var class_list_11437 = temp__4090__auto___11436;
      class_list_11437.remove(class$__$1)
    }else {
      var class_name_11438 = elem__$1.className;
      var new_class_name_11439 = dommy.attrs.remove_class_str.call(null, class_name_11438, class$__$1);
      if(class_name_11438 === new_class_name_11439) {
      }else {
        elem__$1.className = new_class_name_11439
      }
    }
    return elem__$1
  };
  var remove_class_BANG___3 = function() {
    var G__11440__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__11432 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__11433 = null;
      var count__11434 = 0;
      var i__11435 = 0;
      while(true) {
        if(i__11435 < count__11434) {
          var c = cljs.core._nth.call(null, chunk__11433, i__11435);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__11441 = seq__11432;
          var G__11442 = chunk__11433;
          var G__11443 = count__11434;
          var G__11444 = i__11435 + 1;
          seq__11432 = G__11441;
          chunk__11433 = G__11442;
          count__11434 = G__11443;
          i__11435 = G__11444;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__11432);
          if(temp__4092__auto__) {
            var seq__11432__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__11432__$1)) {
              var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__11432__$1);
              var G__11445 = cljs.core.chunk_rest.call(null, seq__11432__$1);
              var G__11446 = c__3525__auto__;
              var G__11447 = cljs.core.count.call(null, c__3525__auto__);
              var G__11448 = 0;
              seq__11432 = G__11445;
              chunk__11433 = G__11446;
              count__11434 = G__11447;
              i__11435 = G__11448;
              continue
            }else {
              var c = cljs.core.first.call(null, seq__11432__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__11449 = cljs.core.next.call(null, seq__11432__$1);
              var G__11450 = null;
              var G__11451 = 0;
              var G__11452 = 0;
              seq__11432 = G__11449;
              chunk__11433 = G__11450;
              count__11434 = G__11451;
              i__11435 = G__11452;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__11440 = function(elem, class$, var_args) {
      var classes = null;
      if(arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11440__delegate.call(this, elem, class$, classes)
    };
    G__11440.cljs$lang$maxFixedArity = 2;
    G__11440.cljs$lang$applyTo = function(arglist__11453) {
      var elem = cljs.core.first(arglist__11453);
      arglist__11453 = cljs.core.next(arglist__11453);
      var class$ = cljs.core.first(arglist__11453);
      var classes = cljs.core.rest(arglist__11453);
      return G__11440__delegate(elem, class$, classes)
    };
    G__11440.cljs$core$IFn$_invoke$arity$variadic = G__11440__delegate;
    return G__11440
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var temp__4090__auto___11454 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___11454)) {
      var class_list_11455 = temp__4090__auto___11454;
      class_list_11455.toggle(class$)
    }else {
      toggle_class_BANG_.call(null, elem__$1, class$, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$))
    }
    return elem__$1
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$)
    }else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$)
    }
    return elem__$1
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_
}();
dommy.attrs.style_str = function style_str(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__11458) {
      var vec__11459 = p__11458;
      var k = cljs.core.nth.call(null, vec__11459, 0, null);
      var v = cljs.core.nth.call(null, vec__11459, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("")
    }, x))
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__11466_11472 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__11467_11473 = null;
    var count__11468_11474 = 0;
    var i__11469_11475 = 0;
    while(true) {
      if(i__11469_11475 < count__11468_11474) {
        var vec__11470_11476 = cljs.core._nth.call(null, chunk__11467_11473, i__11469_11475);
        var k_11477 = cljs.core.nth.call(null, vec__11470_11476, 0, null);
        var v_11478 = cljs.core.nth.call(null, vec__11470_11476, 1, null);
        style[cljs.core.name.call(null, k_11477)] = v_11478;
        var G__11479 = seq__11466_11472;
        var G__11480 = chunk__11467_11473;
        var G__11481 = count__11468_11474;
        var G__11482 = i__11469_11475 + 1;
        seq__11466_11472 = G__11479;
        chunk__11467_11473 = G__11480;
        count__11468_11474 = G__11481;
        i__11469_11475 = G__11482;
        continue
      }else {
        var temp__4092__auto___11483 = cljs.core.seq.call(null, seq__11466_11472);
        if(temp__4092__auto___11483) {
          var seq__11466_11484__$1 = temp__4092__auto___11483;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__11466_11484__$1)) {
            var c__3525__auto___11485 = cljs.core.chunk_first.call(null, seq__11466_11484__$1);
            var G__11486 = cljs.core.chunk_rest.call(null, seq__11466_11484__$1);
            var G__11487 = c__3525__auto___11485;
            var G__11488 = cljs.core.count.call(null, c__3525__auto___11485);
            var G__11489 = 0;
            seq__11466_11472 = G__11486;
            chunk__11467_11473 = G__11487;
            count__11468_11474 = G__11488;
            i__11469_11475 = G__11489;
            continue
          }else {
            var vec__11471_11490 = cljs.core.first.call(null, seq__11466_11484__$1);
            var k_11491 = cljs.core.nth.call(null, vec__11471_11490, 0, null);
            var v_11492 = cljs.core.nth.call(null, vec__11471_11490, 1, null);
            style[cljs.core.name.call(null, k_11491)] = v_11492;
            var G__11493 = cljs.core.next.call(null, seq__11466_11484__$1);
            var G__11494 = null;
            var G__11495 = 0;
            var G__11496 = 0;
            seq__11466_11472 = G__11493;
            chunk__11467_11473 = G__11494;
            count__11468_11474 = G__11495;
            i__11469_11475 = G__11496;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_style_BANG___delegate.call(this, elem, kvs)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__11497) {
    var elem = cljs.core.first(arglist__11497);
    var kvs = cljs.core.rest(arglist__11497);
    return set_style_BANG___delegate(elem, kvs)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
dommy.attrs.style = function style(elem, k) {
  if(cljs.core.truth_(k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)]
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__11504_11510 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__11505_11511 = null;
    var count__11506_11512 = 0;
    var i__11507_11513 = 0;
    while(true) {
      if(i__11507_11513 < count__11506_11512) {
        var vec__11508_11514 = cljs.core._nth.call(null, chunk__11505_11511, i__11507_11513);
        var k_11515 = cljs.core.nth.call(null, vec__11508_11514, 0, null);
        var v_11516 = cljs.core.nth.call(null, vec__11508_11514, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_11515, [cljs.core.str(v_11516), cljs.core.str("px")].join(""));
        var G__11517 = seq__11504_11510;
        var G__11518 = chunk__11505_11511;
        var G__11519 = count__11506_11512;
        var G__11520 = i__11507_11513 + 1;
        seq__11504_11510 = G__11517;
        chunk__11505_11511 = G__11518;
        count__11506_11512 = G__11519;
        i__11507_11513 = G__11520;
        continue
      }else {
        var temp__4092__auto___11521 = cljs.core.seq.call(null, seq__11504_11510);
        if(temp__4092__auto___11521) {
          var seq__11504_11522__$1 = temp__4092__auto___11521;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__11504_11522__$1)) {
            var c__3525__auto___11523 = cljs.core.chunk_first.call(null, seq__11504_11522__$1);
            var G__11524 = cljs.core.chunk_rest.call(null, seq__11504_11522__$1);
            var G__11525 = c__3525__auto___11523;
            var G__11526 = cljs.core.count.call(null, c__3525__auto___11523);
            var G__11527 = 0;
            seq__11504_11510 = G__11524;
            chunk__11505_11511 = G__11525;
            count__11506_11512 = G__11526;
            i__11507_11513 = G__11527;
            continue
          }else {
            var vec__11509_11528 = cljs.core.first.call(null, seq__11504_11522__$1);
            var k_11529 = cljs.core.nth.call(null, vec__11509_11528, 0, null);
            var v_11530 = cljs.core.nth.call(null, vec__11509_11528, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_11529, [cljs.core.str(v_11530), cljs.core.str("px")].join(""));
            var G__11531 = cljs.core.next.call(null, seq__11504_11522__$1);
            var G__11532 = null;
            var G__11533 = 0;
            var G__11534 = 0;
            seq__11504_11510 = G__11531;
            chunk__11505_11511 = G__11532;
            count__11506_11512 = G__11533;
            i__11507_11513 = G__11534;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_px_BANG___delegate.call(this, elem, kvs)
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__11535) {
    var elem = cljs.core.first(arglist__11535);
    var kvs = cljs.core.rest(arglist__11535);
    return set_px_BANG___delegate(elem, kvs)
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if(cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels)
  }else {
    return null
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true")
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if(cljs.core.truth_(v)) {
      if(cljs.core.fn_QMARK_.call(null, v)) {
        var G__11544 = dommy.template.__GT_node_like.call(null, elem);
        G__11544[cljs.core.name.call(null, k)] = v;
        return G__11544
      }else {
        var G__11545 = dommy.template.__GT_node_like.call(null, elem);
        G__11545.setAttribute(cljs.core.name.call(null, k), k === new cljs.core.Keyword(null, "style", "style", 1123684643) ? dommy.attrs.style_str.call(null, v) : v);
        return G__11545
      }
    }else {
      return null
    }
  };
  var set_attr_BANG___4 = function() {
    var G__11552__delegate = function(elem, k, v, kvs) {
      if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__11546_11553 = cljs.core.seq.call(null, cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, v], true), cljs.core.partition.call(null, 2, kvs)));
      var chunk__11547_11554 = null;
      var count__11548_11555 = 0;
      var i__11549_11556 = 0;
      while(true) {
        if(i__11549_11556 < count__11548_11555) {
          var vec__11550_11557 = cljs.core._nth.call(null, chunk__11547_11554, i__11549_11556);
          var k_11558__$1 = cljs.core.nth.call(null, vec__11550_11557, 0, null);
          var v_11559__$1 = cljs.core.nth.call(null, vec__11550_11557, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_11558__$1, v_11559__$1);
          var G__11560 = seq__11546_11553;
          var G__11561 = chunk__11547_11554;
          var G__11562 = count__11548_11555;
          var G__11563 = i__11549_11556 + 1;
          seq__11546_11553 = G__11560;
          chunk__11547_11554 = G__11561;
          count__11548_11555 = G__11562;
          i__11549_11556 = G__11563;
          continue
        }else {
          var temp__4092__auto___11564 = cljs.core.seq.call(null, seq__11546_11553);
          if(temp__4092__auto___11564) {
            var seq__11546_11565__$1 = temp__4092__auto___11564;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__11546_11565__$1)) {
              var c__3525__auto___11566 = cljs.core.chunk_first.call(null, seq__11546_11565__$1);
              var G__11567 = cljs.core.chunk_rest.call(null, seq__11546_11565__$1);
              var G__11568 = c__3525__auto___11566;
              var G__11569 = cljs.core.count.call(null, c__3525__auto___11566);
              var G__11570 = 0;
              seq__11546_11553 = G__11567;
              chunk__11547_11554 = G__11568;
              count__11548_11555 = G__11569;
              i__11549_11556 = G__11570;
              continue
            }else {
              var vec__11551_11571 = cljs.core.first.call(null, seq__11546_11565__$1);
              var k_11572__$1 = cljs.core.nth.call(null, vec__11551_11571, 0, null);
              var v_11573__$1 = cljs.core.nth.call(null, vec__11551_11571, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_11572__$1, v_11573__$1);
              var G__11574 = cljs.core.next.call(null, seq__11546_11565__$1);
              var G__11575 = null;
              var G__11576 = 0;
              var G__11577 = 0;
              seq__11546_11553 = G__11574;
              chunk__11547_11554 = G__11575;
              count__11548_11555 = G__11576;
              i__11549_11556 = G__11577;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__11552 = function(elem, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11552__delegate.call(this, elem, k, v, kvs)
    };
    G__11552.cljs$lang$maxFixedArity = 3;
    G__11552.cljs$lang$applyTo = function(arglist__11578) {
      var elem = cljs.core.first(arglist__11578);
      arglist__11578 = cljs.core.next(arglist__11578);
      var k = cljs.core.first(arglist__11578);
      arglist__11578 = cljs.core.next(arglist__11578);
      var v = cljs.core.first(arglist__11578);
      var kvs = cljs.core.rest(arglist__11578);
      return G__11552__delegate(elem, k, v, kvs)
    };
    G__11552.cljs$core$IFn$_invoke$arity$variadic = G__11552__delegate;
    return G__11552
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), null], true).call(null, k))) {
      elem__$1.className = ""
    }else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k))
    }
    return elem__$1
  };
  var remove_attr_BANG___3 = function() {
    var G__11587__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__11583_11588 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__11584_11589 = null;
      var count__11585_11590 = 0;
      var i__11586_11591 = 0;
      while(true) {
        if(i__11586_11591 < count__11585_11590) {
          var k_11592__$1 = cljs.core._nth.call(null, chunk__11584_11589, i__11586_11591);
          remove_attr_BANG_.call(null, elem__$1, k_11592__$1);
          var G__11593 = seq__11583_11588;
          var G__11594 = chunk__11584_11589;
          var G__11595 = count__11585_11590;
          var G__11596 = i__11586_11591 + 1;
          seq__11583_11588 = G__11593;
          chunk__11584_11589 = G__11594;
          count__11585_11590 = G__11595;
          i__11586_11591 = G__11596;
          continue
        }else {
          var temp__4092__auto___11597 = cljs.core.seq.call(null, seq__11583_11588);
          if(temp__4092__auto___11597) {
            var seq__11583_11598__$1 = temp__4092__auto___11597;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__11583_11598__$1)) {
              var c__3525__auto___11599 = cljs.core.chunk_first.call(null, seq__11583_11598__$1);
              var G__11600 = cljs.core.chunk_rest.call(null, seq__11583_11598__$1);
              var G__11601 = c__3525__auto___11599;
              var G__11602 = cljs.core.count.call(null, c__3525__auto___11599);
              var G__11603 = 0;
              seq__11583_11588 = G__11600;
              chunk__11584_11589 = G__11601;
              count__11585_11590 = G__11602;
              i__11586_11591 = G__11603;
              continue
            }else {
              var k_11604__$1 = cljs.core.first.call(null, seq__11583_11598__$1);
              remove_attr_BANG_.call(null, elem__$1, k_11604__$1);
              var G__11605 = cljs.core.next.call(null, seq__11583_11598__$1);
              var G__11606 = null;
              var G__11607 = 0;
              var G__11608 = 0;
              seq__11583_11588 = G__11605;
              chunk__11584_11589 = G__11606;
              count__11585_11590 = G__11607;
              i__11586_11591 = G__11608;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__11587 = function(elem, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__11587__delegate.call(this, elem, k, ks)
    };
    G__11587.cljs$lang$maxFixedArity = 2;
    G__11587.cljs$lang$applyTo = function(arglist__11609) {
      var elem = cljs.core.first(arglist__11609);
      arglist__11609 = cljs.core.next(arglist__11609);
      var k = cljs.core.first(arglist__11609);
      var ks = cljs.core.rest(arglist__11609);
      return G__11587__delegate(elem, k, ks)
    };
    G__11587.cljs$core$IFn$_invoke$arity$variadic = G__11587__delegate;
    return G__11587
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_
}();
dommy.attrs.attr = function attr(elem, k) {
  if(cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k))
  }else {
    return null
  }
};
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return"none" === dommy.template.__GT_node_like.call(null, elem).style.display
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__11611 = dommy.template.__GT_node_like.call(null, elem);
    G__11611.style.display = show_QMARK_ ? "" : "none";
    return G__11611
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__11613 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__11613, false);
  return G__11613
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__11615 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__11615, true);
  return G__11615
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__11617 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__11617["constructor"] = Object;
    return G__11617
  }(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true)
};
goog.provide("weather_canvas.gradient");
goog.require("cljs.core");
weather_canvas.gradient.temperature = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "up", "up", 1013907981), new cljs.core.Keyword(null, "colors", "colors", 3954028770), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-100, -50], true), new cljs.core.Keyword(null, "from", "from", 1017056028), 
cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 255)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-50, 0], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(0, 0, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 255)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"range", "range", 1122184367), cljs.core.PersistentVector.fromArray([0, 15], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 255), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 255, 102)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([15, 30], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(255, 255, 102), 
new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(255, 0, 0)], true)], true)], true);
weather_canvas.gradient.rain = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "up", "up", 1013907981), new cljs.core.Keyword(null, "colors", "colors", 3954028770), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-1, 0], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(17, 
17, 17), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(17, 17, 17)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([0, 200], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(34, 34, 68), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(238, 238, 255)], true)], true)], true);
weather_canvas.gradient.snow = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "direction", "direction", 4346280689), new cljs.core.Keyword(null, "up", "up", 1013907981), new cljs.core.Keyword(null, "colors", "colors", 3954028770), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([-1, 0], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(17, 
17, 17), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(17, 17, 17)], true), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "range", "range", 1122184367), cljs.core.PersistentVector.fromArray([0, 130], true), new cljs.core.Keyword(null, "from", "from", 1017056028), cljs.core.list(63, 62, 85), new cljs.core.Keyword(null, "to", "to", 1013907949), cljs.core.list(238, 238, 255)], true)], true)], true);
goog.provide("weather_canvas.canvas_buffer");
goog.require("cljs.core");
weather_canvas.canvas_buffer.size_x = 3;
weather_canvas.canvas_buffer.size_y = 16;
weather_canvas.canvas_buffer.canvas_buffer = function canvas_buffer(buffer_id) {
  var canvas = document.querySelector(dommy.core.selector.call(null, buffer_id));
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "canvas", "canvas", 3941165258), weather_canvas.canvas_buffer.init_canvas.call(null, canvas, 40), new cljs.core.Keyword(null, "context", "context", 1965435169), canvas.getContext("2d")], true)
};
weather_canvas.canvas_buffer.init_canvas = function init_canvas(canvas, years) {
  canvas.width = 366 * weather_canvas.canvas_buffer.size_x;
  return canvas.height = years * weather_canvas.canvas_buffer.size_y
};
weather_canvas.canvas_buffer.draw_rectangle = function draw_rectangle(buffer, position, dimensions, color) {
  var ctx = (new cljs.core.Keyword(null, "context", "context", 1965435169)).call(null, buffer);
  ctx.fillStyle = color;
  return ctx.fillRect(cljs.core.first.call(null, position), cljs.core.second.call(null, position), cljs.core.first.call(null, dimensions), cljs.core.second.call(null, dimensions))
};
weather_canvas.canvas_buffer.draw_text = function draw_text(buffer, text, position, font_size, color) {
  var ctx = (new cljs.core.Keyword(null, "context", "context", 1965435169)).call(null, buffer);
  ctx.fillStyle = color;
  ctx.font = [cljs.core.str(font_size), cljs.core.str("px Arial")].join("");
  ctx.fillText(text, cljs.core.first.call(null, position), cljs.core.second.call(null, position));
  return cljs.core.PersistentVector.fromArray([ctx.measureText(text).width, font_size], true)
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__10780) {
  var vec__10782 = p__10780;
  var k = cljs.core.nth.call(null, vec__10782, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__10782, 1);
  if(cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3941__auto__ = ks;
      if(cljs.core.truth_(and__3941__auto__)) {
        return dissoc_in.call(null, m.call(null, k), ks)
      }else {
        return and__3941__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res)
    }else {
      var res = cljs.core.dissoc.call(null, m, k);
      if(cljs.core.empty_QMARK_.call(null, res)) {
        return null
      }else {
        return res
      }
    }
  }else {
    return null
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like)
};
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("clojure.string");
dommy.template.PElement = {};
dommy.template._elem = function _elem(this$) {
  if(function() {
    var and__3941__auto__ = this$;
    if(and__3941__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$)
  }else {
    var x__3394__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3943__auto__ = dommy.template._elem[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = dommy.template._elem["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$)
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if(idx < 0) {
    return Math.max(id_idx, class_idx)
  }else {
    return idx
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? node_str : null;
  var node = document.createElement(tag);
  if(base_idx >= 0) {
    var str_11186 = node_str.substring(base_idx);
    while(true) {
      var next_idx_11187 = dommy.template.next_css_index.call(null, str_11186, 1);
      var frag_11188 = next_idx_11187 >= 0 ? str_11186.substring(0, next_idx_11187) : str_11186;
      var G__11185_11189 = frag_11188.charAt(0);
      if(cljs.core._EQ_.call(null, "#", G__11185_11189)) {
        node.setAttribute("id", frag_11188.substring(1))
      }else {
        if(cljs.core._EQ_.call(null, ".", G__11185_11189)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_11188.substring(1))
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_11188.charAt(0))].join(""));
          }else {
          }
        }
      }
      if(next_idx_11187 >= 0) {
        var G__11190 = str_11186.substring(next_idx_11187);
        str_11186 = G__11190;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return node
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data)
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if(function() {
      var G__11196 = data;
      if(G__11196) {
        if(cljs.core.truth_(function() {
          var or__3943__auto__ = null;
          if(cljs.core.truth_(or__3943__auto__)) {
            return or__3943__auto__
          }else {
            return G__11196.dommy$template$PElement$
          }
        }())) {
          return true
        }else {
          if(!G__11196.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11196)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11196)
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag
    }else {
      if(cljs.core.seq_QMARK_.call(null, data)) {
        var seq__11197_11201 = cljs.core.seq.call(null, data);
        var chunk__11198_11202 = null;
        var count__11199_11203 = 0;
        var i__11200_11204 = 0;
        while(true) {
          if(i__11200_11204 < count__11199_11203) {
            var child_11205 = cljs.core._nth.call(null, chunk__11198_11202, i__11200_11204);
            __GT_document_fragment.call(null, result_frag, child_11205);
            var G__11206 = seq__11197_11201;
            var G__11207 = chunk__11198_11202;
            var G__11208 = count__11199_11203;
            var G__11209 = i__11200_11204 + 1;
            seq__11197_11201 = G__11206;
            chunk__11198_11202 = G__11207;
            count__11199_11203 = G__11208;
            i__11200_11204 = G__11209;
            continue
          }else {
            var temp__4092__auto___11210 = cljs.core.seq.call(null, seq__11197_11201);
            if(temp__4092__auto___11210) {
              var seq__11197_11211__$1 = temp__4092__auto___11210;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__11197_11211__$1)) {
                var c__3525__auto___11212 = cljs.core.chunk_first.call(null, seq__11197_11211__$1);
                var G__11213 = cljs.core.chunk_rest.call(null, seq__11197_11211__$1);
                var G__11214 = c__3525__auto___11212;
                var G__11215 = cljs.core.count.call(null, c__3525__auto___11212);
                var G__11216 = 0;
                seq__11197_11201 = G__11213;
                chunk__11198_11202 = G__11214;
                count__11199_11203 = G__11215;
                i__11200_11204 = G__11216;
                continue
              }else {
                var child_11217 = cljs.core.first.call(null, seq__11197_11211__$1);
                __GT_document_fragment.call(null, result_frag, child_11217);
                var G__11218 = cljs.core.next.call(null, seq__11197_11211__$1);
                var G__11219 = null;
                var G__11220 = 0;
                var G__11221 = 0;
                seq__11197_11201 = G__11218;
                chunk__11198_11202 = G__11219;
                count__11199_11203 = G__11220;
                i__11200_11204 = G__11221;
                continue
              }
            }else {
            }
          }
          break
        }
        return result_frag
      }else {
        if(data == null) {
          return result_frag
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return dommy.template.throw_unable_to_make_node.call(null, data)
          }else {
            return null
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if(function() {
    var G__11223 = data;
    if(G__11223) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__11223.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__11223.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11223)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11223)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.__GT_document_fragment.call(null, data)
  }
};
dommy.template.compound_element = function compound_element(p__11224) {
  var vec__11243 = p__11224;
  var tag_name = cljs.core.nth.call(null, vec__11243, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__11243, 1, null);
  var children = cljs.core.nthnext.call(null, vec__11243, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = function() {
    var and__3941__auto__ = cljs.core.map_QMARK_.call(null, maybe_attrs);
    if(and__3941__auto__) {
      return!function() {
        var G__11244 = maybe_attrs;
        if(G__11244) {
          if(cljs.core.truth_(function() {
            var or__3943__auto__ = null;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return G__11244.dommy$template$PElement$
            }
          }())) {
            return true
          }else {
            if(!G__11244.cljs$lang$protocol_mask$partition$) {
              return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11244)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11244)
        }
      }()
    }else {
      return and__3941__auto__
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__11245_11261 = cljs.core.seq.call(null, attrs);
  var chunk__11246_11262 = null;
  var count__11247_11263 = 0;
  var i__11248_11264 = 0;
  while(true) {
    if(i__11248_11264 < count__11247_11263) {
      var vec__11249_11265 = cljs.core._nth.call(null, chunk__11246_11262, i__11248_11264);
      var k_11266 = cljs.core.nth.call(null, vec__11249_11265, 0, null);
      var v_11267 = cljs.core.nth.call(null, vec__11249_11265, 1, null);
      var G__11250_11268 = k_11266;
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__11250_11268)) {
        var seq__11251_11269 = cljs.core.seq.call(null, v_11267);
        var chunk__11252_11270 = null;
        var count__11253_11271 = 0;
        var i__11254_11272 = 0;
        while(true) {
          if(i__11254_11272 < count__11253_11271) {
            var c_11273 = cljs.core._nth.call(null, chunk__11252_11270, i__11254_11272);
            dommy.attrs.add_class_BANG_.call(null, n, c_11273);
            var G__11274 = seq__11251_11269;
            var G__11275 = chunk__11252_11270;
            var G__11276 = count__11253_11271;
            var G__11277 = i__11254_11272 + 1;
            seq__11251_11269 = G__11274;
            chunk__11252_11270 = G__11275;
            count__11253_11271 = G__11276;
            i__11254_11272 = G__11277;
            continue
          }else {
            var temp__4092__auto___11278 = cljs.core.seq.call(null, seq__11251_11269);
            if(temp__4092__auto___11278) {
              var seq__11251_11279__$1 = temp__4092__auto___11278;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__11251_11279__$1)) {
                var c__3525__auto___11280 = cljs.core.chunk_first.call(null, seq__11251_11279__$1);
                var G__11281 = cljs.core.chunk_rest.call(null, seq__11251_11279__$1);
                var G__11282 = c__3525__auto___11280;
                var G__11283 = cljs.core.count.call(null, c__3525__auto___11280);
                var G__11284 = 0;
                seq__11251_11269 = G__11281;
                chunk__11252_11270 = G__11282;
                count__11253_11271 = G__11283;
                i__11254_11272 = G__11284;
                continue
              }else {
                var c_11285 = cljs.core.first.call(null, seq__11251_11279__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_11285);
                var G__11286 = cljs.core.next.call(null, seq__11251_11279__$1);
                var G__11287 = null;
                var G__11288 = 0;
                var G__11289 = 0;
                seq__11251_11269 = G__11286;
                chunk__11252_11270 = G__11287;
                count__11253_11271 = G__11288;
                i__11254_11272 = G__11289;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__11250_11268)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_11267)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            dommy.attrs.set_attr_BANG_.call(null, n, k_11266, v_11267)
          }else {
          }
        }
      }
      var G__11290 = seq__11245_11261;
      var G__11291 = chunk__11246_11262;
      var G__11292 = count__11247_11263;
      var G__11293 = i__11248_11264 + 1;
      seq__11245_11261 = G__11290;
      chunk__11246_11262 = G__11291;
      count__11247_11263 = G__11292;
      i__11248_11264 = G__11293;
      continue
    }else {
      var temp__4092__auto___11294 = cljs.core.seq.call(null, seq__11245_11261);
      if(temp__4092__auto___11294) {
        var seq__11245_11295__$1 = temp__4092__auto___11294;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__11245_11295__$1)) {
          var c__3525__auto___11296 = cljs.core.chunk_first.call(null, seq__11245_11295__$1);
          var G__11297 = cljs.core.chunk_rest.call(null, seq__11245_11295__$1);
          var G__11298 = c__3525__auto___11296;
          var G__11299 = cljs.core.count.call(null, c__3525__auto___11296);
          var G__11300 = 0;
          seq__11245_11261 = G__11297;
          chunk__11246_11262 = G__11298;
          count__11247_11263 = G__11299;
          i__11248_11264 = G__11300;
          continue
        }else {
          var vec__11255_11301 = cljs.core.first.call(null, seq__11245_11295__$1);
          var k_11302 = cljs.core.nth.call(null, vec__11255_11301, 0, null);
          var v_11303 = cljs.core.nth.call(null, vec__11255_11301, 1, null);
          var G__11256_11304 = k_11302;
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__11256_11304)) {
            var seq__11257_11305 = cljs.core.seq.call(null, v_11303);
            var chunk__11258_11306 = null;
            var count__11259_11307 = 0;
            var i__11260_11308 = 0;
            while(true) {
              if(i__11260_11308 < count__11259_11307) {
                var c_11309 = cljs.core._nth.call(null, chunk__11258_11306, i__11260_11308);
                dommy.attrs.add_class_BANG_.call(null, n, c_11309);
                var G__11310 = seq__11257_11305;
                var G__11311 = chunk__11258_11306;
                var G__11312 = count__11259_11307;
                var G__11313 = i__11260_11308 + 1;
                seq__11257_11305 = G__11310;
                chunk__11258_11306 = G__11311;
                count__11259_11307 = G__11312;
                i__11260_11308 = G__11313;
                continue
              }else {
                var temp__4092__auto___11314__$1 = cljs.core.seq.call(null, seq__11257_11305);
                if(temp__4092__auto___11314__$1) {
                  var seq__11257_11315__$1 = temp__4092__auto___11314__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__11257_11315__$1)) {
                    var c__3525__auto___11316 = cljs.core.chunk_first.call(null, seq__11257_11315__$1);
                    var G__11317 = cljs.core.chunk_rest.call(null, seq__11257_11315__$1);
                    var G__11318 = c__3525__auto___11316;
                    var G__11319 = cljs.core.count.call(null, c__3525__auto___11316);
                    var G__11320 = 0;
                    seq__11257_11305 = G__11317;
                    chunk__11258_11306 = G__11318;
                    count__11259_11307 = G__11319;
                    i__11260_11308 = G__11320;
                    continue
                  }else {
                    var c_11321 = cljs.core.first.call(null, seq__11257_11315__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_11321);
                    var G__11322 = cljs.core.next.call(null, seq__11257_11315__$1);
                    var G__11323 = null;
                    var G__11324 = 0;
                    var G__11325 = 0;
                    seq__11257_11305 = G__11322;
                    chunk__11258_11306 = G__11323;
                    count__11259_11307 = G__11324;
                    i__11260_11308 = G__11325;
                    continue
                  }
                }else {
                }
              }
              break
            }
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__11256_11304)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_11303)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                dommy.attrs.set_attr_BANG_.call(null, n, k_11302, v_11303)
              }else {
              }
            }
          }
          var G__11326 = cljs.core.next.call(null, seq__11245_11295__$1);
          var G__11327 = null;
          var G__11328 = 0;
          var G__11329 = 0;
          seq__11245_11261 = G__11326;
          chunk__11246_11262 = G__11327;
          count__11247_11263 = G__11328;
          i__11248_11264 = G__11329;
          continue
        }
      }else {
      }
    }
    break
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if(this$ instanceof cljs.core.Keyword) {
    return dommy.template.base_element.call(null, this$)
  }else {
    return document.createTextNode([cljs.core.str(this$)].join(""))
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""))
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return dommy.template.compound_element.call(null, this$)
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  return this$
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    return this$
  }
}catch(e11330) {
  if(e11330 instanceof ReferenceError) {
    var __11331 = e11330;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw e11330;
    }else {
    }
  }
}
dommy.template.node = function node(data) {
  if(function() {
    var G__11333 = data;
    if(G__11333) {
      if(cljs.core.truth_(function() {
        var or__3943__auto__ = null;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return G__11333.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__11333.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11333)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, dommy.template.PElement, G__11333)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.throw_unable_to_make_node.call(null, data)
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes))
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1
};
dommy.core.text = function text(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var or__3943__auto__ = elem__$1.textContent;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return elem__$1.innerText
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__10788 = dommy.template.__GT_node_like.call(null, parent);
    G__10788.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__10788
  };
  var append_BANG___3 = function() {
    var G__10793__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__10789_10794 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__10790_10795 = null;
      var count__10791_10796 = 0;
      var i__10792_10797 = 0;
      while(true) {
        if(i__10792_10797 < count__10791_10796) {
          var c_10798 = cljs.core._nth.call(null, chunk__10790_10795, i__10792_10797);
          append_BANG_.call(null, parent__$1, c_10798);
          var G__10799 = seq__10789_10794;
          var G__10800 = chunk__10790_10795;
          var G__10801 = count__10791_10796;
          var G__10802 = i__10792_10797 + 1;
          seq__10789_10794 = G__10799;
          chunk__10790_10795 = G__10800;
          count__10791_10796 = G__10801;
          i__10792_10797 = G__10802;
          continue
        }else {
          var temp__4092__auto___10803 = cljs.core.seq.call(null, seq__10789_10794);
          if(temp__4092__auto___10803) {
            var seq__10789_10804__$1 = temp__4092__auto___10803;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__10789_10804__$1)) {
              var c__3525__auto___10805 = cljs.core.chunk_first.call(null, seq__10789_10804__$1);
              var G__10806 = cljs.core.chunk_rest.call(null, seq__10789_10804__$1);
              var G__10807 = c__3525__auto___10805;
              var G__10808 = cljs.core.count.call(null, c__3525__auto___10805);
              var G__10809 = 0;
              seq__10789_10794 = G__10806;
              chunk__10790_10795 = G__10807;
              count__10791_10796 = G__10808;
              i__10792_10797 = G__10809;
              continue
            }else {
              var c_10810 = cljs.core.first.call(null, seq__10789_10804__$1);
              append_BANG_.call(null, parent__$1, c_10810);
              var G__10811 = cljs.core.next.call(null, seq__10789_10804__$1);
              var G__10812 = null;
              var G__10813 = 0;
              var G__10814 = 0;
              seq__10789_10794 = G__10811;
              chunk__10790_10795 = G__10812;
              count__10791_10796 = G__10813;
              i__10792_10797 = G__10814;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__10793 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10793__delegate.call(this, parent, child, more_children)
    };
    G__10793.cljs$lang$maxFixedArity = 2;
    G__10793.cljs$lang$applyTo = function(arglist__10815) {
      var parent = cljs.core.first(arglist__10815);
      arglist__10815 = cljs.core.next(arglist__10815);
      var child = cljs.core.first(arglist__10815);
      var more_children = cljs.core.rest(arglist__10815);
      return G__10793__delegate(parent, child, more_children)
    };
    G__10793.cljs$core$IFn$_invoke$arity$variadic = G__10793__delegate;
    return G__10793
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var G__10821 = dommy.template.__GT_node_like.call(null, parent);
    G__10821.insertBefore(dommy.template.__GT_node_like.call(null, child), parent.firstChild);
    return G__10821
  };
  var prepend_BANG___3 = function() {
    var G__10826__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__10822_10827 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__10823_10828 = null;
      var count__10824_10829 = 0;
      var i__10825_10830 = 0;
      while(true) {
        if(i__10825_10830 < count__10824_10829) {
          var c_10831 = cljs.core._nth.call(null, chunk__10823_10828, i__10825_10830);
          prepend_BANG_.call(null, parent__$1, c_10831);
          var G__10832 = seq__10822_10827;
          var G__10833 = chunk__10823_10828;
          var G__10834 = count__10824_10829;
          var G__10835 = i__10825_10830 + 1;
          seq__10822_10827 = G__10832;
          chunk__10823_10828 = G__10833;
          count__10824_10829 = G__10834;
          i__10825_10830 = G__10835;
          continue
        }else {
          var temp__4092__auto___10836 = cljs.core.seq.call(null, seq__10822_10827);
          if(temp__4092__auto___10836) {
            var seq__10822_10837__$1 = temp__4092__auto___10836;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__10822_10837__$1)) {
              var c__3525__auto___10838 = cljs.core.chunk_first.call(null, seq__10822_10837__$1);
              var G__10839 = cljs.core.chunk_rest.call(null, seq__10822_10837__$1);
              var G__10840 = c__3525__auto___10838;
              var G__10841 = cljs.core.count.call(null, c__3525__auto___10838);
              var G__10842 = 0;
              seq__10822_10827 = G__10839;
              chunk__10823_10828 = G__10840;
              count__10824_10829 = G__10841;
              i__10825_10830 = G__10842;
              continue
            }else {
              var c_10843 = cljs.core.first.call(null, seq__10822_10837__$1);
              prepend_BANG_.call(null, parent__$1, c_10843);
              var G__10844 = cljs.core.next.call(null, seq__10822_10837__$1);
              var G__10845 = null;
              var G__10846 = 0;
              var G__10847 = 0;
              seq__10822_10827 = G__10844;
              chunk__10823_10828 = G__10845;
              count__10824_10829 = G__10846;
              i__10825_10830 = G__10847;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__10826 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10826__delegate.call(this, parent, child, more_children)
    };
    G__10826.cljs$lang$maxFixedArity = 2;
    G__10826.cljs$lang$applyTo = function(arglist__10848) {
      var parent = cljs.core.first(arglist__10848);
      arglist__10848 = cljs.core.next(arglist__10848);
      var child = cljs.core.first(arglist__10848);
      var more_children = cljs.core.rest(arglist__10848);
      return G__10826__delegate(parent, child, more_children)
    };
    G__10826.cljs$core$IFn$_invoke$arity$variadic = G__10826__delegate;
    return G__10826
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if(cljs.core.truth_(other__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___10849 = other__$1.nextSibling;
  if(cljs.core.truth_(temp__4090__auto___10849)) {
    var next_10850 = temp__4090__auto___10849;
    parent.insertBefore(actual_node, next_10850)
  }else {
    parent.appendChild(actual_node)
  }
  return actual_node
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if(cljs.core.truth_(elem__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__10852 = dommy.template.__GT_node_like.call(null, parent);
  G__10852.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__10852, node_like);
  return G__10852
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__10854 = elem__$1.parentNode;
  G__10854.removeChild(elem__$1);
  return G__10854
};
dommy.core.selector = function selector(data) {
  if(cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data))
  }else {
    if(function() {
      var or__3943__auto__ = cljs.core.string_QMARK_.call(null, data);
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        return data instanceof cljs.core.Keyword
      }
    }()) {
      return cljs.core.name.call(null, data)
    }else {
      return null
    }
  }
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__10855_SHARP_) {
    return p1__10855_SHARP_.parentNode
  }, dommy.template.__GT_node_like.call(null, elem)))
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector)
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0
    }
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))))
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__10856_SHARP_) {
      return!(p1__10856_SHARP_ === base__$1)
    }, dommy.core.ancestor_nodes.call(null, elem__$1))))
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if(cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1)
  }else {
    if(cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0
    }else {
      return null
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__10857) {
  var vec__10858 = p__10857;
  var special_mouse_event = cljs.core.nth.call(null, vec__10858, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__10858, 1, null);
  return cljs.core.PersistentVector.fromArray([special_mouse_event, cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3943__auto__ = event.selectedTarget;
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return event.currentTarget
        }
      }();
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = related_target;
        if(cljs.core.truth_(and__3941__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target)
        }else {
          return and__3941__auto__
        }
      }())) {
        return null
      }else {
        return f.call(null, event)
      }
    }
  }], true)], true)
}, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "mouseenter", "mouseenter", 2027084997), new cljs.core.Keyword(null, "mouseover", "mouseover", 1601081963), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 2033263780), new cljs.core.Keyword(null, "mouseout", "mouseout", 894298107)], true)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var temp__4092__auto__ = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var selected_target = temp__4092__auto__;
      event.selectedTarget = selected_target;
      return f.call(null, event)
    }else {
      return null
    }
  }
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3943__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    return cljs.core.PersistentArrayMap.EMPTY
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args)
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args)
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__10859) {
    var elem = cljs.core.first(arglist__10859);
    arglist__10859 = cljs.core.next(arglist__10859);
    var f = cljs.core.first(arglist__10859);
    var args = cljs.core.rest(arglist__10859);
    return update_event_listeners_BANG___delegate(elem, f, args)
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if(cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__10860_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__10860_SHARP_))
    }, cljs.core.rest).call(null, elem_sel)
  }else {
    return cljs.core.PersistentVector.fromArray([dommy.template.__GT_node_like.call(null, elem_sel), null], true)
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__10884_10907 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_10908 = cljs.core.nth.call(null, vec__10884_10907, 0, null);
    var selector_10909 = cljs.core.nth.call(null, vec__10884_10907, 1, null);
    var seq__10885_10910 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__10892_10911 = null;
    var count__10893_10912 = 0;
    var i__10894_10913 = 0;
    while(true) {
      if(i__10894_10913 < count__10893_10912) {
        var vec__10901_10914 = cljs.core._nth.call(null, chunk__10892_10911, i__10894_10913);
        var orig_type_10915 = cljs.core.nth.call(null, vec__10901_10914, 0, null);
        var f_10916 = cljs.core.nth.call(null, vec__10901_10914, 1, null);
        var seq__10895_10917 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_10915, cljs.core.PersistentArrayMap.fromArray([orig_type_10915, cljs.core.identity], true)));
        var chunk__10897_10918 = null;
        var count__10898_10919 = 0;
        var i__10899_10920 = 0;
        while(true) {
          if(i__10899_10920 < count__10898_10919) {
            var vec__10902_10921 = cljs.core._nth.call(null, chunk__10897_10918, i__10899_10920);
            var actual_type_10922 = cljs.core.nth.call(null, vec__10902_10921, 0, null);
            var factory_10923 = cljs.core.nth.call(null, vec__10902_10921, 1, null);
            var canonical_f_10924 = (cljs.core.truth_(selector_10909) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_10908, selector_10909) : cljs.core.identity).call(null, factory_10923.call(null, f_10916));
            dommy.core.update_event_listeners_BANG_.call(null, elem_10908, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_10909, actual_type_10922, f_10916], true), canonical_f_10924);
            if(cljs.core.truth_(elem_10908.addEventListener)) {
              elem_10908.addEventListener(cljs.core.name.call(null, actual_type_10922), canonical_f_10924)
            }else {
              elem_10908.attachEvent(cljs.core.name.call(null, actual_type_10922), canonical_f_10924)
            }
            var G__10925 = seq__10895_10917;
            var G__10926 = chunk__10897_10918;
            var G__10927 = count__10898_10919;
            var G__10928 = i__10899_10920 + 1;
            seq__10895_10917 = G__10925;
            chunk__10897_10918 = G__10926;
            count__10898_10919 = G__10927;
            i__10899_10920 = G__10928;
            continue
          }else {
            var temp__4092__auto___10929 = cljs.core.seq.call(null, seq__10895_10917);
            if(temp__4092__auto___10929) {
              var seq__10895_10930__$1 = temp__4092__auto___10929;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__10895_10930__$1)) {
                var c__3525__auto___10931 = cljs.core.chunk_first.call(null, seq__10895_10930__$1);
                var G__10932 = cljs.core.chunk_rest.call(null, seq__10895_10930__$1);
                var G__10933 = c__3525__auto___10931;
                var G__10934 = cljs.core.count.call(null, c__3525__auto___10931);
                var G__10935 = 0;
                seq__10895_10917 = G__10932;
                chunk__10897_10918 = G__10933;
                count__10898_10919 = G__10934;
                i__10899_10920 = G__10935;
                continue
              }else {
                var vec__10903_10936 = cljs.core.first.call(null, seq__10895_10930__$1);
                var actual_type_10937 = cljs.core.nth.call(null, vec__10903_10936, 0, null);
                var factory_10938 = cljs.core.nth.call(null, vec__10903_10936, 1, null);
                var canonical_f_10939 = (cljs.core.truth_(selector_10909) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_10908, selector_10909) : cljs.core.identity).call(null, factory_10938.call(null, f_10916));
                dommy.core.update_event_listeners_BANG_.call(null, elem_10908, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_10909, actual_type_10937, f_10916], true), canonical_f_10939);
                if(cljs.core.truth_(elem_10908.addEventListener)) {
                  elem_10908.addEventListener(cljs.core.name.call(null, actual_type_10937), canonical_f_10939)
                }else {
                  elem_10908.attachEvent(cljs.core.name.call(null, actual_type_10937), canonical_f_10939)
                }
                var G__10940 = cljs.core.next.call(null, seq__10895_10930__$1);
                var G__10941 = null;
                var G__10942 = 0;
                var G__10943 = 0;
                seq__10895_10917 = G__10940;
                chunk__10897_10918 = G__10941;
                count__10898_10919 = G__10942;
                i__10899_10920 = G__10943;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__10944 = seq__10885_10910;
        var G__10945 = chunk__10892_10911;
        var G__10946 = count__10893_10912;
        var G__10947 = i__10894_10913 + 1;
        seq__10885_10910 = G__10944;
        chunk__10892_10911 = G__10945;
        count__10893_10912 = G__10946;
        i__10894_10913 = G__10947;
        continue
      }else {
        var temp__4092__auto___10948 = cljs.core.seq.call(null, seq__10885_10910);
        if(temp__4092__auto___10948) {
          var seq__10885_10949__$1 = temp__4092__auto___10948;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__10885_10949__$1)) {
            var c__3525__auto___10950 = cljs.core.chunk_first.call(null, seq__10885_10949__$1);
            var G__10951 = cljs.core.chunk_rest.call(null, seq__10885_10949__$1);
            var G__10952 = c__3525__auto___10950;
            var G__10953 = cljs.core.count.call(null, c__3525__auto___10950);
            var G__10954 = 0;
            seq__10885_10910 = G__10951;
            chunk__10892_10911 = G__10952;
            count__10893_10912 = G__10953;
            i__10894_10913 = G__10954;
            continue
          }else {
            var vec__10904_10955 = cljs.core.first.call(null, seq__10885_10949__$1);
            var orig_type_10956 = cljs.core.nth.call(null, vec__10904_10955, 0, null);
            var f_10957 = cljs.core.nth.call(null, vec__10904_10955, 1, null);
            var seq__10886_10958 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_10956, cljs.core.PersistentArrayMap.fromArray([orig_type_10956, cljs.core.identity], true)));
            var chunk__10888_10959 = null;
            var count__10889_10960 = 0;
            var i__10890_10961 = 0;
            while(true) {
              if(i__10890_10961 < count__10889_10960) {
                var vec__10905_10962 = cljs.core._nth.call(null, chunk__10888_10959, i__10890_10961);
                var actual_type_10963 = cljs.core.nth.call(null, vec__10905_10962, 0, null);
                var factory_10964 = cljs.core.nth.call(null, vec__10905_10962, 1, null);
                var canonical_f_10965 = (cljs.core.truth_(selector_10909) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_10908, selector_10909) : cljs.core.identity).call(null, factory_10964.call(null, f_10957));
                dommy.core.update_event_listeners_BANG_.call(null, elem_10908, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_10909, actual_type_10963, f_10957], true), canonical_f_10965);
                if(cljs.core.truth_(elem_10908.addEventListener)) {
                  elem_10908.addEventListener(cljs.core.name.call(null, actual_type_10963), canonical_f_10965)
                }else {
                  elem_10908.attachEvent(cljs.core.name.call(null, actual_type_10963), canonical_f_10965)
                }
                var G__10966 = seq__10886_10958;
                var G__10967 = chunk__10888_10959;
                var G__10968 = count__10889_10960;
                var G__10969 = i__10890_10961 + 1;
                seq__10886_10958 = G__10966;
                chunk__10888_10959 = G__10967;
                count__10889_10960 = G__10968;
                i__10890_10961 = G__10969;
                continue
              }else {
                var temp__4092__auto___10970__$1 = cljs.core.seq.call(null, seq__10886_10958);
                if(temp__4092__auto___10970__$1) {
                  var seq__10886_10971__$1 = temp__4092__auto___10970__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__10886_10971__$1)) {
                    var c__3525__auto___10972 = cljs.core.chunk_first.call(null, seq__10886_10971__$1);
                    var G__10973 = cljs.core.chunk_rest.call(null, seq__10886_10971__$1);
                    var G__10974 = c__3525__auto___10972;
                    var G__10975 = cljs.core.count.call(null, c__3525__auto___10972);
                    var G__10976 = 0;
                    seq__10886_10958 = G__10973;
                    chunk__10888_10959 = G__10974;
                    count__10889_10960 = G__10975;
                    i__10890_10961 = G__10976;
                    continue
                  }else {
                    var vec__10906_10977 = cljs.core.first.call(null, seq__10886_10971__$1);
                    var actual_type_10978 = cljs.core.nth.call(null, vec__10906_10977, 0, null);
                    var factory_10979 = cljs.core.nth.call(null, vec__10906_10977, 1, null);
                    var canonical_f_10980 = (cljs.core.truth_(selector_10909) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_10908, selector_10909) : cljs.core.identity).call(null, factory_10979.call(null, f_10957));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_10908, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_10909, actual_type_10978, f_10957], true), canonical_f_10980);
                    if(cljs.core.truth_(elem_10908.addEventListener)) {
                      elem_10908.addEventListener(cljs.core.name.call(null, actual_type_10978), canonical_f_10980)
                    }else {
                      elem_10908.attachEvent(cljs.core.name.call(null, actual_type_10978), canonical_f_10980)
                    }
                    var G__10981 = cljs.core.next.call(null, seq__10886_10971__$1);
                    var G__10982 = null;
                    var G__10983 = 0;
                    var G__10984 = 0;
                    seq__10886_10958 = G__10981;
                    chunk__10888_10959 = G__10982;
                    count__10889_10960 = G__10983;
                    i__10890_10961 = G__10984;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__10985 = cljs.core.next.call(null, seq__10885_10949__$1);
            var G__10986 = null;
            var G__10987 = 0;
            var G__10988 = 0;
            seq__10885_10910 = G__10985;
            chunk__10892_10911 = G__10986;
            count__10893_10912 = G__10987;
            i__10894_10913 = G__10988;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__10989) {
    var elem_sel = cljs.core.first(arglist__10989);
    var type_fs = cljs.core.rest(arglist__10989);
    return listen_BANG___delegate(elem_sel, type_fs)
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__11013_11036 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_11037 = cljs.core.nth.call(null, vec__11013_11036, 0, null);
    var selector_11038 = cljs.core.nth.call(null, vec__11013_11036, 1, null);
    var seq__11014_11039 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__11021_11040 = null;
    var count__11022_11041 = 0;
    var i__11023_11042 = 0;
    while(true) {
      if(i__11023_11042 < count__11022_11041) {
        var vec__11030_11043 = cljs.core._nth.call(null, chunk__11021_11040, i__11023_11042);
        var orig_type_11044 = cljs.core.nth.call(null, vec__11030_11043, 0, null);
        var f_11045 = cljs.core.nth.call(null, vec__11030_11043, 1, null);
        var seq__11024_11046 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_11044, cljs.core.PersistentArrayMap.fromArray([orig_type_11044, cljs.core.identity], true)));
        var chunk__11026_11047 = null;
        var count__11027_11048 = 0;
        var i__11028_11049 = 0;
        while(true) {
          if(i__11028_11049 < count__11027_11048) {
            var vec__11031_11050 = cljs.core._nth.call(null, chunk__11026_11047, i__11028_11049);
            var actual_type_11051 = cljs.core.nth.call(null, vec__11031_11050, 0, null);
            var __11052 = cljs.core.nth.call(null, vec__11031_11050, 1, null);
            var keys_11053 = cljs.core.PersistentVector.fromArray([selector_11038, actual_type_11051, f_11045], true);
            var canonical_f_11054 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_11037), keys_11053);
            dommy.core.update_event_listeners_BANG_.call(null, elem_11037, dommy.utils.dissoc_in, keys_11053);
            if(cljs.core.truth_(elem_11037.removeEventListener)) {
              elem_11037.removeEventListener(cljs.core.name.call(null, actual_type_11051), canonical_f_11054)
            }else {
              elem_11037.detachEvent(cljs.core.name.call(null, actual_type_11051), canonical_f_11054)
            }
            var G__11055 = seq__11024_11046;
            var G__11056 = chunk__11026_11047;
            var G__11057 = count__11027_11048;
            var G__11058 = i__11028_11049 + 1;
            seq__11024_11046 = G__11055;
            chunk__11026_11047 = G__11056;
            count__11027_11048 = G__11057;
            i__11028_11049 = G__11058;
            continue
          }else {
            var temp__4092__auto___11059 = cljs.core.seq.call(null, seq__11024_11046);
            if(temp__4092__auto___11059) {
              var seq__11024_11060__$1 = temp__4092__auto___11059;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__11024_11060__$1)) {
                var c__3525__auto___11061 = cljs.core.chunk_first.call(null, seq__11024_11060__$1);
                var G__11062 = cljs.core.chunk_rest.call(null, seq__11024_11060__$1);
                var G__11063 = c__3525__auto___11061;
                var G__11064 = cljs.core.count.call(null, c__3525__auto___11061);
                var G__11065 = 0;
                seq__11024_11046 = G__11062;
                chunk__11026_11047 = G__11063;
                count__11027_11048 = G__11064;
                i__11028_11049 = G__11065;
                continue
              }else {
                var vec__11032_11066 = cljs.core.first.call(null, seq__11024_11060__$1);
                var actual_type_11067 = cljs.core.nth.call(null, vec__11032_11066, 0, null);
                var __11068 = cljs.core.nth.call(null, vec__11032_11066, 1, null);
                var keys_11069 = cljs.core.PersistentVector.fromArray([selector_11038, actual_type_11067, f_11045], true);
                var canonical_f_11070 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_11037), keys_11069);
                dommy.core.update_event_listeners_BANG_.call(null, elem_11037, dommy.utils.dissoc_in, keys_11069);
                if(cljs.core.truth_(elem_11037.removeEventListener)) {
                  elem_11037.removeEventListener(cljs.core.name.call(null, actual_type_11067), canonical_f_11070)
                }else {
                  elem_11037.detachEvent(cljs.core.name.call(null, actual_type_11067), canonical_f_11070)
                }
                var G__11071 = cljs.core.next.call(null, seq__11024_11060__$1);
                var G__11072 = null;
                var G__11073 = 0;
                var G__11074 = 0;
                seq__11024_11046 = G__11071;
                chunk__11026_11047 = G__11072;
                count__11027_11048 = G__11073;
                i__11028_11049 = G__11074;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__11075 = seq__11014_11039;
        var G__11076 = chunk__11021_11040;
        var G__11077 = count__11022_11041;
        var G__11078 = i__11023_11042 + 1;
        seq__11014_11039 = G__11075;
        chunk__11021_11040 = G__11076;
        count__11022_11041 = G__11077;
        i__11023_11042 = G__11078;
        continue
      }else {
        var temp__4092__auto___11079 = cljs.core.seq.call(null, seq__11014_11039);
        if(temp__4092__auto___11079) {
          var seq__11014_11080__$1 = temp__4092__auto___11079;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__11014_11080__$1)) {
            var c__3525__auto___11081 = cljs.core.chunk_first.call(null, seq__11014_11080__$1);
            var G__11082 = cljs.core.chunk_rest.call(null, seq__11014_11080__$1);
            var G__11083 = c__3525__auto___11081;
            var G__11084 = cljs.core.count.call(null, c__3525__auto___11081);
            var G__11085 = 0;
            seq__11014_11039 = G__11082;
            chunk__11021_11040 = G__11083;
            count__11022_11041 = G__11084;
            i__11023_11042 = G__11085;
            continue
          }else {
            var vec__11033_11086 = cljs.core.first.call(null, seq__11014_11080__$1);
            var orig_type_11087 = cljs.core.nth.call(null, vec__11033_11086, 0, null);
            var f_11088 = cljs.core.nth.call(null, vec__11033_11086, 1, null);
            var seq__11015_11089 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_11087, cljs.core.PersistentArrayMap.fromArray([orig_type_11087, cljs.core.identity], true)));
            var chunk__11017_11090 = null;
            var count__11018_11091 = 0;
            var i__11019_11092 = 0;
            while(true) {
              if(i__11019_11092 < count__11018_11091) {
                var vec__11034_11093 = cljs.core._nth.call(null, chunk__11017_11090, i__11019_11092);
                var actual_type_11094 = cljs.core.nth.call(null, vec__11034_11093, 0, null);
                var __11095 = cljs.core.nth.call(null, vec__11034_11093, 1, null);
                var keys_11096 = cljs.core.PersistentVector.fromArray([selector_11038, actual_type_11094, f_11088], true);
                var canonical_f_11097 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_11037), keys_11096);
                dommy.core.update_event_listeners_BANG_.call(null, elem_11037, dommy.utils.dissoc_in, keys_11096);
                if(cljs.core.truth_(elem_11037.removeEventListener)) {
                  elem_11037.removeEventListener(cljs.core.name.call(null, actual_type_11094), canonical_f_11097)
                }else {
                  elem_11037.detachEvent(cljs.core.name.call(null, actual_type_11094), canonical_f_11097)
                }
                var G__11098 = seq__11015_11089;
                var G__11099 = chunk__11017_11090;
                var G__11100 = count__11018_11091;
                var G__11101 = i__11019_11092 + 1;
                seq__11015_11089 = G__11098;
                chunk__11017_11090 = G__11099;
                count__11018_11091 = G__11100;
                i__11019_11092 = G__11101;
                continue
              }else {
                var temp__4092__auto___11102__$1 = cljs.core.seq.call(null, seq__11015_11089);
                if(temp__4092__auto___11102__$1) {
                  var seq__11015_11103__$1 = temp__4092__auto___11102__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__11015_11103__$1)) {
                    var c__3525__auto___11104 = cljs.core.chunk_first.call(null, seq__11015_11103__$1);
                    var G__11105 = cljs.core.chunk_rest.call(null, seq__11015_11103__$1);
                    var G__11106 = c__3525__auto___11104;
                    var G__11107 = cljs.core.count.call(null, c__3525__auto___11104);
                    var G__11108 = 0;
                    seq__11015_11089 = G__11105;
                    chunk__11017_11090 = G__11106;
                    count__11018_11091 = G__11107;
                    i__11019_11092 = G__11108;
                    continue
                  }else {
                    var vec__11035_11109 = cljs.core.first.call(null, seq__11015_11103__$1);
                    var actual_type_11110 = cljs.core.nth.call(null, vec__11035_11109, 0, null);
                    var __11111 = cljs.core.nth.call(null, vec__11035_11109, 1, null);
                    var keys_11112 = cljs.core.PersistentVector.fromArray([selector_11038, actual_type_11110, f_11088], true);
                    var canonical_f_11113 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_11037), keys_11112);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_11037, dommy.utils.dissoc_in, keys_11112);
                    if(cljs.core.truth_(elem_11037.removeEventListener)) {
                      elem_11037.removeEventListener(cljs.core.name.call(null, actual_type_11110), canonical_f_11113)
                    }else {
                      elem_11037.detachEvent(cljs.core.name.call(null, actual_type_11110), canonical_f_11113)
                    }
                    var G__11114 = cljs.core.next.call(null, seq__11015_11103__$1);
                    var G__11115 = null;
                    var G__11116 = 0;
                    var G__11117 = 0;
                    seq__11015_11089 = G__11114;
                    chunk__11017_11090 = G__11115;
                    count__11018_11091 = G__11116;
                    i__11019_11092 = G__11117;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__11118 = cljs.core.next.call(null, seq__11014_11080__$1);
            var G__11119 = null;
            var G__11120 = 0;
            var G__11121 = 0;
            seq__11014_11039 = G__11118;
            chunk__11021_11040 = G__11119;
            count__11022_11041 = G__11120;
            i__11023_11042 = G__11121;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__11122) {
    var elem_sel = cljs.core.first(arglist__11122);
    var type_fs = cljs.core.rest(arglist__11122);
    return unlisten_BANG___delegate(elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__11130_11137 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_11138 = cljs.core.nth.call(null, vec__11130_11137, 0, null);
    var selector_11139 = cljs.core.nth.call(null, vec__11130_11137, 1, null);
    var seq__11131_11140 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__11132_11141 = null;
    var count__11133_11142 = 0;
    var i__11134_11143 = 0;
    while(true) {
      if(i__11134_11143 < count__11133_11142) {
        var vec__11135_11144 = cljs.core._nth.call(null, chunk__11132_11141, i__11134_11143);
        var type_11145 = cljs.core.nth.call(null, vec__11135_11144, 0, null);
        var f_11146 = cljs.core.nth.call(null, vec__11135_11144, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_11145, function(seq__11131_11140, chunk__11132_11141, count__11133_11142, i__11134_11143, vec__11135_11144, type_11145, f_11146) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_11145, this_fn);
            return f_11146.call(null, e)
          }
        }(seq__11131_11140, chunk__11132_11141, count__11133_11142, i__11134_11143, vec__11135_11144, type_11145, f_11146));
        var G__11147 = seq__11131_11140;
        var G__11148 = chunk__11132_11141;
        var G__11149 = count__11133_11142;
        var G__11150 = i__11134_11143 + 1;
        seq__11131_11140 = G__11147;
        chunk__11132_11141 = G__11148;
        count__11133_11142 = G__11149;
        i__11134_11143 = G__11150;
        continue
      }else {
        var temp__4092__auto___11151 = cljs.core.seq.call(null, seq__11131_11140);
        if(temp__4092__auto___11151) {
          var seq__11131_11152__$1 = temp__4092__auto___11151;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__11131_11152__$1)) {
            var c__3525__auto___11153 = cljs.core.chunk_first.call(null, seq__11131_11152__$1);
            var G__11154 = cljs.core.chunk_rest.call(null, seq__11131_11152__$1);
            var G__11155 = c__3525__auto___11153;
            var G__11156 = cljs.core.count.call(null, c__3525__auto___11153);
            var G__11157 = 0;
            seq__11131_11140 = G__11154;
            chunk__11132_11141 = G__11155;
            count__11133_11142 = G__11156;
            i__11134_11143 = G__11157;
            continue
          }else {
            var vec__11136_11158 = cljs.core.first.call(null, seq__11131_11152__$1);
            var type_11159 = cljs.core.nth.call(null, vec__11136_11158, 0, null);
            var f_11160 = cljs.core.nth.call(null, vec__11136_11158, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_11159, function(seq__11131_11140, chunk__11132_11141, count__11133_11142, i__11134_11143, vec__11136_11158, type_11159, f_11160, seq__11131_11152__$1, temp__4092__auto___11151) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_11159, this_fn);
                return f_11160.call(null, e)
              }
            }(seq__11131_11140, chunk__11132_11141, count__11133_11142, i__11134_11143, vec__11136_11158, type_11159, f_11160, seq__11131_11152__$1, temp__4092__auto___11151));
            var G__11161 = cljs.core.next.call(null, seq__11131_11152__$1);
            var G__11162 = null;
            var G__11163 = 0;
            var G__11164 = 0;
            seq__11131_11140 = G__11161;
            chunk__11132_11141 = G__11162;
            count__11133_11142 = G__11163;
            i__11134_11143 = G__11164;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__11165) {
    var elem_sel = cljs.core.first(arglist__11165);
    var type_fs = cljs.core.rest(arglist__11165);
    return listen_once_BANG___delegate(elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__11166) {
    var vec__11168 = p__11166;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__11168, 0, null);
    if(dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3943__auto__ = update_event_BANG_;
      if(cljs.core.truth_(or__3943__auto__)) {
        return or__3943__auto__
      }else {
        return cljs.core.identity
      }
    }();
    if(cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event))
    }else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()))
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__11166 = null;
    if(arguments.length > 2) {
      p__11166 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return fire_BANG___delegate.call(this, node, event_type, p__11166)
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__11169) {
    var node = cljs.core.first(arglist__11169);
    arglist__11169 = cljs.core.next(arglist__11169);
    var event_type = cljs.core.first(arglist__11169);
    var p__11166 = cljs.core.rest(arglist__11169);
    return fire_BANG___delegate(node, event_type, p__11166)
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_
}();
goog.provide("weather_canvas.sheet");
goog.require("cljs.core");
goog.require("dommy.core");
goog.require("dommy.utils");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.gradient");
weather_canvas.sheet.sheet = function sheet(layer_specs) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "sheet", "sheet", 1123307729), new cljs.core.Keyword(null, "layers", "layers", 4199139508), layer_specs], true)
};
weather_canvas.sheet.group = function() {
  var group__delegate = function(direction, p__8138) {
    var map__8140 = p__8138;
    var map__8140__$1 = cljs.core.seq_QMARK_.call(null, map__8140) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8140) : map__8140;
    var offset = cljs.core.get.call(null, map__8140__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
    var content = cljs.core.get.call(null, map__8140__$1, new cljs.core.Keyword(null, "content", "content", 1965434859));
    var interleave = cljs.core.get.call(null, map__8140__$1, new cljs.core.Keyword(null, "interleave", "interleave", 3715991245));
    return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "group", "group", 1112533489), new cljs.core.Keyword(null, "drawn", "drawn", 1109749532), false, new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "direction", "direction", 4346280689), weather_canvas.sheet.make_direction.call(null, direction), new cljs.core.Keyword(null, "interleave", 
    "interleave", 3715991245), interleave, new cljs.core.Keyword(null, "content", "content", 1965434859), content], true)
  };
  var group = function(direction, var_args) {
    var p__8138 = null;
    if(arguments.length > 1) {
      p__8138 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return group__delegate.call(this, direction, p__8138)
  };
  group.cljs$lang$maxFixedArity = 1;
  group.cljs$lang$applyTo = function(arglist__8141) {
    var direction = cljs.core.first(arglist__8141);
    var p__8138 = cljs.core.rest(arglist__8141);
    return group__delegate(direction, p__8138)
  };
  group.cljs$core$IFn$_invoke$arity$variadic = group__delegate;
  return group
}();
weather_canvas.sheet.gap = function gap(size) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "gap", "gap", 1014006344), new cljs.core.Keyword(null, "size", "size", 1017434995), cljs.core.PersistentVector.fromArray([size, size], true)], true)
};
weather_canvas.sheet.square = function square(size, color) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "square", "square", 4414196879), new cljs.core.Keyword(null, "size", "size", 1017434995), cljs.core.PersistentVector.fromArray([size, size], true), new cljs.core.Keyword(null, "color", "color", 1108746965), color], true)
};
weather_canvas.sheet.text = function text(contents, size, color) {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "type", "type", 1017479852), new cljs.core.Keyword(null, "text", "text", 1017460895), new cljs.core.Keyword(null, "string", "string", 4416885635), contents, new cljs.core.Keyword(null, "font-size", "font-size", 3722789425), size, new cljs.core.Keyword(null, "color", "color", 1108746965), color], true)
};
weather_canvas.sheet.draw_BANG_ = function() {
  var method_table__3582__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__3583__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__3584__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__3585__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__3586__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("draw!", function() {
    var G__8144__delegate = function(shape, canvas_buffer, offset, p__8142) {
      var map__8143 = p__8142;
      var map__8143__$1 = cljs.core.seq_QMARK_.call(null, map__8143) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8143) : map__8143;
      return(new cljs.core.Keyword(null, "type", "type", 1017479852)).call(null, shape)
    };
    var G__8144 = function(shape, canvas_buffer, offset, var_args) {
      var p__8142 = null;
      if(arguments.length > 3) {
        p__8142 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__8144__delegate.call(this, shape, canvas_buffer, offset, p__8142)
    };
    G__8144.cljs$lang$maxFixedArity = 3;
    G__8144.cljs$lang$applyTo = function(arglist__8145) {
      var shape = cljs.core.first(arglist__8145);
      arglist__8145 = cljs.core.next(arglist__8145);
      var canvas_buffer = cljs.core.first(arglist__8145);
      arglist__8145 = cljs.core.next(arglist__8145);
      var offset = cljs.core.first(arglist__8145);
      var p__8142 = cljs.core.rest(arglist__8145);
      return G__8144__delegate(shape, canvas_buffer, offset, p__8142)
    };
    G__8144.cljs$core$IFn$_invoke$arity$variadic = G__8144__delegate;
    return G__8144
  }(), new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__3586__auto__, method_table__3582__auto__, prefer_table__3583__auto__, method_cache__3584__auto__, cached_hierarchy__3585__auto__)
}();
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "sheet", "sheet", 1123307729), function(sheet, buffer, offset) {
  var subdimensions = function() {
    var iter__3494__auto__ = function iter__8146(s__8147) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__8147__$1 = s__8147;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__8147__$1);
          if(temp__4092__auto__) {
            var s__8147__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__8147__$2)) {
              var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8147__$2);
              var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
              var b__8149 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
              if(function() {
                var i__8148 = 0;
                while(true) {
                  if(i__8148 < size__3493__auto__) {
                    var vec__8152 = cljs.core._nth.call(null, c__3492__auto__, i__8148);
                    var layer_name = cljs.core.nth.call(null, vec__8152, 0, null);
                    var sub_offset = cljs.core.nth.call(null, vec__8152, 1, null);
                    var contents = cljs.core.nth.call(null, vec__8152, 2, null);
                    cljs.core.chunk_append.call(null, b__8149, weather_canvas.sheet.draw_BANG_.call(null, contents, buffer, cljs.core.map.call(null, cljs.core._PLUS_, sub_offset, offset)));
                    var G__8154 = i__8148 + 1;
                    i__8148 = G__8154;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8149), iter__8146.call(null, cljs.core.chunk_rest.call(null, s__8147__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8149), null)
              }
            }else {
              var vec__8153 = cljs.core.first.call(null, s__8147__$2);
              var layer_name = cljs.core.nth.call(null, vec__8153, 0, null);
              var sub_offset = cljs.core.nth.call(null, vec__8153, 1, null);
              var contents = cljs.core.nth.call(null, vec__8153, 2, null);
              return cljs.core.cons.call(null, weather_canvas.sheet.draw_BANG_.call(null, contents, buffer, cljs.core.map.call(null, cljs.core._PLUS_, sub_offset, offset)), iter__8146.call(null, cljs.core.rest.call(null, s__8147__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3494__auto__.call(null, cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "layers", "layers", 4199139508)).call(null, sheet)))
  }();
  return cljs.core.apply.call(null, cljs.core.map, cljs.core.max, subdimensions)
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "group", "group", 1112533489), function(shape, buffer, offset) {
  if(cljs.core.truth_((new cljs.core.Keyword(null, "drawn", "drawn", 1109749532)).call(null, shape))) {
    (new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167)).call(null, shape)
  }else {
  }
  var dir = (new cljs.core.Keyword(null, "direction", "direction", 4346280689)).call(null, shape);
  var forward = weather_canvas.sheet.make_projection.call(null, dir);
  var sideways = function(dir, forward) {
    return function(dim) {
      return cljs.core.map.call(null, function(dir, forward) {
        return function(p1__8155_SHARP_) {
          return Math.abs(p1__8155_SHARP_)
        }
      }(dir, forward), weather_canvas.sheet.make_projection.call(null, 1 + dir).call(null, dim))
    }
  }(dir, forward);
  var between = (new cljs.core.Keyword(null, "interleave", "interleave", 3715991245)).call(null, shape);
  var contents = cljs.core.not.call(null, between) ? (new cljs.core.Keyword(null, "content", "content", 1965434859)).call(null, shape) : cljs.core.butlast.call(null, cljs.core.flatten.call(null, cljs.core.map.call(null, cljs.core.vector, (new cljs.core.Keyword(null, "content", "content", 1965434859)).call(null, shape), cljs.core.repeat.call(null, between))));
  var subshapes = contents;
  var suboffset = offset;
  var dimensions = cljs.core.PersistentVector.fromArray([0, 0], true);
  while(true) {
    if(cljs.core.not.call(null, cljs.core.first.call(null, subshapes))) {
      return(new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167)).call(null, cljs.core.assoc.call(null, shape, new cljs.core.Keyword(null, "dimensions", "dimensions", 1428239167), dimensions, new cljs.core.Keyword(null, "drawn", "drawn", 1109749532), true))
    }else {
      var sub_dimension = weather_canvas.sheet.draw_BANG_.call(null, cljs.core.first.call(null, subshapes), buffer, suboffset);
      var new_width = function() {
        var x__3116__auto__ = sideways.call(null, sub_dimension);
        var y__3117__auto__ = sideways.call(null, dimensions);
        return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
      }();
      var G__8156 = cljs.core.rest.call(null, subshapes);
      var G__8157 = cljs.core.map.call(null, cljs.core._PLUS_, forward.call(null, sub_dimension), suboffset);
      var G__8158 = cljs.core.map.call(null, cljs.core._PLUS_, forward.call(null, dimensions), cljs.core.map.call(null, cljs.core._PLUS_, forward.call(null, sub_dimension), new_width));
      subshapes = G__8156;
      suboffset = G__8157;
      dimensions = G__8158;
      continue
    }
    break
  }
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "text", "text", 1017460895), function(shape, buffer, offset) {
  return weather_canvas.canvas_buffer.draw_text.call(null, buffer, (new cljs.core.Keyword(null, "string", "string", 4416885635)).call(null, shape), offset, (new cljs.core.Keyword(null, "font-size", "font-size", 3722789425)).call(null, shape), (new cljs.core.Keyword(null, "color", "color", 1108746965)).call(null, shape))
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "gap", "gap", 1014006344), function(shape, buffer, offset) {
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).call(null, shape)
});
cljs.core._add_method.call(null, weather_canvas.sheet.draw_BANG_, new cljs.core.Keyword(null, "square", "square", 4414196879), function(shape, buffer, offset) {
  weather_canvas.canvas_buffer.draw_rectangle.call(null, buffer, offset, (new cljs.core.Keyword(null, "size", "size", 1017434995)).call(null, shape), (new cljs.core.Keyword(null, "color", "color", 1108746965)).call(null, shape));
  return(new cljs.core.Keyword(null, "size", "size", 1017434995)).call(null, shape)
});
weather_canvas.sheet.unit_vector = function unit_vector(direction) {
  return cljs.core.get.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([1, 0], true), cljs.core.PersistentVector.fromArray([0, -1], true), cljs.core.PersistentVector.fromArray([-1, 0], true), cljs.core.PersistentVector.fromArray([0, 1], true)], true), cljs.core.mod.call(null, direction, 4))
};
weather_canvas.sheet.make_direction = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "right", "right", 1122416014), 0, new cljs.core.Keyword(null, "up", "up", 1013907981), 1, new cljs.core.Keyword(null, "left", "left", 1017222009), 2, new cljs.core.Keyword(null, "down", "down", 1016993812), 3], true);
weather_canvas.sheet.make_projection = function make_projection(direction) {
  return function(dimension) {
    return cljs.core.map.call(null, cljs.core._STAR_, weather_canvas.sheet.unit_vector.call(null, direction), dimension)
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3394__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3941__auto__ = port;
    if(and__3941__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3394__auto__ = port == null ? null : port;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3941__auto__ = chan;
    if(and__3941__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3394__auto__ = chan == null ? null : chan;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3394__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3941__auto__ = h;
    if(and__3941__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3394__auto__ = h == null ? null : h;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3394__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3394__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3941__auto__ = b;
    if(and__3941__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3394__auto__ = b == null ? null : b;
    return function() {
      var or__3943__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__13596 = cnt + 1;
      cnt = G__13596;
      continue
    }else {
      return null
    }
    break
  }
};
goog.provide("cljs.core.async.impl.buffers.RingBuffer");
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3572__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3572__auto__) {
      var v_13597 = this$.pop();
      if(keep_QMARK_.call(null, v_13597)) {
        this$.unshift(v_13597)
      }else {
      }
      var G__13598 = x + 1;
      x = G__13598;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
goog.provide("cljs.core.async.impl.buffers.FixedBuffer");
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(cljs.core.not.call(null, this$.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(this$))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.DroppingBuffer");
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.buffers.SlidingBuffer");
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  if(self__.buf.length === self__.n) {
    this$.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(this$)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_13585 = 0;
  while(true) {
    var m_13586 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_13586 == null) {
    }else {
      m_13586.call(null);
      if(count_13585 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__13587 = count_13585 + 1;
        count_13585 = G__13587;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3941__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(cljs.core.truth_(and__3941__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3941__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(f.call(opt_obj, val, undefined, iterator)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      return f.call(opt_obj, val, undefined, iterator)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterator.next();
      if(dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterator.next();
        if(f.call(opt_obj, val, undefined, iterator)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable))
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.positioning");
goog.provide("goog.positioning.Corner");
goog.provide("goog.positioning.CornerBit");
goog.provide("goog.positioning.Overflow");
goog.provide("goog.positioning.OverflowStatus");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.style");
goog.require("goog.style.bidi");
goog.positioning.Corner = {TOP_LEFT:0, TOP_RIGHT:2, BOTTOM_LEFT:1, BOTTOM_RIGHT:3, TOP_START:4, TOP_END:6, BOTTOM_START:5, BOTTOM_END:7};
goog.positioning.CornerBit = {BOTTOM:1, RIGHT:2, FLIP_RTL:4};
goog.positioning.Overflow = {IGNORE:0, ADJUST_X:1, FAIL_X:2, ADJUST_Y:4, FAIL_Y:8, RESIZE_WIDTH:16, RESIZE_HEIGHT:32, ADJUST_X_EXCEPT_OFFSCREEN:64 | 1, ADJUST_Y_EXCEPT_OFFSCREEN:128 | 4};
goog.positioning.OverflowStatus = {NONE:0, ADJUSTED_X:1, ADJUSTED_Y:2, WIDTH_ADJUSTED:4, HEIGHT_ADJUSTED:8, FAILED_LEFT:16, FAILED_RIGHT:32, FAILED_TOP:64, FAILED_BOTTOM:128, FAILED_OUTSIDE_VIEWPORT:256};
goog.positioning.OverflowStatus.FAILED = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT | goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM | goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
goog.positioning.OverflowStatus.FAILED_HORIZONTAL = goog.positioning.OverflowStatus.FAILED_LEFT | goog.positioning.OverflowStatus.FAILED_RIGHT;
goog.positioning.OverflowStatus.FAILED_VERTICAL = goog.positioning.OverflowStatus.FAILED_TOP | goog.positioning.OverflowStatus.FAILED_BOTTOM;
goog.positioning.positionAtAnchor = function(anchorElement, anchorElementCorner, movableElement, movableElementCorner, opt_offset, opt_margin, opt_overflow, opt_preferredSize, opt_viewport) {
  goog.asserts.assert(movableElement);
  var movableParentTopLeft = goog.positioning.getOffsetParentPageOffset(movableElement);
  var anchorRect = goog.positioning.getVisiblePart_(anchorElement);
  goog.style.translateRectForAnotherFrame(anchorRect, goog.dom.getDomHelper(anchorElement), goog.dom.getDomHelper(movableElement));
  var corner = goog.positioning.getEffectiveCorner(anchorElement, anchorElementCorner);
  var absolutePos = new goog.math.Coordinate(corner & goog.positioning.CornerBit.RIGHT ? anchorRect.left + anchorRect.width : anchorRect.left, corner & goog.positioning.CornerBit.BOTTOM ? anchorRect.top + anchorRect.height : anchorRect.top);
  absolutePos = goog.math.Coordinate.difference(absolutePos, movableParentTopLeft);
  if(opt_offset) {
    absolutePos.x += (corner & goog.positioning.CornerBit.RIGHT ? -1 : 1) * opt_offset.x;
    absolutePos.y += (corner & goog.positioning.CornerBit.BOTTOM ? -1 : 1) * opt_offset.y
  }
  var viewport;
  if(opt_overflow) {
    if(opt_viewport) {
      viewport = opt_viewport
    }else {
      viewport = goog.style.getVisibleRectForElement(movableElement);
      if(viewport) {
        viewport.top -= movableParentTopLeft.y;
        viewport.right -= movableParentTopLeft.x;
        viewport.bottom -= movableParentTopLeft.y;
        viewport.left -= movableParentTopLeft.x
      }
    }
  }
  return goog.positioning.positionAtCoordinate(absolutePos, movableElement, movableElementCorner, opt_margin, viewport, opt_overflow, opt_preferredSize)
};
goog.positioning.getOffsetParentPageOffset = function(movableElement) {
  var movableParentTopLeft;
  var parent = movableElement.offsetParent;
  if(parent) {
    var isBody = parent.tagName == goog.dom.TagName.HTML || parent.tagName == goog.dom.TagName.BODY;
    if(!isBody || goog.style.getComputedPosition(parent) != "static") {
      movableParentTopLeft = goog.style.getPageOffset(parent);
      if(!isBody) {
        movableParentTopLeft = goog.math.Coordinate.difference(movableParentTopLeft, new goog.math.Coordinate(goog.style.bidi.getScrollLeft(parent), parent.scrollTop))
      }
    }
  }
  return movableParentTopLeft || new goog.math.Coordinate
};
goog.positioning.getVisiblePart_ = function(el) {
  var rect = goog.style.getBounds(el);
  var visibleBox = goog.style.getVisibleRectForElement(el);
  if(visibleBox) {
    rect.intersection(goog.math.Rect.createFromBox(visibleBox))
  }
  return rect
};
goog.positioning.positionAtCoordinate = function(absolutePos, movableElement, movableElementCorner, opt_margin, opt_viewport, opt_overflow, opt_preferredSize) {
  absolutePos = absolutePos.clone();
  var status = goog.positioning.OverflowStatus.NONE;
  var corner = goog.positioning.getEffectiveCorner(movableElement, movableElementCorner);
  var elementSize = goog.style.getSize(movableElement);
  var size = opt_preferredSize ? opt_preferredSize.clone() : elementSize.clone();
  if(opt_margin || corner != goog.positioning.Corner.TOP_LEFT) {
    if(corner & goog.positioning.CornerBit.RIGHT) {
      absolutePos.x -= size.width + (opt_margin ? opt_margin.right : 0)
    }else {
      if(opt_margin) {
        absolutePos.x += opt_margin.left
      }
    }
    if(corner & goog.positioning.CornerBit.BOTTOM) {
      absolutePos.y -= size.height + (opt_margin ? opt_margin.bottom : 0)
    }else {
      if(opt_margin) {
        absolutePos.y += opt_margin.top
      }
    }
  }
  if(opt_overflow) {
    status = opt_viewport ? goog.positioning.adjustForViewport_(absolutePos, size, opt_viewport, opt_overflow) : goog.positioning.OverflowStatus.FAILED_OUTSIDE_VIEWPORT;
    if(status & goog.positioning.OverflowStatus.FAILED) {
      return status
    }
  }
  goog.style.setPosition(movableElement, absolutePos);
  if(!goog.math.Size.equals(elementSize, size)) {
    goog.style.setBorderBoxSize(movableElement, size)
  }
  return status
};
goog.positioning.adjustForViewport_ = function(pos, size, viewport, overflow) {
  var status = goog.positioning.OverflowStatus.NONE;
  var ADJUST_X_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN;
  var ADJUST_Y_EXCEPT_OFFSCREEN = goog.positioning.Overflow.ADJUST_Y_EXCEPT_OFFSCREEN;
  if((overflow & ADJUST_X_EXCEPT_OFFSCREEN) == ADJUST_X_EXCEPT_OFFSCREEN && (pos.x < viewport.left || pos.x >= viewport.right)) {
    overflow &= ~goog.positioning.Overflow.ADJUST_X
  }
  if((overflow & ADJUST_Y_EXCEPT_OFFSCREEN) == ADJUST_Y_EXCEPT_OFFSCREEN && (pos.y < viewport.top || pos.y >= viewport.bottom)) {
    overflow &= ~goog.positioning.Overflow.ADJUST_Y
  }
  if(pos.x < viewport.left && overflow & goog.positioning.Overflow.ADJUST_X) {
    pos.x = viewport.left;
    status |= goog.positioning.OverflowStatus.ADJUSTED_X
  }
  if(pos.x < viewport.left && pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.RESIZE_WIDTH) {
    size.width = Math.max(size.width - (pos.x + size.width - viewport.right), 0);
    status |= goog.positioning.OverflowStatus.WIDTH_ADJUSTED
  }
  if(pos.x + size.width > viewport.right && overflow & goog.positioning.Overflow.ADJUST_X) {
    pos.x = Math.max(viewport.right - size.width, viewport.left);
    status |= goog.positioning.OverflowStatus.ADJUSTED_X
  }
  if(overflow & goog.positioning.Overflow.FAIL_X) {
    status |= (pos.x < viewport.left ? goog.positioning.OverflowStatus.FAILED_LEFT : 0) | (pos.x + size.width > viewport.right ? goog.positioning.OverflowStatus.FAILED_RIGHT : 0)
  }
  if(pos.y < viewport.top && overflow & goog.positioning.Overflow.ADJUST_Y) {
    pos.y = viewport.top;
    status |= goog.positioning.OverflowStatus.ADJUSTED_Y
  }
  if(pos.y <= viewport.top && pos.y + size.height < viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {
    size.height = Math.max(size.height - (viewport.top - pos.y), 0);
    pos.y = 0;
    status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED
  }
  if(pos.y >= viewport.top && pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.RESIZE_HEIGHT) {
    size.height = Math.max(size.height - (pos.y + size.height - viewport.bottom), 0);
    status |= goog.positioning.OverflowStatus.HEIGHT_ADJUSTED
  }
  if(pos.y + size.height > viewport.bottom && overflow & goog.positioning.Overflow.ADJUST_Y) {
    pos.y = Math.max(viewport.bottom - size.height, viewport.top);
    status |= goog.positioning.OverflowStatus.ADJUSTED_Y
  }
  if(overflow & goog.positioning.Overflow.FAIL_Y) {
    status |= (pos.y < viewport.top ? goog.positioning.OverflowStatus.FAILED_TOP : 0) | (pos.y + size.height > viewport.bottom ? goog.positioning.OverflowStatus.FAILED_BOTTOM : 0)
  }
  return status
};
goog.positioning.getEffectiveCorner = function(element, corner) {
  return((corner & goog.positioning.CornerBit.FLIP_RTL && goog.style.isRightToLeft(element) ? corner ^ goog.positioning.CornerBit.RIGHT : corner) & ~goog.positioning.CornerBit.FLIP_RTL)
};
goog.positioning.flipCornerHorizontal = function(corner) {
  return(corner ^ goog.positioning.CornerBit.RIGHT)
};
goog.positioning.flipCornerVertical = function(corner) {
  return(corner ^ goog.positioning.CornerBit.BOTTOM)
};
goog.positioning.flipCorner = function(corner) {
  return(corner ^ goog.positioning.CornerBit.BOTTOM ^ goog.positioning.CornerBit.RIGHT)
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return":" + (this.nextId_++).toString(36)
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("goog.ui.ac.AutoComplete");
goog.provide("goog.ui.ac.AutoComplete.EventType");
goog.require("goog.events");
goog.require("goog.events.EventTarget");
goog.ui.ac.AutoComplete = function(matcher, renderer, selectionHandler) {
  goog.events.EventTarget.call(this);
  this.matcher_ = matcher;
  this.selectionHandler_ = selectionHandler;
  this.renderer_ = renderer;
  goog.events.listen(renderer, [goog.ui.ac.AutoComplete.EventType.HILITE, goog.ui.ac.AutoComplete.EventType.SELECT, goog.ui.ac.AutoComplete.EventType.CANCEL_DISMISS, goog.ui.ac.AutoComplete.EventType.DISMISS], this);
  this.token_ = null;
  this.rows_ = [];
  this.hiliteId_ = -1;
  this.firstRowId_ = 0;
  this.target_ = null;
  this.dismissTimer_ = null;
  this.inputToAnchorMap_ = {}
};
goog.inherits(goog.ui.ac.AutoComplete, goog.events.EventTarget);
goog.ui.ac.AutoComplete.prototype.maxMatches_ = 10;
goog.ui.ac.AutoComplete.prototype.autoHilite_ = true;
goog.ui.ac.AutoComplete.prototype.allowFreeSelect_ = false;
goog.ui.ac.AutoComplete.prototype.wrap_ = false;
goog.ui.ac.AutoComplete.prototype.triggerSuggestionsOnUpdate_ = false;
goog.ui.ac.AutoComplete.EventType = {ROW_HILITE:"rowhilite", HILITE:"hilite", SELECT:"select", DISMISS:"dismiss", CANCEL_DISMISS:"canceldismiss", UPDATE:"update", SUGGESTIONS_UPDATE:"suggestionsupdate"};
goog.ui.ac.AutoComplete.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.ac.AutoComplete.prototype.handleEvent = function(e) {
  if(e.target == this.renderer_) {
    switch(e.type) {
      case goog.ui.ac.AutoComplete.EventType.HILITE:
        this.hiliteId((e.row));
        break;
      case goog.ui.ac.AutoComplete.EventType.SELECT:
        this.selectHilited();
        break;
      case goog.ui.ac.AutoComplete.EventType.CANCEL_DISMISS:
        this.cancelDelayedDismiss();
        break;
      case goog.ui.ac.AutoComplete.EventType.DISMISS:
        this.dismissOnDelay();
        break
    }
  }
};
goog.ui.ac.AutoComplete.prototype.setMaxMatches = function(max) {
  this.maxMatches_ = max
};
goog.ui.ac.AutoComplete.prototype.setAutoHilite = function(autoHilite) {
  this.autoHilite_ = autoHilite
};
goog.ui.ac.AutoComplete.prototype.setAllowFreeSelect = function(allowFreeSelect) {
  this.allowFreeSelect_ = allowFreeSelect
};
goog.ui.ac.AutoComplete.prototype.setWrap = function(wrap) {
  this.wrap_ = wrap
};
goog.ui.ac.AutoComplete.prototype.setTriggerSuggestionsOnUpdate = function(triggerSuggestionsOnUpdate) {
  this.triggerSuggestionsOnUpdate_ = triggerSuggestionsOnUpdate
};
goog.ui.ac.AutoComplete.prototype.setToken = function(token, opt_fullString) {
  if(this.token_ == token) {
    return
  }
  this.token_ = token;
  this.matcher_.requestMatchingRows(this.token_, this.maxMatches_, goog.bind(this.matchListener_, this), opt_fullString);
  this.cancelDelayedDismiss()
};
goog.ui.ac.AutoComplete.prototype.getTarget = function() {
  return this.target_
};
goog.ui.ac.AutoComplete.prototype.setTarget = function(target) {
  this.target_ = target
};
goog.ui.ac.AutoComplete.prototype.isOpen = function() {
  return this.renderer_.isVisible()
};
goog.ui.ac.AutoComplete.prototype.getRowCount = function() {
  return this.rows_.length
};
goog.ui.ac.AutoComplete.prototype.hiliteNext = function() {
  var lastId = this.firstRowId_ + this.rows_.length - 1;
  if(this.hiliteId_ >= this.firstRowId_ && this.hiliteId_ < lastId) {
    this.hiliteId(this.hiliteId_ + 1);
    return true
  }else {
    if(this.hiliteId_ == -1) {
      this.hiliteId(this.firstRowId_);
      return true
    }else {
      if(this.hiliteId_ == lastId) {
        if(this.allowFreeSelect_) {
          this.hiliteId(-1);
          return false
        }else {
          if(this.wrap_) {
            this.hiliteId(this.firstRowId_);
            return true
          }
        }
      }
    }
  }
  return false
};
goog.ui.ac.AutoComplete.prototype.hilitePrev = function() {
  if(this.hiliteId_ > this.firstRowId_) {
    this.hiliteId(this.hiliteId_ - 1);
    return true
  }else {
    if(this.allowFreeSelect_ && this.hiliteId_ == this.firstRowId_) {
      this.hiliteId(-1);
      return false
    }else {
      if(this.wrap_ && (this.hiliteId_ == -1 || this.hiliteId_ == this.firstRowId_)) {
        var lastId = this.firstRowId_ + this.rows_.length - 1;
        this.hiliteId(lastId);
        return true
      }
    }
  }
  return false
};
goog.ui.ac.AutoComplete.prototype.hiliteId = function(id) {
  this.hiliteId_ = id;
  this.renderer_.hiliteId(id);
  return this.getIndexOfId(id) != -1
};
goog.ui.ac.AutoComplete.prototype.hiliteIndex = function(index) {
  return this.hiliteId(this.getIdOfIndex_(index))
};
goog.ui.ac.AutoComplete.prototype.selectHilited = function() {
  var index = this.getIndexOfId(this.hiliteId_);
  if(index != -1) {
    var selectedRow = this.rows_[index];
    var suppressUpdate = this.selectionHandler_.selectRow(selectedRow);
    if(this.triggerSuggestionsOnUpdate_) {
      this.token_ = null;
      this.dismissOnDelay()
    }else {
      this.dismiss()
    }
    if(!suppressUpdate) {
      this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.UPDATE, row:selectedRow});
      if(this.triggerSuggestionsOnUpdate_) {
        this.selectionHandler_.update(true)
      }
    }
    return true
  }else {
    this.dismiss();
    this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.UPDATE, row:null});
    return false
  }
};
goog.ui.ac.AutoComplete.prototype.hasHighlight = function() {
  return this.isOpen() && this.getIndexOfId(this.hiliteId_) != -1
};
goog.ui.ac.AutoComplete.prototype.dismiss = function() {
  this.hiliteId_ = -1;
  this.token_ = null;
  this.firstRowId_ += this.rows_.length;
  this.rows_ = [];
  window.clearTimeout(this.dismissTimer_);
  this.dismissTimer_ = null;
  this.renderer_.dismiss();
  this.dispatchEvent(goog.ui.ac.AutoComplete.EventType.SUGGESTIONS_UPDATE);
  this.dispatchEvent(goog.ui.ac.AutoComplete.EventType.DISMISS)
};
goog.ui.ac.AutoComplete.prototype.dismissOnDelay = function() {
  if(!this.dismissTimer_) {
    this.dismissTimer_ = window.setTimeout(goog.bind(this.dismiss, this), 100)
  }
};
goog.ui.ac.AutoComplete.prototype.immediatelyCancelDelayedDismiss_ = function() {
  if(this.dismissTimer_) {
    window.clearTimeout(this.dismissTimer_);
    this.dismissTimer_ = null;
    return true
  }
  return false
};
goog.ui.ac.AutoComplete.prototype.cancelDelayedDismiss = function() {
  if(!this.immediatelyCancelDelayedDismiss_()) {
    window.setTimeout(goog.bind(this.immediatelyCancelDelayedDismiss_, this), 10)
  }
};
goog.ui.ac.AutoComplete.prototype.disposeInternal = function() {
  goog.ui.ac.AutoComplete.superClass_.disposeInternal.call(this);
  delete this.inputToAnchorMap_;
  this.renderer_.dispose();
  this.selectionHandler_.dispose();
  this.matcher_ = null
};
goog.ui.ac.AutoComplete.prototype.matchListener_ = function(matchedToken, rows, opt_options) {
  if(this.token_ != matchedToken) {
    return
  }
  this.renderRows(rows, opt_options)
};
goog.ui.ac.AutoComplete.prototype.renderRows = function(rows, opt_options) {
  var optionsObj = goog.typeOf(opt_options) == "object" && opt_options;
  var preserveHilited = optionsObj ? optionsObj.getPreserveHilited() : opt_options;
  var indexToHilite = preserveHilited ? this.getIndexOfId(this.hiliteId_) : -1;
  this.firstRowId_ += this.rows_.length;
  this.rows_ = rows;
  var rendRows = [];
  for(var i = 0;i < rows.length;++i) {
    rendRows.push({id:this.getIdOfIndex_(i), data:rows[i]})
  }
  var anchor = null;
  if(this.target_) {
    anchor = this.inputToAnchorMap_[goog.getUid(this.target_)] || this.target_
  }
  this.renderer_.setAnchorElement(anchor);
  this.renderer_.renderRows(rendRows, this.token_, this.target_);
  var autoHilite = this.autoHilite_;
  if(optionsObj && optionsObj.getAutoHilite() !== undefined) {
    autoHilite = optionsObj.getAutoHilite()
  }
  if((autoHilite || indexToHilite >= 0) && rendRows.length != 0 && this.token_) {
    var idToHilite = indexToHilite >= 0 ? this.getIdOfIndex_(indexToHilite) : this.firstRowId_;
    this.hiliteId(idToHilite)
  }else {
    this.hiliteId_ = -1
  }
  this.dispatchEvent(goog.ui.ac.AutoComplete.EventType.SUGGESTIONS_UPDATE)
};
goog.ui.ac.AutoComplete.prototype.getIndexOfId = function(id) {
  var index = id - this.firstRowId_;
  if(index < 0 || index >= this.rows_.length) {
    return-1
  }
  return index
};
goog.ui.ac.AutoComplete.prototype.getIdOfIndex_ = function(index) {
  return this.firstRowId_ + index
};
goog.ui.ac.AutoComplete.prototype.attachInputs = function(var_args) {
  var inputHandler = (this.selectionHandler_);
  inputHandler.attachInputs.apply(inputHandler, arguments)
};
goog.ui.ac.AutoComplete.prototype.detachInputs = function(var_args) {
  var inputHandler = (this.selectionHandler_);
  inputHandler.detachInputs.apply(inputHandler, arguments);
  goog.array.forEach(arguments, function(input) {
    goog.object.remove(this.inputToAnchorMap_, goog.getUid(input))
  }, this)
};
goog.ui.ac.AutoComplete.prototype.attachInputWithAnchor = function(inputElement, anchorElement) {
  this.inputToAnchorMap_[goog.getUid(inputElement)] = anchorElement;
  this.attachInputs(inputElement)
};
goog.ui.ac.AutoComplete.prototype.update = function(opt_force) {
  var inputHandler = (this.selectionHandler_);
  inputHandler.update(opt_force)
};
goog.provide("goog.ui.ac.Renderer");
goog.provide("goog.ui.ac.Renderer.CustomRenderer");
goog.require("goog.a11y.aria");
goog.require("goog.a11y.aria.Role");
goog.require("goog.a11y.aria.State");
goog.require("goog.dispose");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.fx.dom.FadeInAndShow");
goog.require("goog.fx.dom.FadeOutAndHide");
goog.require("goog.iter");
goog.require("goog.positioning");
goog.require("goog.positioning.Corner");
goog.require("goog.positioning.Overflow");
goog.require("goog.string");
goog.require("goog.style");
goog.require("goog.ui.IdGenerator");
goog.require("goog.ui.ac.AutoComplete.EventType");
goog.require("goog.userAgent");
goog.ui.ac.Renderer = function(opt_parentNode, opt_customRenderer, opt_rightAlign, opt_useStandardHighlighting) {
  goog.base(this);
  this.parent_ = opt_parentNode || goog.dom.getDocument().body;
  this.dom_ = goog.dom.getDomHelper(this.parent_);
  this.reposition_ = !opt_parentNode;
  this.element_ = null;
  this.token_ = "";
  this.rows_ = [];
  this.rowDivs_ = [];
  this.hilitedRow_ = -1;
  this.startRenderingRows_ = -1;
  this.visible_ = false;
  this.className = goog.getCssName("ac-renderer");
  this.rowClassName = goog.getCssName("ac-row");
  this.legacyActiveClassName_ = goog.getCssName("active");
  this.activeClassName = goog.getCssName("ac-active");
  this.highlightedClassName = goog.getCssName("ac-highlighted");
  this.customRenderer_ = opt_customRenderer || null;
  this.useStandardHighlighting_ = opt_useStandardHighlighting != null ? opt_useStandardHighlighting : true;
  this.matchWordBoundary_ = true;
  this.highlightAllTokens_ = false;
  this.rightAlign_ = !!opt_rightAlign;
  this.topAlign_ = false;
  this.menuFadeDuration_ = 0;
  this.animation_
};
goog.inherits(goog.ui.ac.Renderer, goog.events.EventTarget);
goog.ui.ac.Renderer.prototype.anchorElement_;
goog.ui.ac.Renderer.prototype.widthProvider_;
goog.ui.ac.Renderer.DELAY_BEFORE_MOUSEOVER = 300;
goog.ui.ac.Renderer.prototype.getElement = function() {
  return this.element_
};
goog.ui.ac.Renderer.prototype.setWidthProvider = function(widthProvider) {
  this.widthProvider_ = widthProvider
};
goog.ui.ac.Renderer.prototype.setTopAlign = function(align) {
  this.topAlign_ = align
};
goog.ui.ac.Renderer.prototype.getTopAlign = function() {
  return this.topAlign_
};
goog.ui.ac.Renderer.prototype.setRightAlign = function(align) {
  this.rightAlign_ = align
};
goog.ui.ac.Renderer.prototype.getRightAlign = function() {
  return this.rightAlign_
};
goog.ui.ac.Renderer.prototype.setUseStandardHighlighting = function(useStandardHighlighting) {
  this.useStandardHighlighting_ = useStandardHighlighting
};
goog.ui.ac.Renderer.prototype.setMatchWordBoundary = function(matchWordBoundary) {
  this.matchWordBoundary_ = matchWordBoundary
};
goog.ui.ac.Renderer.prototype.setHighlightAllTokens = function(highlightAllTokens) {
  this.highlightAllTokens_ = highlightAllTokens
};
goog.ui.ac.Renderer.prototype.setMenuFadeDuration = function(duration) {
  this.menuFadeDuration_ = duration
};
goog.ui.ac.Renderer.prototype.setAnchorElement = function(anchor) {
  this.anchorElement_ = anchor
};
goog.ui.ac.Renderer.prototype.getAnchorElement = function() {
  return this.anchorElement_
};
goog.ui.ac.Renderer.prototype.renderRows = function(rows, token, opt_target) {
  this.token_ = token;
  this.rows_ = rows;
  this.hilitedRow_ = -1;
  this.startRenderingRows_ = goog.now();
  this.target_ = opt_target;
  this.rowDivs_ = [];
  this.redraw()
};
goog.ui.ac.Renderer.prototype.dismiss = function() {
  if(this.target_) {
    goog.a11y.aria.setActiveDescendant(this.target_, null)
  }
  if(this.visible_) {
    this.visible_ = false;
    if(this.target_) {
      goog.a11y.aria.setState(this.target_, goog.a11y.aria.State.HASPOPUP, false)
    }
    if(this.menuFadeDuration_ > 0) {
      goog.dispose(this.animation_);
      this.animation_ = new goog.fx.dom.FadeOutAndHide(this.element_, this.menuFadeDuration_);
      this.animation_.play()
    }else {
      goog.style.showElement(this.element_, false)
    }
  }
};
goog.ui.ac.Renderer.prototype.show = function() {
  if(!this.visible_) {
    this.visible_ = true;
    if(this.target_) {
      goog.a11y.aria.setRole(this.target_, goog.a11y.aria.Role.COMBOBOX);
      goog.a11y.aria.setState(this.target_, goog.a11y.aria.State.AUTOCOMPLETE, "list");
      goog.a11y.aria.setState(this.target_, goog.a11y.aria.State.HASPOPUP, true)
    }
    if(this.menuFadeDuration_ > 0) {
      goog.dispose(this.animation_);
      this.animation_ = new goog.fx.dom.FadeInAndShow(this.element_, this.menuFadeDuration_);
      this.animation_.play()
    }else {
      goog.style.showElement(this.element_, true)
    }
  }
};
goog.ui.ac.Renderer.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.ac.Renderer.prototype.hiliteRow = function(index) {
  var rowDiv = index >= 0 && index < this.rowDivs_.length ? this.rowDivs_[index] : undefined;
  var evtObj = {type:goog.ui.ac.AutoComplete.EventType.ROW_HILITE, rowNode:rowDiv};
  if(this.dispatchEvent(evtObj)) {
    this.hiliteNone();
    this.hilitedRow_ = index;
    if(rowDiv) {
      goog.dom.classes.add(rowDiv, this.activeClassName, this.legacyActiveClassName_);
      if(this.target_) {
        goog.a11y.aria.setActiveDescendant(this.target_, rowDiv)
      }
      goog.style.scrollIntoContainerView(rowDiv, this.element_)
    }
  }
};
goog.ui.ac.Renderer.prototype.hiliteNone = function() {
  if(this.hilitedRow_ >= 0) {
    goog.dom.classes.remove(this.rowDivs_[this.hilitedRow_], this.activeClassName, this.legacyActiveClassName_)
  }
};
goog.ui.ac.Renderer.prototype.hiliteId = function(id) {
  if(id == -1) {
    this.hiliteRow(-1)
  }else {
    for(var i = 0;i < this.rows_.length;i++) {
      if(this.rows_[i].id == id) {
        this.hiliteRow(i);
        return
      }
    }
  }
};
goog.ui.ac.Renderer.prototype.setMenuClasses_ = function(elt) {
  goog.dom.classes.add(elt, this.className)
};
goog.ui.ac.Renderer.prototype.maybeCreateElement_ = function() {
  if(!this.element_) {
    var el = this.dom_.createDom("div", {style:"display:none"});
    this.element_ = el;
    this.setMenuClasses_(el);
    goog.a11y.aria.setRole(el, goog.a11y.aria.Role.LISTBOX);
    el.id = goog.ui.IdGenerator.getInstance().getNextUniqueId();
    this.dom_.appendChild(this.parent_, el);
    goog.events.listen(el, goog.events.EventType.CLICK, this.handleClick_, false, this);
    goog.events.listen(el, goog.events.EventType.MOUSEDOWN, this.handleMouseDown_, false, this);
    goog.events.listen(el, goog.events.EventType.MOUSEOVER, this.handleMouseOver_, false, this)
  }
};
goog.ui.ac.Renderer.prototype.redraw = function() {
  this.maybeCreateElement_();
  if(this.topAlign_) {
    this.element_.style.visibility = "hidden"
  }
  if(this.widthProvider_) {
    var width = this.widthProvider_.clientWidth + "px";
    this.element_.style.minWidth = width
  }
  this.rowDivs_.length = 0;
  this.dom_.removeChildren(this.element_);
  if(this.customRenderer_ && this.customRenderer_.render) {
    this.customRenderer_.render(this, this.element_, this.rows_, this.token_)
  }else {
    var curRow = null;
    goog.iter.forEach(this.rows_, function(row) {
      row = this.renderRowHtml(row, this.token_);
      if(this.topAlign_) {
        this.element_.insertBefore(row, curRow)
      }else {
        this.dom_.appendChild(this.element_, row)
      }
      curRow = row
    }, this)
  }
  if(this.rows_.length == 0) {
    this.dismiss();
    return
  }else {
    this.show()
  }
  this.reposition();
  goog.style.setUnselectable(this.element_, true)
};
goog.ui.ac.Renderer.prototype.getAnchorCorner = function() {
  var anchorCorner = this.rightAlign_ ? goog.positioning.Corner.BOTTOM_RIGHT : goog.positioning.Corner.BOTTOM_LEFT;
  if(this.topAlign_) {
    anchorCorner = goog.positioning.flipCornerVertical(anchorCorner)
  }
  return anchorCorner
};
goog.ui.ac.Renderer.prototype.reposition = function() {
  if(this.target_ && this.reposition_) {
    var anchorElement = this.anchorElement_ || this.target_;
    var anchorCorner = this.getAnchorCorner();
    goog.positioning.positionAtAnchor(anchorElement, anchorCorner, this.element_, goog.positioning.flipCornerVertical(anchorCorner), null, null, goog.positioning.Overflow.ADJUST_X_EXCEPT_OFFSCREEN);
    if(this.topAlign_) {
      this.element_.style.visibility = "visible"
    }
  }
};
goog.ui.ac.Renderer.prototype.setAutoPosition = function(auto) {
  this.reposition_ = auto
};
goog.ui.ac.Renderer.prototype.getAutoPosition = function() {
  return this.reposition_
};
goog.ui.ac.Renderer.prototype.getTarget = function() {
  return this.target_
};
goog.ui.ac.Renderer.prototype.disposeInternal = function() {
  if(this.element_) {
    goog.events.unlisten(this.element_, goog.events.EventType.CLICK, this.handleClick_, false, this);
    goog.events.unlisten(this.element_, goog.events.EventType.MOUSEDOWN, this.handleMouseDown_, false, this);
    goog.events.unlisten(this.element_, goog.events.EventType.MOUSEOVER, this.handleMouseOver_, false, this);
    this.dom_.removeNode(this.element_);
    this.element_ = null;
    this.visible_ = false
  }
  goog.dispose(this.animation_);
  this.parent_ = null;
  goog.base(this, "disposeInternal")
};
goog.ui.ac.Renderer.prototype.renderRowContents_ = function(row, token, node) {
  node.innerHTML = goog.string.htmlEscape(row.data.toString())
};
goog.ui.ac.Renderer.prototype.hiliteMatchingText_ = function(node, tokenOrArray) {
  if(node.nodeType == goog.dom.NodeType.TEXT) {
    var rest = null;
    if(goog.isArray(tokenOrArray) && tokenOrArray.length > 1 && !this.highlightAllTokens_) {
      rest = goog.array.slice(tokenOrArray, 1)
    }
    var token = this.getTokenRegExp_(tokenOrArray);
    if(token.length == 0) {
      return
    }
    var text = node.nodeValue;
    var re = this.matchWordBoundary_ ? new RegExp("([\\s\\S]*?)\\b(" + token + ")", "gi") : new RegExp("([\\s\\S]*?)(" + token + ")", "gi");
    var textNodes = [];
    var lastIndex = 0;
    var match = re.exec(text);
    var numMatches = 0;
    while(match) {
      numMatches++;
      textNodes.push(match[1]);
      textNodes.push(match[2]);
      lastIndex = re.lastIndex;
      match = re.exec(text)
    }
    textNodes.push(text.substring(lastIndex));
    if(textNodes.length > 1) {
      var maxNumToBold = !this.highlightAllTokens_ ? 1 : numMatches;
      for(var i = 0;i < maxNumToBold;i++) {
        var idx = 2 * i;
        node.nodeValue = textNodes[idx];
        var boldTag = this.dom_.createElement("b");
        boldTag.className = this.highlightedClassName;
        this.dom_.appendChild(boldTag, this.dom_.createTextNode(textNodes[idx + 1]));
        boldTag = node.parentNode.insertBefore(boldTag, node.nextSibling);
        node.parentNode.insertBefore(this.dom_.createTextNode(""), boldTag.nextSibling);
        node = boldTag.nextSibling
      }
      var remainingTextNodes = goog.array.slice(textNodes, maxNumToBold * 2);
      node.nodeValue = remainingTextNodes.join("")
    }else {
      if(rest) {
        this.hiliteMatchingText_(node, rest)
      }
    }
  }else {
    var child = node.firstChild;
    while(child) {
      var nextChild = child.nextSibling;
      this.hiliteMatchingText_(child, tokenOrArray);
      child = nextChild
    }
  }
};
goog.ui.ac.Renderer.prototype.getTokenRegExp_ = function(tokenOrArray) {
  var token = "";
  if(!tokenOrArray) {
    return token
  }
  if(goog.isArray(tokenOrArray)) {
    tokenOrArray = goog.array.filter(tokenOrArray, function(str) {
      return!goog.string.isEmptySafe(str)
    })
  }
  if(this.highlightAllTokens_) {
    if(goog.isArray(tokenOrArray)) {
      var tokenArray = goog.array.map(tokenOrArray, goog.string.regExpEscape);
      token = tokenArray.join("|")
    }else {
      token = goog.string.collapseWhitespace(tokenOrArray);
      token = goog.string.regExpEscape(token);
      token = token.replace(/ /g, "|")
    }
  }else {
    if(goog.isArray(tokenOrArray)) {
      token = tokenOrArray.length > 0 ? goog.string.regExpEscape(tokenOrArray[0]) : ""
    }else {
      if(!/^\W/.test(tokenOrArray)) {
        token = goog.string.regExpEscape(tokenOrArray)
      }
    }
  }
  return token
};
goog.ui.ac.Renderer.prototype.renderRowHtml = function(row, token) {
  var node = this.dom_.createDom("div", {className:this.rowClassName, id:goog.ui.IdGenerator.getInstance().getNextUniqueId()});
  goog.a11y.aria.setRole(node, goog.a11y.aria.Role.OPTION);
  if(this.customRenderer_ && this.customRenderer_.renderRow) {
    this.customRenderer_.renderRow(row, token, node)
  }else {
    this.renderRowContents_(row, token, node)
  }
  if(token && this.useStandardHighlighting_) {
    this.hiliteMatchingText_(node, token)
  }
  goog.dom.classes.add(node, this.rowClassName);
  this.rowDivs_.push(node);
  return node
};
goog.ui.ac.Renderer.prototype.getRowFromEventTarget_ = function(et) {
  while(et && et != this.element_ && !goog.dom.classes.has(et, this.rowClassName)) {
    et = (et.parentNode)
  }
  return et ? goog.array.indexOf(this.rowDivs_, et) : -1
};
goog.ui.ac.Renderer.prototype.handleClick_ = function(e) {
  var index = this.getRowFromEventTarget_((e.target));
  if(index >= 0) {
    this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.SELECT, row:this.rows_[index].id})
  }
  e.stopPropagation()
};
goog.ui.ac.Renderer.prototype.handleMouseDown_ = function(e) {
  e.stopPropagation();
  e.preventDefault()
};
goog.ui.ac.Renderer.prototype.handleMouseOver_ = function(e) {
  var index = this.getRowFromEventTarget_((e.target));
  if(index >= 0) {
    if(goog.now() - this.startRenderingRows_ < goog.ui.ac.Renderer.DELAY_BEFORE_MOUSEOVER) {
      return
    }
    this.dispatchEvent({type:goog.ui.ac.AutoComplete.EventType.HILITE, row:this.rows_[index].id})
  }
};
goog.ui.ac.Renderer.CustomRenderer = function() {
};
goog.ui.ac.Renderer.CustomRenderer.prototype.render = function(renderer, element, rows, token) {
};
goog.ui.ac.Renderer.CustomRenderer.prototype.renderRow = function(row, token, node) {
};
goog.provide("fmi.metolib");
"use strict";
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lodash is required for fi.fmi.metoclient.metolib.Utils!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
fi.fmi.metoclient.metolib.Utils = function() {
  (function() {
    var method;
    var noop = function() {
    };
    var methods = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"];
    var length = methods.length;
    var console = window.console = window.console || {};
    while(length--) {
      method = methods[length];
      if(!console[method]) {
        console[method] = noop
      }
    }
  })();
  (function() {
    if(!jQuery.browser) {
      var matched, browser;
      jQuery.uaMatch = function(ua) {
        ua = ua.toLowerCase();
        var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
        return{browser:match[1] || "", version:match[2] || "0"}
      };
      matched = jQuery.uaMatch(navigator.userAgent);
      browser = {};
      if(matched.browser) {
        browser[matched.browser] = true;
        browser.version = matched.version
      }
      if(browser.chrome) {
        browser.webkit = true
      }else {
        if(browser.webkit) {
          browser.safari = true
        }
      }
      jQuery.browser = browser
    }
  })();
  (function() {
    if(window.XDomainRequest) {
      jQuery.ajaxTransport(function(s) {
        if(s.crossDomain && s.async) {
          if(s.timeout) {
            s.xdrTimeout = s.timeout;
            delete s.timeout
          }
          var xdr;
          return{send:function(_, complete) {
            function callback(status, statusText, responses, responseHeaders) {
              xdr.onload = xdr.onerror = xdr.ontimeout = jQuery.noop;
              xdr = undefined;
              complete(status, statusText, responses, responseHeaders)
            }
            xdr = new XDomainRequest;
            xdr.onload = function() {
              callback(200, "OK", {text:xdr.responseText}, "Content-Type: " + xdr.contentType)
            };
            xdr.onerror = function() {
              callback(404, "Not Found")
            };
            xdr.onprogress = jQuery.noop;
            xdr.ontimeout = function() {
              callback(0, "timeout")
            };
            xdr.timeout = s.xdrTimeout || Number.MAX_VALUE;
            xdr.open(s.type, s.url);
            xdr.send(s.hasContent && s.data || null)
          }, abort:function() {
            if(xdr) {
              xdr.onerror = jQuery.noop;
              xdr.abort()
            }
          }}
        }
      })
    }
  })();
  (function() {
    if(!Date.prototype.toISOString) {
      if(!Date.prototype.toJSON) {
        Date.prototype.toJSON = function(key) {
          var pad = function(n) {
            return n < 10 ? "0" + n : n
          };
          return this.getUTCFullYear() + "-" + pad(this.getUTCMonth() + 1) + "-" + pad(this.getUTCDate()) + "T" + pad(this.getUTCHours()) + ":" + pad(this.getUTCMinutes()) + ":" + pad(this.getUTCSeconds()) + "Z"
        }
      }
      Date.prototype.toISOString = Date.prototype.toJSON
    }
  })();
  function objectLength(object) {
    var length = 0;
    if(object) {
      if(_.isFunction(Object.keys)) {
        length = Object.keys(object).length
      }else {
        for(var key in object) {
          if(object.hasOwnProperty(key)) {
            ++length
          }
        }
      }
    }
    return length
  }
  return{objectLength:function(object) {
    return objectLength(object)
  }, encodeUriComponent:function(str) {
    return str ? encodeURIComponent(str) : str
  }, encodeUri:function(str) {
    return str ? encodeURI(str) : str
  }, sortStringArray:function(strings, createCopy) {
    var sorted;
    if(strings && _.isArray(strings)) {
      if(createCopy) {
        sorted = [];
        _.each(strings, function(element) {
          sorted.push(element)
        })
      }else {
        sorted = strings
      }
      sorted.sort(function(a, b) {
        var ret = 0;
        var strA = a.toLowerCase();
        var strB = b.toLowerCase();
        if(strA < strB) {
          ret = -1
        }else {
          if(strA > strB) {
            ret = 1
          }
        }
        return ret
      })
    }
    return sorted
  }}
}();
if("undefined" === typeof jQuery || !jQuery) {
  throw"ERROR: jQuery is required for fi.fmi.metoclient.metolib.WfsRequestParser!";
}
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lodash is required for fi.fmi.metoclient.metolib.WfsRequestParser!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
if("undefined" === typeof fi.fmi.metoclient.metolib.Utils || !fi.fmi.metoclient.metolib.Utils) {
  throw"ERROR: fi.fmi.metoclient.metolib.Utils is required for fi.fmi.metoclient.metolib.WfsRequestParser!";
}
fi.fmi.metoclient.metolib.WfsRequestParser = function() {
  var myConstants = {REGEX_WHITE_SPACE:/\s+/, EPOCH_TO_MS:1E3, MIN_TO_MS:60 * 1E3, HTTP_METHOD:"GET", DATA_TYPE:"xml", URL_QUERY_PREFIX_BEGIN:"?", URL_QUERY_PREFIX_AND:"\x26", URL_QUERY_FIELD_VALUE_DELIMITER:"\x3d", REQUEST_GET_FEATURE:"request\x3dgetFeature", REQUEST_STORED_QUERY_ID:"\x26storedquery_id\x3d", REQUEST_PARAMETERS:"\x26parameters\x3d", REQUEST_BEGIN:"\x26starttime\x3d", REQUEST_END:"\x26endtime\x3d", REQUEST_TIMESTEP:"\x26timestep\x3d", REQUEST_GEOID:"\x26geoid\x3d", REQUEST_WMO:"\x26wmo\x3d", 
  REQUEST_FMISID:"\x26fmisid\x3d", REQUEST_PLACE:"\x26place\x3d", REQUEST_BBOX:"\x26bbox\x3d", REQUEST_CRS:"\x26crs\x3d", XML_WFS_FEATURE_COLLECTION:"wfs\\:FeatureCollection, FeatureCollection", XML_WFS_MEMBER:"wfs\\:member, member", XML_OMSO_POINT_TIME_SERIES_OBSERVATION:"omso\\:PointTimeSeriesObservation, PointTimeSeriesObservation", XML_OMSO_GRID_SERIES_OBSERVATION:"omso\\:GridSeriesObservation, GridSeriesObservation", XML_OM_PHENOMENON_TIME:"om\\:phenomenonTime, phenomenonTime", XML_GML_TIME_PERIOD:"gml\\:TimePeriod, TimePeriod", 
  XML_GML_BEGIN_POSITION:"gml\\:beginPosition, beginPosition", XML_GML_END_POSITION:"gml\\:endPosition, endPosition", XML_OM_OBSERVED_PROPERTY:"om\\:observedProperty, observedProperty", XML_OM_FEATURE_OF_INTEREST:"om\\:featureOfInterest, featureOfInterest", XML_SAMS_SF_SPATIAL_SAMPLING_FEATURE:"sams\\:SF_SpatialSamplingFeature, SF_SpatialSamplingFeature", XML_SAM_SAMPLED_FEATURE:"sam\\:sampledFeature, sampledFeature", XML_TARGET_LOCATION_COLLECTION:"target\\:LocationCollection, LocationCollection", 
  XML_TARGET_MEMBER:"target\\:member, member", XML_TARGET_LOCATION:"target\\:Location, Location", XML_GML_IDENTIFIER:"gml\\:identifier, identifier", XML_TARGET_REGION:"target\\:region, region", XML_TARGET_COUNTRY:"target\\:country, country", XML_TARGET_TIMEZONE:"target\\:timezone, timezone", XML_TARGET_REPRESENTATIVE_POINT:"target\\:representativePoint, representativePoint", XML_SAMS_SHAPE:"sams\\:shape, shape", XML_GML_MULTI_POINT:"gml\\:MultiPoint, MultiPoint", XML_GML_POINT_MEMBER:"gml\\:pointMember, pointMember", 
  XML_GML_POINT_MEMBERS:"gml\\:pointMembers, pointMembers", XML_GML_POINT:"gml\\:Point, Point", XML_GML_NAME:"gml\\:name, name", XML_GML_POS:"gml\\:pos, pos", XML_OM_RESULT:"om\\:result, result", XML_GMLCOV_MULTI_POINT_COVERAGE:"gmlcov\\:MultiPointCoverage, MultiPointCoverage", XML_GML_DOMAIN_SET:"gml\\:domainSet, domainSet", XML_GMLCOV_SIMPLE_MULTI_POINT:"gmlcov\\:SimpleMultiPoint, SimpleMultiPoint", XML_GMLCOV_POSITIONS:"gmlcov\\:positions, positions", XML_GML_RANGE_SET:"gml\\:rangeSet, rangeSet", 
  XML_GML_DATA_BLOCK:"gml\\:DataBlock, DataBlock", XML_GML_DOUBLE_OR_NIL_REASON_TUPLE_LIST:"gml\\:doubleOrNilReasonTupleList, doubleOrNilReasonTupleList", XML_GMLCOV_RANGE_TYPE:"gmlcov\\:rangeType, rangeType", XML_SWE_DATA_RECORD:"swe\\:DataRecord, DataRecord", XML_SWE_FIELD:"swe\\:field, field", XML_COMPOSITE_OBSERVABLE_PROPERTY:"CompositeObservableProperty", XML_COMPONENT:"component", XML_OBSERVABLE_PROPERTY:"ObservableProperty", XML_LABEL:"label", XML_BASE_PHENOMENON:"basePhenomenon", XML_UOM:"uom", 
  XML_STATISTICAL_MEASURE:"statisticalMeasure", XML_STATISTICAL_MEASURE_INNER:"StatisticalMeasure", XML_STATISTICAL_FUNCTION:"statisticalFunction", XML_AGGREGATION_TIME_PERIOD:"aggregationTimePeriod", XML_ATTR_NAME:"name", XML_ATTR_SRS_DIMENSION:"srsDimension", XML_ATTR_XLINK_HREF:"xlink:href", XML_ATTR_GML_ID:"gml:id", XML_ATTR_CODE_SPACE:"codeSpace", XML_ATTR_CODE_SPACE_NAME:"http://xml.fmi.fi/namespace/locationcode/name", XML_ATTR_CODE_SPACE_WMO:"http://xml.fmi.fi/namespace/locationcode/wmo", 
  XML_ATTR_CODE_SPACE_GEOID:"http://xml.fmi.fi/namespace/locationcode/geoid", XML_ATTR_CODE_SPACE_FMISID:"http://xml.fmi.fi/namespace/stationcode/fmisid", XML_ATTR_UOM:"uom", XML_REF_PREFIX:"#", XML_EXCEPTION_REPORT:"ExceptionReport", XML_EXCEPTION:"Exception", XML_ATTR_EXCEPTION_CODE:"exceptionCode", XML_EXCEPTION_TEXT:"ExceptionText", KEY_ERROR_CODE:"errorCode", KEY_ERROR_TEXT:"errorText", PROPERTY_OBJECT_EMPTY:{label:"", unit:"", phenomenon:"", statisticalFunction:"", statisticalPeriod:""}};
  function parseXml(xml, errors, callback) {
    try {
      var parsedContent = {info:{begin:undefined, end:undefined}, locations:[], positions:{}, gmlcovPositions:{srsDimension:undefined, timeIndex:undefined, contents:[]}, data:[], parameters:[], properties:{}};
      var asyncCounter = 0;
      var incAsyncCounter = function() {
        ++asyncCounter
      };
      var parseXmlCallback = function() {
        if(asyncCounter > 0) {
          --asyncCounter
        }
        if(0 === asyncCounter) {
          asyncCounter = -1;
          handleCallback(callback, finalizeContent(parsedContent, errors), errors)
        }
      };
      parseFeatureCollection(xml, parsedContent, incAsyncCounter, parseXmlCallback, errors);
      if(0 === asyncCounter) {
        parseXmlCallback()
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Error during synchronous data parsing flow!")
      }
      asyncCounter = -1;
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error);
      handleCallback(callback, undefined, errors)
    }
  }
  function finalizeContent(parsedContent, errors) {
    var result = {info:parsedContent.info, parameters:parsedContent.parameters, properties:parsedContent.properties, locations:[]};
    try {
      var srsDimension = parsedContent.gmlcovPositions.srsDimension || 0;
      var gmlcovPositionsContents = parsedContent.gmlcovPositions.contents || [];
      var parametersLength = parsedContent.parameters.length;
      if(srsDimension > 0 && parsedContent.data.length === parametersLength * (gmlcovPositionsContents.length / srsDimension) && parsedContent.locations.length === fi.fmi.metoclient.metolib.Utils.objectLength(parsedContent.positions)) {
        for(var ind = 0;ind < parsedContent.locations.length;++ind) {
          var contentLocation = parsedContent.locations[ind];
          var refId = contentLocation.pointRef;
          var errorStr = "ERROR: Location and position data do not match!";
          if(refId) {
            var position = parsedContent.positions[refId];
            if(position) {
              result.locations.push({info:{id:contentLocation.id || "", geoid:contentLocation.geoid || "", wmo:contentLocation.wmo || "", fmisid:contentLocation.fmisid || "", name:contentLocation.name || position.name || "", region:contentLocation.region || "", country:contentLocation.country || "", timezone:contentLocation.timezone || "", position:position.position || ""}})
            }else {
              throw errorStr;
            }
          }else {
            throw errorStr;
          }
        }
        for(var i = 0;i < gmlcovPositionsContents.length;i += srsDimension) {
          var resultObject = {time:parseInt(gmlcovPositionsContents[i + srsDimension - 1], 10) * myConstants.EPOCH_TO_MS, values:{}};
          for(var j = 0;j < result.parameters.length;++j) {
            var parameter = result.parameters[j];
            if(parameter) {
              resultObject.values[parameter] = parseFloat(parsedContent.data[i / srsDimension * parametersLength + j]);
              if(!result.properties[parameter]) {
                if("undefined" !== typeof console && console) {
                  console.error("ERROR: Server has not provided properties for request parameter!")
                }
                result.properties[parameter] = myConstants.PROPERTY_OBJECT_EMPTY
              }
            }
          }
          for(var k = 0;k < result.locations.length;++k) {
            var matchCount = 0;
            var location = result.locations[k];
            for(var m = 0;m < location.info.position.length;++m) {
              if(location.info.position[m] === gmlcovPositionsContents[i + m]) {
                ++matchCount
              }else {
                break
              }
            }
            if(location.info.position && matchCount === location.info.position.length) {
              if(!location.timeValuePairs) {
                location.timeValuePairs = []
              }
              location.timeValuePairs.push(resultObject);
              break
            }
          }
        }
        handleLocationDuplicates(result.locations)
      }else {
        if(0 !== parsedContent.data.length || 0 !== gmlcovPositionsContents.length) {
          throw"ERROR: Parsed lists do not match!";
        }
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Could not finalize data!")
      }
      result = undefined;
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error)
    }
    return result
  }
  function handleLocationDuplicates(locations) {
    if(locations && locations.length) {
      for(var i = 0;i < locations.length - 1;++i) {
        var currentLocation = locations[i];
        var duplicates = [];
        for(var j = i + 1;j < locations.length;++j) {
          var compLocation = locations[j];
          if(currentLocation.info.position.length === compLocation.info.position.length) {
            var count = currentLocation.info.position.length;
            var match = true;
            for(var k = 0;k < count;++k) {
              if(currentLocation.info.position[k] !== compLocation.info.position[k]) {
                match = false;
                break
              }
            }
            if(match) {
              duplicates.push(compLocation)
            }
          }
        }
        if(duplicates.length) {
          var currentTimeValuePairs = currentLocation.timeValuePairs;
          var correctTimeValuePairsLength = currentTimeValuePairs.length / (duplicates.length + 1);
          for(var ind = 0;ind < duplicates.length;++ind) {
            duplicates[ind].timeValuePairs = currentTimeValuePairs.splice(correctTimeValuePairsLength, correctTimeValuePairsLength)
          }
        }
      }
    }
  }
  function parseFeatureCollection(xmlElement, container, asyncStarted, asyncCallback, errors) {
    if(xmlElement) {
      if(!parseExceptionReport(xmlElement, errors)) {
        jQuery(xmlElement).children(myConstants.XML_WFS_FEATURE_COLLECTION).each(function() {
          parseWfsMember(this, container, asyncStarted, asyncCallback, errors)
        })
      }
    }
  }
  function parseWfsMember(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_WFS_MEMBER).each(function() {
      parseOmsoPointTimeSeriesObservation(this, container, asyncStarted, asyncCallback, errors);
      parseOmsoGridSeriesObservation(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseOmsoPointTimeSeriesObservation(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OMSO_POINT_TIME_SERIES_OBSERVATION).each(function() {
      parseOmPhenomenonTime(this, container.info, asyncStarted, asyncCallback, errors);
      parseOmObservedProperty(this, container.properties, asyncStarted, asyncCallback, errors);
      parseOmFeatureOfInterest(this, container, asyncStarted, asyncCallback, errors);
      parseOmResult(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseOmsoGridSeriesObservation(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OMSO_GRID_SERIES_OBSERVATION).each(function() {
      parseOmPhenomenonTime(this, container.info, asyncStarted, asyncCallback, errors);
      parseOmObservedProperty(this, container.properties, asyncStarted, asyncCallback, errors);
      parseOmFeatureOfInterest(this, container, asyncStarted, asyncCallback, errors);
      parseOmResult(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseOmPhenomenonTime(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_PHENOMENON_TIME).each(function() {
      parseGmlTimePeriod(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlTimePeriod(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_TIME_PERIOD).each(function() {
      parseGmlBeginPosition(this, container, asyncStarted, asyncCallback, errors);
      parseGmlEndPosition(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlBeginPosition(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_BEGIN_POSITION).each(function() {
      var begin = jQuery.trim(jQuery(this).text());
      if(begin) {
        container.begin = new Date(begin)
      }
    })
  }
  function parseGmlEndPosition(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_END_POSITION).each(function() {
      var end = jQuery.trim(jQuery(this).text());
      if(end) {
        container.end = new Date(end)
      }
    })
  }
  function parseOmObservedProperty(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_OBSERVED_PROPERTY).each(function() {
      var url = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_XLINK_HREF));
      if(url) {
        requestXml(url, errors, function(xml, errorContainer) {
          if(!parseExceptionReport(xml, errors)) {
            if(xml) {
              parseCompositeObservableProperty(xml, container, asyncStarted, asyncCallback, errors);
              parseObservableProperty(xml, container, asyncStarted, asyncCallback, errors)
            }
          }
          asyncCallback()
        });
        asyncStarted()
      }
    })
  }
  function parseOmFeatureOfInterest(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_FEATURE_OF_INTEREST).each(function() {
      parseSamsSfSpatialSamplingFeature(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSamsSfSpatialSamplingFeature(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SAMS_SF_SPATIAL_SAMPLING_FEATURE).each(function() {
      parseSamSampledFeature(this, container.locations, asyncStarted, asyncCallback, errors);
      parseSamsShape(this, container.positions, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSamSampledFeature(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SAM_SAMPLED_FEATURE).each(function() {
      parseTargetLocationCollection(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseTargetLocationCollection(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_LOCATION_COLLECTION).each(function() {
      parseTargetMember(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseTargetMember(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_MEMBER).each(function() {
      parseTargetLocation(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseTargetLocation(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_LOCATION).each(function() {
      var location = {};
      parseGmlIdentifier(this, location, asyncStarted, asyncCallback, errors);
      parseGmlNameCodeSpace(this, location, asyncStarted, asyncCallback, errors);
      parseTargetRegion(this, location, asyncStarted, asyncCallback, errors);
      parseTargetCountry(this, location, asyncStarted, asyncCallback, errors);
      parseTargetTimezone(this, location, asyncStarted, asyncCallback, errors);
      parseTargetRepresentativePoint(this, location, asyncStarted, asyncCallback, errors);
      container.push(location)
    })
  }
  function parseGmlIdentifier(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_IDENTIFIER).each(function() {
      container.id = jQuery.trim(jQuery(this).text());
      var codeSpaceValue = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_CODE_SPACE));
      if(myConstants.XML_ATTR_CODE_SPACE_FMISID === codeSpaceValue) {
        container.fmisid = jQuery.trim(jQuery(this).text())
      }
    })
  }
  function parseGmlNameCodeSpace(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_NAME).each(function() {
      var codeSpaceValue = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_CODE_SPACE));
      if(myConstants.XML_ATTR_CODE_SPACE_NAME === codeSpaceValue) {
        container.name = jQuery.trim(jQuery(this).text())
      }else {
        if(myConstants.XML_ATTR_CODE_SPACE_WMO === codeSpaceValue) {
          container.wmo = jQuery.trim(jQuery(this).text())
        }else {
          if(myConstants.XML_ATTR_CODE_SPACE_GEOID === codeSpaceValue) {
            container.geoid = jQuery.trim(jQuery(this).text())
          }
        }
      }
    })
  }
  function parseTargetRegion(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_REGION).each(function() {
      container.region = jQuery.trim(jQuery(this).text())
    })
  }
  function parseTargetCountry(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_COUNTRY).each(function() {
      container.country = jQuery.trim(jQuery(this).text())
    })
  }
  function parseTargetTimezone(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_TIMEZONE).each(function() {
      container.timezone = jQuery.trim(jQuery(this).text())
    })
  }
  function parseTargetRepresentativePoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_TARGET_REPRESENTATIVE_POINT).each(function() {
      container.pointRef = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_XLINK_HREF));
      if(container.pointRef && container.pointRef.charAt(0) === myConstants.XML_REF_PREFIX) {
        container.pointRef = container.pointRef.slice(1)
      }
    })
  }
  function parseSamsShape(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SAMS_SHAPE).each(function() {
      parseGmlMultiPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlPoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POINT).each(function() {
      var that = this;
      var id = jQuery.trim(jQuery(that).attr(myConstants.XML_ATTR_GML_ID));
      if(id) {
        if(!container[id]) {
          container[id] = {name:"", position:[]}
        }
        var position = container[id];
        parseGmlName(this, position, asyncStarted, asyncCallback, errors);
        parseGmlPos(this, position.position, asyncStarted, asyncCallback, errors)
      }
    })
  }
  function parseGmlMultiPoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_MULTI_POINT).each(function() {
      parseGmlPointMember(this, container, asyncStarted, asyncCallback, errors);
      parseGmlPointMembers(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlPointMember(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POINT_MEMBER).each(function() {
      parseGmlPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlPointMembers(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POINT_MEMBERS).each(function() {
      parseGmlPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlName(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_NAME).each(function() {
      container.name = jQuery.trim(jQuery(this).text())
    })
  }
  function parseGmlPos(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_POS).each(function() {
      var content = jQuery.trim(jQuery(this).text());
      if(content) {
        container.push.apply(container, content.split(myConstants.REGEX_WHITE_SPACE))
      }
    })
  }
  function parseOmResult(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OM_RESULT).each(function() {
      parseGmlcovMultiPointCoverage(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovMultiPointCoverage(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_MULTI_POINT_COVERAGE).each(function() {
      parseGmlDomainSet(this, container, asyncStarted, asyncCallback, errors);
      parseGmlRangeSet(this, container, asyncStarted, asyncCallback, errors);
      parseGmlcovRangeType(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovRangeType(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_RANGE_TYPE).each(function() {
      parseSweDataRecord(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSweDataRecord(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SWE_DATA_RECORD).each(function() {
      parseSweField(this, container.parameters, asyncStarted, asyncCallback, errors)
    })
  }
  function parseSweField(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_SWE_FIELD).each(function() {
      var nameAttr = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_NAME));
      if(nameAttr) {
        container.push(nameAttr)
      }
    })
  }
  function parseGmlDomainSet(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_DOMAIN_SET).each(function() {
      parseGmlcovSimpleMultiPoint(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovSimpleMultiPoint(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_SIMPLE_MULTI_POINT).each(function() {
      var srsDimension = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_SRS_DIMENSION));
      if(srsDimension) {
        srsDimension = parseInt(srsDimension, 10);
        if(srsDimension > 0) {
          container.gmlcovPositions.srsDimension = srsDimension;
          container.gmlcovPositions.timeIndex = srsDimension - 1
        }
      }
      parseGmlcovPositions(this, container.gmlcovPositions.contents, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlcovPositions(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GMLCOV_POSITIONS).each(function() {
      var content = jQuery.trim(jQuery(this).text());
      if(content) {
        container.push.apply(container, content.split(myConstants.REGEX_WHITE_SPACE))
      }
    })
  }
  function parseGmlRangeSet(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_RANGE_SET).each(function() {
      parseGmlDataBlock(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlDataBlock(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_DATA_BLOCK).each(function() {
      parseGmlDoubleOrNilReasonTupleList(this, container.data, asyncStarted, asyncCallback, errors)
    })
  }
  function parseGmlDoubleOrNilReasonTupleList(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_GML_DOUBLE_OR_NIL_REASON_TUPLE_LIST).each(function() {
      var content = jQuery.trim(jQuery(this).text());
      if(content) {
        container.push.apply(container, content.split(myConstants.REGEX_WHITE_SPACE))
      }
    })
  }
  function parseExceptionReport(xmlElement, errors) {
    var exceptionFound = false;
    try {
      if(xmlElement) {
        jQuery(xmlElement).children(myConstants.XML_EXCEPTION_REPORT).each(function() {
          exceptionFound = true;
          var error = {};
          errors.push(error);
          parseException(this, error)
        })
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Error while parsing exception data!")
      }
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error)
    }
    return exceptionFound
  }
  function parseException(xmlElement, error) {
    jQuery(xmlElement).children(myConstants.XML_EXCEPTION).each(function() {
      error[myConstants.KEY_ERROR_CODE] = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_EXCEPTION_CODE));
      parseExceptionText(this, error)
    })
  }
  function parseExceptionText(xmlElement, error) {
    jQuery(xmlElement).children(myConstants.XML_EXCEPTION_TEXT).each(function() {
      error[myConstants.KEY_ERROR_TEXT] = jQuery.trim(jQuery(this).text())
    })
  }
  function parseCompositeObservableProperty(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_COMPOSITE_OBSERVABLE_PROPERTY).each(function() {
      parseComponent(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseComponent(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_COMPONENT).each(function() {
      parseObservableProperty(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseObservableProperty(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_OBSERVABLE_PROPERTY).each(function() {
      var property = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_GML_ID));
      if(property) {
        var propertyObject = _.clone(myConstants.PROPERTY_OBJECT_EMPTY);
        parseLabel(this, propertyObject, asyncStarted, asyncCallback, errors);
        parseBasePhenomenon(this, propertyObject, asyncStarted, asyncCallback, errors);
        parseUom(this, propertyObject, asyncStarted, asyncCallback, errors);
        parseStatisticalMeasure(this, propertyObject, asyncStarted, asyncCallback, errors);
        container[property] = propertyObject
      }
    })
  }
  function parseLabel(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_LABEL).each(function() {
      container.label = jQuery.trim(jQuery(this).text())
    })
  }
  function parseBasePhenomenon(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_BASE_PHENOMENON).each(function() {
      container.phenomenon = jQuery.trim(jQuery(this).text())
    })
  }
  function parseUom(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_UOM).each(function() {
      container.unit = jQuery.trim(jQuery(this).attr(myConstants.XML_ATTR_UOM))
    })
  }
  function parseStatisticalMeasure(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_STATISTICAL_MEASURE).each(function() {
      parseStatisticalMeasureInner(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseStatisticalMeasureInner(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_STATISTICAL_MEASURE_INNER).each(function() {
      parseStatisticalFunction(this, container, asyncStarted, asyncCallback, errors);
      parseAggregationTimePeriod(this, container, asyncStarted, asyncCallback, errors)
    })
  }
  function parseStatisticalFunction(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_STATISTICAL_FUNCTION).each(function() {
      container.statisticalFunction = jQuery.trim(jQuery(this).text())
    })
  }
  function parseAggregationTimePeriod(xmlElement, container, asyncStarted, asyncCallback, errors) {
    jQuery(xmlElement).children(myConstants.XML_AGGREGATION_TIME_PERIOD).each(function() {
      container.statisticalPeriod = jQuery.trim(jQuery(this).text())
    })
  }
  function handleCallback(callback, data, errors) {
    try {
      if(callback) {
        callback(data, errors)
      }
    }catch(e) {
      if("undefined" !== typeof console && console) {
        console.error("ERROR: Callback function error!");
        console.log(e);
        console.log(e.name);
        console.log(e.message);
        console.log(e.stack)
      }
    }
  }
  function requestXml(url, errors, callback) {
    setTimeout(function() {
      jQuery.ajax({type:myConstants.HTTP_METHOD, url:url, dataType:myConstants.DATA_TYPE, success:function(data) {
        handleCallback(callback, data, errors)
      }, error:function(jqXHR, textStatus, errorThrown) {
        var error = {};
        error[myConstants.KEY_ERROR_CODE] = jqXHR.status;
        error[myConstants.KEY_ERROR_TEXT] = errorThrown || textStatus;
        errors.push(error);
        handleCallback(callback, undefined, errors)
      }})
    }, 0)
  }
  function requestAndParseXml(url, callback) {
    var errorContainer = [];
    requestXml(url, errorContainer, function(xml, errors) {
      parseXml(xml, errors, callback)
    })
  }
  function finalizeDataValues(data, pairs, target) {
    if(data && data.parameters && pairs && target) {
      for(var i = 0;i < data.parameters.length;++i) {
        var key = data.parameters[i];
        if(key) {
          var finalizedValues = {property:data.properties[key], timeValuePairs:[]};
          for(var j = 0;j < pairs.length;++j) {
            var pair = pairs[j];
            finalizedValues.timeValuePairs.push({time:pair.time, value:pair.values[key]})
          }
          target[key] = finalizedValues
        }
      }
    }
  }
  function dataCallback(callback, data, errors) {
    var finalizedData;
    try {
      if(data && data.parameters && data.properties) {
        finalizedData = {info:data.info, properties:data.properties, locations:[]};
        if(data.locations && data.locations.length > 0) {
          var locations = data.locations;
          for(var i = 0;i < locations.length;++i) {
            var location = locations[i];
            var locationObject = {info:location.info, data:{}};
            finalizeDataValues(data, location.timeValuePairs, locationObject.data);
            finalizedData.locations.push(locationObject)
          }
        }
      }
    }catch(e) {
      var errorString = "ERROR: Could not finalize data!";
      if("undefined" !== typeof console && console) {
        console.error(errorString)
      }
      finalizedData = undefined;
      var error = {};
      error[myConstants.KEY_ERROR_TEXT] = e.toString();
      errors.push(error)
    }
    callback(finalizedData, errors)
  }
  function handleQueryExtension(queryExtension) {
    var extension = "";
    if(queryExtension) {
      for(var key in queryExtension) {
        if(queryExtension.hasOwnProperty(key)) {
          extension += fi.fmi.metoclient.metolib.Utils.encodeUriComponent(key);
          extension += myConstants.URL_QUERY_FIELD_VALUE_DELIMITER;
          extension += fi.fmi.metoclient.metolib.Utils.encodeUriComponent(queryExtension[key] || "")
        }
      }
      if(extension) {
        extension = myConstants.URL_QUERY_PREFIX_AND + extension
      }
    }
    return extension
  }
  function getParsedData(url, storedQueryId, requestParameter, begin, end, timestep, numOfTimesteps, denyTimeAdjusting, geoid, wmo, fmisid, sites, bbox, crs, queryExtension, callback) {
    if(!(begin instanceof Date) && !isNaN(begin)) {
      begin = new Date(begin)
    }
    if(!(end instanceof Date) && !isNaN(end)) {
      end = new Date(end)
    }
    if(requestParameter && _.isArray(requestParameter)) {
      requestParameter = requestParameter.join()
    }
    if((undefined === timestep || null === timestep) && numOfTimesteps && numOfTimesteps > 0 && begin instanceof Date && end instanceof Date) {
      timestep = Math.round((end.getTime() - begin.getTime()) / numOfTimesteps)
    }
    var urlCheck = url && _.isString(url);
    var storedQueryCheck = storedQueryId && _.isString(storedQueryId);
    var parameterCheck = requestParameter && _.isString(requestParameter);
    var periodCheck = begin instanceof Date && end instanceof Date && begin.getTime() <= end.getTime() && (!timestep || _.isNumber(timestep));
    var geoidCheck = _.isNumber(geoid) || geoid && _.isString(geoid) || _.isArray(geoid) && geoid.length;
    var wmoCheck = _.isNumber(wmo) || wmo && _.isString(wmo) || _.isArray(wmo) && wmo.length;
    var fmisidCheck = _.isNumber(fmisid) || fmisid && _.isString(fmisid) || _.isArray(fmisid) && fmisid.length;
    var sitesCheck = sites && _.isString(sites) || _.isArray(sites) && sites.length;
    var bboxCheck = bbox && _.isString(bbox);
    var locationGivenCheck = geoidCheck || wmoCheck || fmisidCheck || sitesCheck || bboxCheck;
    var crsCheck = !crs || _.isString(crs);
    if(urlCheck && storedQueryCheck && parameterCheck && periodCheck && locationGivenCheck && crsCheck) {
      if(!denyTimeAdjusting) {
        begin.setTime(adjustBeginTime(timestep, begin).getTime());
        end.setTime(adjustEndTime(timestep, end, begin).getTime())
      }
      var MS_REG = /\.\d+/;
      begin = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(begin.toISOString()).split(MS_REG).join("");
      end = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(end.toISOString()).split(MS_REG).join("");
      var timeStepParameter = "";
      var timestepMinutes = Math.floor(timestep / myConstants.MIN_TO_MS);
      if(timestepMinutes && timestepMinutes > 0) {
        timeStepParameter = myConstants.REQUEST_TIMESTEP + timestepMinutes
      }
      requestParameter = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(requestParameter);
      var ind;
      var geoidParameter = "";
      if(_.isNumber(geoid) || geoid && _.isString(geoid)) {
        geoid = [geoid]
      }
      if(_.isArray(geoid)) {
        for(ind = 0;ind < geoid.length;++ind) {
          var tmpGeoid = geoid[ind];
          if(_.isNumber(tmpGeoid) || tmpGeoid && _.isString(tmpGeoid)) {
            tmpGeoid = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(tmpGeoid);
            geoidParameter += myConstants.REQUEST_GEOID + tmpGeoid
          }
        }
      }
      var wmoParameter = "";
      if(_.isNumber(wmo) || wmo && _.isString(wmo)) {
        wmo = [wmo]
      }
      if(_.isArray(wmo)) {
        for(ind = 0;ind < wmo.length;++ind) {
          var tmpWmo = wmo[ind];
          if(_.isNumber(tmpWmo) || tmpWmo && _.isString(tmpWmo)) {
            tmpWmo = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(tmpWmo);
            wmoParameter += myConstants.REQUEST_WMO + tmpWmo
          }
        }
      }
      var fmisidParameter = "";
      if(_.isNumber(fmisid) || fmisid && _.isString(fmisid)) {
        fmisid = [fmisid]
      }
      if(_.isArray(fmisid)) {
        for(ind = 0;ind < fmisid.length;++ind) {
          var tmpFmisid = fmisid[ind];
          if(_.isNumber(tmpFmisid) || tmpFmisid && _.isString(tmpFmisid)) {
            tmpFmisid = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(tmpFmisid);
            fmisidParameter += myConstants.REQUEST_FMISID + tmpFmisid
          }
        }
      }
      var sitesParameter = "";
      if(sites) {
        if(_.isString(sites)) {
          sites = [sites]
        }
        for(ind = 0;ind < sites.length;++ind) {
          var place = sites[ind];
          if(place && _.isString(place)) {
            place = fi.fmi.metoclient.metolib.Utils.encodeUriComponent(place);
            sitesParameter += myConstants.REQUEST_PLACE + place
          }
        }
      }
      var bboxParameter = "";
      if(bbox) {
        bboxParameter = myConstants.REQUEST_BBOX + fi.fmi.metoclient.metolib.Utils.encodeUriComponent(bbox)
      }
      var crsParameter = "";
      if(crs) {
        crsParameter = myConstants.REQUEST_CRS + fi.fmi.metoclient.metolib.Utils.encodeUriComponent(crs)
      }
      var storedQueryIdParameter = myConstants.REQUEST_STORED_QUERY_ID + fi.fmi.metoclient.metolib.Utils.encodeUriComponent(storedQueryId);
      var urlQueryDelimiter = url.indexOf(myConstants.URL_QUERY_PREFIX_BEGIN) === -1 ? myConstants.URL_QUERY_PREFIX_BEGIN : myConstants.URL_QUERY_PREFIX_AND;
      if(url.length > 0 && (url.indexOf(myConstants.URL_QUERY_PREFIX_BEGIN) === url.length - 1 || url.indexOf(myConstants.URL_QUERY_PREFIX_AND) === url.length - 1)) {
        urlQueryDelimiter = ""
      }
      var urlQueryExtension = handleQueryExtension(queryExtension);
      var requestUrl = url + urlQueryDelimiter + myConstants.REQUEST_GET_FEATURE + storedQueryIdParameter + myConstants.REQUEST_PARAMETERS + requestParameter + myConstants.REQUEST_BEGIN + begin + myConstants.REQUEST_END + end + timeStepParameter + geoidParameter + wmoParameter + fmisidParameter + sitesParameter + bboxParameter + crsParameter + urlQueryExtension;
      requestAndParseXml(requestUrl, callback)
    }else {
      var errorStr = "ERROR: Wrong or missing information for the request!";
      if("undefined" !== typeof console && console) {
        console.error(errorStr)
      }
      throw errorStr;
    }
  }
  function adjustBeginTime(timestep, time) {
    var date;
    if(undefined !== time && null !== time) {
      date = time instanceof Date ? new Date(time.getTime()) : new Date(time);
      date.setMilliseconds(0);
      date.setSeconds(0);
      var timestepMinutes = !timestep ? undefined : Math.floor(timestep / myConstants.MIN_TO_MS);
      if(timestepMinutes) {
        var beginMinutes = date.getMinutes();
        beginMinutes -= beginMinutes % timestepMinutes;
        date.setMinutes(beginMinutes)
      }
    }
    return date
  }
  function adjustEndTime(timestep, end, begin) {
    var date;
    if(undefined !== begin && null !== begin && undefined !== end && null !== end) {
      date = end instanceof Date ? new Date(end.getTime()) : new Date(end);
      var beginDate = adjustBeginTime(timestep, begin);
      if(timestep) {
        var reminder = (date.getTime() - beginDate.getTime()) % timestep;
        if(reminder > 0) {
          date.setTime(date.getTime() + (timestep - reminder))
        }
      }
    }
    return date
  }
  function getData(options) {
    if(options && options.callback) {
      try {
        getParsedData(options.url, options.storedQueryId, options.requestParameter, options.begin, options.end, options.timestep, options.numOfTimesteps, options.denyTimeAdjusting, options.geoid, options.wmo, options.fmisid, options.sites, options.bbox, options.crs, options.queryExtension, function(data, errors) {
          dataCallback(options.callback, data, errors)
        })
      }catch(e) {
        setTimeout(function() {
          if("undefined" !== typeof console && console) {
            console.error("ERROR: Get data error!")
          }
          var error = {};
          error[myConstants.KEY_ERROR_TEXT] = e.toString();
          handleCallback(options.callback, undefined, [error])
        }, 0)
      }
    }else {
      var errorStr = "ERROR: Options object and callback function in it are mandatory!";
      if("undefined" !== typeof console && console) {
        console.error(errorStr)
      }
      throw errorStr;
    }
  }
  return{getData:getData, adjustBeginTime:adjustBeginTime, adjustEndTime:adjustEndTime}
}();
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lo-dash-underscore is required for fi.fmi.metoclient.metolib.SplitterCache!";
}
if("undefined" === typeof async || !async) {
  throw"ERROR: Async is required for fi.fmi.metoclient.metolib.SplitterCache!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
fi.fmi.metoclient.metolib.SplitterCache = function() {
  var checkTaskDef = function(taskDef) {
    var placeholder;
    var startNudge = 0;
    var endNudge = 0;
    if(!_.isObject(taskDef)) {
      throw"taskdef must be an object";
    }
    if(!_.isString(taskDef.service)) {
      throw"taskDef must contain a 'service' property of string type";
    }
    if(!_.isArray(taskDef.location)) {
      if(!_.isString(taskDef.location)) {
        throw"taskDef must contain a 'location' property of either an array or a string type";
      }else {
        placeholder = taskDef.location;
        taskDef.location = [];
        taskDef.location.push(placeholder)
      }
    }
    if(!_.isArray(taskDef.parameter)) {
      if(!_.isString(taskDef.parameter)) {
        throw"taskDef must contain a 'parameter' property of either an array or a string type";
      }else {
        placeholder = taskDef.parameter;
        taskDef.parameter = [];
        taskDef.parameter.push(placeholder)
      }
    }
    if(!_.isNumber(taskDef.resolution)) {
      throw"taskDef must contain a 'resolution' property of numeric type";
    }else {
      if(taskDef.resolution > 0.5) {
        taskDef.resolution = Math.round(taskDef.resolution)
      }else {
        throw"taskDef.resolution must be a positive integer";
      }
    }
    if(!_.isNumber(taskDef.start)) {
      throw"taskDef must contain a 'start' property of numeric type";
    }
    if(_.isNumber(taskDef.pointCount)) {
      if(taskDef.pointCount > 0) {
        taskDef.end = taskDef.start + (taskDef.pointCount - 1) * taskDef.resolution
      }else {
        throw"taskDef.pointCount must be greater than zero";
      }
    }else {
      if(_.isNumber(taskDef.end)) {
        if(taskDef.end < taskDef.start) {
          throw"'end' must be greater than or equal to 'start'";
        }
        endNudge = (taskDef.end - taskDef.start) % taskDef.resolution;
        if(endNudge !== 0) {
          taskDef.end = taskDef.end + (taskDef.resolution - endNudge)
        }
        taskDef.pointCount = (taskDef.end - taskDef.start) / taskDef.resolution + 1
      }else {
        throw"taskDef must contain either 'end' or 'pointCount' property of numeric type";
      }
    }
  };
  var arrayEqualsAnyOrder = function(arr1, arr2) {
    var i = 0;
    if(_.isArray(arr1) && _.isArray(arr2)) {
      if(arr1.length === arr2.length) {
        for(i = 0;i < arr1.length;i++) {
          if(_.indexOf(arr2, arr1[i]) === -1) {
            return false
          }
        }
        return true
      }else {
        return false
      }
    }else {
      if(arr1 === undefined || arr1 === null || arr2 === undefined || arr2 === null) {
        return false
      }else {
        return arr1 === arr2
      }
    }
  };
  var DataBlock = function() {
    var blockCounter = 0;
    var _constructor = function DataBlock(evtDispatcher) {
      var id = null;
      var fetchError = null;
      var fetcher = null;
      var data = null;
      var taskDef = null;
      var age = 0;
      var fetching = false;
      var fetched = false;
      var pinCount = 0;
      var waitingRecycling = false;
      var waitingMerging = false;
      var ready = false;
      var callbacks = [];
      var requestId = 0;
      var dispatcher = evtDispatcher;
      var thisBlock = this;
      function reset() {
        fetchError = null;
        fetcher = null;
        data = null;
        taskDef = null;
        age = 0;
        fetching = false;
        fetched = false;
        pinCount = 0;
        waitingRecycling = false;
        waitingMerging = false;
        ready = false;
        callbacks = []
      }
      this.getId = function() {
        return id
      };
      this.getTaskDef = function() {
        return taskDef
      };
      this.getStart = function() {
        return taskDef !== null ? taskDef.start : undefined
      };
      this.getEnd = function() {
        return taskDef !== null ? taskDef.end : undefined
      };
      this.getPointCount = function() {
        return taskDef !== null ? taskDef.pointCount : undefined
      };
      this.getResolution = function() {
        return taskDef !== null ? taskDef.resolution : undefined
      };
      this.getService = function() {
        return taskDef !== null ? taskDef.service : undefined
      };
      this.getLocation = function() {
        return taskDef !== null ? taskDef.location : undefined
      };
      this.getParameter = function() {
        return taskDef !== null ? taskDef.parameter : undefined
      };
      this.getDataSize = function() {
        return taskDef !== null ? taskDef.pointCount * taskDef.parameter.length * taskDef.location.length : 0
      };
      this.pin = function() {
        if(!waitingRecycling) {
          pinCount++;
          if(dispatcher) {
            dispatcher("blockPinned", thisBlock)
          }
          return pinCount
        }else {
          return null
        }
      };
      this.unpin = function() {
        if(pinCount > 0) {
          pinCount--;
          if(dispatcher) {
            dispatcher("blockUnpinned", thisBlock)
          }
        }
        return pinCount
      };
      this.isPinned = function() {
        return pinCount > 0
      };
      this.getPinCount = function() {
        return pinCount
      };
      this.getRequestId = function() {
        return requestId
      };
      this.isWaitingRecycling = function() {
        return waitingRecycling
      };
      this.isWaitingMerging = function() {
        return waitingMerging
      };
      this.isFetched = function() {
        return fetched
      };
      this.setFetched = function(f) {
        if(f === true) {
          fetched = true
        }else {
          fetched = false
        }
      };
      this.isFetching = function() {
        return fetching
      };
      this.setFetching = function(f) {
        if(f === true) {
          fetching = true
        }else {
          fetching = false
        }
      };
      this.increaseNotUsed = function() {
        age++;
        if(dispatcher) {
          dispatcher("blockAged", thisBlock)
        }
      };
      this.getNotUsedSince = function() {
        return age
      };
      this.fetchFailed = function() {
        return fetchError !== null
      };
      this.markForRecycling = function() {
        waitingRecycling = true;
        if(dispatcher) {
          dispatcher("blockEvicted", thisBlock)
        }
      };
      this.markForMerging = function(merge) {
        if(merge === true) {
          waitingMerging = true;
          if(dispatcher) {
            dispatcher("blockMarkedForMerge", thisBlock)
          }
        }else {
          waitingMerging = false;
          if(dispatcher) {
            dispatcher("blockMergeCancelled", thisBlock)
          }
        }
      };
      this.setData = function(d) {
        data = d
      };
      this.getFetcher = function() {
        return fetcher
      };
      this.recycle = function() {
        reset();
        if(dispatcher) {
          dispatcher("blockRecycled", thisBlock)
        }
      };
      this.prepare = function(taskDefinition, dataFetcher) {
        if(!_.isFunction(dataFetcher)) {
          throw"fetcher must be a function";
        }
        checkTaskDef(taskDefinition);
        reset();
        taskDef = taskDefinition;
        fetcher = dataFetcher;
        ready = true;
        requestId++;
        if(dispatcher) {
          dispatcher("blockPrepared", thisBlock)
        }
      };
      this.getDataAsync = function(callback) {
        var that = this;
        if(!ready) {
          throw"Cannot getData in unprepared state, call prepare first";
        }
        age = 0;
        if(!fetched) {
          if(callback !== undefined && _.isFunction(callback)) {
            callbacks.push(callback)
          }
          if(!fetching) {
            fetching = true;
            fetcher(taskDef, function(err, result) {
              var reqId = that.getRequestId();
              if(err) {
                fetchError = err
              }
              data = result;
              fetched = true;
              if(callbacks.length === 0) {
                fetching = false
              }else {
                async.whilst(function() {
                  var myReqId = that.getRequestId();
                  return reqId === myReqId && callbacks.length > 0
                }, function(notify) {
                  try {
                    var cb = callbacks.pop();
                    cb.call(that, fetchError, data)
                  }catch(ex) {
                    if("undefined" !== typeof console && console) {
                      console.error("Error in block finished callback:" + ex.message)
                    }
                  }finally {
                    notify();
                    fetching = false
                  }
                }, function(err) {
                })
              }
              if(dispatcher) {
                dispatcher("blockProviderFetchFinished", thisBlock)
              }
            });
            if(dispatcher) {
              dispatcher("blockProviderFetchStarted", thisBlock)
            }
          }
        }else {
          if(_.isFunction(callback)) {
            _.defer(function(err, d) {
              if(dispatcher) {
                dispatcher("blockCacheFetchFinished", thisBlock)
              }
              callback(err, d)
            }, fetchError, data);
            if(dispatcher) {
              dispatcher("blockCacheFetchStarted", thisBlock)
            }
          }else {
          }
        }
      };
      id = "id#" + blockCounter++;
      if(dispatcher) {
        dispatcher("blockCreated", thisBlock)
      }
    };
    return _constructor
  }();
  var eventListenerIdCounter = 0;
  var fetcherIdCounter = 0;
  var _constructor = function SplitterCache(properties) {
    var emptyBlockPool = [];
    var cachedBlocks = [];
    var mergedBlocks = [];
    var stepResolutions = [];
    var sideFetchBeforeFactor = 0.5;
    var sideFetchAfterFactor = 1;
    var maxBlockDataPoints = 500;
    var minBlockDataPoints = 20;
    var maxCacheDataSize = 5E4;
    var strictErrorHandling = true;
    var errorFillValue = NaN;
    var fetchers = {};
    var cachedDataSize = 0;
    var cacheHits = 0;
    var cacheMisses = 0;
    var thisCache = this;
    var eventListeners = {blockCreated:{}, blockPrepared:{}, blockProviderFetchStarted:{}, blockProviderFetchFinished:{}, blockCacheFetchStarted:{}, blockCacheFetchFinished:{}, blockPinned:{}, blockUnpinned:{}, blockEvicted:{}, blockRecycled:{}, blockAged:{}, blockMarkedForMerge:{}, blockMergeCancelled:{}, evictStarted:{}, evictFinished:{}, fetchStarted:{}, fetchFinished:{}, cacheCleared:{}, dataProviderAdded:{}, dataProviderRemoved:{}};
    function fireEvent(eventName, eventData) {
      if(eventListeners[eventName] !== undefined) {
        _.each(eventListeners[eventName], function(cb) {
          try {
            cb.call(thisCache, eventData)
          }catch(ex) {
          }
        })
      }
    }
    function addEventListener(eventName, cb) {
      var listenerId = null;
      if(eventListeners[eventName] !== undefined) {
        if(_.isFunction(cb)) {
          listenerId = "id" + eventListenerIdCounter++;
          eventListeners[eventName][listenerId] = cb
        }else {
          throw"Event listener callback is not a function";
        }
      }else {
        throw"Unknown event '" + eventName + "', use one of " + _.reduce(_.keys(eventListeners), function(memo, name, ind) {
          if(ind > 0) {
            memo = memo + ", "
          }
          memo = memo + name;
          return memo
        });
      }
      return listenerId
    }
    function removeEventListener(eventName, listenerId) {
      if(eventListeners[eventName] !== undefined) {
        if(eventListeners[eventName][listenerId] !== undefined) {
          delete eventListeners[eventName][listenerId]
        }
      }else {
        throw"Unknown event '" + eventName + "', use one of " + _.reduce(_.keys(eventListeners), function(memo, name, ind) {
          if(ind > 0) {
            memo = memo + ", "
          }
          memo = memo + name
        });
      }
    }
    function evict(evictList) {
      async.each(evictList, function(toEvict, notify) {
        toEvict.markForRecycling();
        notify()
      }, function(err) {
        if(err && "undefined" !== typeof console && console) {
          console.error(err)
        }
      })
    }
    function mergeBlocks(block1, block2, callback) {
      var newBlock = null;
      var taskDef = {};
      var combinedData = [];
      if(block1.pin() > 0 && block2.pin() > 0) {
        block1.markForMerging(true);
        block2.markForMerging(true);
        newBlock = getDataBlock();
        taskDef = _.clone(block1.getTaskDef());
        taskDef.end = block2.getEnd();
        taskDef.pointCount = block1.getPointCount() + block2.getPointCount();
        newBlock.prepare(taskDef, block1.getFetcher());
        newBlock.setFetching(true);
        fireEvent("blockCacheFetchStarted", newBlock);
        async.parallel({data1:function(cb) {
          block1.getDataAsync(function(err, data) {
            if(err) {
              if("undefined" !== typeof console && console) {
                console.log("Warning: getDataAsync from merged block1 returned error:'" + err + "'")
              }
              cb(err)
            }else {
              fillWith(combinedData, data, taskDef.location, taskDef.parameter, 0, 0, block1.getPointCount(), cb)
            }
          })
        }, data2:function(cb) {
          block2.getDataAsync(function(err, data) {
            if(err) {
              if("undefined" !== typeof console && console) {
                console.log("Warning: getDataAsync from merged block2 returned error:'" + err + "'")
              }
              cb(err)
            }else {
              fillWith(combinedData, data, taskDef.location, taskDef.parameter, block1.getPointCount(), 0, block2.getPointCount(), cb)
            }
          })
        }}, function(err, results) {
          block1.unpin();
          block2.unpin();
          if(!err) {
            block1.markForRecycling();
            block2.markForRecycling();
            newBlock.setData(combinedData);
            newBlock.setFetching(false);
            newBlock.setFetched(true);
            callback(null, newBlock);
            fireEvent("blockCacheFetchFinished", newBlock)
          }else {
            newBlock.reset();
            block1.markForMerging(false);
            block2.markForMerging(false);
            callback(err);
            fireEvent("blockCacheFetchFinished", null)
          }
        })
      }else {
        _.defer(function() {
          callback(new Error("One or both blocks already marked for recycling"))
        })
      }
    }
    function blocksAreContinuous(block1, block2) {
      if(block1.getResolution() === block2.getResolution() && block2.getStart() === block1.getEnd() + block1.getResolution()) {
        return true
      }else {
        return false
      }
    }
    function shouldBlocksBeMerged(block1, block2) {
      if(!block1.fetchFailed() && !block2.fetchFailed() && !block1.isWaitingMerging() && !block2.isWaitingMerging() && (block1.getPointCount() < minBlockDataPoints || block2.getPointCount() < minBlockDataPoints) && blocksAreContinuous(block1, block2) && block1.getPointCount() + block2.getPointCount() < maxBlockDataPoints) {
        return true
      }else {
        return false
      }
    }
    function getDataBlock() {
      var dataBlock;
      if(emptyBlockPool.length > 0) {
        dataBlock = emptyBlockPool.pop()
      }else {
        dataBlock = new DataBlock(fireEvent)
      }
      return dataBlock
    }
    function blockOverlaps(blockStart, blockEnd, start, end) {
      var retval = false;
      if(blockStart === start && blockEnd === end) {
        retval = true
      }else {
        if(blockStart <= end && blockEnd > start) {
          retval = true
        }
      }
      return retval
    }
    function createMissingBlocksBefore(prevBlockEnd, blockStart, fetchStart, fetchEnd, taskDef) {
      var retval = null;
      if(prevBlockEnd === null || prevBlockEnd < blockStart - taskDef.resolution) {
        if(blockStart > fetchStart) {
          if(blockStart >= fetchEnd) {
            if(prevBlockEnd === null) {
              retval = allocateAndPrepareContinuousBlocks(taskDef, fetchStart, fetchEnd)
            }else {
              retval = allocateAndPrepareContinuousBlocks(taskDef, Math.max(prevBlockEnd, fetchStart), fetchEnd)
            }
          }else {
            if(prevBlockEnd === null) {
              retval = allocateAndPrepareContinuousBlocks(taskDef, fetchStart, blockStart - taskDef.resolution)
            }else {
              retval = allocateAndPrepareContinuousBlocks(taskDef, Math.max(prevBlockEnd + taskDef.resolution, fetchStart), blockStart - taskDef.resolution)
            }
          }
        }
      }
      return retval
    }
    function recycleBlock(block) {
      if(block.isPinned()) {
        async.whilst(function() {
          return block.isPinned()
        }, function(notify) {
          setTimeout(notify, 500)
        }, function(err) {
          block.recycle();
          emptyBlockPool.push(block)
        })
      }else {
        block.recycle();
        emptyBlockPool.push(block)
      }
    }
    var iterateCacheQueue = async.queue(function(taskDef, callback) {
      callback(null, iterateCache(taskDef))
    }, 1);
    function iterateCache(taskDef) {
      var retval = [];
      var requestedStart = taskDef.start;
      var requestedEnd = taskDef.end;
      var sideFetchBeforeItemCount = Math.ceil(sideFetchBeforeFactor * taskDef.pointCount);
      var sideFetchAfterItemCount = Math.ceil(sideFetchAfterFactor * taskDef.pointCount);
      var fetchStart = requestedStart - sideFetchBeforeItemCount * taskDef.resolution;
      var fetchEnd = requestedEnd + sideFetchAfterItemCount * taskDef.resolution;
      var blockAgeOrder = [];
      var newCachedBlocks = [];
      var mergeInd = -1;
      var blockToMerge = null;
      var prevMatchingBlock = null;
      var sortIterator = function(bl) {
        return bl.getStart()
      };
      cachedDataSize = 0;
      while(mergedBlocks.length > 0) {
        blockToMerge = mergedBlocks.shift();
        mergeInd = _.sortedIndex(cachedBlocks, blockToMerge, sortIterator);
        cachedBlocks.splice(mergeInd, 0, blockToMerge)
      }
      if(cachedBlocks.length > 0) {
        _.each(cachedBlocks, function(block, index) {
          var selectThisBlock = false;
          var newBlocksBefore = null;
          var newBlocksAfter = null;
          var prevBlockEnd = null;
          var blStart = block.getStart();
          var blEnd = block.getEnd();
          if(block.isWaitingRecycling()) {
            recycleBlock(block);
            return
          }
          if(taskDef.service === block.getService() && arrayEqualsAnyOrder(taskDef.location, block.getLocation()) && arrayEqualsAnyOrder(taskDef.parameter, block.getParameter())) {
            if(prevMatchingBlock !== null) {
              prevBlockEnd = prevMatchingBlock.getEnd()
            }
            newBlocksBefore = createMissingBlocksBefore(prevBlockEnd, blStart, fetchStart, fetchEnd, taskDef);
            if(newBlocksBefore !== null && newBlocksBefore.length > 0) {
              Array.prototype.push.apply(newCachedBlocks, newBlocksBefore);
              async.reduce(newBlocksBefore, cacheMisses, function(memo, block, callback) {
                callback(null, memo + block.getDataSize())
              }, function(err, result) {
                cacheMisses = result
              });
              Array.prototype.push.apply(retval, newBlocksBefore)
            }
            selectThisBlock = blockOverlaps(blStart, blEnd, fetchStart, fetchEnd);
            if(selectThisBlock) {
              if(block.pin() > 0) {
                retval.push(block);
                cacheHits += block.getDataSize()
              }else {
                if("undefined" !== typeof console && console) {
                  console.log("Unable to pin a block, it's already marked for recycling (this should not happen)")
                }
              }
            }else {
              block.increaseNotUsed()
            }
            newCachedBlocks.push(block);
            if(prevMatchingBlock !== null && shouldBlocksBeMerged(prevMatchingBlock, block)) {
              mergeBlocks(prevMatchingBlock, block, function(err, merged) {
                if(err) {
                  if("undefined" !== typeof console && console) {
                    console.error(err)
                  }
                }else {
                  mergedBlocks.push(merged)
                }
              })
            }
            prevMatchingBlock = block
          }else {
            block.increaseNotUsed();
            newCachedBlocks.push(block)
          }
          if(index === cachedBlocks.length - 1) {
            if(prevMatchingBlock !== null) {
              if(prevMatchingBlock.getEnd() + taskDef.resolution < fetchEnd) {
                newBlocksAfter = allocateAndPrepareContinuousBlocks(taskDef, Math.max(blEnd + taskDef.resolution, fetchStart), fetchEnd);
                Array.prototype.push.apply(newCachedBlocks, newBlocksAfter);
                async.reduce(newBlocksAfter, cacheMisses, function(memo, block, callback) {
                  callback(null, memo + block.getDataSize())
                }, function(err, result) {
                  cacheMisses = result
                });
                Array.prototype.push.apply(retval, newBlocksAfter)
              }
            }
          }
          var ageInd = _.sortedIndex(blockAgeOrder, block, function(bl) {
            return bl.getNotUsedSince()
          });
          blockAgeOrder.splice(ageInd, 0, block);
          cachedDataSize += block.getDataSize()
        })
      }
      if(retval.length === 0) {
        retval = allocateAndPrepareContinuousBlocks(taskDef, fetchStart, fetchEnd);
        Array.prototype.push.apply(newCachedBlocks, retval);
        async.reduce(retval, cacheMisses, function(memo, block, callback) {
          callback(null, memo + block.getDataSize())
        }, function(err, result) {
          cacheMisses = result
        })
      }
      cachedBlocks = [];
      cachedBlocks = newCachedBlocks;
      newCachedBlocks = [];
      async.whilst(function() {
        return cachedDataSize * 1.01 > maxCacheDataSize
      }, function() {
        var dataToEvict = cachedDataSize * 1.01 - maxCacheDataSize;
        fireEvent("evictStarted", {"inCache":cachedDataSize, "toEvict":dataToEvict});
        var evictList = [];
        var toEvict = null;
        var evictListDataSize = 0;
        while(evictListDataSize < dataToEvict && blockAgeOrder.length > 0) {
          toEvict = blockAgeOrder.pop();
          if(toEvict !== undefined) {
            evictListDataSize += toEvict.getDataSize();
            evictList.push(toEvict)
          }
        }
        if(evictList.length > 0) {
          evict(evictList);
          cachedDataSize = cachedDataSize - evictListDataSize;
          fireEvent("evictFinished", {"inCache":cachedDataSize, "evicted":evictListDataSize})
        }
      }, function() {
      });
      return retval
    }
    function allocateAndPrepareContinuousBlocks(parentTaskDef, start, end) {
      var blocks = [];
      var totalPointCount = Math.round((end - start) / parentTaskDef.resolution) + 1;
      var blocksNeeded = Math.ceil(totalPointCount / maxBlockDataPoints);
      var i = 0;
      var taskDef;
      var block = null;
      for(i = 0;i < blocksNeeded;i++) {
        block = getDataBlock();
        taskDef = _.clone(parentTaskDef);
        taskDef.start = start + i * parentTaskDef.resolution * maxBlockDataPoints;
        taskDef.pointCount = Math.min(maxBlockDataPoints, totalPointCount - i * maxBlockDataPoints);
        taskDef.end = taskDef.start + (taskDef.pointCount - 1) * parentTaskDef.resolution;
        block.prepare(taskDef, getFetcher(parentTaskDef.service));
        if(block.pin() > 0) {
          blocks.push(block)
        }else {
          if("undefined" !== typeof console && console) {
            console.error("Strange, unable to pin block!")
          }
        }
      }
      return blocks
    }
    function fillWith(target, source, locations, parameters, targetIndex, sourceIndex, count, callback) {
      var copyFromArray = _.isObject(source);
      var ti = 0;
      var si = 0;
      var end = 0;
      async.each(locations, function(loc, locNotify) {
        if(target[loc] === undefined) {
          target[loc] = {}
        }
        async.each(parameters, function(param, paramNotify) {
          var useErrorValues = false;
          if(target[loc][param] === undefined) {
            target[loc][param] = []
          }
          if(copyFromArray) {
            if(!_.isObject(source[loc]) || !_.isArray(source[loc][param])) {
              useErrorValues = true
            }else {
              if(source[loc][param].length < sourceIndex + count) {
                useErrorValues = true;
                if("undefined" !== typeof console && console) {
                  console.error("Trying to fill segment with only " + source[loc][param].length + " values for location " + loc + " and parameter " + param + " when " + (sourceIndex + count) + " would be needed. Filling the whole segment with '" + errorFillValue + "'")
                }
              }
            }
          }
          if(useErrorValues) {
            ti = targetIndex;
            end = targetIndex + count;
            while(ti < end) {
              target[loc][param][ti++] = errorFillValue
            }
          }else {
            if(copyFromArray) {
              ti = targetIndex;
              si = sourceIndex;
              end = targetIndex + count;
              while(ti < end) {
                target[loc][param][ti++] = source[loc][param][si++]
              }
            }else {
              ti = targetIndex;
              end = targetIndex + count;
              while(ti < end) {
                target[loc][param][ti++] = source
              }
            }
          }
          paramNotify()
        }, function(err) {
          locNotify()
        })
      }, function(err) {
        callback(err, target)
      })
    }
    function retrieveDataAsync(origTaskDef, finishCallback, progressCallback) {
      var taskDef = _.clone(origTaskDef);
      if(!_.isFunction(finishCallback)) {
        throw"finishCallback must be a function";
      }
      if(getFetcher(taskDef.service) === null) {
        throw"No data fetcher set for service '" + taskDef.service + "', unable to provide data";
      }
      if(stepResolutions[taskDef.service] !== undefined) {
        if(stepResolutions[taskDef.service].resolution !== taskDef.resolution || Math.abs(stepResolutions[taskDef.service].start - taskDef.start) % taskDef.resolution !== 0) {
          clear(taskDef.service)
        }
      }
      stepResolutions[taskDef.service] = {start:taskDef.start, resolution:taskDef.resolution};
      iterateCacheQueue.push(taskDef, function(err, dataBlocks) {
        fetchDataForBlocks(dataBlocks, taskDef, finishCallback, progressCallback)
      })
    }
    function fetchDataForBlocks(dataBlocks, taskDef, finishCallback, progressCallback) {
      var errors = null;
      var notifyProgress = false;
      var result = {};
      if(_.isFunction(progressCallback)) {
        notifyProgress = true
      }
      fireEvent("fetchStarted", taskDef);
      result.steps = _.range(taskDef.start, taskDef.end + taskDef.resolution, taskDef.resolution);
      result.data = {};
      async.each(dataBlocks, function(dataBlock, notify) {
        var td = dataBlock.getTaskDef();
        var includeStart = NaN;
        var includeEnd = NaN;
        var targetStartIndex = NaN;
        var targetEndIndex = NaN;
        var sourceStartIndex = NaN;
        var valueCount = NaN;
        if(!blockOverlaps(td.start, td.end, taskDef.start, taskDef.end)) {
          dataBlock.getDataAsync(function() {
            dataBlock.unpin()
          });
          notify();
          return
        }
        if(td.start < taskDef.start) {
          includeStart = taskDef.start;
          sourceStartIndex = Math.round((taskDef.start - td.start) / taskDef.resolution)
        }else {
          includeStart = td.start;
          sourceStartIndex = 0
        }
        targetStartIndex = _.indexOf(result.steps, includeStart, true);
        if(targetStartIndex === -1) {
          throw dataBlock.getId() + ":something wrong with indexing, start index for cache block not found in the combined results!";
        }
        if(td.end > taskDef.end) {
          includeEnd = taskDef.end;
          targetEndIndex = result.steps.length - 1
        }else {
          includeEnd = td.end;
          targetEndIndex = _.indexOf(result.steps, td.end, true)
        }
        valueCount = targetEndIndex - targetStartIndex + 1;
        dataBlock.getDataAsync(function(err, data) {
          var fillValue = data;
          if(err) {
            if(errors === null) {
              errors = []
            }
            errors.push({start:td.start, end:td.end, error:err});
            if(strictErrorHandling || !data) {
              fillValue = errorFillValue
            }
            dataBlock.markForRecycling()
          }
          fillWith(result.data, fillValue, td.location, td.parameter, targetStartIndex, sourceStartIndex, valueCount, function() {
            if(notifyProgress) {
              progressCallback(err, includeStart, includeEnd)
            }
            dataBlock.unpin();
            notify()
          })
        })
      }, function(err) {
        finishCallback(errors, result);
        fireEvent("fetchFinished", taskDef)
      })
    }
    function getFetcher(service) {
      if(fetchers[service] !== undefined) {
        fetchers[service].nextIndex = (fetchers[service].nextIndex + 1) % fetchers[service].providers.length;
        return fetchers[service].providers[fetchers[service].nextIndex].cb
      }else {
        return null
      }
    }
    function clear(service) {
      _.each(cachedBlocks, function(block) {
        if(service === undefined || block.getService() === service) {
          block.markForRecycling()
        }
      });
      _.each(mergedBlocks, function(block) {
        if(service === undefined || block.getService() === service) {
          block.markForRecycling()
        }
      });
      fireEvent("cacheCleared", service)
    }
    this.addDataProvider = function(service, fetcher) {
      var provider = {};
      if(_.isFunction(fetcher)) {
        if(fetchers[service] === undefined) {
          fetchers[service] = {nextIndex:0, providers:[]}
        }
        provider.id = "id#" + fetcherIdCounter++;
        provider.cb = fetcher;
        fetchers[service].providers.push(provider);
        fireEvent("dataProviderAdded", {"service":service, "providerId":provider.id})
      }else {
        throw"Fetcher must be a function";
      }
      return provider.id
    };
    this.removeDataProvider = function(service, providerId) {
      var oldLength = 0;
      var actuallyRemoved = false;
      if(fetchers[service] !== undefined) {
        oldLength = fetchers[service].providers.length;
        fetchers[service].providers = _.reject(fetchers[service].providers, function(provider) {
          return provider.id === providerId
        });
        if(fetchers[service].providers.length === 0) {
          delete fetchers.service;
          actuallyRemoved = true
        }else {
          if(oldLength !== fetchers[service].providers.length) {
            actuallyRemoved = true
          }
        }
        if(actuallyRemoved) {
          fireEvent("dataProviderRemoved", {"service":service, "providerId":providerId})
        }
      }
    };
    this.clearCache = function() {
      clear();
      stepResolutions = [];
      cacheHits = 0;
      cacheMisses = 0
    };
    this.fetch = function(taskDef, finalCallback, progressCallback) {
      checkTaskDef(taskDef);
      retrieveDataAsync(taskDef, finalCallback, progressCallback)
    };
    this.getCachedItemCount = function() {
      return cachedDataSize
    };
    this.getFillingDegree = function() {
      return cachedDataSize / maxCacheDataSize
    };
    this.getHitRatio = function() {
      return cacheHits / (cacheHits + cacheMisses)
    };
    this.addListener = function(eventName, callback) {
      return addEventListener(eventName, callback)
    };
    this.removeListener = function(eventName, providerId) {
      return removeEventListener(eventName, providerId)
    };
    if(properties.sideFetchBeforeFactor !== undefined) {
      if(_.isNumber(properties.sideFetchBeforeFactor)) {
        if(properties.sideFetchBeforeFactor >= 0) {
          sideFetchBeforeFactor = properties.sideFetchBeforeFactor
        }
      }
    }
    if(properties.sideFetchAfterFactor !== undefined) {
      if(_.isNumber(properties.sideFetchAfterFactor)) {
        if(properties.sideFetchAfterFactor >= 0) {
          sideFetchAfterFactor = properties.sideFetchAfterFactor
        }
      }
    }
    if(properties.maxBlockDataPoints !== undefined) {
      if(_.isNumber(properties.maxBlockDataPoints)) {
        if(properties.maxBlockDataPoints > 0) {
          maxBlockDataPoints = properties.maxBlockDataPoints
        }
      }
    }
    if(properties.minBlockDataPoints !== undefined) {
      if(_.isNumber(properties.minBlockDataPoints)) {
        if(properties.minBlockDataPoints > 0 && properties.minBlockDataPoints < maxBlockDataPoints) {
          minBlockDataPoints = properties.minBlockDataPoints
        }else {
          minBlockDataPoints = 0
        }
      }
    }
    if(minBlockDataPoints > maxBlockDataPoints) {
      minBlockDataPoints = maxBlockDataPoints
    }
    if(properties.maxCacheDataSize !== undefined) {
      if(_.isNumber(properties.maxCacheDataSize)) {
        if(properties.maxCacheDataSize > 0) {
          maxCacheDataSize = properties.maxCacheDataSize
        }
      }
    }
    if(properties.strictErrorHandling !== undefined) {
      if(properties.strictErrorHandling === false) {
        strictErrorHandling = false
      }
    }
    if(properties.errorFillValue !== undefined) {
      errorFillValue = properties.errorFillValue
    }
  };
  return _constructor
}();
if("undefined" === typeof jQuery || !jQuery) {
  throw"ERROR: jQuery is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if("undefined" === typeof _ || !_) {
  throw"ERROR: Lodash is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if("undefined" === typeof async || !async) {
  throw"ERROR: Async is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
var fi = fi || {};
fi.fmi = fi.fmi || {};
fi.fmi.metoclient = fi.fmi.metoclient || {};
fi.fmi.metoclient.metolib = fi.fmi.metoclient.metolib || {};
if(!fi.fmi.metoclient.metolib.Utils) {
  throw"ERROR: fi.fmi.metoclient.metolib.Utils is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if(!fi.fmi.metoclient.metolib.SplitterCache) {
  throw"ERROR: fi.fmi.metoclient.metolib.SplitterCache is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
if(!fi.fmi.metoclient.metolib.WfsRequestParser) {
  throw"ERROR: fi.fmi.metoclient.metolib.WfsRequestParser is required for fi.fmi.metoclient.metolib.WfsConnection!";
}
fi.fmi.metoclient.metolib.WfsConnection = function() {
  var DATA_FETCHER_NAME_SITES = "parserSites";
  var PARAMETER_SEPARATOR = ",";
  var LOCATION_NAME_REGION_SEPARATOR = " ";
  var LOCATION_GEOID_PREFIX = "g_";
  var LOCATION_WMO_PREFIX = "w_";
  var LOCATION_FMISID_PREFIX = "f_";
  var LOCATION_SITES_PREFIX = "s_";
  var CACHE_ERROR_TEXT = "ERROR: Cache found error(s)!";
  function trimSingleSite(site) {
    return jQuery.trim(site).replace(/,\s+/, PARAMETER_SEPARATOR)
  }
  function trimSites(sites, prefix) {
    var trimmed = [];
    if(!_.isString(prefix)) {
      prefix = ""
    }
    if(sites && _.isString(sites)) {
      trimmed.push(prefix + trimSingleSite(sites))
    }else {
      if(_.isArray(sites)) {
        for(var i = 0;i < sites.length;++i) {
          var site = sites[i];
          if(site && _.isString(site)) {
            trimmed.push(prefix + trimSingleSite(site))
          }
        }
      }
    }
    return trimmed
  }
  function trimProperty(property, prefix) {
    var trimmed = [];
    if(!_.isString(prefix)) {
      prefix = ""
    }
    if(_.isNumber(property) || property && _.isString(property)) {
      trimmed.push(jQuery.trim(prefix + property))
    }else {
      if(_.isArray(property)) {
        for(var i = 0;i < property.length;++i) {
          var tmp = property[i];
          if(_.isNumber(tmp) || tmp && _.isString(tmp)) {
            trimmed.push(jQuery.trim(prefix + tmp))
          }
        }
      }
    }
    return trimmed
  }
  function setTaskDefLocations(taskDef, options) {
    if(taskDef && options) {
      var location = [];
      taskDef.location = location;
      taskDef.geoid = trimProperty(options.geoid);
      taskDef.wmo = trimProperty(options.wmo);
      taskDef.fmisid = trimProperty(options.fmisid);
      taskDef.sites = trimSites(options.sites);
      location.push.apply(location, trimProperty(options.geoid, LOCATION_GEOID_PREFIX));
      location.push.apply(location, trimProperty(options.wmo, LOCATION_WMO_PREFIX));
      location.push.apply(location, trimProperty(options.fmisid, LOCATION_FMISID_PREFIX));
      location.push.apply(location, trimSites(options.sites, LOCATION_SITES_PREFIX))
    }
  }
  function locationNameForCache(taskDef, name, region, wmo, geoid, fmisid) {
    var locationName = LOCATION_SITES_PREFIX + region;
    if(taskDef) {
      var matchFound = false;
      var i;
      if(taskDef.geoid && geoid) {
        for(i = 0;i < taskDef.geoid.length;++i) {
          if(taskDef.geoid[i] === geoid) {
            locationName = LOCATION_GEOID_PREFIX + geoid;
            matchFound = true;
            break
          }
        }
      }
      if(!matchFound && taskDef.wmo && wmo) {
        for(i = 0;i < taskDef.wmo.length;++i) {
          if(taskDef.wmo[i] === wmo) {
            locationName = LOCATION_WMO_PREFIX + wmo;
            matchFound = true;
            break
          }
        }
      }
      if(!matchFound && taskDef.fmisid && fmisid) {
        for(i = 0;i < taskDef.fmisid.length;++i) {
          if(taskDef.fmisid[i] === fmisid) {
            locationName = LOCATION_FMISID_PREFIX + fmisid;
            matchFound = true;
            break
          }
        }
      }
      if(!matchFound && taskDef.sites && name && region) {
        var regionPrefix = region + LOCATION_NAME_REGION_SEPARATOR;
        var regionIndex = name.indexOf(regionPrefix);
        if(0 === regionIndex) {
          name = jQuery.trim(name.slice(regionPrefix.length))
        }
        var combinedLocationName = name + PARAMETER_SEPARATOR + region;
        for(i = 0;i < taskDef.sites.length;++i) {
          var loc = taskDef.sites[i];
          if(-1 !== loc.indexOf(PARAMETER_SEPARATOR) && loc === combinedLocationName) {
            locationName = LOCATION_SITES_PREFIX + loc;
            matchFound = true;
            break
          }
        }
      }
    }
    return locationName
  }
  function checkResolutionSteps(array, resolution) {
    if(_.isArray(array) && resolution && resolution > 0) {
      for(var i = 1;i < array.length;++i) {
        var previousTimeValuePair = array[i - 1];
        var timeValuePair = array[i];
        if(_.isObject(timeValuePair)) {
          var previousTime = _.isObject(previousTimeValuePair) ? previousTimeValuePair.time : undefined;
          var time = timeValuePair.time;
          if(undefined !== previousTime && null !== previousTime && undefined !== time && null !== time && resolution < time - previousTime) {
            time = previousTime + resolution;
            array.splice(i, 0, {time:time, value:NaN})
          }
          previousTime = time
        }
      }
    }
  }
  function contains(list, item) {
    return _.find(list, function(currentItem) {
      return _.isEqual(currentItem, item)
    })
  }
  function convertCacheErrorsForApi(errors) {
    var apiErrors = [];
    if(_.isArray(errors)) {
      for(var i = 0;i < errors.length;++i) {
        var error = errors[i];
        var useWrapError = _.isObject(error) && (error.errorCode || error.errorText);
        if(_.isObject(error) && _.isArray(error.error) && error.error.length > 0) {
          var errorArray = error.error;
          for(var j = 0;j < errorArray.length;++j) {
            var errorItem = errorArray[j];
            if(_.isObject(errorItem) && (errorItem.errorCode || errorItem.errorText)) {
              var newError = {errorCode:errorItem.errorCode, errorText:errorItem.errorText, extension:error};
              if(!contains(apiErrors, newError)) {
                apiErrors.push(newError)
              }
            }else {
              useWrapError = true
            }
          }
        }else {
          useWrapError = true
        }
        if(useWrapError) {
          var newWrapError = {errorCode:_.isObject(error) ? error.errorCode : undefined, errorText:_.isObject(error) && _.isString(error.errorText) ? error.errorText : CACHE_ERROR_TEXT, extension:error};
          if(!contains(apiErrors, newWrapError)) {
            apiErrors.push(newWrapError)
          }
        }
      }
    }
    return apiErrors
  }
  function convertSitesDataFromParserForCache(taskDef, data, errors) {
    var converted = {data:data ? {} : undefined, errors:errors && !errors.length ? null : errors};
    if(data) {
      _.each(data.locations, function(location) {
        var locationName = locationNameForCache(taskDef, location.info.name, location.info.region, location.info.wmo, location.info.geoid, location.info.fmisid);
        if(!converted.data[locationName]) {
          converted.data[locationName] = {}
        }
        _.each(location.data, function(dataObject, keyRequestParameter) {
          if(!converted.data[locationName][keyRequestParameter]) {
            converted.data[locationName][keyRequestParameter] = []
          }
          checkResolutionSteps(dataObject.timeValuePairs, taskDef.resolution);
          _.each(dataObject.timeValuePairs, function(timeValuePair) {
            var cacheBlock = {info:data.info, properties:data.properties, locationInfo:location.info, blockProperty:dataObject.property, timeValuePair:timeValuePair};
            converted.data[locationName][keyRequestParameter].push(cacheBlock)
          })
        })
      })
    }
    return converted
  }
  function convertSitesDataFromCacheForApi(taskDef, data, errors) {
    var converted = {data:data ? {info:undefined, properties:undefined, locations:[]} : undefined, errors:convertCacheErrorsForApi(errors)};
    if(data) {
      _.each(data.data, function(location) {
        var convertedLocation = {info:undefined, data:{}};
        _.each(location, function(container, requestParameterKey) {
          var convertedData = {property:undefined, timeValuePairs:[]};
          _.each(container, function(cacheBlock) {
            if(cacheBlock) {
              if(!converted.data.info) {
                converted.data.info = cacheBlock.info
              }
              if(!converted.data.properties) {
                converted.data.properties = cacheBlock.properties
              }
              if(!convertedData.property) {
                convertedData.property = cacheBlock.blockProperty
              }
              if(!convertedLocation.info) {
                convertedLocation.info = cacheBlock.locationInfo
              }
              convertedData.timeValuePairs.push(cacheBlock.timeValuePair)
            }
          });
          convertedLocation.data[requestParameterKey] = convertedData
        });
        converted.data.locations.push(convertedLocation)
      })
    }
    return converted
  }
  function cacheSitesDataFetcherCallback(container, taskDef, taskCallback) {
    fi.fmi.metoclient.metolib.WfsRequestParser.getData({url:container.connectionUrl, storedQueryId:container.storedQueryId, requestParameter:taskDef.parameter, begin:taskDef.start, end:taskDef.end, timestep:taskDef.resolution, denyTimeAdjusting:true, geoid:taskDef.geoid, wmo:taskDef.wmo, fmisid:taskDef.fmisid, sites:taskDef.sites, crs:taskDef.crs, queryExtension:taskDef.queryExtension, callback:function(data, errors) {
      var converted = convertSitesDataFromParserForCache.call(container, taskDef, data, errors);
      taskCallback(converted.errors, converted.data)
    }})
  }
  var retrieveSitesData = function(options) {
    if(!options.timestep || options.timestep === 1) {
      var that = this;
      fi.fmi.metoclient.metolib.WfsRequestParser.getData({url:that.connectionUrl, storedQueryId:that.storedQueryId, requestParameter:options.requestParameter, begin:options.begin, end:options.end, timestep:options.timestep, denyTimeAdjusting:options.denyTimeAdjusting, geoid:trimProperty(options.geoid), wmo:trimProperty(options.wmo), fmisid:trimProperty(options.fmisid), sites:trimSites(options.sites), crs:options.crs, queryExtension:options.queryExtension, callback:options.callback})
    }else {
      var beginDate = options.begin;
      var endDate = options.end;
      var resolution = options.timestep;
      if(!options.denyTimeAdjusting) {
        beginDate = fi.fmi.metoclient.metolib.WfsRequestParser.adjustBeginTime(resolution, beginDate);
        endDate = fi.fmi.metoclient.metolib.WfsRequestParser.adjustEndTime(resolution, endDate, beginDate)
      }
      var taskDef = {service:DATA_FETCHER_NAME_SITES, parameter:_.isString(options.requestParameter) ? options.requestParameter.split(PARAMETER_SEPARATOR) : options.requestParameter, start:beginDate instanceof Date ? beginDate.getTime() : beginDate, end:endDate instanceof Date ? endDate.getTime() : endDate, resolution:resolution, crs:options.crs, queryExtension:options.queryExtension};
      setTaskDefLocations(taskDef, options);
      this.cache.fetch(taskDef, function(errors, result) {
        var converted = convertSitesDataFromCacheForApi(taskDef, result, errors);
        options.callback(converted.data, converted.errors)
      }, options.progressCallback)
    }
  };
  var retrieveSpatialData = function(options) {
    var that = this;
    fi.fmi.metoclient.metolib.WfsRequestParser.getData({url:that.connectionUrl, storedQueryId:that.storedQueryId, requestParameter:options.requestParameter, begin:options.begin, end:options.end, timestep:options.timestep, denyTimeAdjusting:options.denyTimeAdjusting, geoid:trimProperty(options.geoid), wmo:trimProperty(options.wmo), fmisid:trimProperty(options.fmisid), sites:trimSites(options.sites), bbox:options.bbox, crs:options.crs, queryExtension:options.queryExtension, callback:options.callback})
  };
  var makeSafe = function(func, callback) {
    var success = true;
    try {
      var args = Array.prototype.slice.call(arguments);
      args.shift();
      args.shift();
      func.apply(this, args)
    }catch(e) {
      var errorStr = "ERROR: API level error occurred in a synchronous flow!";
      if("undefined" !== typeof console && console) {
        console.error(errorStr)
      }
      success = false;
      if(callback) {
        var error = {errorText:errorStr};
        callback(undefined, error)
      }
    }
    return success
  };
  var getUrl = function() {
    return this.connectionUrl
  };
  var getStoredQueryId = function() {
    return this.storedQueryId
  };
  var connect = function(url, storedQueryId) {
    if(!this.connectionUrl) {
      if(!_.isString(url) || !url) {
        var urlErrorStr = "ERROR: WfsConnection URL must be a string and not empty!";
        if("undefined" !== typeof console && console) {
          console.error(urlErrorStr)
        }
        throw urlErrorStr;
      }
      if(!_.isString(storedQueryId) || !storedQueryId) {
        var idErrorStr = "ERROR: WfsConnection stored query ID must be a string and not empty!";
        if("undefined" !== typeof console && console) {
          console.error(idErrorStr)
        }
        throw idErrorStr;
      }
      this.connectionUrl = url;
      this.storedQueryId = storedQueryId
    }
  };
  var disconnect = function() {
    this.connectionUrl = undefined;
    this.storedQueryId = undefined;
    resetCache.call(this)
  };
  var resetCache = function() {
    this.cache.clearCache()
  };
  var getData = function(options) {
    if(options) {
      if(options.bbox) {
        retrieveSpatialData.call(this, options)
      }else {
        if(options.geoid || options.wmo || options.fmisid || options.sites) {
          retrieveSitesData.call(this, options)
        }else {
          var errorStr = "ERROR: Either geoid, wmo, fmisid, sites or bbox is mandatory in options!";
          if("undefined" !== typeof console && console) {
            console.error(errorStr)
          }
          throw errorStr;
        }
      }
    }else {
      var optionsErrorStr = "ERROR: Options object is mandatory!";
      if("undefined" !== typeof console && console) {
        console.error(optionsErrorStr)
      }
      throw optionsErrorStr;
    }
  };
  var connectionConstructor = function() {
    var _me = this;
    var _private = {connectionInstance:_me, connectionUrl:undefined, storedQueryId:undefined, cache:new fi.fmi.metoclient.metolib.SplitterCache({sideFetchAfterFactor:1, sideFetchBeforeFactor:0.5, maxBlockDataPoints:200, maxCacheDataSize:4E3})};
    _private.cache.addDataProvider(DATA_FETCHER_NAME_SITES, function(taskDef, callback) {
      cacheSitesDataFetcherCallback(_private, taskDef, callback)
    });
    this.getUrl = function() {
      return getUrl.call(_private)
    };
    this.getStoredQueryId = function() {
      return getStoredQueryId.call(_private)
    };
    this.connect = function(url, storedQueryId) {
      return makeSafe.call(_private, connect, undefined, url, storedQueryId)
    };
    this.disconnect = function() {
      return makeSafe.call(_private, disconnect, undefined)
    };
    this.resetCache = function() {
      return makeSafe.call(_private, resetCache, undefined)
    };
    this.getData = function(options) {
      return makeSafe.call(_private, getData, options ? options.callback : undefined, options)
    }
  };
  return connectionConstructor
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t13602 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.ioc_helpers.t13602");
    cljs.core.async.impl.ioc_helpers.t13602 = function(f, fn_handler, meta13603) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta13603 = meta13603;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t13602.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t13602.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t13602";
    cljs.core.async.impl.ioc_helpers.t13602.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.ioc-helpers/t13602")
    };
    cljs.core.async.impl.ioc_helpers.t13602.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t13602.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t13602.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t13602.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13604) {
      var self__ = this;
      return self__.meta13603
    };
    cljs.core.async.impl.ioc_helpers.t13602.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13604, meta13603__$1) {
      var self__ = this;
      return new cljs.core.async.impl.ioc_helpers.t13602(self__.f, self__.fn_handler, meta13603__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t13602 = function __GT_t13602(f__$1, fn_handler__$1, meta13603) {
      return new cljs.core.async.impl.ioc_helpers.t13602(f__$1, fn_handler__$1, meta13603)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t13602(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e13606) {
    if(e13606 instanceof Object) {
      var ex = e13606;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e13606;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_13609_13611 = state;
    statearr_13609_13611[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_13609_13611[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13610_13612 = state;
    statearr_13610_13612[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13610_13612[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_13615_13617 = state;
    statearr_13615_13617[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_13615_13617[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_13616_13618 = state;
    statearr_13616_13618[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_13616_13618[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__13619) {
    var map__13624 = p__13619;
    var map__13624__$1 = cljs.core.seq_QMARK_.call(null, map__13624) ? cljs.core.apply.call(null, cljs.core.hash_map, map__13624) : map__13624;
    var opts = map__13624__$1;
    var statearr_13625_13628 = state;
    statearr_13625_13628[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_13626_13629 = state;
      statearr_13626_13629[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_13627_13630 = state;
      statearr_13627_13630[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__13619 = null;
    if(arguments.length > 3) {
      p__13619 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__13619)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__13631) {
    var state = cljs.core.first(arglist__13631);
    arglist__13631 = cljs.core.next(arglist__13631);
    var cont_block = cljs.core.first(arglist__13631);
    arglist__13631 = cljs.core.next(arglist__13631);
    var ports = cljs.core.first(arglist__13631);
    var p__13619 = cljs.core.rest(arglist__13631);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__13619)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t13591 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.impl.channels.t13591");
    cljs.core.async.impl.channels.t13591 = function(val, box, meta13592) {
      this.val = val;
      this.box = box;
      this.meta13592 = meta13592;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t13591.cljs$lang$type = true;
    cljs.core.async.impl.channels.t13591.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t13591";
    cljs.core.async.impl.channels.t13591.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.channels/t13591")
    };
    cljs.core.async.impl.channels.t13591.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t13591.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13593) {
      var self__ = this;
      return self__.meta13592
    };
    cljs.core.async.impl.channels.t13591.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13593, meta13592__$1) {
      var self__ = this;
      return new cljs.core.async.impl.channels.t13591(self__.val, self__.box, meta13592__$1)
    };
    cljs.core.async.impl.channels.__GT_t13591 = function __GT_t13591(val__$1, box__$1, meta13592) {
      return new cljs.core.async.impl.channels.t13591(val__$1, box__$1, meta13592)
    }
  }
  return new cljs.core.async.impl.channels.t13591(val, box, null)
};
goog.provide("cljs.core.async.impl.channels.PutBox");
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3338__auto__, writer__3339__auto__, opts__3340__auto__) {
  return cljs.core._write.call(null, writer__3339__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
goog.provide("cljs.core.async.impl.channels.ManyToManyChannel");
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_13594 = self__.takes.pop();
      if(taker_13594 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_13594)) {
          var take_cb_13595 = cljs.core.async.impl.protocols.commit.call(null, taker_13594);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_13595, taker_13594) {
            return function() {
              return take_cb_13595.call(null, null)
            }
          }(take_cb_13595, taker_13594))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(function() {
      var and__3941__auto__ = !(self__.buf == null);
      if(and__3941__auto__) {
        return cljs.core.count.call(null, self__.buf) > 0
      }else {
        return and__3941__auto__
      }
    }()) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(function() {
    var or__3943__auto__ = closed__$1;
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)
    }
  }()) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!function() {
          var or__3943__auto__ = self__.buf == null;
          if(or__3943__auto__) {
            return or__3943__auto__
          }else {
            return cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf)
          }
        }()) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(function() {
        var and__3941__auto__ = Math.random() < cljs.core.async.impl.timers.P;
        if(and__3941__auto__) {
          return level < cljs.core.async.impl.timers.MAX_LEVEL
        }else {
          return and__3941__auto__
        }
      }()) {
        var G__13561 = level + 1;
        level = G__13561;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
goog.provide("cljs.core.async.impl.timers.SkipListNode");
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_13562 = 0;
    while(true) {
      if(i_13562 < arr.length) {
        arr[i_13562] = null;
        var G__13563 = i_13562 + 1;
        i_13562 = G__13563;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__13564 = x_SINGLEQUOTE_;
                x__$1 = G__13564;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__13565 = x__$1;
        var G__13566 = k;
        var G__13567 = level - 1;
        var G__13568 = update;
        x = G__13565;
        k = G__13566;
        level = G__13567;
        update = G__13568;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
goog.provide("cljs.core.async.impl.timers.SkipList");
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
  return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, false, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_13569 = self__.level + 1;
      while(true) {
        if(i_13569 <= new_level + 1) {
          update[i_13569] = self__.header;
          var G__13570 = i_13569 + 1;
          i_13569 = G__13570;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(function() {
    var and__3941__auto__ = !(x__$1 == null);
    if(and__3941__auto__) {
      return x__$1.key === k
    }else {
      return and__3941__auto__
    }
  }()) {
    var i_13571 = 0;
    while(true) {
      if(i_13571 <= self__.level) {
        var links_13572 = update[i_13571].forward;
        if(links_13572[i_13571] === x__$1) {
          links_13572[i_13571] = x__$1.forward[i_13571];
          var G__13573 = i_13571 + 1;
          i_13571 = G__13573;
          continue
        }else {
          var G__13574 = i_13571 + 1;
          i_13571 = G__13574;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(function() {
        var and__3941__auto__ = self__.level > 0;
        if(and__3941__auto__) {
          return self__.header.forward[self__.level] == null
        }else {
          return and__3941__auto__
        }
      }()) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__13575 = x_SINGLEQUOTE_;
              x__$1 = G__13575;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__13576 = nx;
        var G__13577 = level__$1 - 1;
        x = G__13576;
        level__$1 = G__13577;
        continue
      }else {
        var G__13578 = x;
        var G__13579 = level__$1 - 1;
        x = G__13578;
        level__$1 = G__13579;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__13580 = x_SINGLEQUOTE_;
              x__$1 = G__13580;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__13581 = nx;
        var G__13582 = level__$1 - 1;
        x = G__13581;
        level__$1 = G__13582;
        continue
      }else {
        var G__13583 = x;
        var G__13584 = level__$1 - 1;
        x = G__13583;
        level__$1 = G__13584;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3943__auto__ = cljs.core.truth_(function() {
    var and__3941__auto__ = me;
    if(cljs.core.truth_(and__3941__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3941__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t11621 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t11621");
    cljs.core.async.t11621 = function(f, fn_handler, meta11622) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta11622 = meta11622;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t11621.cljs$lang$type = true;
    cljs.core.async.t11621.cljs$lang$ctorStr = "cljs.core.async/t11621";
    cljs.core.async.t11621.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11621")
    };
    cljs.core.async.t11621.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11621.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return true
    };
    cljs.core.async.t11621.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      return self__.f
    };
    cljs.core.async.t11621.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11623) {
      var self__ = this;
      return self__.meta11622
    };
    cljs.core.async.t11621.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11623, meta11622__$1) {
      var self__ = this;
      return new cljs.core.async.t11621(self__.f, self__.fn_handler, meta11622__$1)
    };
    cljs.core.async.__GT_t11621 = function __GT_t11621(f__$1, fn_handler__$1, meta11622) {
      return new cljs.core.async.t11621(f__$1, fn_handler__$1, meta11622)
    }
  }
  return new cljs.core.async.t11621(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_11624 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_11624)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_11624)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3941__auto__ = ret;
      if(cljs.core.truth_(and__3941__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3941__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3572__auto___11625 = n;
  var x_11626 = 0;
  while(true) {
    if(x_11626 < n__3572__auto___11625) {
      a[x_11626] = 0;
      var G__11627 = x_11626 + 1;
      x_11626 = G__11627;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__11628 = i + 1;
      i = G__11628;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t11632 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t11632");
    cljs.core.async.t11632 = function(flag, alt_flag, meta11633) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta11633 = meta11633;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t11632.cljs$lang$type = true;
    cljs.core.async.t11632.cljs$lang$ctorStr = "cljs.core.async/t11632";
    cljs.core.async.t11632.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11632")
    };
    cljs.core.async.t11632.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11632.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t11632.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t11632.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11634) {
      var self__ = this;
      return self__.meta11633
    };
    cljs.core.async.t11632.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11634, meta11633__$1) {
      var self__ = this;
      return new cljs.core.async.t11632(self__.flag, self__.alt_flag, meta11633__$1)
    };
    cljs.core.async.__GT_t11632 = function __GT_t11632(flag__$1, alt_flag__$1, meta11633) {
      return new cljs.core.async.t11632(flag__$1, alt_flag__$1, meta11633)
    }
  }
  return new cljs.core.async.t11632(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t11638 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t11638");
    cljs.core.async.t11638 = function(cb, flag, alt_handler, meta11639) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta11639 = meta11639;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t11638.cljs$lang$type = true;
    cljs.core.async.t11638.cljs$lang$ctorStr = "cljs.core.async/t11638";
    cljs.core.async.t11638.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11638")
    };
    cljs.core.async.t11638.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t11638.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t11638.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t11638.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11640) {
      var self__ = this;
      return self__.meta11639
    };
    cljs.core.async.t11638.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11640, meta11639__$1) {
      var self__ = this;
      return new cljs.core.async.t11638(self__.cb, self__.flag, self__.alt_handler, meta11639__$1)
    };
    cljs.core.async.__GT_t11638 = function __GT_t11638(cb__$1, flag__$1, alt_handler__$1, meta11639) {
      return new cljs.core.async.t11638(cb__$1, flag__$1, alt_handler__$1, meta11639)
    }
  }
  return new cljs.core.async.t11638(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).call(null, opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__11641_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__11641_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3943__auto__ = wport;
            if(cljs.core.truth_(or__3943__auto__)) {
              return or__3943__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__11642 = i + 1;
          i = G__11642;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3943__auto__ = ret;
  if(cljs.core.truth_(or__3943__auto__)) {
    return or__3943__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3941__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3941__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3941__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword(null, "default", "default", 2558708147)).call(null, opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__11643) {
    var map__11645 = p__11643;
    var map__11645__$1 = cljs.core.seq_QMARK_.call(null, map__11645) ? cljs.core.apply.call(null, cljs.core.hash_map, map__11645) : map__11645;
    var opts = map__11645__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__11643 = null;
    if(arguments.length > 1) {
      p__11643 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__11643)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__11646) {
    var ports = cljs.core.first(arglist__11646);
    var p__11643 = cljs.core.rest(arglist__11646);
    return alts_BANG___delegate(ports, p__11643)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t11654 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t11654");
    cljs.core.async.t11654 = function(ch, f, map_LT_, meta11655) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta11655 = meta11655;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t11654.cljs$lang$type = true;
    cljs.core.async.t11654.cljs$lang$ctorStr = "cljs.core.async/t11654";
    cljs.core.async.t11654.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11654")
    };
    cljs.core.async.t11654.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11654.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t11654.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11654.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t11657 !== "undefined") {
        }else {
          goog.provide("cljs.core.async.t11657");
          cljs.core.async.t11657 = function(fn1, _, meta11655, ch, f, map_LT_, meta11658) {
            this.fn1 = fn1;
            this._ = _;
            this.meta11655 = meta11655;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta11658 = meta11658;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t11657.cljs$lang$type = true;
          cljs.core.async.t11657.cljs$lang$ctorStr = "cljs.core.async/t11657";
          cljs.core.async.t11657.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
            return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11657")
          };
          cljs.core.async.t11657.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t11657.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$2) {
            var self__ = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t11657.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$2) {
            var self__ = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t11657.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$2) {
            var self__ = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1) {
              return function(p1__11647_SHARP_) {
                return f1.call(null, p1__11647_SHARP_ == null ? null : self__.f.call(null, p1__11647_SHARP_))
              }
            }(f1)
          };
          cljs.core.async.t11657.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11659) {
            var self__ = this;
            return self__.meta11658
          };
          cljs.core.async.t11657.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11659, meta11658__$1) {
            var self__ = this;
            return new cljs.core.async.t11657(self__.fn1, self__._, self__.meta11655, self__.ch, self__.f, self__.map_LT_, meta11658__$1)
          };
          cljs.core.async.__GT_t11657 = function __GT_t11657(fn1__$1, ___$1, meta11655__$1, ch__$2, f__$2, map_LT___$2, meta11658) {
            return new cljs.core.async.t11657(fn1__$1, ___$1, meta11655__$1, ch__$2, f__$2, map_LT___$2, meta11658)
          }
        }
        return new cljs.core.async.t11657(fn1, _, self__.meta11655, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3941__auto__ = ret;
        if(cljs.core.truth_(and__3941__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3941__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t11654.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11654.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t11654.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11656) {
      var self__ = this;
      return self__.meta11655
    };
    cljs.core.async.t11654.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11656, meta11655__$1) {
      var self__ = this;
      return new cljs.core.async.t11654(self__.ch, self__.f, self__.map_LT_, meta11655__$1)
    };
    cljs.core.async.__GT_t11654 = function __GT_t11654(ch__$1, f__$1, map_LT___$1, meta11655) {
      return new cljs.core.async.t11654(ch__$1, f__$1, map_LT___$1, meta11655)
    }
  }
  return new cljs.core.async.t11654(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t11663 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t11663");
    cljs.core.async.t11663 = function(ch, f, map_GT_, meta11664) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta11664 = meta11664;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t11663.cljs$lang$type = true;
    cljs.core.async.t11663.cljs$lang$ctorStr = "cljs.core.async/t11663";
    cljs.core.async.t11663.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11663")
    };
    cljs.core.async.t11663.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11663.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t11663.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11663.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t11663.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11663.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t11663.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11665) {
      var self__ = this;
      return self__.meta11664
    };
    cljs.core.async.t11663.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11665, meta11664__$1) {
      var self__ = this;
      return new cljs.core.async.t11663(self__.ch, self__.f, self__.map_GT_, meta11664__$1)
    };
    cljs.core.async.__GT_t11663 = function __GT_t11663(ch__$1, f__$1, map_GT___$1, meta11664) {
      return new cljs.core.async.t11663(ch__$1, f__$1, map_GT___$1, meta11664)
    }
  }
  return new cljs.core.async.t11663(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t11669 !== "undefined") {
  }else {
    goog.provide("cljs.core.async.t11669");
    cljs.core.async.t11669 = function(ch, p, filter_GT_, meta11670) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta11670 = meta11670;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t11669.cljs$lang$type = true;
    cljs.core.async.t11669.cljs$lang$ctorStr = "cljs.core.async/t11669";
    cljs.core.async.t11669.cljs$lang$ctorPrWriter = function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
      return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t11669")
    };
    cljs.core.async.t11669.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t11669.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t11669.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t11669.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t11669.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t11669.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t11669.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11671) {
      var self__ = this;
      return self__.meta11670
    };
    cljs.core.async.t11669.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11671, meta11670__$1) {
      var self__ = this;
      return new cljs.core.async.t11669(self__.ch, self__.p, self__.filter_GT_, meta11670__$1)
    };
    cljs.core.async.__GT_t11669 = function __GT_t11669(ch__$1, p__$1, filter_GT___$1, meta11670) {
      return new cljs.core.async.t11669(ch__$1, p__$1, filter_GT___$1, meta11670)
    }
  }
  return new cljs.core.async.t11669(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5205__auto___11746 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_11729) {
          var state_val_11730 = state_11729[1];
          if(state_val_11730 === 1) {
            var state_11729__$1 = state_11729;
            var statearr_11731_11747 = state_11729__$1;
            statearr_11731_11747[2] = null;
            statearr_11731_11747[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_11730 === 2) {
              var state_11729__$1 = state_11729;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11729__$1, 4, ch)
            }else {
              if(state_val_11730 === 3) {
                var inst_11727 = state_11729[2];
                var state_11729__$1 = state_11729;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11729__$1, inst_11727)
              }else {
                if(state_val_11730 === 4) {
                  var inst_11711 = state_11729[5];
                  var inst_11711__$1 = state_11729[2];
                  var inst_11712 = inst_11711__$1 == null;
                  var state_11729__$1 = function() {
                    var statearr_11732 = state_11729;
                    statearr_11732[5] = inst_11711__$1;
                    return statearr_11732
                  }();
                  if(cljs.core.truth_(inst_11712)) {
                    var statearr_11733_11748 = state_11729__$1;
                    statearr_11733_11748[1] = 5
                  }else {
                    var statearr_11734_11749 = state_11729__$1;
                    statearr_11734_11749[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_11730 === 5) {
                    var inst_11714 = cljs.core.async.close_BANG_.call(null, out);
                    var state_11729__$1 = state_11729;
                    var statearr_11735_11750 = state_11729__$1;
                    statearr_11735_11750[2] = inst_11714;
                    statearr_11735_11750[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_11730 === 6) {
                      var inst_11711 = state_11729[5];
                      var inst_11716 = p.call(null, inst_11711);
                      var state_11729__$1 = state_11729;
                      if(cljs.core.truth_(inst_11716)) {
                        var statearr_11736_11751 = state_11729__$1;
                        statearr_11736_11751[1] = 8
                      }else {
                        var statearr_11737_11752 = state_11729__$1;
                        statearr_11737_11752[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_11730 === 7) {
                        var inst_11725 = state_11729[2];
                        var state_11729__$1 = state_11729;
                        var statearr_11738_11753 = state_11729__$1;
                        statearr_11738_11753[2] = inst_11725;
                        statearr_11738_11753[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_11730 === 8) {
                          var inst_11711 = state_11729[5];
                          var state_11729__$1 = state_11729;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11729__$1, 11, out, inst_11711)
                        }else {
                          if(state_val_11730 === 9) {
                            var state_11729__$1 = state_11729;
                            var statearr_11739_11754 = state_11729__$1;
                            statearr_11739_11754[2] = null;
                            statearr_11739_11754[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_11730 === 10) {
                              var inst_11722 = state_11729[2];
                              var state_11729__$1 = function() {
                                var statearr_11740 = state_11729;
                                statearr_11740[6] = inst_11722;
                                return statearr_11740
                              }();
                              var statearr_11741_11755 = state_11729__$1;
                              statearr_11741_11755[2] = null;
                              statearr_11741_11755[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_11730 === 11) {
                                var inst_11719 = state_11729[2];
                                var state_11729__$1 = state_11729;
                                var statearr_11742_11756 = state_11729__$1;
                                statearr_11742_11756[2] = inst_11719;
                                statearr_11742_11756[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_11744 = new Array(7);
              statearr_11744[0] = state_machine__5156__auto__;
              statearr_11744[1] = 1;
              return statearr_11744
            };
            var state_machine__5156__auto____1 = function(state_11729) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_11729);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_11729) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_11729)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_11745 = f__5206__auto__.call(null);
        statearr_11745[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___11746;
        return statearr_11745
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_11904) {
        var state_val_11905 = state_11904[1];
        if(state_val_11905 === 1) {
          var state_11904__$1 = state_11904;
          var statearr_11906_11939 = state_11904__$1;
          statearr_11906_11939[2] = null;
          statearr_11906_11939[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_11905 === 2) {
            var state_11904__$1 = state_11904;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_11904__$1, 4, in$)
          }else {
            if(state_val_11905 === 3) {
              var inst_11902 = state_11904[2];
              var state_11904__$1 = state_11904;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_11904__$1, inst_11902)
            }else {
              if(state_val_11905 === 4) {
                var inst_11850 = state_11904[5];
                var inst_11850__$1 = state_11904[2];
                var inst_11851 = inst_11850__$1 == null;
                var state_11904__$1 = function() {
                  var statearr_11907 = state_11904;
                  statearr_11907[5] = inst_11850__$1;
                  return statearr_11907
                }();
                if(cljs.core.truth_(inst_11851)) {
                  var statearr_11908_11940 = state_11904__$1;
                  statearr_11908_11940[1] = 5
                }else {
                  var statearr_11909_11941 = state_11904__$1;
                  statearr_11909_11941[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_11905 === 5) {
                  var inst_11853 = cljs.core.async.close_BANG_.call(null, out);
                  var state_11904__$1 = state_11904;
                  var statearr_11910_11942 = state_11904__$1;
                  statearr_11910_11942[2] = inst_11853;
                  statearr_11910_11942[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_11905 === 6) {
                    var inst_11850 = state_11904[5];
                    var inst_11855 = f.call(null, inst_11850);
                    var inst_11860 = cljs.core.seq.call(null, inst_11855);
                    var inst_11861 = inst_11860;
                    var inst_11862 = null;
                    var inst_11863 = 0;
                    var inst_11864 = 0;
                    var state_11904__$1 = function() {
                      var statearr_11911 = state_11904;
                      statearr_11911[6] = inst_11862;
                      statearr_11911[7] = inst_11861;
                      statearr_11911[8] = inst_11863;
                      statearr_11911[9] = inst_11864;
                      return statearr_11911
                    }();
                    var statearr_11912_11943 = state_11904__$1;
                    statearr_11912_11943[2] = null;
                    statearr_11912_11943[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_11905 === 7) {
                      var inst_11900 = state_11904[2];
                      var state_11904__$1 = state_11904;
                      var statearr_11913_11944 = state_11904__$1;
                      statearr_11913_11944[2] = inst_11900;
                      statearr_11913_11944[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_11905 === 8) {
                        var inst_11863 = state_11904[8];
                        var inst_11864 = state_11904[9];
                        var inst_11866 = inst_11864 < inst_11863;
                        var inst_11867 = inst_11866;
                        var state_11904__$1 = state_11904;
                        if(cljs.core.truth_(inst_11867)) {
                          var statearr_11914_11945 = state_11904__$1;
                          statearr_11914_11945[1] = 10
                        }else {
                          var statearr_11915_11946 = state_11904__$1;
                          statearr_11915_11946[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_11905 === 9) {
                          var inst_11897 = state_11904[2];
                          var state_11904__$1 = function() {
                            var statearr_11916 = state_11904;
                            statearr_11916[10] = inst_11897;
                            return statearr_11916
                          }();
                          var statearr_11917_11947 = state_11904__$1;
                          statearr_11917_11947[2] = null;
                          statearr_11917_11947[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_11905 === 10) {
                            var inst_11862 = state_11904[6];
                            var inst_11864 = state_11904[9];
                            var inst_11869 = cljs.core._nth.call(null, inst_11862, inst_11864);
                            var state_11904__$1 = state_11904;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11904__$1, 13, out, inst_11869)
                          }else {
                            if(state_val_11905 === 11) {
                              var inst_11861 = state_11904[7];
                              var inst_11875 = state_11904[11];
                              var inst_11875__$1 = cljs.core.seq.call(null, inst_11861);
                              var state_11904__$1 = function() {
                                var statearr_11921 = state_11904;
                                statearr_11921[11] = inst_11875__$1;
                                return statearr_11921
                              }();
                              if(inst_11875__$1) {
                                var statearr_11922_11948 = state_11904__$1;
                                statearr_11922_11948[1] = 14
                              }else {
                                var statearr_11923_11949 = state_11904__$1;
                                statearr_11923_11949[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_11905 === 12) {
                                var inst_11895 = state_11904[2];
                                var state_11904__$1 = state_11904;
                                var statearr_11924_11950 = state_11904__$1;
                                statearr_11924_11950[2] = inst_11895;
                                statearr_11924_11950[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_11905 === 13) {
                                  var inst_11862 = state_11904[6];
                                  var inst_11861 = state_11904[7];
                                  var inst_11863 = state_11904[8];
                                  var inst_11864 = state_11904[9];
                                  var inst_11871 = state_11904[2];
                                  var inst_11872 = inst_11864 + 1;
                                  var tmp11918 = inst_11862;
                                  var tmp11919 = inst_11861;
                                  var tmp11920 = inst_11863;
                                  var inst_11861__$1 = tmp11919;
                                  var inst_11862__$1 = tmp11918;
                                  var inst_11863__$1 = tmp11920;
                                  var inst_11864__$1 = inst_11872;
                                  var state_11904__$1 = function() {
                                    var statearr_11925 = state_11904;
                                    statearr_11925[6] = inst_11862__$1;
                                    statearr_11925[7] = inst_11861__$1;
                                    statearr_11925[8] = inst_11863__$1;
                                    statearr_11925[9] = inst_11864__$1;
                                    statearr_11925[12] = inst_11871;
                                    return statearr_11925
                                  }();
                                  var statearr_11926_11951 = state_11904__$1;
                                  statearr_11926_11951[2] = null;
                                  statearr_11926_11951[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_11905 === 14) {
                                    var inst_11875 = state_11904[11];
                                    var inst_11877 = cljs.core.chunked_seq_QMARK_.call(null, inst_11875);
                                    var state_11904__$1 = state_11904;
                                    if(inst_11877) {
                                      var statearr_11927_11952 = state_11904__$1;
                                      statearr_11927_11952[1] = 17
                                    }else {
                                      var statearr_11928_11953 = state_11904__$1;
                                      statearr_11928_11953[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_11905 === 15) {
                                      var state_11904__$1 = state_11904;
                                      var statearr_11929_11954 = state_11904__$1;
                                      statearr_11929_11954[2] = null;
                                      statearr_11929_11954[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_11905 === 16) {
                                        var inst_11893 = state_11904[2];
                                        var state_11904__$1 = state_11904;
                                        var statearr_11930_11955 = state_11904__$1;
                                        statearr_11930_11955[2] = inst_11893;
                                        statearr_11930_11955[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_11905 === 17) {
                                          var inst_11875 = state_11904[11];
                                          var inst_11879 = cljs.core.chunk_first.call(null, inst_11875);
                                          var inst_11880 = cljs.core.chunk_rest.call(null, inst_11875);
                                          var inst_11881 = cljs.core.count.call(null, inst_11879);
                                          var inst_11861 = inst_11880;
                                          var inst_11862 = inst_11879;
                                          var inst_11863 = inst_11881;
                                          var inst_11864 = 0;
                                          var state_11904__$1 = function() {
                                            var statearr_11931 = state_11904;
                                            statearr_11931[6] = inst_11862;
                                            statearr_11931[7] = inst_11861;
                                            statearr_11931[8] = inst_11863;
                                            statearr_11931[9] = inst_11864;
                                            return statearr_11931
                                          }();
                                          var statearr_11932_11956 = state_11904__$1;
                                          statearr_11932_11956[2] = null;
                                          statearr_11932_11956[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_11905 === 18) {
                                            var inst_11875 = state_11904[11];
                                            var inst_11884 = cljs.core.first.call(null, inst_11875);
                                            var state_11904__$1 = state_11904;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_11904__$1, 20, out, inst_11884)
                                          }else {
                                            if(state_val_11905 === 19) {
                                              var inst_11890 = state_11904[2];
                                              var state_11904__$1 = state_11904;
                                              var statearr_11933_11957 = state_11904__$1;
                                              statearr_11933_11957[2] = inst_11890;
                                              statearr_11933_11957[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_11905 === 20) {
                                                var inst_11875 = state_11904[11];
                                                var inst_11886 = state_11904[2];
                                                var inst_11887 = cljs.core.next.call(null, inst_11875);
                                                var inst_11861 = inst_11887;
                                                var inst_11862 = null;
                                                var inst_11863 = 0;
                                                var inst_11864 = 0;
                                                var state_11904__$1 = function() {
                                                  var statearr_11934 = state_11904;
                                                  statearr_11934[6] = inst_11862;
                                                  statearr_11934[7] = inst_11861;
                                                  statearr_11934[13] = inst_11886;
                                                  statearr_11934[8] = inst_11863;
                                                  statearr_11934[9] = inst_11864;
                                                  return statearr_11934
                                                }();
                                                var statearr_11935_11958 = state_11904__$1;
                                                statearr_11935_11958[2] = null;
                                                statearr_11935_11958[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_11937 = new Array(14);
            statearr_11937[0] = state_machine__5156__auto__;
            statearr_11937[1] = 1;
            return statearr_11937
          };
          var state_machine__5156__auto____1 = function(state_11904) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_11904);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_11904) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_11904)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_11938 = f__5206__auto__.call(null);
      statearr_11938[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_11938
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5205__auto___12031 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_12014) {
          var state_val_12015 = state_12014[1];
          if(state_val_12015 === 1) {
            var state_12014__$1 = state_12014;
            var statearr_12016_12032 = state_12014__$1;
            statearr_12016_12032[2] = null;
            statearr_12016_12032[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12015 === 2) {
              var state_12014__$1 = state_12014;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12014__$1, 4, from)
            }else {
              if(state_val_12015 === 3) {
                var inst_12012 = state_12014[2];
                var state_12014__$1 = state_12014;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12014__$1, inst_12012)
              }else {
                if(state_val_12015 === 4) {
                  var inst_11997 = state_12014[5];
                  var inst_11997__$1 = state_12014[2];
                  var inst_11998 = inst_11997__$1 == null;
                  var state_12014__$1 = function() {
                    var statearr_12017 = state_12014;
                    statearr_12017[5] = inst_11997__$1;
                    return statearr_12017
                  }();
                  if(cljs.core.truth_(inst_11998)) {
                    var statearr_12018_12033 = state_12014__$1;
                    statearr_12018_12033[1] = 5
                  }else {
                    var statearr_12019_12034 = state_12014__$1;
                    statearr_12019_12034[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_12015 === 5) {
                    var state_12014__$1 = state_12014;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_12020_12035 = state_12014__$1;
                      statearr_12020_12035[1] = 8
                    }else {
                      var statearr_12021_12036 = state_12014__$1;
                      statearr_12021_12036[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_12015 === 6) {
                      var inst_11997 = state_12014[5];
                      var state_12014__$1 = state_12014;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12014__$1, 11, to, inst_11997)
                    }else {
                      if(state_val_12015 === 7) {
                        var inst_12010 = state_12014[2];
                        var state_12014__$1 = state_12014;
                        var statearr_12022_12037 = state_12014__$1;
                        statearr_12022_12037[2] = inst_12010;
                        statearr_12022_12037[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_12015 === 8) {
                          var inst_12001 = cljs.core.async.close_BANG_.call(null, to);
                          var state_12014__$1 = state_12014;
                          var statearr_12023_12038 = state_12014__$1;
                          statearr_12023_12038[2] = inst_12001;
                          statearr_12023_12038[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_12015 === 9) {
                            var state_12014__$1 = state_12014;
                            var statearr_12024_12039 = state_12014__$1;
                            statearr_12024_12039[2] = null;
                            statearr_12024_12039[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_12015 === 10) {
                              var inst_12004 = state_12014[2];
                              var state_12014__$1 = state_12014;
                              var statearr_12025_12040 = state_12014__$1;
                              statearr_12025_12040[2] = inst_12004;
                              statearr_12025_12040[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_12015 === 11) {
                                var inst_12007 = state_12014[2];
                                var state_12014__$1 = function() {
                                  var statearr_12026 = state_12014;
                                  statearr_12026[6] = inst_12007;
                                  return statearr_12026
                                }();
                                var statearr_12027_12041 = state_12014__$1;
                                statearr_12027_12041[2] = null;
                                statearr_12027_12041[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_12029 = new Array(7);
              statearr_12029[0] = state_machine__5156__auto__;
              statearr_12029[1] = 1;
              return statearr_12029
            };
            var state_machine__5156__auto____1 = function(state_12014) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_12014);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_12014) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_12014)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_12030 = f__5206__auto__.call(null);
        statearr_12030[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___12031;
        return statearr_12030
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5205__auto___12120 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_12102) {
          var state_val_12103 = state_12102[1];
          if(state_val_12103 === 1) {
            var state_12102__$1 = state_12102;
            var statearr_12104_12121 = state_12102__$1;
            statearr_12104_12121[2] = null;
            statearr_12104_12121[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12103 === 2) {
              var state_12102__$1 = state_12102;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12102__$1, 4, ch)
            }else {
              if(state_val_12103 === 3) {
                var inst_12100 = state_12102[2];
                var state_12102__$1 = state_12102;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12102__$1, inst_12100)
              }else {
                if(state_val_12103 === 4) {
                  var inst_12083 = state_12102[5];
                  var inst_12083__$1 = state_12102[2];
                  var inst_12084 = inst_12083__$1 == null;
                  var state_12102__$1 = function() {
                    var statearr_12105 = state_12102;
                    statearr_12105[5] = inst_12083__$1;
                    return statearr_12105
                  }();
                  if(cljs.core.truth_(inst_12084)) {
                    var statearr_12106_12122 = state_12102__$1;
                    statearr_12106_12122[1] = 5
                  }else {
                    var statearr_12107_12123 = state_12102__$1;
                    statearr_12107_12123[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_12103 === 5) {
                    var inst_12086 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_12087 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_12102__$1 = function() {
                      var statearr_12108 = state_12102;
                      statearr_12108[6] = inst_12086;
                      return statearr_12108
                    }();
                    var statearr_12109_12124 = state_12102__$1;
                    statearr_12109_12124[2] = inst_12087;
                    statearr_12109_12124[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_12103 === 6) {
                      var inst_12083 = state_12102[5];
                      var inst_12089 = p.call(null, inst_12083);
                      var state_12102__$1 = state_12102;
                      if(cljs.core.truth_(inst_12089)) {
                        var statearr_12110_12125 = state_12102__$1;
                        statearr_12110_12125[1] = 9
                      }else {
                        var statearr_12111_12126 = state_12102__$1;
                        statearr_12111_12126[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_12103 === 7) {
                        var inst_12098 = state_12102[2];
                        var state_12102__$1 = state_12102;
                        var statearr_12112_12127 = state_12102__$1;
                        statearr_12112_12127[2] = inst_12098;
                        statearr_12112_12127[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_12103 === 8) {
                          var inst_12095 = state_12102[2];
                          var state_12102__$1 = function() {
                            var statearr_12113 = state_12102;
                            statearr_12113[7] = inst_12095;
                            return statearr_12113
                          }();
                          var statearr_12114_12128 = state_12102__$1;
                          statearr_12114_12128[2] = null;
                          statearr_12114_12128[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_12103 === 9) {
                            var state_12102__$1 = state_12102;
                            var statearr_12115_12129 = state_12102__$1;
                            statearr_12115_12129[2] = tc;
                            statearr_12115_12129[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_12103 === 10) {
                              var state_12102__$1 = state_12102;
                              var statearr_12116_12130 = state_12102__$1;
                              statearr_12116_12130[2] = fc;
                              statearr_12116_12130[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_12103 === 11) {
                                var inst_12083 = state_12102[5];
                                var inst_12093 = state_12102[2];
                                var state_12102__$1 = state_12102;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12102__$1, 8, inst_12093, inst_12083)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_12118 = new Array(8);
              statearr_12118[0] = state_machine__5156__auto__;
              statearr_12118[1] = 1;
              return statearr_12118
            };
            var state_machine__5156__auto____1 = function(state_12102) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_12102);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_12102) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_12102)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_12119 = f__5206__auto__.call(null);
        statearr_12119[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___12120;
        return statearr_12119
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return cljs.core.PersistentVector.fromArray([tc, fc], true)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_12173) {
        var state_val_12174 = state_12173[1];
        if(state_val_12174 === 7) {
          var inst_12169 = state_12173[2];
          var state_12173__$1 = state_12173;
          var statearr_12175_12187 = state_12173__$1;
          statearr_12175_12187[2] = inst_12169;
          statearr_12175_12187[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_12174 === 6) {
            var inst_12159 = state_12173[5];
            var inst_12162 = state_12173[6];
            var inst_12166 = f.call(null, inst_12159, inst_12162);
            var inst_12159__$1 = inst_12166;
            var state_12173__$1 = function() {
              var statearr_12176 = state_12173;
              statearr_12176[5] = inst_12159__$1;
              return statearr_12176
            }();
            var statearr_12177_12188 = state_12173__$1;
            statearr_12177_12188[2] = null;
            statearr_12177_12188[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12174 === 5) {
              var inst_12159 = state_12173[5];
              var state_12173__$1 = state_12173;
              var statearr_12178_12189 = state_12173__$1;
              statearr_12178_12189[2] = inst_12159;
              statearr_12178_12189[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_12174 === 4) {
                var inst_12162 = state_12173[6];
                var inst_12162__$1 = state_12173[2];
                var inst_12163 = inst_12162__$1 == null;
                var state_12173__$1 = function() {
                  var statearr_12179 = state_12173;
                  statearr_12179[6] = inst_12162__$1;
                  return statearr_12179
                }();
                if(cljs.core.truth_(inst_12163)) {
                  var statearr_12180_12190 = state_12173__$1;
                  statearr_12180_12190[1] = 5
                }else {
                  var statearr_12181_12191 = state_12173__$1;
                  statearr_12181_12191[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_12174 === 3) {
                  var inst_12171 = state_12173[2];
                  var state_12173__$1 = state_12173;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12173__$1, inst_12171)
                }else {
                  if(state_val_12174 === 2) {
                    var state_12173__$1 = state_12173;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12173__$1, 4, ch)
                  }else {
                    if(state_val_12174 === 1) {
                      var inst_12159 = init;
                      var state_12173__$1 = function() {
                        var statearr_12182 = state_12173;
                        statearr_12182[5] = inst_12159;
                        return statearr_12182
                      }();
                      var statearr_12183_12192 = state_12173__$1;
                      statearr_12183_12192[2] = null;
                      statearr_12183_12192[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_12185 = new Array(7);
            statearr_12185[0] = state_machine__5156__auto__;
            statearr_12185[1] = 1;
            return statearr_12185
          };
          var state_machine__5156__auto____1 = function(state_12173) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_12173);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_12173) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_12173)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_12186 = f__5206__auto__.call(null);
      statearr_12186[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_12186
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_12250) {
          var state_val_12251 = state_12250[1];
          if(state_val_12251 === 1) {
            var inst_12230 = cljs.core.seq.call(null, coll);
            var inst_12231 = inst_12230;
            var state_12250__$1 = function() {
              var statearr_12252 = state_12250;
              statearr_12252[5] = inst_12231;
              return statearr_12252
            }();
            var statearr_12253_12267 = state_12250__$1;
            statearr_12253_12267[2] = null;
            statearr_12253_12267[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12251 === 2) {
              var inst_12231 = state_12250[5];
              var state_12250__$1 = state_12250;
              if(cljs.core.truth_(inst_12231)) {
                var statearr_12254_12268 = state_12250__$1;
                statearr_12254_12268[1] = 4
              }else {
                var statearr_12255_12269 = state_12250__$1;
                statearr_12255_12269[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_12251 === 3) {
                var inst_12248 = state_12250[2];
                var state_12250__$1 = state_12250;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12250__$1, inst_12248)
              }else {
                if(state_val_12251 === 4) {
                  var inst_12231 = state_12250[5];
                  var inst_12234 = cljs.core.first.call(null, inst_12231);
                  var state_12250__$1 = state_12250;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12250__$1, 7, ch, inst_12234)
                }else {
                  if(state_val_12251 === 5) {
                    var state_12250__$1 = state_12250;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_12256_12270 = state_12250__$1;
                      statearr_12256_12270[1] = 8
                    }else {
                      var statearr_12257_12271 = state_12250__$1;
                      statearr_12257_12271[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_12251 === 6) {
                      var inst_12246 = state_12250[2];
                      var state_12250__$1 = state_12250;
                      var statearr_12258_12272 = state_12250__$1;
                      statearr_12258_12272[2] = inst_12246;
                      statearr_12258_12272[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_12251 === 7) {
                        var inst_12231 = state_12250[5];
                        var inst_12236 = state_12250[2];
                        var inst_12237 = cljs.core.next.call(null, inst_12231);
                        var inst_12231__$1 = inst_12237;
                        var state_12250__$1 = function() {
                          var statearr_12259 = state_12250;
                          statearr_12259[6] = inst_12236;
                          statearr_12259[5] = inst_12231__$1;
                          return statearr_12259
                        }();
                        var statearr_12260_12273 = state_12250__$1;
                        statearr_12260_12273[2] = null;
                        statearr_12260_12273[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_12251 === 8) {
                          var inst_12241 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_12250__$1 = state_12250;
                          var statearr_12261_12274 = state_12250__$1;
                          statearr_12261_12274[2] = inst_12241;
                          statearr_12261_12274[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_12251 === 9) {
                            var state_12250__$1 = state_12250;
                            var statearr_12262_12275 = state_12250__$1;
                            statearr_12262_12275[2] = null;
                            statearr_12262_12275[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_12251 === 10) {
                              var inst_12244 = state_12250[2];
                              var state_12250__$1 = state_12250;
                              var statearr_12263_12276 = state_12250__$1;
                              statearr_12263_12276[2] = inst_12244;
                              statearr_12263_12276[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_12265 = new Array(7);
              statearr_12265[0] = state_machine__5156__auto__;
              statearr_12265[1] = 1;
              return statearr_12265
            };
            var state_machine__5156__auto____1 = function(state_12250) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_12250);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_12250) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_12250)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_12266 = f__5206__auto__.call(null);
        statearr_12266[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
        return statearr_12266
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return c__5205__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3941__auto__ = _;
    if(and__3941__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3394__auto__ = _ == null ? null : _;
    return function() {
      var or__3943__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t12489 !== "undefined") {
    }else {
      goog.provide("cljs.core.async.t12489");
      cljs.core.async.t12489 = function(cs, ch, mult, meta12490) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta12490 = meta12490;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t12489.cljs$lang$type = true;
      cljs.core.async.t12489.cljs$lang$ctorStr = "cljs.core.async/t12489";
      cljs.core.async.t12489.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
          return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t12489")
        }
      }(cs);
      cljs.core.async.t12489.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t12489.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t12489.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t12489.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t12489.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12489.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t12489.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_12491) {
          var self__ = this;
          return self__.meta12490
        }
      }(cs);
      cljs.core.async.t12489.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_12491, meta12490__$1) {
          var self__ = this;
          return new cljs.core.async.t12489(self__.cs, self__.ch, self__.mult, meta12490__$1)
        }
      }(cs);
      cljs.core.async.__GT_t12489 = function(cs) {
        return function __GT_t12489(cs__$1, ch__$1, mult__$1, meta12490) {
          return new cljs.core.async.t12489(cs__$1, ch__$1, mult__$1, meta12490)
        }
      }(cs)
    }
    return new cljs.core.async.t12489(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__5205__auto___12701 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_12619) {
        var state_val_12620 = state_12619[1];
        if(state_val_12620 === 32) {
          try {
            var inst_12570 = state_12619[5];
            var inst_12494 = state_12619[6];
            var inst_12576 = cljs.core.async.put_BANG_.call(null, inst_12570, inst_12494, done);
            var state_12619__$1 = state_12619;
            var statearr_12623_12702 = state_12619__$1;
            statearr_12623_12702[2] = inst_12576;
            statearr_12623_12702[1] = 30;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }catch(e12621) {
            if(e12621 instanceof Object) {
              var ex__5149__auto__ = e12621;
              var statearr_12622_12703 = state_12619;
              statearr_12622_12703[1] = 31;
              statearr_12622_12703[2] = ex__5149__auto__;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e12621;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_12620 === 1) {
            var state_12619__$1 = state_12619;
            var statearr_12624_12704 = state_12619__$1;
            statearr_12624_12704[2] = null;
            statearr_12624_12704[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12620 === 33) {
              var inst_12582 = state_12619[7];
              var inst_12584 = cljs.core.chunked_seq_QMARK_.call(null, inst_12582);
              var state_12619__$1 = state_12619;
              if(inst_12584) {
                var statearr_12625_12705 = state_12619__$1;
                statearr_12625_12705[1] = 36
              }else {
                var statearr_12626_12706 = state_12619__$1;
                statearr_12626_12706[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_12620 === 2) {
                var state_12619__$1 = state_12619;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12619__$1, 4, ch)
              }else {
                if(state_val_12620 === 34) {
                  var state_12619__$1 = state_12619;
                  var statearr_12627_12707 = state_12619__$1;
                  statearr_12627_12707[2] = null;
                  statearr_12627_12707[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_12620 === 3) {
                    var inst_12617 = state_12619[2];
                    var state_12619__$1 = state_12619;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12619__$1, inst_12617)
                  }else {
                    if(state_val_12620 === 35) {
                      var inst_12606 = state_12619[2];
                      var state_12619__$1 = state_12619;
                      var statearr_12628_12708 = state_12619__$1;
                      statearr_12628_12708[2] = inst_12606;
                      statearr_12628_12708[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_12620 === 4) {
                        var inst_12494 = state_12619[6];
                        var inst_12494__$1 = state_12619[2];
                        var inst_12495 = inst_12494__$1 == null;
                        var state_12619__$1 = function() {
                          var statearr_12629 = state_12619;
                          statearr_12629[6] = inst_12494__$1;
                          return statearr_12629
                        }();
                        if(cljs.core.truth_(inst_12495)) {
                          var statearr_12630_12709 = state_12619__$1;
                          statearr_12630_12709[1] = 5
                        }else {
                          var statearr_12631_12710 = state_12619__$1;
                          statearr_12631_12710[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_12620 === 36) {
                          var inst_12582 = state_12619[7];
                          var inst_12586 = cljs.core.chunk_first.call(null, inst_12582);
                          var inst_12587 = cljs.core.chunk_rest.call(null, inst_12582);
                          var inst_12588 = cljs.core.count.call(null, inst_12586);
                          var inst_12562 = inst_12587;
                          var inst_12563 = inst_12586;
                          var inst_12564 = inst_12588;
                          var inst_12565 = 0;
                          var state_12619__$1 = function() {
                            var statearr_12632 = state_12619;
                            statearr_12632[8] = inst_12562;
                            statearr_12632[9] = inst_12565;
                            statearr_12632[10] = inst_12564;
                            statearr_12632[11] = inst_12563;
                            return statearr_12632
                          }();
                          var statearr_12633_12711 = state_12619__$1;
                          statearr_12633_12711[2] = null;
                          statearr_12633_12711[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_12620 === 5) {
                            var inst_12501 = cljs.core.deref.call(null, cs);
                            var inst_12502 = cljs.core.seq.call(null, inst_12501);
                            var inst_12503 = inst_12502;
                            var inst_12504 = null;
                            var inst_12505 = 0;
                            var inst_12506 = 0;
                            var state_12619__$1 = function() {
                              var statearr_12634 = state_12619;
                              statearr_12634[12] = inst_12503;
                              statearr_12634[13] = inst_12504;
                              statearr_12634[14] = inst_12506;
                              statearr_12634[15] = inst_12505;
                              return statearr_12634
                            }();
                            var statearr_12635_12712 = state_12619__$1;
                            statearr_12635_12712[2] = null;
                            statearr_12635_12712[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_12620 === 37) {
                              var inst_12582 = state_12619[7];
                              var inst_12591 = cljs.core.first.call(null, inst_12582);
                              var state_12619__$1 = function() {
                                var statearr_12636 = state_12619;
                                statearr_12636[16] = inst_12591;
                                return statearr_12636
                              }();
                              var statearr_12637_12713 = state_12619__$1;
                              statearr_12637_12713[2] = null;
                              statearr_12637_12713[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_12620 === 6) {
                                var inst_12553 = cljs.core.deref.call(null, cs);
                                var inst_12554 = cljs.core.keys.call(null, inst_12553);
                                var inst_12555 = cljs.core.count.call(null, inst_12554);
                                var inst_12556 = cljs.core.reset_BANG_.call(null, dctr, inst_12555);
                                var inst_12561 = cljs.core.seq.call(null, inst_12554);
                                var inst_12562 = inst_12561;
                                var inst_12563 = null;
                                var inst_12564 = 0;
                                var inst_12565 = 0;
                                var state_12619__$1 = function() {
                                  var statearr_12638 = state_12619;
                                  statearr_12638[8] = inst_12562;
                                  statearr_12638[17] = inst_12556;
                                  statearr_12638[9] = inst_12565;
                                  statearr_12638[10] = inst_12564;
                                  statearr_12638[11] = inst_12563;
                                  return statearr_12638
                                }();
                                var statearr_12639_12714 = state_12619__$1;
                                statearr_12639_12714[2] = null;
                                statearr_12639_12714[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_12620 === 38) {
                                  var inst_12603 = state_12619[2];
                                  var state_12619__$1 = state_12619;
                                  var statearr_12640_12715 = state_12619__$1;
                                  statearr_12640_12715[2] = inst_12603;
                                  statearr_12640_12715[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_12620 === 7) {
                                    var inst_12615 = state_12619[2];
                                    var state_12619__$1 = state_12619;
                                    var statearr_12641_12716 = state_12619__$1;
                                    statearr_12641_12716[2] = inst_12615;
                                    statearr_12641_12716[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_12620 === 39) {
                                      var inst_12582 = state_12619[7];
                                      var inst_12599 = state_12619[2];
                                      var inst_12600 = cljs.core.next.call(null, inst_12582);
                                      var inst_12562 = inst_12600;
                                      var inst_12563 = null;
                                      var inst_12564 = 0;
                                      var inst_12565 = 0;
                                      var state_12619__$1 = function() {
                                        var statearr_12642 = state_12619;
                                        statearr_12642[18] = inst_12599;
                                        statearr_12642[8] = inst_12562;
                                        statearr_12642[9] = inst_12565;
                                        statearr_12642[10] = inst_12564;
                                        statearr_12642[11] = inst_12563;
                                        return statearr_12642
                                      }();
                                      var statearr_12643_12717 = state_12619__$1;
                                      statearr_12643_12717[2] = null;
                                      statearr_12643_12717[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_12620 === 8) {
                                        var inst_12506 = state_12619[14];
                                        var inst_12505 = state_12619[15];
                                        var inst_12508 = inst_12506 < inst_12505;
                                        var inst_12509 = inst_12508;
                                        var state_12619__$1 = state_12619;
                                        if(cljs.core.truth_(inst_12509)) {
                                          var statearr_12644_12718 = state_12619__$1;
                                          statearr_12644_12718[1] = 10
                                        }else {
                                          var statearr_12645_12719 = state_12619__$1;
                                          statearr_12645_12719[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_12620 === 40) {
                                          var inst_12591 = state_12619[16];
                                          var inst_12592 = state_12619[2];
                                          var inst_12593 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_12594 = cljs.core.async.untap_STAR_.call(null, m, inst_12591);
                                          var state_12619__$1 = function() {
                                            var statearr_12646 = state_12619;
                                            statearr_12646[19] = inst_12592;
                                            statearr_12646[20] = inst_12593;
                                            return statearr_12646
                                          }();
                                          var statearr_12647_12720 = state_12619__$1;
                                          statearr_12647_12720[2] = inst_12594;
                                          statearr_12647_12720[1] = 39;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_12620 === 9) {
                                            var inst_12551 = state_12619[2];
                                            var state_12619__$1 = state_12619;
                                            var statearr_12648_12721 = state_12619__$1;
                                            statearr_12648_12721[2] = inst_12551;
                                            statearr_12648_12721[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_12620 === 41) {
                                              try {
                                                var inst_12591 = state_12619[16];
                                                var inst_12494 = state_12619[6];
                                                var inst_12597 = cljs.core.async.put_BANG_.call(null, inst_12591, inst_12494, done);
                                                var state_12619__$1 = state_12619;
                                                var statearr_12651_12722 = state_12619__$1;
                                                statearr_12651_12722[2] = inst_12597;
                                                statearr_12651_12722[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }catch(e12649) {
                                                if(e12649 instanceof Object) {
                                                  var ex__5149__auto__ = e12649;
                                                  var statearr_12650_12723 = state_12619;
                                                  statearr_12650_12723[1] = 40;
                                                  statearr_12650_12723[2] = ex__5149__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e12649;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_12620 === 10) {
                                                var inst_12504 = state_12619[13];
                                                var inst_12506 = state_12619[14];
                                                var inst_12512 = cljs.core._nth.call(null, inst_12504, inst_12506);
                                                var inst_12513 = cljs.core.nth.call(null, inst_12512, 0, null);
                                                var inst_12514 = cljs.core.nth.call(null, inst_12512, 1, null);
                                                var state_12619__$1 = function() {
                                                  var statearr_12652 = state_12619;
                                                  statearr_12652[21] = inst_12513;
                                                  return statearr_12652
                                                }();
                                                if(cljs.core.truth_(inst_12514)) {
                                                  var statearr_12653_12724 = state_12619__$1;
                                                  statearr_12653_12724[1] = 13
                                                }else {
                                                  var statearr_12654_12725 = state_12619__$1;
                                                  statearr_12654_12725[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_12620 === 42) {
                                                  var inst_12612 = state_12619[2];
                                                  var state_12619__$1 = function() {
                                                    var statearr_12655 = state_12619;
                                                    statearr_12655[22] = inst_12612;
                                                    return statearr_12655
                                                  }();
                                                  var statearr_12656_12726 = state_12619__$1;
                                                  statearr_12656_12726[2] = null;
                                                  statearr_12656_12726[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_12620 === 11) {
                                                    var inst_12503 = state_12619[12];
                                                    var inst_12523 = state_12619[23];
                                                    var inst_12523__$1 = cljs.core.seq.call(null, inst_12503);
                                                    var state_12619__$1 = function() {
                                                      var statearr_12657 = state_12619;
                                                      statearr_12657[23] = inst_12523__$1;
                                                      return statearr_12657
                                                    }();
                                                    if(inst_12523__$1) {
                                                      var statearr_12658_12727 = state_12619__$1;
                                                      statearr_12658_12727[1] = 16
                                                    }else {
                                                      var statearr_12659_12728 = state_12619__$1;
                                                      statearr_12659_12728[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_12620 === 12) {
                                                      var inst_12549 = state_12619[2];
                                                      var state_12619__$1 = state_12619;
                                                      var statearr_12660_12729 = state_12619__$1;
                                                      statearr_12660_12729[2] = inst_12549;
                                                      statearr_12660_12729[1] = 9;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_12620 === 13) {
                                                        var inst_12513 = state_12619[21];
                                                        var inst_12516 = cljs.core.async.close_BANG_.call(null, inst_12513);
                                                        var state_12619__$1 = state_12619;
                                                        var statearr_12664_12730 = state_12619__$1;
                                                        statearr_12664_12730[2] = inst_12516;
                                                        statearr_12664_12730[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_12620 === 14) {
                                                          var state_12619__$1 = state_12619;
                                                          var statearr_12665_12731 = state_12619__$1;
                                                          statearr_12665_12731[2] = null;
                                                          statearr_12665_12731[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_12620 === 15) {
                                                            var inst_12503 = state_12619[12];
                                                            var inst_12504 = state_12619[13];
                                                            var inst_12506 = state_12619[14];
                                                            var inst_12505 = state_12619[15];
                                                            var inst_12519 = state_12619[2];
                                                            var inst_12520 = inst_12506 + 1;
                                                            var tmp12661 = inst_12503;
                                                            var tmp12662 = inst_12504;
                                                            var tmp12663 = inst_12505;
                                                            var inst_12503__$1 = tmp12661;
                                                            var inst_12504__$1 = tmp12662;
                                                            var inst_12505__$1 = tmp12663;
                                                            var inst_12506__$1 = inst_12520;
                                                            var state_12619__$1 = function() {
                                                              var statearr_12666 = state_12619;
                                                              statearr_12666[24] = inst_12519;
                                                              statearr_12666[12] = inst_12503__$1;
                                                              statearr_12666[13] = inst_12504__$1;
                                                              statearr_12666[14] = inst_12506__$1;
                                                              statearr_12666[15] = inst_12505__$1;
                                                              return statearr_12666
                                                            }();
                                                            var statearr_12667_12732 = state_12619__$1;
                                                            statearr_12667_12732[2] = null;
                                                            statearr_12667_12732[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_12620 === 16) {
                                                              var inst_12523 = state_12619[23];
                                                              var inst_12525 = cljs.core.chunked_seq_QMARK_.call(null, inst_12523);
                                                              var state_12619__$1 = state_12619;
                                                              if(inst_12525) {
                                                                var statearr_12668_12733 = state_12619__$1;
                                                                statearr_12668_12733[1] = 19
                                                              }else {
                                                                var statearr_12669_12734 = state_12619__$1;
                                                                statearr_12669_12734[1] = 20
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_12620 === 17) {
                                                                var state_12619__$1 = state_12619;
                                                                var statearr_12670_12735 = state_12619__$1;
                                                                statearr_12670_12735[2] = null;
                                                                statearr_12670_12735[1] = 18;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_12620 === 18) {
                                                                  var inst_12547 = state_12619[2];
                                                                  var state_12619__$1 = state_12619;
                                                                  var statearr_12671_12736 = state_12619__$1;
                                                                  statearr_12671_12736[2] = inst_12547;
                                                                  statearr_12671_12736[1] = 12;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_12620 === 19) {
                                                                    var inst_12523 = state_12619[23];
                                                                    var inst_12527 = cljs.core.chunk_first.call(null, inst_12523);
                                                                    var inst_12528 = cljs.core.chunk_rest.call(null, inst_12523);
                                                                    var inst_12529 = cljs.core.count.call(null, inst_12527);
                                                                    var inst_12503 = inst_12528;
                                                                    var inst_12504 = inst_12527;
                                                                    var inst_12505 = inst_12529;
                                                                    var inst_12506 = 0;
                                                                    var state_12619__$1 = function() {
                                                                      var statearr_12672 = state_12619;
                                                                      statearr_12672[12] = inst_12503;
                                                                      statearr_12672[13] = inst_12504;
                                                                      statearr_12672[14] = inst_12506;
                                                                      statearr_12672[15] = inst_12505;
                                                                      return statearr_12672
                                                                    }();
                                                                    var statearr_12673_12737 = state_12619__$1;
                                                                    statearr_12673_12737[2] = null;
                                                                    statearr_12673_12737[1] = 8;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_12620 === 20) {
                                                                      var inst_12523 = state_12619[23];
                                                                      var inst_12533 = cljs.core.first.call(null, inst_12523);
                                                                      var inst_12534 = cljs.core.nth.call(null, inst_12533, 0, null);
                                                                      var inst_12535 = cljs.core.nth.call(null, inst_12533, 1, null);
                                                                      var state_12619__$1 = function() {
                                                                        var statearr_12674 = state_12619;
                                                                        statearr_12674[25] = inst_12534;
                                                                        return statearr_12674
                                                                      }();
                                                                      if(cljs.core.truth_(inst_12535)) {
                                                                        var statearr_12675_12738 = state_12619__$1;
                                                                        statearr_12675_12738[1] = 22
                                                                      }else {
                                                                        var statearr_12676_12739 = state_12619__$1;
                                                                        statearr_12676_12739[1] = 23
                                                                      }
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_12620 === 21) {
                                                                        var inst_12544 = state_12619[2];
                                                                        var state_12619__$1 = state_12619;
                                                                        var statearr_12677_12740 = state_12619__$1;
                                                                        statearr_12677_12740[2] = inst_12544;
                                                                        statearr_12677_12740[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_12620 === 22) {
                                                                          var inst_12534 = state_12619[25];
                                                                          var inst_12537 = cljs.core.async.close_BANG_.call(null, inst_12534);
                                                                          var state_12619__$1 = state_12619;
                                                                          var statearr_12678_12741 = state_12619__$1;
                                                                          statearr_12678_12741[2] = inst_12537;
                                                                          statearr_12678_12741[1] = 24;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_12620 === 23) {
                                                                            var state_12619__$1 = state_12619;
                                                                            var statearr_12679_12742 = state_12619__$1;
                                                                            statearr_12679_12742[2] = null;
                                                                            statearr_12679_12742[1] = 24;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_12620 === 24) {
                                                                              var inst_12523 = state_12619[23];
                                                                              var inst_12540 = state_12619[2];
                                                                              var inst_12541 = cljs.core.next.call(null, inst_12523);
                                                                              var inst_12503 = inst_12541;
                                                                              var inst_12504 = null;
                                                                              var inst_12505 = 0;
                                                                              var inst_12506 = 0;
                                                                              var state_12619__$1 = function() {
                                                                                var statearr_12680 = state_12619;
                                                                                statearr_12680[26] = inst_12540;
                                                                                statearr_12680[12] = inst_12503;
                                                                                statearr_12680[13] = inst_12504;
                                                                                statearr_12680[14] = inst_12506;
                                                                                statearr_12680[15] = inst_12505;
                                                                                return statearr_12680
                                                                              }();
                                                                              var statearr_12681_12743 = state_12619__$1;
                                                                              statearr_12681_12743[2] = null;
                                                                              statearr_12681_12743[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_12620 === 25) {
                                                                                var inst_12565 = state_12619[9];
                                                                                var inst_12564 = state_12619[10];
                                                                                var inst_12567 = inst_12565 < inst_12564;
                                                                                var inst_12568 = inst_12567;
                                                                                var state_12619__$1 = state_12619;
                                                                                if(cljs.core.truth_(inst_12568)) {
                                                                                  var statearr_12682_12744 = state_12619__$1;
                                                                                  statearr_12682_12744[1] = 27
                                                                                }else {
                                                                                  var statearr_12683_12745 = state_12619__$1;
                                                                                  statearr_12683_12745[1] = 28
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_12620 === 26) {
                                                                                  var inst_12610 = state_12619[2];
                                                                                  var state_12619__$1 = function() {
                                                                                    var statearr_12684 = state_12619;
                                                                                    statearr_12684[27] = inst_12610;
                                                                                    return statearr_12684
                                                                                  }();
                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12619__$1, 42, dchan)
                                                                                }else {
                                                                                  if(state_val_12620 === 27) {
                                                                                    var inst_12565 = state_12619[9];
                                                                                    var inst_12563 = state_12619[11];
                                                                                    var inst_12570 = cljs.core._nth.call(null, inst_12563, inst_12565);
                                                                                    var state_12619__$1 = function() {
                                                                                      var statearr_12685 = state_12619;
                                                                                      statearr_12685[5] = inst_12570;
                                                                                      return statearr_12685
                                                                                    }();
                                                                                    var statearr_12686_12746 = state_12619__$1;
                                                                                    statearr_12686_12746[2] = null;
                                                                                    statearr_12686_12746[1] = 32;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_12620 === 28) {
                                                                                      var inst_12582 = state_12619[7];
                                                                                      var inst_12562 = state_12619[8];
                                                                                      var inst_12582__$1 = cljs.core.seq.call(null, inst_12562);
                                                                                      var state_12619__$1 = function() {
                                                                                        var statearr_12690 = state_12619;
                                                                                        statearr_12690[7] = inst_12582__$1;
                                                                                        return statearr_12690
                                                                                      }();
                                                                                      if(inst_12582__$1) {
                                                                                        var statearr_12691_12747 = state_12619__$1;
                                                                                        statearr_12691_12747[1] = 33
                                                                                      }else {
                                                                                        var statearr_12692_12748 = state_12619__$1;
                                                                                        statearr_12692_12748[1] = 34
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_12620 === 29) {
                                                                                        var inst_12608 = state_12619[2];
                                                                                        var state_12619__$1 = state_12619;
                                                                                        var statearr_12693_12749 = state_12619__$1;
                                                                                        statearr_12693_12749[2] = inst_12608;
                                                                                        statearr_12693_12749[1] = 26;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_12620 === 30) {
                                                                                          var inst_12562 = state_12619[8];
                                                                                          var inst_12565 = state_12619[9];
                                                                                          var inst_12564 = state_12619[10];
                                                                                          var inst_12563 = state_12619[11];
                                                                                          var inst_12578 = state_12619[2];
                                                                                          var inst_12579 = inst_12565 + 1;
                                                                                          var tmp12687 = inst_12562;
                                                                                          var tmp12688 = inst_12564;
                                                                                          var tmp12689 = inst_12563;
                                                                                          var inst_12562__$1 = tmp12687;
                                                                                          var inst_12563__$1 = tmp12689;
                                                                                          var inst_12564__$1 = tmp12688;
                                                                                          var inst_12565__$1 = inst_12579;
                                                                                          var state_12619__$1 = function() {
                                                                                            var statearr_12694 = state_12619;
                                                                                            statearr_12694[28] = inst_12578;
                                                                                            statearr_12694[8] = inst_12562__$1;
                                                                                            statearr_12694[9] = inst_12565__$1;
                                                                                            statearr_12694[10] = inst_12564__$1;
                                                                                            statearr_12694[11] = inst_12563__$1;
                                                                                            return statearr_12694
                                                                                          }();
                                                                                          var statearr_12695_12750 = state_12619__$1;
                                                                                          statearr_12695_12750[2] = null;
                                                                                          statearr_12695_12750[1] = 25;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_12620 === 31) {
                                                                                            var inst_12570 = state_12619[5];
                                                                                            var inst_12571 = state_12619[2];
                                                                                            var inst_12572 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                            var inst_12573 = cljs.core.async.untap_STAR_.call(null, m, inst_12570);
                                                                                            var state_12619__$1 = function() {
                                                                                              var statearr_12696 = state_12619;
                                                                                              statearr_12696[29] = inst_12572;
                                                                                              statearr_12696[30] = inst_12571;
                                                                                              return statearr_12696
                                                                                            }();
                                                                                            var statearr_12697_12751 = state_12619__$1;
                                                                                            statearr_12697_12751[2] = inst_12573;
                                                                                            statearr_12697_12751[1] = 30;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_12699 = new Array(31);
            statearr_12699[0] = state_machine__5156__auto__;
            statearr_12699[1] = 1;
            return statearr_12699
          };
          var state_machine__5156__auto____1 = function(state_12619) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_12619);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_12619) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_12619)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_12700 = f__5206__auto__.call(null);
      statearr_12700[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___12701;
      return statearr_12700
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3941__auto__ = m;
    if(and__3941__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3941__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3394__auto__ = m == null ? null : m;
    return function() {
      var or__3943__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], true);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, function() {
        var and__3941__auto__ = cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424));
        if(and__3941__auto__) {
          return!cljs.core.empty_QMARK_.call(null, solos)
        }else {
          return and__3941__auto__
        }
      }() ? cljs.core.vec.call(null, solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], true)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t12872 !== "undefined") {
    }else {
      goog.provide("cljs.core.async.t12872");
      cljs.core.async.t12872 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta12873) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta12873 = meta12873;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t12872.cljs$lang$type = true;
      cljs.core.async.t12872.cljs$lang$ctorStr = "cljs.core.async/t12872";
      cljs.core.async.t12872.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
          return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t12872")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t12872.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t12872.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12874) {
          var self__ = this;
          return self__.meta12873
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t12872.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_12874, meta12873__$1) {
          var self__ = this;
          return new cljs.core.async.t12872(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta12873__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t12872 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t12872(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12873) {
          return new cljs.core.async.t12872(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta12873)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t12872(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__5205__auto___12992 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_12945) {
        var state_val_12946 = state_12945[1];
        if(state_val_12946 === 1) {
          var inst_12878 = state_12945[5];
          var inst_12878__$1 = calc_state.call(null);
          var inst_12879 = cljs.core.seq_QMARK_.call(null, inst_12878__$1);
          var state_12945__$1 = function() {
            var statearr_12947 = state_12945;
            statearr_12947[5] = inst_12878__$1;
            return statearr_12947
          }();
          if(inst_12879) {
            var statearr_12948_12993 = state_12945__$1;
            statearr_12948_12993[1] = 2
          }else {
            var statearr_12949_12994 = state_12945__$1;
            statearr_12949_12994[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_12946 === 2) {
            var inst_12878 = state_12945[5];
            var inst_12881 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12878);
            var state_12945__$1 = state_12945;
            var statearr_12950_12995 = state_12945__$1;
            statearr_12950_12995[2] = inst_12881;
            statearr_12950_12995[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12946 === 3) {
              var inst_12878 = state_12945[5];
              var state_12945__$1 = state_12945;
              var statearr_12951_12996 = state_12945__$1;
              statearr_12951_12996[2] = inst_12878;
              statearr_12951_12996[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_12946 === 4) {
                var inst_12878 = state_12945[5];
                var inst_12884 = state_12945[2];
                var inst_12885 = cljs.core.get.call(null, inst_12884, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_12886 = cljs.core.get.call(null, inst_12884, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_12887 = cljs.core.get.call(null, inst_12884, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_12888 = inst_12878;
                var state_12945__$1 = function() {
                  var statearr_12952 = state_12945;
                  statearr_12952[6] = inst_12886;
                  statearr_12952[7] = inst_12887;
                  statearr_12952[8] = inst_12888;
                  statearr_12952[9] = inst_12885;
                  return statearr_12952
                }();
                var statearr_12953_12997 = state_12945__$1;
                statearr_12953_12997[2] = null;
                statearr_12953_12997[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_12946 === 5) {
                  var inst_12888 = state_12945[8];
                  var inst_12891 = cljs.core.seq_QMARK_.call(null, inst_12888);
                  var state_12945__$1 = state_12945;
                  if(inst_12891) {
                    var statearr_12954_12998 = state_12945__$1;
                    statearr_12954_12998[1] = 7
                  }else {
                    var statearr_12955_12999 = state_12945__$1;
                    statearr_12955_12999[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_12946 === 6) {
                    var inst_12943 = state_12945[2];
                    var state_12945__$1 = state_12945;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12945__$1, inst_12943)
                  }else {
                    if(state_val_12946 === 7) {
                      var inst_12888 = state_12945[8];
                      var inst_12893 = cljs.core.apply.call(null, cljs.core.hash_map, inst_12888);
                      var state_12945__$1 = state_12945;
                      var statearr_12956_13000 = state_12945__$1;
                      statearr_12956_13000[2] = inst_12893;
                      statearr_12956_13000[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_12946 === 8) {
                        var inst_12888 = state_12945[8];
                        var state_12945__$1 = state_12945;
                        var statearr_12957_13001 = state_12945__$1;
                        statearr_12957_13001[2] = inst_12888;
                        statearr_12957_13001[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_12946 === 9) {
                          var inst_12896 = state_12945[10];
                          var inst_12896__$1 = state_12945[2];
                          var inst_12897 = cljs.core.get.call(null, inst_12896__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_12898 = cljs.core.get.call(null, inst_12896__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_12899 = cljs.core.get.call(null, inst_12896__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_12945__$1 = function() {
                            var statearr_12958 = state_12945;
                            statearr_12958[11] = inst_12898;
                            statearr_12958[12] = inst_12899;
                            statearr_12958[10] = inst_12896__$1;
                            return statearr_12958
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12945__$1, 10, inst_12897)
                        }else {
                          if(state_val_12946 === 10) {
                            var inst_12903 = state_12945[13];
                            var inst_12905 = state_12945[14];
                            var inst_12902 = state_12945[2];
                            var inst_12903__$1 = cljs.core.nth.call(null, inst_12902, 0, null);
                            var inst_12904 = cljs.core.nth.call(null, inst_12902, 1, null);
                            var inst_12905__$1 = inst_12903__$1 == null;
                            var state_12945__$1 = function() {
                              var statearr_12959 = state_12945;
                              statearr_12959[15] = inst_12904;
                              statearr_12959[13] = inst_12903__$1;
                              statearr_12959[14] = inst_12905__$1;
                              return statearr_12959
                            }();
                            if(cljs.core.truth_(inst_12905__$1)) {
                              var statearr_12960_13002 = state_12945__$1;
                              statearr_12960_13002[1] = 11
                            }else {
                              var statearr_12961_13003 = state_12945__$1;
                              statearr_12961_13003[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_12946 === 11) {
                              var inst_12905 = state_12945[14];
                              var state_12945__$1 = state_12945;
                              var statearr_12962_13004 = state_12945__$1;
                              statearr_12962_13004[2] = inst_12905;
                              statearr_12962_13004[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_12946 === 12) {
                                var inst_12904 = state_12945[15];
                                var inst_12908 = cljs.core._EQ_.call(null, inst_12904, change);
                                var state_12945__$1 = state_12945;
                                var statearr_12963_13005 = state_12945__$1;
                                statearr_12963_13005[2] = inst_12908;
                                statearr_12963_13005[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_12946 === 13) {
                                  var inst_12910 = state_12945[2];
                                  var state_12945__$1 = state_12945;
                                  if(cljs.core.truth_(inst_12910)) {
                                    var statearr_12964_13006 = state_12945__$1;
                                    statearr_12964_13006[1] = 14
                                  }else {
                                    var statearr_12965_13007 = state_12945__$1;
                                    statearr_12965_13007[1] = 15
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_12946 === 14) {
                                    var inst_12903 = state_12945[13];
                                    var inst_12912 = inst_12903 == null;
                                    var state_12945__$1 = state_12945;
                                    if(cljs.core.truth_(inst_12912)) {
                                      var statearr_12966_13008 = state_12945__$1;
                                      statearr_12966_13008[1] = 17
                                    }else {
                                      var statearr_12967_13009 = state_12945__$1;
                                      statearr_12967_13009[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_12946 === 15) {
                                      var inst_12899 = state_12945[12];
                                      var inst_12921 = state_12945[16];
                                      var inst_12904 = state_12945[15];
                                      var inst_12921__$1 = inst_12899.call(null, inst_12904);
                                      var state_12945__$1 = function() {
                                        var statearr_12968 = state_12945;
                                        statearr_12968[16] = inst_12921__$1;
                                        return statearr_12968
                                      }();
                                      if(cljs.core.truth_(inst_12921__$1)) {
                                        var statearr_12969_13010 = state_12945__$1;
                                        statearr_12969_13010[1] = 20
                                      }else {
                                        var statearr_12970_13011 = state_12945__$1;
                                        statearr_12970_13011[1] = 21
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_12946 === 16) {
                                        var inst_12941 = state_12945[2];
                                        var state_12945__$1 = state_12945;
                                        var statearr_12971_13012 = state_12945__$1;
                                        statearr_12971_13012[2] = inst_12941;
                                        statearr_12971_13012[1] = 6;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_12946 === 17) {
                                          var inst_12904 = state_12945[15];
                                          var inst_12914 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_12904);
                                          var state_12945__$1 = state_12945;
                                          var statearr_12972_13013 = state_12945__$1;
                                          statearr_12972_13013[2] = inst_12914;
                                          statearr_12972_13013[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_12946 === 18) {
                                            var state_12945__$1 = state_12945;
                                            var statearr_12973_13014 = state_12945__$1;
                                            statearr_12973_13014[2] = null;
                                            statearr_12973_13014[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_12946 === 19) {
                                              var inst_12917 = state_12945[2];
                                              var inst_12918 = calc_state.call(null);
                                              var inst_12888 = inst_12918;
                                              var state_12945__$1 = function() {
                                                var statearr_12974 = state_12945;
                                                statearr_12974[17] = inst_12917;
                                                statearr_12974[8] = inst_12888;
                                                return statearr_12974
                                              }();
                                              var statearr_12975_13015 = state_12945__$1;
                                              statearr_12975_13015[2] = null;
                                              statearr_12975_13015[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_12946 === 20) {
                                                var inst_12921 = state_12945[16];
                                                var state_12945__$1 = state_12945;
                                                var statearr_12976_13016 = state_12945__$1;
                                                statearr_12976_13016[2] = inst_12921;
                                                statearr_12976_13016[1] = 22;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_12946 === 21) {
                                                  var inst_12924 = state_12945[18];
                                                  var inst_12899 = state_12945[12];
                                                  var inst_12924__$1 = cljs.core.empty_QMARK_.call(null, inst_12899);
                                                  var state_12945__$1 = function() {
                                                    var statearr_12977 = state_12945;
                                                    statearr_12977[18] = inst_12924__$1;
                                                    return statearr_12977
                                                  }();
                                                  if(inst_12924__$1) {
                                                    var statearr_12978_13017 = state_12945__$1;
                                                    statearr_12978_13017[1] = 23
                                                  }else {
                                                    var statearr_12979_13018 = state_12945__$1;
                                                    statearr_12979_13018[1] = 24
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_12946 === 22) {
                                                    var inst_12932 = state_12945[2];
                                                    var state_12945__$1 = state_12945;
                                                    if(cljs.core.truth_(inst_12932)) {
                                                      var statearr_12980_13019 = state_12945__$1;
                                                      statearr_12980_13019[1] = 26
                                                    }else {
                                                      var statearr_12981_13020 = state_12945__$1;
                                                      statearr_12981_13020[1] = 27
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_12946 === 23) {
                                                      var inst_12898 = state_12945[11];
                                                      var inst_12904 = state_12945[15];
                                                      var inst_12926 = inst_12898.call(null, inst_12904);
                                                      var inst_12927 = cljs.core.not.call(null, inst_12926);
                                                      var state_12945__$1 = state_12945;
                                                      var statearr_12982_13021 = state_12945__$1;
                                                      statearr_12982_13021[2] = inst_12927;
                                                      statearr_12982_13021[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_12946 === 24) {
                                                        var inst_12924 = state_12945[18];
                                                        var state_12945__$1 = state_12945;
                                                        var statearr_12983_13022 = state_12945__$1;
                                                        statearr_12983_13022[2] = inst_12924;
                                                        statearr_12983_13022[1] = 25;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_12946 === 25) {
                                                          var inst_12930 = state_12945[2];
                                                          var state_12945__$1 = state_12945;
                                                          var statearr_12984_13023 = state_12945__$1;
                                                          statearr_12984_13023[2] = inst_12930;
                                                          statearr_12984_13023[1] = 22;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_12946 === 26) {
                                                            var inst_12903 = state_12945[13];
                                                            var state_12945__$1 = state_12945;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12945__$1, 29, out, inst_12903)
                                                          }else {
                                                            if(state_val_12946 === 27) {
                                                              var state_12945__$1 = state_12945;
                                                              var statearr_12985_13024 = state_12945__$1;
                                                              statearr_12985_13024[2] = null;
                                                              statearr_12985_13024[1] = 28;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_12946 === 28) {
                                                                var inst_12896 = state_12945[10];
                                                                var inst_12938 = state_12945[2];
                                                                var inst_12888 = inst_12896;
                                                                var state_12945__$1 = function() {
                                                                  var statearr_12986 = state_12945;
                                                                  statearr_12986[19] = inst_12938;
                                                                  statearr_12986[8] = inst_12888;
                                                                  return statearr_12986
                                                                }();
                                                                var statearr_12987_13025 = state_12945__$1;
                                                                statearr_12987_13025[2] = null;
                                                                statearr_12987_13025[1] = 5;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_12946 === 29) {
                                                                  var inst_12935 = state_12945[2];
                                                                  var state_12945__$1 = state_12945;
                                                                  var statearr_12988_13026 = state_12945__$1;
                                                                  statearr_12988_13026[2] = inst_12935;
                                                                  statearr_12988_13026[1] = 28;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_12990 = new Array(20);
            statearr_12990[0] = state_machine__5156__auto__;
            statearr_12990[1] = 1;
            return statearr_12990
          };
          var state_machine__5156__auto____1 = function(state_12945) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_12945);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_12945) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_12945)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_12991 = f__5206__auto__.call(null);
      statearr_12991[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___12992;
      return statearr_12991
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3941__auto__ = p;
    if(and__3941__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3941__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3394__auto__ = p == null ? null : p;
    return function() {
      var or__3943__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3941__auto__ = p;
    if(and__3941__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3941__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3394__auto__ = p == null ? null : p;
    return function() {
      var or__3943__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3394__auto__)];
      if(or__3943__auto__) {
        return or__3943__auto__
      }else {
        var or__3943__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3943__auto____$1) {
          return or__3943__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3941__auto__ = p;
      if(and__3941__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3941__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3394__auto__ = p == null ? null : p;
      return function() {
        var or__3943__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3941__auto__ = p;
      if(and__3941__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3941__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3394__auto__ = p == null ? null : p;
      return function() {
        var or__3943__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3394__auto__)];
        if(or__3943__auto__) {
          return or__3943__auto__
        }else {
          var or__3943__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3943__auto____$1) {
            return or__3943__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3943__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3943__auto__)) {
          return or__3943__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3943__auto__, mults) {
            return function(p1__13027_SHARP_) {
              if(cljs.core.truth_(p1__13027_SHARP_.call(null, topic))) {
                return p1__13027_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__13027_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3943__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t13151 !== "undefined") {
      }else {
        goog.provide("cljs.core.async.t13151");
        cljs.core.async.t13151 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta13152) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta13152 = meta13152;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t13151.cljs$lang$type = true;
        cljs.core.async.t13151.cljs$lang$ctorStr = "cljs.core.async/t13151";
        cljs.core.async.t13151.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3335__auto__, writer__3336__auto__, opt__3337__auto__) {
            return cljs.core._write.call(null, writer__3336__auto__, "cljs.core.async/t13151")
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t13151.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t13151.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_13153) {
            var self__ = this;
            return self__.meta13152
          }
        }(mults, ensure_mult);
        cljs.core.async.t13151.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_13153, meta13152__$1) {
            var self__ = this;
            return new cljs.core.async.t13151(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta13152__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t13151 = function(mults, ensure_mult) {
          return function __GT_t13151(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta13152) {
            return new cljs.core.async.t13151(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta13152)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t13151(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__5205__auto___13274 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_13226) {
          var state_val_13227 = state_13226[1];
          if(state_val_13227 === 1) {
            var state_13226__$1 = state_13226;
            var statearr_13228_13275 = state_13226__$1;
            statearr_13228_13275[2] = null;
            statearr_13228_13275[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_13227 === 2) {
              var state_13226__$1 = state_13226;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13226__$1, 4, ch)
            }else {
              if(state_val_13227 === 3) {
                var inst_13224 = state_13226[2];
                var state_13226__$1 = state_13226;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13226__$1, inst_13224)
              }else {
                if(state_val_13227 === 4) {
                  var inst_13156 = state_13226[5];
                  var inst_13156__$1 = state_13226[2];
                  var inst_13157 = inst_13156__$1 == null;
                  var state_13226__$1 = function() {
                    var statearr_13229 = state_13226;
                    statearr_13229[5] = inst_13156__$1;
                    return statearr_13229
                  }();
                  if(cljs.core.truth_(inst_13157)) {
                    var statearr_13230_13276 = state_13226__$1;
                    statearr_13230_13276[1] = 5
                  }else {
                    var statearr_13231_13277 = state_13226__$1;
                    statearr_13231_13277[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_13227 === 5) {
                    var inst_13163 = cljs.core.deref.call(null, mults);
                    var inst_13164 = cljs.core.vals.call(null, inst_13163);
                    var inst_13165 = cljs.core.seq.call(null, inst_13164);
                    var inst_13166 = inst_13165;
                    var inst_13167 = null;
                    var inst_13168 = 0;
                    var inst_13169 = 0;
                    var state_13226__$1 = function() {
                      var statearr_13232 = state_13226;
                      statearr_13232[6] = inst_13169;
                      statearr_13232[7] = inst_13168;
                      statearr_13232[8] = inst_13166;
                      statearr_13232[9] = inst_13167;
                      return statearr_13232
                    }();
                    var statearr_13233_13278 = state_13226__$1;
                    statearr_13233_13278[2] = null;
                    statearr_13233_13278[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_13227 === 6) {
                      var inst_13156 = state_13226[5];
                      var inst_13204 = state_13226[10];
                      var inst_13206 = state_13226[11];
                      var inst_13204__$1 = topic_fn.call(null, inst_13156);
                      var inst_13205 = cljs.core.deref.call(null, mults);
                      var inst_13206__$1 = cljs.core.get.call(null, inst_13205, inst_13204__$1);
                      var state_13226__$1 = function() {
                        var statearr_13234 = state_13226;
                        statearr_13234[10] = inst_13204__$1;
                        statearr_13234[11] = inst_13206__$1;
                        return statearr_13234
                      }();
                      if(cljs.core.truth_(inst_13206__$1)) {
                        var statearr_13235_13279 = state_13226__$1;
                        statearr_13235_13279[1] = 19
                      }else {
                        var statearr_13236_13280 = state_13226__$1;
                        statearr_13236_13280[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_13227 === 7) {
                        var inst_13222 = state_13226[2];
                        var state_13226__$1 = state_13226;
                        var statearr_13237_13281 = state_13226__$1;
                        statearr_13237_13281[2] = inst_13222;
                        statearr_13237_13281[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_13227 === 8) {
                          var inst_13169 = state_13226[6];
                          var inst_13168 = state_13226[7];
                          var inst_13171 = inst_13169 < inst_13168;
                          var inst_13172 = inst_13171;
                          var state_13226__$1 = state_13226;
                          if(cljs.core.truth_(inst_13172)) {
                            var statearr_13241_13282 = state_13226__$1;
                            statearr_13241_13282[1] = 10
                          }else {
                            var statearr_13242_13283 = state_13226__$1;
                            statearr_13242_13283[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_13227 === 9) {
                            var inst_13202 = state_13226[2];
                            var state_13226__$1 = state_13226;
                            var statearr_13243_13284 = state_13226__$1;
                            statearr_13243_13284[2] = inst_13202;
                            statearr_13243_13284[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_13227 === 10) {
                              var inst_13169 = state_13226[6];
                              var inst_13168 = state_13226[7];
                              var inst_13166 = state_13226[8];
                              var inst_13167 = state_13226[9];
                              var inst_13174 = cljs.core._nth.call(null, inst_13167, inst_13169);
                              var inst_13175 = cljs.core.async.muxch_STAR_.call(null, inst_13174);
                              var inst_13176 = cljs.core.async.close_BANG_.call(null, inst_13175);
                              var inst_13177 = inst_13169 + 1;
                              var tmp13238 = inst_13168;
                              var tmp13239 = inst_13166;
                              var tmp13240 = inst_13167;
                              var inst_13166__$1 = tmp13239;
                              var inst_13167__$1 = tmp13240;
                              var inst_13168__$1 = tmp13238;
                              var inst_13169__$1 = inst_13177;
                              var state_13226__$1 = function() {
                                var statearr_13244 = state_13226;
                                statearr_13244[6] = inst_13169__$1;
                                statearr_13244[7] = inst_13168__$1;
                                statearr_13244[8] = inst_13166__$1;
                                statearr_13244[9] = inst_13167__$1;
                                statearr_13244[12] = inst_13176;
                                return statearr_13244
                              }();
                              var statearr_13245_13285 = state_13226__$1;
                              statearr_13245_13285[2] = null;
                              statearr_13245_13285[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_13227 === 11) {
                                var inst_13180 = state_13226[13];
                                var inst_13166 = state_13226[8];
                                var inst_13180__$1 = cljs.core.seq.call(null, inst_13166);
                                var state_13226__$1 = function() {
                                  var statearr_13246 = state_13226;
                                  statearr_13246[13] = inst_13180__$1;
                                  return statearr_13246
                                }();
                                if(inst_13180__$1) {
                                  var statearr_13247_13286 = state_13226__$1;
                                  statearr_13247_13286[1] = 13
                                }else {
                                  var statearr_13248_13287 = state_13226__$1;
                                  statearr_13248_13287[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_13227 === 12) {
                                  var inst_13200 = state_13226[2];
                                  var state_13226__$1 = state_13226;
                                  var statearr_13249_13288 = state_13226__$1;
                                  statearr_13249_13288[2] = inst_13200;
                                  statearr_13249_13288[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_13227 === 13) {
                                    var inst_13180 = state_13226[13];
                                    var inst_13182 = cljs.core.chunked_seq_QMARK_.call(null, inst_13180);
                                    var state_13226__$1 = state_13226;
                                    if(inst_13182) {
                                      var statearr_13250_13289 = state_13226__$1;
                                      statearr_13250_13289[1] = 16
                                    }else {
                                      var statearr_13251_13290 = state_13226__$1;
                                      statearr_13251_13290[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_13227 === 14) {
                                      var state_13226__$1 = state_13226;
                                      var statearr_13252_13291 = state_13226__$1;
                                      statearr_13252_13291[2] = null;
                                      statearr_13252_13291[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_13227 === 15) {
                                        var inst_13198 = state_13226[2];
                                        var state_13226__$1 = state_13226;
                                        var statearr_13253_13292 = state_13226__$1;
                                        statearr_13253_13292[2] = inst_13198;
                                        statearr_13253_13292[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_13227 === 16) {
                                          var inst_13180 = state_13226[13];
                                          var inst_13184 = cljs.core.chunk_first.call(null, inst_13180);
                                          var inst_13185 = cljs.core.chunk_rest.call(null, inst_13180);
                                          var inst_13186 = cljs.core.count.call(null, inst_13184);
                                          var inst_13166 = inst_13185;
                                          var inst_13167 = inst_13184;
                                          var inst_13168 = inst_13186;
                                          var inst_13169 = 0;
                                          var state_13226__$1 = function() {
                                            var statearr_13254 = state_13226;
                                            statearr_13254[6] = inst_13169;
                                            statearr_13254[7] = inst_13168;
                                            statearr_13254[8] = inst_13166;
                                            statearr_13254[9] = inst_13167;
                                            return statearr_13254
                                          }();
                                          var statearr_13255_13293 = state_13226__$1;
                                          statearr_13255_13293[2] = null;
                                          statearr_13255_13293[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_13227 === 17) {
                                            var inst_13180 = state_13226[13];
                                            var inst_13189 = cljs.core.first.call(null, inst_13180);
                                            var inst_13190 = cljs.core.async.muxch_STAR_.call(null, inst_13189);
                                            var inst_13191 = cljs.core.async.close_BANG_.call(null, inst_13190);
                                            var inst_13192 = cljs.core.next.call(null, inst_13180);
                                            var inst_13166 = inst_13192;
                                            var inst_13167 = null;
                                            var inst_13168 = 0;
                                            var inst_13169 = 0;
                                            var state_13226__$1 = function() {
                                              var statearr_13256 = state_13226;
                                              statearr_13256[6] = inst_13169;
                                              statearr_13256[7] = inst_13168;
                                              statearr_13256[8] = inst_13166;
                                              statearr_13256[9] = inst_13167;
                                              statearr_13256[14] = inst_13191;
                                              return statearr_13256
                                            }();
                                            var statearr_13257_13294 = state_13226__$1;
                                            statearr_13257_13294[2] = null;
                                            statearr_13257_13294[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_13227 === 18) {
                                              var inst_13195 = state_13226[2];
                                              var state_13226__$1 = state_13226;
                                              var statearr_13258_13295 = state_13226__$1;
                                              statearr_13258_13295[2] = inst_13195;
                                              statearr_13258_13295[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_13227 === 19) {
                                                var state_13226__$1 = state_13226;
                                                var statearr_13259_13296 = state_13226__$1;
                                                statearr_13259_13296[2] = null;
                                                statearr_13259_13296[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_13227 === 20) {
                                                  var state_13226__$1 = state_13226;
                                                  var statearr_13260_13297 = state_13226__$1;
                                                  statearr_13260_13297[2] = null;
                                                  statearr_13260_13297[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_13227 === 21) {
                                                    var inst_13219 = state_13226[2];
                                                    var state_13226__$1 = function() {
                                                      var statearr_13261 = state_13226;
                                                      statearr_13261[15] = inst_13219;
                                                      return statearr_13261
                                                    }();
                                                    var statearr_13262_13298 = state_13226__$1;
                                                    statearr_13262_13298[2] = null;
                                                    statearr_13262_13298[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_13227 === 22) {
                                                      var inst_13216 = state_13226[2];
                                                      var state_13226__$1 = state_13226;
                                                      var statearr_13263_13299 = state_13226__$1;
                                                      statearr_13263_13299[2] = inst_13216;
                                                      statearr_13263_13299[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_13227 === 23) {
                                                        var inst_13204 = state_13226[10];
                                                        var inst_13208 = state_13226[2];
                                                        var inst_13209 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_13204);
                                                        var state_13226__$1 = function() {
                                                          var statearr_13264 = state_13226;
                                                          statearr_13264[16] = inst_13208;
                                                          return statearr_13264
                                                        }();
                                                        var statearr_13265_13300 = state_13226__$1;
                                                        statearr_13265_13300[2] = inst_13209;
                                                        statearr_13265_13300[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_13227 === 24) {
                                                          try {
                                                            var inst_13156 = state_13226[5];
                                                            var inst_13206 = state_13226[11];
                                                            var inst_13212 = cljs.core.async.muxch_STAR_.call(null, inst_13206);
                                                            var state_13226__$1 = state_13226;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13226__$1, 25, inst_13212, inst_13156)
                                                          }catch(e13266) {
                                                            if(e13266 instanceof Object) {
                                                              var ex__5149__auto__ = e13266;
                                                              var statearr_13267_13301 = state_13226;
                                                              statearr_13267_13301[1] = 23;
                                                              statearr_13267_13301[2] = ex__5149__auto__;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e13266;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_13227 === 25) {
                                                            try {
                                                              var inst_13214 = state_13226[2];
                                                              var state_13226__$1 = state_13226;
                                                              var statearr_13270_13302 = state_13226__$1;
                                                              statearr_13270_13302[2] = inst_13214;
                                                              statearr_13270_13302[1] = 22;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }catch(e13268) {
                                                              if(e13268 instanceof Object) {
                                                                var ex__5149__auto__ = e13268;
                                                                var statearr_13269_13303 = state_13226;
                                                                statearr_13269_13303[1] = 23;
                                                                statearr_13269_13303[2] = ex__5149__auto__;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e13268;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_13272 = new Array(17);
              statearr_13272[0] = state_machine__5156__auto__;
              statearr_13272[1] = 1;
              return statearr_13272
            };
            var state_machine__5156__auto____1 = function(state_13226) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_13226);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_13226) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_13226)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_13273 = f__5206__auto__.call(null);
        statearr_13273[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___13274;
        return statearr_13273
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5205__auto___13434 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_13406) {
          var state_val_13407 = state_13406[1];
          if(state_val_13407 === 1) {
            var state_13406__$1 = state_13406;
            var statearr_13408_13435 = state_13406__$1;
            statearr_13408_13435[2] = null;
            statearr_13408_13435[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_13407 === 2) {
              var inst_13370 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_13371 = 0;
              var state_13406__$1 = function() {
                var statearr_13409 = state_13406;
                statearr_13409[5] = inst_13370;
                statearr_13409[6] = inst_13371;
                return statearr_13409
              }();
              var statearr_13410_13436 = state_13406__$1;
              statearr_13410_13436[2] = null;
              statearr_13410_13436[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_13407 === 3) {
                var inst_13404 = state_13406[2];
                var state_13406__$1 = state_13406;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13406__$1, inst_13404)
              }else {
                if(state_val_13407 === 4) {
                  var inst_13371 = state_13406[6];
                  var inst_13373 = inst_13371 < cnt;
                  var state_13406__$1 = state_13406;
                  if(cljs.core.truth_(inst_13373)) {
                    var statearr_13411_13437 = state_13406__$1;
                    statearr_13411_13437[1] = 6
                  }else {
                    var statearr_13412_13438 = state_13406__$1;
                    statearr_13412_13438[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_13407 === 5) {
                    var inst_13390 = state_13406[2];
                    var state_13406__$1 = function() {
                      var statearr_13413 = state_13406;
                      statearr_13413[7] = inst_13390;
                      return statearr_13413
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_13406__$1, 12, dchan)
                  }else {
                    if(state_val_13407 === 6) {
                      var state_13406__$1 = state_13406;
                      var statearr_13414_13439 = state_13406__$1;
                      statearr_13414_13439[2] = null;
                      statearr_13414_13439[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_13407 === 7) {
                        var state_13406__$1 = state_13406;
                        var statearr_13415_13440 = state_13406__$1;
                        statearr_13415_13440[2] = null;
                        statearr_13415_13440[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_13407 === 8) {
                          var inst_13388 = state_13406[2];
                          var state_13406__$1 = state_13406;
                          var statearr_13416_13441 = state_13406__$1;
                          statearr_13416_13441[2] = inst_13388;
                          statearr_13416_13441[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_13407 === 9) {
                            var inst_13371 = state_13406[6];
                            var inst_13383 = state_13406[2];
                            var inst_13384 = inst_13371 + 1;
                            var inst_13371__$1 = inst_13384;
                            var state_13406__$1 = function() {
                              var statearr_13417 = state_13406;
                              statearr_13417[6] = inst_13371__$1;
                              statearr_13417[8] = inst_13383;
                              return statearr_13417
                            }();
                            var statearr_13418_13442 = state_13406__$1;
                            statearr_13418_13442[2] = null;
                            statearr_13418_13442[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_13407 === 10) {
                              var inst_13375 = state_13406[2];
                              var inst_13376 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_13406__$1 = function() {
                                var statearr_13419 = state_13406;
                                statearr_13419[9] = inst_13375;
                                return statearr_13419
                              }();
                              var statearr_13420_13443 = state_13406__$1;
                              statearr_13420_13443[2] = inst_13376;
                              statearr_13420_13443[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_13407 === 11) {
                                try {
                                  var inst_13371 = state_13406[6];
                                  var inst_13379 = chs__$1.call(null, inst_13371);
                                  var inst_13380 = done.call(null, inst_13371);
                                  var inst_13381 = cljs.core.async.take_BANG_.call(null, inst_13379, inst_13380);
                                  var state_13406__$1 = state_13406;
                                  var statearr_13423_13444 = state_13406__$1;
                                  statearr_13423_13444[2] = inst_13381;
                                  statearr_13423_13444[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }catch(e13421) {
                                  if(e13421 instanceof Object) {
                                    var ex__5149__auto__ = e13421;
                                    var statearr_13422_13445 = state_13406;
                                    statearr_13422_13445[1] = 10;
                                    statearr_13422_13445[2] = ex__5149__auto__;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e13421;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_13407 === 12) {
                                  var inst_13392 = state_13406[10];
                                  var inst_13392__$1 = state_13406[2];
                                  var inst_13393 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_13392__$1);
                                  var state_13406__$1 = function() {
                                    var statearr_13424 = state_13406;
                                    statearr_13424[10] = inst_13392__$1;
                                    return statearr_13424
                                  }();
                                  if(cljs.core.truth_(inst_13393)) {
                                    var statearr_13425_13446 = state_13406__$1;
                                    statearr_13425_13446[1] = 13
                                  }else {
                                    var statearr_13426_13447 = state_13406__$1;
                                    statearr_13426_13447[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_13407 === 13) {
                                    var inst_13395 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_13406__$1 = state_13406;
                                    var statearr_13427_13448 = state_13406__$1;
                                    statearr_13427_13448[2] = inst_13395;
                                    statearr_13427_13448[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_13407 === 14) {
                                      var inst_13392 = state_13406[10];
                                      var inst_13397 = cljs.core.apply.call(null, f, inst_13392);
                                      var state_13406__$1 = state_13406;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13406__$1, 16, out, inst_13397)
                                    }else {
                                      if(state_val_13407 === 15) {
                                        var inst_13402 = state_13406[2];
                                        var state_13406__$1 = state_13406;
                                        var statearr_13428_13449 = state_13406__$1;
                                        statearr_13428_13449[2] = inst_13402;
                                        statearr_13428_13449[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_13407 === 16) {
                                          var inst_13399 = state_13406[2];
                                          var state_13406__$1 = function() {
                                            var statearr_13429 = state_13406;
                                            statearr_13429[11] = inst_13399;
                                            return statearr_13429
                                          }();
                                          var statearr_13430_13450 = state_13406__$1;
                                          statearr_13430_13450[2] = null;
                                          statearr_13430_13450[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_13432 = new Array(12);
              statearr_13432[0] = state_machine__5156__auto__;
              statearr_13432[1] = 1;
              return statearr_13432
            };
            var state_machine__5156__auto____1 = function(state_13406) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_13406);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_13406) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_13406)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_13433 = f__5206__auto__.call(null);
        statearr_13433[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___13434;
        return statearr_13433
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5205__auto___13550 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5206__auto__ = function() {
        var switch__5155__auto__ = function(state_13530) {
          var state_val_13531 = state_13530[1];
          if(state_val_13531 === 1) {
            var inst_13501 = cljs.core.vec.call(null, chs);
            var inst_13502 = inst_13501;
            var state_13530__$1 = function() {
              var statearr_13532 = state_13530;
              statearr_13532[5] = inst_13502;
              return statearr_13532
            }();
            var statearr_13533_13551 = state_13530__$1;
            statearr_13533_13551[2] = null;
            statearr_13533_13551[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_13531 === 2) {
              var inst_13502 = state_13530[5];
              var inst_13504 = cljs.core.count.call(null, inst_13502);
              var inst_13505 = inst_13504 > 0;
              var state_13530__$1 = state_13530;
              if(cljs.core.truth_(inst_13505)) {
                var statearr_13534_13552 = state_13530__$1;
                statearr_13534_13552[1] = 4
              }else {
                var statearr_13535_13553 = state_13530__$1;
                statearr_13535_13553[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_13531 === 3) {
                var inst_13528 = state_13530[2];
                var state_13530__$1 = state_13530;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_13530__$1, inst_13528)
              }else {
                if(state_val_13531 === 4) {
                  var inst_13502 = state_13530[5];
                  var state_13530__$1 = state_13530;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_13530__$1, 7, inst_13502)
                }else {
                  if(state_val_13531 === 5) {
                    var inst_13524 = cljs.core.async.close_BANG_.call(null, out);
                    var state_13530__$1 = state_13530;
                    var statearr_13536_13554 = state_13530__$1;
                    statearr_13536_13554[2] = inst_13524;
                    statearr_13536_13554[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_13531 === 6) {
                      var inst_13526 = state_13530[2];
                      var state_13530__$1 = state_13530;
                      var statearr_13537_13555 = state_13530__$1;
                      statearr_13537_13555[2] = inst_13526;
                      statearr_13537_13555[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_13531 === 7) {
                        var inst_13510 = state_13530[6];
                        var inst_13509 = state_13530[7];
                        var inst_13509__$1 = state_13530[2];
                        var inst_13510__$1 = cljs.core.nth.call(null, inst_13509__$1, 0, null);
                        var inst_13511 = cljs.core.nth.call(null, inst_13509__$1, 1, null);
                        var inst_13512 = inst_13510__$1 == null;
                        var state_13530__$1 = function() {
                          var statearr_13538 = state_13530;
                          statearr_13538[8] = inst_13511;
                          statearr_13538[6] = inst_13510__$1;
                          statearr_13538[7] = inst_13509__$1;
                          return statearr_13538
                        }();
                        if(cljs.core.truth_(inst_13512)) {
                          var statearr_13539_13556 = state_13530__$1;
                          statearr_13539_13556[1] = 8
                        }else {
                          var statearr_13540_13557 = state_13530__$1;
                          statearr_13540_13557[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_13531 === 8) {
                          var inst_13502 = state_13530[5];
                          var inst_13511 = state_13530[8];
                          var inst_13510 = state_13530[6];
                          var inst_13509 = state_13530[7];
                          var inst_13514 = function() {
                            var c = inst_13511;
                            var v = inst_13510;
                            var vec__13507 = inst_13509;
                            var cs = inst_13502;
                            return function(c, v, vec__13507, cs, inst_13502, inst_13511, inst_13510, inst_13509, state_val_13531) {
                              return function(p1__13451_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__13451_SHARP_)
                              }
                            }(c, v, vec__13507, cs, inst_13502, inst_13511, inst_13510, inst_13509, state_val_13531)
                          }();
                          var inst_13515 = cljs.core.filterv.call(null, inst_13514, inst_13502);
                          var inst_13502__$1 = inst_13515;
                          var state_13530__$1 = function() {
                            var statearr_13541 = state_13530;
                            statearr_13541[5] = inst_13502__$1;
                            return statearr_13541
                          }();
                          var statearr_13542_13558 = state_13530__$1;
                          statearr_13542_13558[2] = null;
                          statearr_13542_13558[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_13531 === 9) {
                            var inst_13510 = state_13530[6];
                            var state_13530__$1 = state_13530;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_13530__$1, 11, out, inst_13510)
                          }else {
                            if(state_val_13531 === 10) {
                              var inst_13522 = state_13530[2];
                              var state_13530__$1 = state_13530;
                              var statearr_13544_13559 = state_13530__$1;
                              statearr_13544_13559[2] = inst_13522;
                              statearr_13544_13559[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_13531 === 11) {
                                var inst_13502 = state_13530[5];
                                var inst_13519 = state_13530[2];
                                var tmp13543 = inst_13502;
                                var inst_13502__$1 = tmp13543;
                                var state_13530__$1 = function() {
                                  var statearr_13545 = state_13530;
                                  statearr_13545[5] = inst_13502__$1;
                                  statearr_13545[9] = inst_13519;
                                  return statearr_13545
                                }();
                                var statearr_13546_13560 = state_13530__$1;
                                statearr_13546_13560[2] = null;
                                statearr_13546_13560[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5155__auto__) {
          return function() {
            var state_machine__5156__auto__ = null;
            var state_machine__5156__auto____0 = function() {
              var statearr_13548 = new Array(10);
              statearr_13548[0] = state_machine__5156__auto__;
              statearr_13548[1] = 1;
              return statearr_13548
            };
            var state_machine__5156__auto____1 = function(state_13530) {
              while(true) {
                var result__5157__auto__ = switch__5155__auto__.call(null, state_13530);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5157__auto__
                }
                break
              }
            };
            state_machine__5156__auto__ = function(state_13530) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5156__auto____0.call(this);
                case 1:
                  return state_machine__5156__auto____1.call(this, state_13530)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
            return state_machine__5156__auto__
          }()
        }(switch__5155__auto__)
      }();
      var state__5207__auto__ = function() {
        var statearr_13549 = f__5206__auto__.call(null);
        statearr_13549[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___13550;
        return statearr_13549
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
goog.provide("goog.ui.ac.ArrayMatcher");
goog.require("goog.iter");
goog.require("goog.string");
goog.ui.ac.ArrayMatcher = function(rows, opt_noSimilar) {
  this.rows_ = rows;
  this.useSimilar_ = !opt_noSimilar
};
goog.ui.ac.ArrayMatcher.prototype.setRows = function(rows) {
  this.rows_ = rows
};
goog.ui.ac.ArrayMatcher.prototype.requestMatchingRows = function(token, maxMatches, matchHandler, opt_fullString) {
  var matches = this.getPrefixMatches(token, maxMatches);
  if(matches.length == 0 && this.useSimilar_) {
    matches = this.getSimilarRows(token, maxMatches)
  }
  matchHandler(token, matches)
};
goog.ui.ac.ArrayMatcher.prototype.getPrefixMatches = function(token, maxMatches) {
  var matches = [];
  if(token != "") {
    var escapedToken = goog.string.regExpEscape(token);
    var matcher = new RegExp("(^|\\W+)" + escapedToken, "i");
    goog.iter.some(this.rows_, function(row) {
      if(String(row).match(matcher)) {
        matches.push(row)
      }
      return matches.length >= maxMatches
    })
  }
  return matches
};
goog.ui.ac.ArrayMatcher.prototype.getSimilarRows = function(token, maxMatches) {
  var results = [];
  goog.iter.forEach(this.rows_, function(row, index) {
    var str = token.toLowerCase();
    var txt = String(row).toLowerCase();
    var score = 0;
    if(txt.indexOf(str) != -1) {
      score = parseInt((txt.indexOf(str) / 4).toString(), 10)
    }else {
      var arr = str.split("");
      var lastPos = -1;
      var penalty = 10;
      for(var i = 0, c;c = arr[i];i++) {
        var pos = txt.indexOf(c);
        if(pos > lastPos) {
          var diff = pos - lastPos - 1;
          if(diff > penalty - 5) {
            diff = penalty - 5
          }
          score += diff;
          lastPos = pos
        }else {
          score += penalty;
          penalty += 5
        }
      }
    }
    if(score < str.length * 6) {
      results.push({str:row, score:score, index:index})
    }
  });
  results.sort(function(a, b) {
    var diff = a.score - b.score;
    if(diff != 0) {
      return diff
    }
    return a.index - b.index
  });
  var matches = [];
  for(var i = 0;i < maxMatches && i < results.length;i++) {
    matches.push(results[i].str)
  }
  return matches
};
goog.provide("goog.ui.ac");
goog.require("goog.ui.ac.ArrayMatcher");
goog.require("goog.ui.ac.AutoComplete");
goog.require("goog.ui.ac.InputHandler");
goog.require("goog.ui.ac.Renderer");
goog.ui.ac.createSimpleAutoComplete = function(data, input, opt_multi, opt_useSimilar) {
  var matcher = new goog.ui.ac.ArrayMatcher(data, !opt_useSimilar);
  var renderer = new goog.ui.ac.Renderer;
  var inputHandler = new goog.ui.ac.InputHandler(null, null, !!opt_multi);
  var autoComplete = new goog.ui.ac.AutoComplete(matcher, renderer, inputHandler);
  inputHandler.attachAutoComplete(autoComplete);
  inputHandler.attachInputs(input);
  return autoComplete
};
goog.provide("weather_canvas.events");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("dommy.core");
weather_canvas.events.listen = function listen(el, type) {
  var c = cljs.core.async.chan.call(null);
  dommy.core.listen_BANG_.call(null, el, type, function(ev) {
    ev.preventDefault();
    ev.stopPropagation();
    return cljs.core.async.put_BANG_.call(null, c, ev)
  });
  return c
};
goog.provide("weather_canvas.weather");
goog.require("cljs.core");
goog.require("weather_canvas.events");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.sheet");
goog.require("cljs.core.async");
goog.require("weather_canvas.sheet");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.events");
goog.require("cljs.core.async");
goog.require("weather_canvas.gradient");
goog.require("dommy.core");
goog.require("fmi.metolib");
weather_canvas.weather.api_key = "9f1313c1-c123-40ad-9490-f25428b14bcf";
weather_canvas.weather.year_data = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
weather_canvas.weather.years_to_fetch = cljs.core.atom.call(null, 0);
weather_canvas.weather.main_group = cljs.core.atom.call(null, null);
weather_canvas.weather.value_at_point = function value_at_point(x, y) {
  var i = function() {
    var x__3116__auto__ = 0;
    var y__3117__auto__ = x;
    return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
  }() / weather_canvas.canvas_buffer.size_x | 0;
  var j = function() {
    var x__3116__auto__ = 0;
    var y__3117__auto__ = y;
    return x__3116__auto__ > y__3117__auto__ ? x__3116__auto__ : y__3117__auto__
  }() / weather_canvas.canvas_buffer.size_y | 0;
  var d = cljs.core.get.call(null, cljs.core.get.call(null, cljs.core.deref.call(null, weather_canvas.weather.year_data), j), i);
  if(cljs.core.truth_(d)) {
    var dom8982 = document.createElement("div");
    if("data") {
      dom8982.setAttribute("id", "data")
    }else {
    }
    dom8982.appendChild(function() {
      var dom8983 = document.createElement("div");
      if("weekday") {
        dom8983.className = [cljs.core.str(dom8983.className), cljs.core.str(" "), cljs.core.str("weekday")].join("").trim()
      }else {
      }
      dom8983.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "weekday", "weekday", 2240766618)).call(null, d)));
      return dom8983
    }());
    dom8982.appendChild(function() {
      var dom8984 = document.createElement("div");
      if("day") {
        dom8984.className = [cljs.core.str(dom8984.className), cljs.core.str(" "), cljs.core.str("day")].join("").trim()
      }else {
      }
      dom8984.appendChild(dommy.template.__GT_node_like.call(null, [cljs.core.str((new cljs.core.Keyword(null, "day", "day", 1014003470)).call(null, d)), cljs.core.str(".")].join("")));
      return dom8984
    }());
    dom8982.appendChild(function() {
      var dom8985 = document.createElement("div");
      if("month") {
        dom8985.className = [cljs.core.str(dom8985.className), cljs.core.str(" "), cljs.core.str("month")].join("").trim()
      }else {
      }
      dom8985.appendChild(dommy.template.__GT_node_like.call(null, [cljs.core.str((new cljs.core.Keyword(null, "month", "month", 1117984242)).call(null, d)), cljs.core.str(".")].join("")));
      return dom8985
    }());
    dom8982.appendChild(function() {
      var dom8986 = document.createElement("div");
      if("year") {
        dom8986.className = [cljs.core.str(dom8986.className), cljs.core.str(" "), cljs.core.str("year")].join("").trim()
      }else {
      }
      dom8986.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "year", "year", 1017609135)).call(null, d)));
      return dom8986
    }());
    dom8982.appendChild(function() {
      var dom8987 = document.createElement("div");
      if("description") {
        dom8987.className = [cljs.core.str(dom8987.className), cljs.core.str(" "), cljs.core.str("description")].join("").trim()
      }else {
      }
      dom8987.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "description", "description", 3584325486)).call(null, d)));
      return dom8987
    }());
    dom8982.appendChild(function() {
      var dom8988 = document.createElement("div");
      if("value") {
        dom8988.className = [cljs.core.str(dom8988.className), cljs.core.str(" "), cljs.core.str("value")].join("").trim()
      }else {
      }
      dom8988.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "value", "value", 1125876963)).call(null, d)));
      return dom8988
    }());
    dom8982.appendChild(function() {
      var dom8989 = document.createElement("div");
      if("unit") {
        dom8989.className = [cljs.core.str(dom8989.className), cljs.core.str(" "), cljs.core.str("unit")].join("").trim()
      }else {
      }
      dom8989.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "unit", "unit", 1017498870)).call(null, d)));
      return dom8989
    }());
    return dom8982
  }else {
    var dom8990 = document.createElement("div");
    if("data") {
      dom8990.setAttribute("id", "data")
    }else {
    }
    return dom8990
  }
};
weather_canvas.weather.init_cursor_listener_BANG_ = function init_cursor_listener_BANG_(canvas) {
  var cc = weather_canvas.events.listen.call(null, canvas, new cljs.core.Keyword(null, "mousemove", "mousemove", 1601016168));
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_9045) {
        var state_val_9046 = state_9045[1];
        if(state_val_9046 === 7) {
          var inst_9027 = state_9045[2];
          var inst_9028 = inst_9027.target;
          var inst_9029 = inst_9027.pageX;
          var inst_9030 = inst_9028.offsetLeft;
          var inst_9031 = inst_9029 - inst_9030;
          var inst_9032 = inst_9027.pageY;
          var inst_9033 = inst_9028.offsetTop;
          var inst_9034 = inst_9032 - inst_9033;
          var inst_9035 = document.getElementById("data");
          var inst_9036 = weather_canvas.weather.value_at_point.call(null, inst_9031, inst_9034);
          var inst_9037 = dommy.core.replace_BANG_.call(null, inst_9035, inst_9036);
          var state_9045__$1 = function() {
            var statearr_9047 = state_9045;
            statearr_9047[5] = inst_9037;
            return statearr_9047
          }();
          var statearr_9048_9057 = state_9045__$1;
          statearr_9048_9057[2] = null;
          statearr_9048_9057[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_9046 === 6) {
            var inst_9041 = state_9045[2];
            var state_9045__$1 = state_9045;
            var statearr_9049_9058 = state_9045__$1;
            statearr_9049_9058[2] = inst_9041;
            statearr_9049_9058[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_9046 === 5) {
              var state_9045__$1 = state_9045;
              var statearr_9050_9059 = state_9045__$1;
              statearr_9050_9059[2] = null;
              statearr_9050_9059[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_9046 === 4) {
                var state_9045__$1 = state_9045;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9045__$1, 7, cc)
              }else {
                if(state_val_9046 === 3) {
                  var inst_9043 = state_9045[2];
                  var state_9045__$1 = state_9045;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9045__$1, inst_9043)
                }else {
                  if(state_val_9046 === 2) {
                    var state_9045__$1 = state_9045;
                    if(true) {
                      var statearr_9051_9060 = state_9045__$1;
                      statearr_9051_9060[1] = 4
                    }else {
                      var statearr_9052_9061 = state_9045__$1;
                      statearr_9052_9061[1] = 5
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_9046 === 1) {
                      var state_9045__$1 = state_9045;
                      var statearr_9053_9062 = state_9045__$1;
                      statearr_9053_9062[2] = null;
                      statearr_9053_9062[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_9055 = new Array(6);
            statearr_9055[0] = state_machine__5156__auto__;
            statearr_9055[1] = 1;
            return statearr_9055
          };
          var state_machine__5156__auto____1 = function(state_9045) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_9045);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_9045) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_9045)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_9056 = f__5206__auto__.call(null);
      statearr_9056[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_9056
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.weather.report_status = function report_status(ready) {
  var status_report = document.getElementById("status-report");
  if(cljs.core.truth_(ready)) {
    dommy.core.remove_class_BANG_.call(null, status_report, "processing");
    dommy.core.add_class_BANG_.call(null, status_report, "ready");
    weather_canvas.weather.init_cursor_listener_BANG_.call(null, document.getElementById("weather-canvas"));
    return cljs.core.reset_BANG_.call(null, weather_canvas.weather.years_to_fetch, 0)
  }else {
    return null
  }
};
weather_canvas.weather.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var or__3943__auto__ = cljs.core._EQ_.call(null, 0, cljs.core.mod.call(null, year, 400));
  if(or__3943__auto__) {
    return or__3943__auto__
  }else {
    var and__3941__auto__ = !cljs.core._EQ_.call(null, 0, cljs.core.mod.call(null, year, 100));
    if(and__3941__auto__) {
      return cljs.core._EQ_.call(null, 0, cljs.core.mod.call(null, year, 4))
    }else {
      return and__3941__auto__
    }
  }
};
weather_canvas.weather.c = cljs.core.async.chan.call(null);
weather_canvas.weather.c_msg = cljs.core.async.chan.call(null);
var c__5205__auto___9101 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function() {
  var f__5206__auto__ = function() {
    var switch__5155__auto__ = function(state_9084) {
      var state_val_9085 = state_9084[1];
      if(state_val_9085 === 1) {
        var state_9084__$1 = state_9084;
        var statearr_9086_9102 = state_9084__$1;
        statearr_9086_9102[2] = null;
        statearr_9086_9102[1] = 2;
        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
      }else {
        if(state_val_9085 === 2) {
          var state_9084__$1 = state_9084;
          if(true) {
            var statearr_9087_9103 = state_9084__$1;
            statearr_9087_9103[1] = 4
          }else {
            var statearr_9088_9104 = state_9084__$1;
            statearr_9088_9104[1] = 5
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_9085 === 3) {
            var inst_9082 = state_9084[2];
            var state_9084__$1 = state_9084;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9084__$1, inst_9082)
          }else {
            if(state_val_9085 === 4) {
              var inst_9065 = cljs.core.async.timeout.call(null, 10);
              var state_9084__$1 = state_9084;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9084__$1, 7, inst_9065)
            }else {
              if(state_val_9085 === 5) {
                var state_9084__$1 = state_9084;
                var statearr_9089_9105 = state_9084__$1;
                statearr_9089_9105[2] = null;
                statearr_9089_9105[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_9085 === 6) {
                  var inst_9080 = state_9084[2];
                  var state_9084__$1 = state_9084;
                  var statearr_9090_9106 = state_9084__$1;
                  statearr_9090_9106[2] = inst_9080;
                  statearr_9090_9106[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_9085 === 7) {
                    var inst_9067 = state_9084[2];
                    var state_9084__$1 = function() {
                      var statearr_9091 = state_9084;
                      statearr_9091[5] = inst_9067;
                      return statearr_9091
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9084__$1, 8, weather_canvas.weather.c_msg)
                  }else {
                    if(state_val_9085 === 8) {
                      var inst_9069 = state_9084[2];
                      var state_9084__$1 = state_9084;
                      if(cljs.core.truth_(inst_9069)) {
                        var statearr_9092_9107 = state_9084__$1;
                        statearr_9092_9107[1] = 9
                      }else {
                        var statearr_9093_9108 = state_9084__$1;
                        statearr_9093_9108[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_9085 === 9) {
                        var inst_9071 = cljs.core.deref.call(null, weather_canvas.weather.years_to_fetch);
                        var inst_9072 = inst_9071 < 0;
                        var inst_9073 = weather_canvas.weather.report_status.call(null, inst_9072);
                        var state_9084__$1 = state_9084;
                        var statearr_9094_9109 = state_9084__$1;
                        statearr_9094_9109[2] = inst_9073;
                        statearr_9094_9109[1] = 11;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_9085 === 10) {
                          var state_9084__$1 = state_9084;
                          var statearr_9095_9110 = state_9084__$1;
                          statearr_9095_9110[2] = null;
                          statearr_9095_9110[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_9085 === 11) {
                            var inst_9076 = state_9084[2];
                            var state_9084__$1 = function() {
                              var statearr_9096 = state_9084;
                              statearr_9096[6] = inst_9076;
                              return statearr_9096
                            }();
                            var statearr_9097_9111 = state_9084__$1;
                            statearr_9097_9111[2] = null;
                            statearr_9097_9111[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            return null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    return function(switch__5155__auto__) {
      return function() {
        var state_machine__5156__auto__ = null;
        var state_machine__5156__auto____0 = function() {
          var statearr_9099 = new Array(7);
          statearr_9099[0] = state_machine__5156__auto__;
          statearr_9099[1] = 1;
          return statearr_9099
        };
        var state_machine__5156__auto____1 = function(state_9084) {
          while(true) {
            var result__5157__auto__ = switch__5155__auto__.call(null, state_9084);
            if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
              continue
            }else {
              return result__5157__auto__
            }
            break
          }
        };
        state_machine__5156__auto__ = function(state_9084) {
          switch(arguments.length) {
            case 0:
              return state_machine__5156__auto____0.call(this);
            case 1:
              return state_machine__5156__auto____1.call(this, state_9084)
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
        return state_machine__5156__auto__
      }()
    }(switch__5155__auto__)
  }();
  var state__5207__auto__ = function() {
    var statearr_9100 = f__5206__auto__.call(null);
    statearr_9100[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___9101;
    return statearr_9100
  }();
  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
});
weather_canvas.weather.filled = function filled(data, expected, predicate, filler) {
  if(cljs.core.empty_QMARK_.call(null, expected)) {
    return cljs.core.PersistentVector.EMPTY
  }else {
    if(cljs.core._EQ_.call(null, cljs.core.count.call(null, data), cljs.core.count.call(null, expected))) {
      return data
    }else {
      if(cljs.core.truth_(predicate.call(null, cljs.core.first.call(null, data), cljs.core.first.call(null, expected)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, data), new cljs.core.LazySeq(null, false, function() {
          return filled.call(null, cljs.core.rest.call(null, data), cljs.core.rest.call(null, expected), predicate, filler)
        }, null))
      }else {
        return cljs.core.cons.call(null, filler.call(null, cljs.core.first.call(null, expected)), new cljs.core.LazySeq(null, false, function() {
          return filled.call(null, data, cljs.core.rest.call(null, expected), predicate, filler)
        }, null))
      }
    }
  }
};
weather_canvas.weather.weekday = cljs.core.PersistentVector.fromArray(["su", "ma", "ti", "ke", "to", "pe", "la"], true);
weather_canvas.weather.scale = cljs.core.PersistentArrayMap.fromArray(["tday", "C", "tmax", "C", "tmin", "C", "rrday", "mm", "snow", "cm"], true);
weather_canvas.weather.description = cljs.core.PersistentArrayMap.fromArray(["tday", "keskil\u00e4mp\u00f6tila", "tmax", "maksimil\u00e4mp\u00f6tila", "tmin", "minimil\u00e4mp\u00f6tila", "rrday", "sadem\u00e4\u00e4r\u00e4", "snow", "lumensyvyys"], true);
weather_canvas.weather.grad = cljs.core.PersistentArrayMap.fromArray(["tday", weather_canvas.gradient.temperature, "tmax", weather_canvas.gradient.temperature, "tmin", weather_canvas.gradient.temperature, "rrday", weather_canvas.gradient.rain, "snow", weather_canvas.gradient.snow], true);
weather_canvas.weather.key_a = function key_a(el) {
  if(cljs.core.truth_(function() {
    var or__3943__auto__ = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), el);
    if(or__3943__auto__) {
      return or__3943__auto__
    }else {
      return isNaN(el)
    }
  }())) {
    return null
  }else {
    return el
  }
};
weather_canvas.weather.key_b = function key_b(el) {
  return weather_canvas.weather.key_a.call(null, (new cljs.core.Keyword(null, "value", "value", 1125876963)).call(null, el))
};
weather_canvas.weather.listen_results_async = function listen_results_async() {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_9560) {
        var state_val_9561 = state_9560[1];
        if(state_val_9561 === 32) {
          var inst_9488 = state_9560[2];
          var inst_9489 = cljs.core.not.call(null, inst_9488);
          var state_9560__$1 = state_9560;
          if(inst_9489) {
            var statearr_9562_9652 = state_9560__$1;
            statearr_9562_9652[1] = 33
          }else {
            var statearr_9563_9653 = state_9560__$1;
            statearr_9563_9653[1] = 34
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_9561 === 1) {
            var inst_9384 = null;
            var state_9560__$1 = function() {
              var statearr_9564 = state_9560;
              statearr_9564[5] = inst_9384;
              return statearr_9564
            }();
            var statearr_9565_9654 = state_9560__$1;
            statearr_9565_9654[2] = null;
            statearr_9565_9654[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_9561 === 33) {
              var inst_9481 = state_9560[6];
              var inst_9482 = state_9560[7];
              var inst_9409 = state_9560[8];
              var inst_9411 = state_9560[9];
              var inst_9410 = state_9560[10];
              var inst_9491 = weather_canvas.weather.grad.call(null, inst_9411);
              var inst_9492 = weather_canvas.weather.temperature_to_color.call(null, inst_9482, inst_9491);
              var inst_9493 = inst_9409.fillStyle = inst_9492;
              var inst_9494 = weather_canvas.canvas_buffer.size_x * inst_9481;
              var inst_9495 = weather_canvas.canvas_buffer.size_y * inst_9410;
              var inst_9496 = inst_9409.fillRect(inst_9494, inst_9495, weather_canvas.canvas_buffer.size_x, weather_canvas.canvas_buffer.size_y);
              var state_9560__$1 = function() {
                var statearr_9566 = state_9560;
                statearr_9566[11] = inst_9493;
                return statearr_9566
              }();
              var statearr_9567_9655 = state_9560__$1;
              statearr_9567_9655[2] = inst_9496;
              statearr_9567_9655[1] = 35;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_9561 === 2) {
                var inst_9389 = state_9560[12];
                var inst_9384 = state_9560[5];
                var inst_9386 = function() {
                  var parameters = inst_9384;
                  return function(parameters, inst_9389, inst_9384, state_val_9561) {
                    return function(p1__9112_SHARP_) {
                      return p1__9112_SHARP_ - 1
                    }
                  }(parameters, inst_9389, inst_9384, state_val_9561)
                }();
                var inst_9387 = cljs.core.swap_BANG_.call(null, weather_canvas.weather.years_to_fetch, inst_9386);
                var inst_9388 = inst_9384 == null;
                var inst_9389__$1 = cljs.core.not.call(null, inst_9388);
                var state_9560__$1 = function() {
                  var statearr_9568 = state_9560;
                  statearr_9568[12] = inst_9389__$1;
                  statearr_9568[13] = inst_9387;
                  return statearr_9568
                }();
                if(inst_9389__$1) {
                  var statearr_9569_9656 = state_9560__$1;
                  statearr_9569_9656[1] = 4
                }else {
                  var statearr_9570_9657 = state_9560__$1;
                  statearr_9570_9657[1] = 5
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_9561 === 34) {
                  var state_9560__$1 = state_9560;
                  var statearr_9574_9658 = state_9560__$1;
                  statearr_9574_9658[2] = null;
                  statearr_9574_9658[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_9561 === 3) {
                    var inst_9556 = state_9560[2];
                    var state_9560__$1 = function() {
                      var statearr_9575 = state_9560;
                      statearr_9575[14] = inst_9556;
                      return statearr_9575
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9560__$1, 51, weather_canvas.weather.c_msg, "done")
                  }else {
                    if(state_val_9561 === 35) {
                      var inst_9474 = state_9560[15];
                      var inst_9473 = state_9560[16];
                      var inst_9471 = state_9560[17];
                      var inst_9472 = state_9560[18];
                      var inst_9499 = state_9560[2];
                      var inst_9500 = inst_9474 + 1;
                      var tmp9571 = inst_9473;
                      var tmp9572 = inst_9471;
                      var tmp9573 = inst_9472;
                      var inst_9471__$1 = tmp9572;
                      var inst_9472__$1 = tmp9573;
                      var inst_9473__$1 = tmp9571;
                      var inst_9474__$1 = inst_9500;
                      var state_9560__$1 = function() {
                        var statearr_9576 = state_9560;
                        statearr_9576[15] = inst_9474__$1;
                        statearr_9576[16] = inst_9473__$1;
                        statearr_9576[17] = inst_9471__$1;
                        statearr_9576[18] = inst_9472__$1;
                        statearr_9576[19] = inst_9499;
                        return statearr_9576
                      }();
                      var statearr_9577_9659 = state_9560__$1;
                      statearr_9577_9659[2] = null;
                      statearr_9577_9659[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_9561 === 4) {
                        var inst_9384 = state_9560[5];
                        var inst_9391 = (new cljs.core.Keyword(null, "data", "data", 1016980252)).call(null, inst_9384);
                        var inst_9392 = inst_9391.locations;
                        var inst_9393 = cljs.core.nth.call(null, inst_9392, 0);
                        var inst_9394 = inst_9393 == null;
                        var inst_9395 = cljs.core.not.call(null, inst_9394);
                        var state_9560__$1 = state_9560;
                        var statearr_9578_9660 = state_9560__$1;
                        statearr_9578_9660[2] = inst_9395;
                        statearr_9578_9660[1] = 6;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_9561 === 36) {
                          var inst_9503 = state_9560[20];
                          var inst_9505 = cljs.core.chunked_seq_QMARK_.call(null, inst_9503);
                          var state_9560__$1 = state_9560;
                          if(inst_9505) {
                            var statearr_9579_9661 = state_9560__$1;
                            statearr_9579_9661[1] = 39
                          }else {
                            var statearr_9580_9662 = state_9560__$1;
                            statearr_9580_9662[1] = 40
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_9561 === 5) {
                            var inst_9389 = state_9560[12];
                            var state_9560__$1 = state_9560;
                            var statearr_9581_9663 = state_9560__$1;
                            statearr_9581_9663[2] = inst_9389;
                            statearr_9581_9663[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_9561 === 37) {
                              var state_9560__$1 = state_9560;
                              var statearr_9582_9664 = state_9560__$1;
                              statearr_9582_9664[2] = null;
                              statearr_9582_9664[1] = 38;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_9561 === 6) {
                                var inst_9398 = state_9560[2];
                                var state_9560__$1 = state_9560;
                                if(cljs.core.truth_(inst_9398)) {
                                  var statearr_9583_9665 = state_9560__$1;
                                  statearr_9583_9665[1] = 7
                                }else {
                                  var statearr_9584_9666 = state_9560__$1;
                                  statearr_9584_9666[1] = 8
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_9561 === 38) {
                                  var inst_9539 = state_9560[2];
                                  var state_9560__$1 = state_9560;
                                  var statearr_9585_9667 = state_9560__$1;
                                  statearr_9585_9667[2] = inst_9539;
                                  statearr_9585_9667[1] = 29;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_9561 === 7) {
                                    var inst_9384 = state_9560[5];
                                    var inst_9401 = cljs.core.seq_QMARK_.call(null, inst_9384);
                                    var state_9560__$1 = state_9560;
                                    if(inst_9401) {
                                      var statearr_9586_9668 = state_9560__$1;
                                      statearr_9586_9668[1] = 10
                                    }else {
                                      var statearr_9587_9669 = state_9560__$1;
                                      statearr_9587_9669[1] = 11
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_9561 === 39) {
                                      var inst_9503 = state_9560[20];
                                      var inst_9507 = cljs.core.chunk_first.call(null, inst_9503);
                                      var inst_9508 = cljs.core.chunk_rest.call(null, inst_9503);
                                      var inst_9509 = cljs.core.count.call(null, inst_9507);
                                      var inst_9471 = inst_9508;
                                      var inst_9472 = inst_9507;
                                      var inst_9473 = inst_9509;
                                      var inst_9474 = 0;
                                      var state_9560__$1 = function() {
                                        var statearr_9588 = state_9560;
                                        statearr_9588[15] = inst_9474;
                                        statearr_9588[16] = inst_9473;
                                        statearr_9588[17] = inst_9471;
                                        statearr_9588[18] = inst_9472;
                                        return statearr_9588
                                      }();
                                      var statearr_9589_9670 = state_9560__$1;
                                      statearr_9589_9670[2] = null;
                                      statearr_9589_9670[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_9561 === 8) {
                                        var state_9560__$1 = state_9560;
                                        var statearr_9590_9671 = state_9560__$1;
                                        statearr_9590_9671[2] = null;
                                        statearr_9590_9671[1] = 9;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_9561 === 40) {
                                          var inst_9516 = state_9560[21];
                                          var inst_9515 = state_9560[22];
                                          var inst_9503 = state_9560[20];
                                          var inst_9513 = cljs.core.first.call(null, inst_9503);
                                          var inst_9514 = cljs.core.nth.call(null, inst_9513, 0, null);
                                          var inst_9515__$1 = cljs.core.nth.call(null, inst_9513, 1, null);
                                          var inst_9516__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), inst_9515__$1);
                                          var state_9560__$1 = function() {
                                            var statearr_9591 = state_9560;
                                            statearr_9591[21] = inst_9516__$1;
                                            statearr_9591[22] = inst_9515__$1;
                                            statearr_9591[23] = inst_9514;
                                            return statearr_9591
                                          }();
                                          if(inst_9516__$1) {
                                            var statearr_9592_9672 = state_9560__$1;
                                            statearr_9592_9672[1] = 42
                                          }else {
                                            var statearr_9593_9673 = state_9560__$1;
                                            statearr_9593_9673[1] = 43
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_9561 === 9) {
                                            var inst_9546 = state_9560[2];
                                            var state_9560__$1 = function() {
                                              var statearr_9594 = state_9560;
                                              statearr_9594[24] = inst_9546;
                                              return statearr_9594
                                            }();
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9560__$1, 48, weather_canvas.weather.c_msg, "done")
                                          }else {
                                            if(state_val_9561 === 41) {
                                              var inst_9536 = state_9560[2];
                                              var state_9560__$1 = state_9560;
                                              var statearr_9595_9674 = state_9560__$1;
                                              statearr_9595_9674[2] = inst_9536;
                                              statearr_9595_9674[1] = 38;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_9561 === 10) {
                                                var inst_9384 = state_9560[5];
                                                var inst_9403 = cljs.core.apply.call(null, cljs.core.hash_map, inst_9384);
                                                var state_9560__$1 = state_9560;
                                                var statearr_9596_9675 = state_9560__$1;
                                                statearr_9596_9675[2] = inst_9403;
                                                statearr_9596_9675[1] = 12;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_9561 === 42) {
                                                  var inst_9516 = state_9560[21];
                                                  var state_9560__$1 = state_9560;
                                                  var statearr_9597_9676 = state_9560__$1;
                                                  statearr_9597_9676[2] = inst_9516;
                                                  statearr_9597_9676[1] = 44;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_9561 === 11) {
                                                    var inst_9384 = state_9560[5];
                                                    var state_9560__$1 = state_9560;
                                                    var statearr_9598_9677 = state_9560__$1;
                                                    statearr_9598_9677[2] = inst_9384;
                                                    statearr_9598_9677[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_9561 === 43) {
                                                      var inst_9515 = state_9560[22];
                                                      var inst_9519 = isNaN(inst_9515);
                                                      var state_9560__$1 = state_9560;
                                                      var statearr_9599_9678 = state_9560__$1;
                                                      statearr_9599_9678[2] = inst_9519;
                                                      statearr_9599_9678[1] = 44;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_9561 === 12) {
                                                        var inst_9408 = state_9560[25];
                                                        var inst_9406 = state_9560[26];
                                                        var inst_9406__$1 = state_9560[2];
                                                        var inst_9407 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "year", "year", 1017609135));
                                                        var inst_9408__$1 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782));
                                                        var inst_9409 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "context", "context", 1965435169));
                                                        var inst_9410 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
                                                        var inst_9411 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582));
                                                        var inst_9412 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "errors", "errors", 4014236381));
                                                        var inst_9413 = cljs.core.get.call(null, inst_9406__$1, new cljs.core.Keyword(null, "data", "data", 1016980252));
                                                        var state_9560__$1 = function() {
                                                          var statearr_9600 = state_9560;
                                                          statearr_9600[25] = inst_9408__$1;
                                                          statearr_9600[8] = inst_9409;
                                                          statearr_9600[27] = inst_9413;
                                                          statearr_9600[9] = inst_9411;
                                                          statearr_9600[28] = inst_9412;
                                                          statearr_9600[29] = inst_9407;
                                                          statearr_9600[26] = inst_9406__$1;
                                                          statearr_9600[10] = inst_9410;
                                                          return statearr_9600
                                                        }();
                                                        if(cljs.core.truth_(inst_9408__$1)) {
                                                          var statearr_9601_9679 = state_9560__$1;
                                                          statearr_9601_9679[1] = 13
                                                        }else {
                                                          var statearr_9602_9680 = state_9560__$1;
                                                          statearr_9602_9680[1] = 14
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_9561 === 44) {
                                                          var inst_9521 = state_9560[2];
                                                          var inst_9522 = cljs.core.not.call(null, inst_9521);
                                                          var state_9560__$1 = state_9560;
                                                          if(inst_9522) {
                                                            var statearr_9603_9681 = state_9560__$1;
                                                            statearr_9603_9681[1] = 45
                                                          }else {
                                                            var statearr_9604_9682 = state_9560__$1;
                                                            statearr_9604_9682[1] = 46
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_9561 === 13) {
                                                            var inst_9415 = cljs.core.partial.call(null, cljs.core.sort_by, weather_canvas.weather.key_a);
                                                            var state_9560__$1 = state_9560;
                                                            var statearr_9605_9683 = state_9560__$1;
                                                            statearr_9605_9683[2] = inst_9415;
                                                            statearr_9605_9683[1] = 15;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_9561 === 45) {
                                                              var inst_9515 = state_9560[22];
                                                              var inst_9514 = state_9560[23];
                                                              var inst_9409 = state_9560[8];
                                                              var inst_9411 = state_9560[9];
                                                              var inst_9410 = state_9560[10];
                                                              var inst_9524 = weather_canvas.weather.grad.call(null, inst_9411);
                                                              var inst_9525 = weather_canvas.weather.temperature_to_color.call(null, inst_9515, inst_9524);
                                                              var inst_9526 = inst_9409.fillStyle = inst_9525;
                                                              var inst_9527 = weather_canvas.canvas_buffer.size_x * inst_9514;
                                                              var inst_9528 = weather_canvas.canvas_buffer.size_y * inst_9410;
                                                              var inst_9529 = inst_9409.fillRect(inst_9527, inst_9528, weather_canvas.canvas_buffer.size_x, weather_canvas.canvas_buffer.size_y);
                                                              var state_9560__$1 = function() {
                                                                var statearr_9606 = state_9560;
                                                                statearr_9606[30] = inst_9526;
                                                                return statearr_9606
                                                              }();
                                                              var statearr_9607_9684 = state_9560__$1;
                                                              statearr_9607_9684[2] = inst_9529;
                                                              statearr_9607_9684[1] = 47;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_9561 === 14) {
                                                                var state_9560__$1 = state_9560;
                                                                var statearr_9608_9685 = state_9560__$1;
                                                                statearr_9608_9685[2] = cljs.core.identity;
                                                                statearr_9608_9685[1] = 15;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_9561 === 46) {
                                                                  var state_9560__$1 = state_9560;
                                                                  var statearr_9609_9686 = state_9560__$1;
                                                                  statearr_9609_9686[2] = null;
                                                                  statearr_9609_9686[1] = 47;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_9561 === 15) {
                                                                    var inst_9408 = state_9560[25];
                                                                    var inst_9418 = state_9560[2];
                                                                    var state_9560__$1 = function() {
                                                                      var statearr_9610 = state_9560;
                                                                      statearr_9610[31] = inst_9418;
                                                                      return statearr_9610
                                                                    }();
                                                                    if(cljs.core.truth_(inst_9408)) {
                                                                      var statearr_9611_9687 = state_9560__$1;
                                                                      statearr_9611_9687[1] = 16
                                                                    }else {
                                                                      var statearr_9612_9688 = state_9560__$1;
                                                                      statearr_9612_9688[1] = 17
                                                                    }
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_9561 === 47) {
                                                                      var inst_9503 = state_9560[20];
                                                                      var inst_9532 = state_9560[2];
                                                                      var inst_9533 = cljs.core.next.call(null, inst_9503);
                                                                      var inst_9471 = inst_9533;
                                                                      var inst_9472 = null;
                                                                      var inst_9473 = 0;
                                                                      var inst_9474 = 0;
                                                                      var state_9560__$1 = function() {
                                                                        var statearr_9613 = state_9560;
                                                                        statearr_9613[15] = inst_9474;
                                                                        statearr_9613[16] = inst_9473;
                                                                        statearr_9613[17] = inst_9471;
                                                                        statearr_9613[18] = inst_9472;
                                                                        statearr_9613[32] = inst_9532;
                                                                        return statearr_9613
                                                                      }();
                                                                      var statearr_9614_9689 = state_9560__$1;
                                                                      statearr_9614_9689[2] = null;
                                                                      statearr_9614_9689[1] = 25;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_9561 === 16) {
                                                                        var inst_9420 = cljs.core.partial.call(null, cljs.core.sort_by, weather_canvas.weather.key_b);
                                                                        var state_9560__$1 = state_9560;
                                                                        var statearr_9615_9690 = state_9560__$1;
                                                                        statearr_9615_9690[2] = inst_9420;
                                                                        statearr_9615_9690[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_9561 === 48) {
                                                                          var inst_9548 = state_9560[2];
                                                                          var inst_9549 = cljs.core.async.timeout.call(null, 10);
                                                                          var state_9560__$1 = function() {
                                                                            var statearr_9616 = state_9560;
                                                                            statearr_9616[33] = inst_9548;
                                                                            return statearr_9616
                                                                          }();
                                                                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9560__$1, 49, inst_9549)
                                                                        }else {
                                                                          if(state_val_9561 === 17) {
                                                                            var state_9560__$1 = state_9560;
                                                                            var statearr_9617_9691 = state_9560__$1;
                                                                            statearr_9617_9691[2] = cljs.core.identity;
                                                                            statearr_9617_9691[1] = 18;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_9561 === 49) {
                                                                              var inst_9551 = state_9560[2];
                                                                              var state_9560__$1 = function() {
                                                                                var statearr_9618 = state_9560;
                                                                                statearr_9618[34] = inst_9551;
                                                                                return statearr_9618
                                                                              }();
                                                                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9560__$1, 50, weather_canvas.weather.c)
                                                                            }else {
                                                                              if(state_val_9561 === 18) {
                                                                                var inst_9423 = state_9560[35];
                                                                                var inst_9426 = state_9560[36];
                                                                                var inst_9408 = state_9560[25];
                                                                                var inst_9418 = state_9560[31];
                                                                                var inst_9409 = state_9560[8];
                                                                                var inst_9413 = state_9560[27];
                                                                                var inst_9411 = state_9560[9];
                                                                                var inst_9384 = state_9560[5];
                                                                                var inst_9412 = state_9560[28];
                                                                                var inst_9407 = state_9560[29];
                                                                                var inst_9406 = state_9560[26];
                                                                                var inst_9410 = state_9560[10];
                                                                                var inst_9423__$1 = state_9560[2];
                                                                                var inst_9424 = [cljs.core.str(inst_9407), cljs.core.str("-01-01T00:00:00Z")].join("");
                                                                                var inst_9425 = new Date(inst_9424);
                                                                                var inst_9426__$1 = inst_9425.getTime();
                                                                                var inst_9427 = inst_9413.locations;
                                                                                var inst_9428 = cljs.core.nth.call(null, inst_9427, 0);
                                                                                var inst_9429 = inst_9428.data;
                                                                                var inst_9430 = inst_9429[inst_9411];
                                                                                var inst_9431 = inst_9430.timeValuePairs;
                                                                                var inst_9432 = cljs.core.apply.call(null, cljs.core.vector, inst_9431);
                                                                                var inst_9433 = function() {
                                                                                  var first_date = inst_9426__$1;
                                                                                  var map__9400 = inst_9406;
                                                                                  var data = inst_9413;
                                                                                  var context = inst_9409;
                                                                                  var offset = inst_9410;
                                                                                  var year = inst_9407;
                                                                                  var preprocess_data = inst_9423__$1;
                                                                                  var preprocess = inst_9418;
                                                                                  var errors = inst_9412;
                                                                                  var parameters = inst_9384;
                                                                                  var attribute = inst_9411;
                                                                                  var sorting = inst_9408;
                                                                                  return function(first_date, map__9400, data, context, offset, year, preprocess_data, preprocess, errors, parameters, attribute, sorting, inst_9423, inst_9426, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9423__$1, inst_9424, inst_9425, inst_9426__$1, inst_9427, inst_9428, inst_9429, inst_9430, inst_9431, inst_9432, state_val_9561) {
                                                                                    return function(p1__9113_SHARP_) {
                                                                                      return first_date + p1__9113_SHARP_ * 1E3 * 60 * 60 * 24
                                                                                    }
                                                                                  }(first_date, map__9400, data, context, offset, year, preprocess_data, preprocess, errors, parameters, attribute, sorting, inst_9423, inst_9426, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9423__$1, inst_9424, inst_9425, inst_9426__$1, inst_9427, inst_9428, inst_9429, inst_9430, inst_9431, inst_9432, state_val_9561)
                                                                                }();
                                                                                var inst_9434 = weather_canvas.weather.leap_year_QMARK_.call(null, inst_9407);
                                                                                var state_9560__$1 = function() {
                                                                                  var statearr_9619 = state_9560;
                                                                                  statearr_9619[35] = inst_9423__$1;
                                                                                  statearr_9619[37] = inst_9433;
                                                                                  statearr_9619[38] = inst_9432;
                                                                                  statearr_9619[36] = inst_9426__$1;
                                                                                  return statearr_9619
                                                                                }();
                                                                                if(cljs.core.truth_(inst_9434)) {
                                                                                  var statearr_9620_9692 = state_9560__$1;
                                                                                  statearr_9620_9692[1] = 19
                                                                                }else {
                                                                                  var statearr_9621_9693 = state_9560__$1;
                                                                                  statearr_9621_9693[1] = 20
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_9561 === 50) {
                                                                                  var inst_9553 = state_9560[2];
                                                                                  var inst_9384 = inst_9553;
                                                                                  var state_9560__$1 = function() {
                                                                                    var statearr_9622 = state_9560;
                                                                                    statearr_9622[5] = inst_9384;
                                                                                    return statearr_9622
                                                                                  }();
                                                                                  var statearr_9623_9694 = state_9560__$1;
                                                                                  statearr_9623_9694[2] = null;
                                                                                  statearr_9623_9694[1] = 2;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                }else {
                                                                                  if(state_val_9561 === 19) {
                                                                                    var state_9560__$1 = state_9560;
                                                                                    var statearr_9624_9695 = state_9560__$1;
                                                                                    statearr_9624_9695[2] = 366;
                                                                                    statearr_9624_9695[1] = 21;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_9561 === 51) {
                                                                                      var inst_9558 = state_9560[2];
                                                                                      var state_9560__$1 = state_9560;
                                                                                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9560__$1, inst_9558)
                                                                                    }else {
                                                                                      if(state_val_9561 === 20) {
                                                                                        var state_9560__$1 = state_9560;
                                                                                        var statearr_9625_9696 = state_9560__$1;
                                                                                        statearr_9625_9696[2] = 365;
                                                                                        statearr_9625_9696[1] = 21;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_9561 === 21) {
                                                                                          var inst_9423 = state_9560[35];
                                                                                          var inst_9433 = state_9560[37];
                                                                                          var inst_9432 = state_9560[38];
                                                                                          var inst_9426 = state_9560[36];
                                                                                          var inst_9408 = state_9560[25];
                                                                                          var inst_9418 = state_9560[31];
                                                                                          var inst_9409 = state_9560[8];
                                                                                          var inst_9413 = state_9560[27];
                                                                                          var inst_9411 = state_9560[9];
                                                                                          var inst_9384 = state_9560[5];
                                                                                          var inst_9412 = state_9560[28];
                                                                                          var inst_9407 = state_9560[29];
                                                                                          var inst_9406 = state_9560[26];
                                                                                          var inst_9410 = state_9560[10];
                                                                                          var inst_9438 = state_9560[2];
                                                                                          var inst_9439 = cljs.core.range.call(null, 0, inst_9438);
                                                                                          var inst_9440 = cljs.core.map.call(null, inst_9433, inst_9439);
                                                                                          var inst_9441 = cljs.core.apply.call(null, cljs.core.vector, inst_9440);
                                                                                          var inst_9442 = function() {
                                                                                            var first_date = inst_9426;
                                                                                            var map__9400 = inst_9406;
                                                                                            var data = inst_9413;
                                                                                            var context = inst_9409;
                                                                                            var offset = inst_9410;
                                                                                            var year = inst_9407;
                                                                                            var preprocess_data = inst_9423;
                                                                                            var preprocess = inst_9418;
                                                                                            var errors = inst_9412;
                                                                                            var parameters = inst_9384;
                                                                                            var attribute = inst_9411;
                                                                                            var sorting = inst_9408;
                                                                                            return function(first_date, map__9400, data, context, offset, year, preprocess_data, preprocess, errors, parameters, attribute, sorting, inst_9423, inst_9433, inst_9432, inst_9426, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9438, inst_9439, inst_9440, inst_9441, state_val_9561) {
                                                                                              return function(got, exp) {
                                                                                                var and__3941__auto__ = !(got == null);
                                                                                                if(and__3941__auto__) {
                                                                                                  return cljs.core._EQ_.call(null, got.time, exp)
                                                                                                }else {
                                                                                                  return and__3941__auto__
                                                                                                }
                                                                                              }
                                                                                            }(first_date, map__9400, data, context, offset, year, preprocess_data, preprocess, errors, parameters, attribute, sorting, inst_9423, inst_9433, inst_9432, inst_9426, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9438, inst_9439, inst_9440, inst_9441, state_val_9561)
                                                                                          }();
                                                                                          var inst_9443 = function() {
                                                                                            var first_date = inst_9426;
                                                                                            var map__9400 = inst_9406;
                                                                                            var data = inst_9413;
                                                                                            var context = inst_9409;
                                                                                            var offset = inst_9410;
                                                                                            var year = inst_9407;
                                                                                            var preprocess_data = inst_9423;
                                                                                            var preprocess = inst_9418;
                                                                                            var errors = inst_9412;
                                                                                            var parameters = inst_9384;
                                                                                            var attribute = inst_9411;
                                                                                            var sorting = inst_9408;
                                                                                            return function(first_date, map__9400, data, context, offset, year, preprocess_data, preprocess, errors, parameters, attribute, sorting, inst_9423, inst_9433, inst_9432, inst_9426, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9438, inst_9439, inst_9440, inst_9441, inst_9442, state_val_9561) {
                                                                                              return function(d) {
                                                                                                var obj = new Object;
                                                                                                obj.time = d;
                                                                                                obj.value = new cljs.core.Keyword(null, "missing", "missing", 2083353816);
                                                                                                return obj
                                                                                              }
                                                                                            }(first_date, map__9400, data, context, offset, year, preprocess_data, preprocess, errors, parameters, attribute, sorting, inst_9423, inst_9433, inst_9432, inst_9426, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9438, inst_9439, inst_9440, inst_9441, inst_9442, state_val_9561)
                                                                                          }();
                                                                                          var inst_9444 = weather_canvas.weather.filled.call(null, inst_9432, inst_9441, inst_9442, inst_9443);
                                                                                          var inst_9445 = 31 + 28;
                                                                                          var inst_9446 = weather_canvas.weather.leap_year_QMARK_.call(null, inst_9407);
                                                                                          var inst_9447 = cljs.core.not.call(null, inst_9446);
                                                                                          var state_9560__$1 = function() {
                                                                                            var statearr_9626 = state_9560;
                                                                                            statearr_9626[39] = inst_9444;
                                                                                            statearr_9626[40] = inst_9445;
                                                                                            return statearr_9626
                                                                                          }();
                                                                                          if(inst_9447) {
                                                                                            var statearr_9627_9697 = state_9560__$1;
                                                                                            statearr_9627_9697[1] = 22
                                                                                          }else {
                                                                                            var statearr_9628_9698 = state_9560__$1;
                                                                                            statearr_9628_9698[1] = 23
                                                                                          }
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_9561 === 22) {
                                                                                            var inst_9444 = state_9560[39];
                                                                                            var inst_9445 = state_9560[40];
                                                                                            var inst_9449 = cljs.core.take.call(null, inst_9445, inst_9444);
                                                                                            var inst_9450 = inst_9445 - 1;
                                                                                            var inst_9451 = cljs.core.nth.call(null, inst_9444, inst_9450);
                                                                                            var inst_9452 = cljs.core.vector.call(null, inst_9451);
                                                                                            var inst_9453 = cljs.core.concat.call(null, inst_9449, inst_9452);
                                                                                            var inst_9454 = cljs.core.drop.call(null, inst_9445, inst_9444);
                                                                                            var inst_9455 = cljs.core.concat.call(null, inst_9453, inst_9454);
                                                                                            var state_9560__$1 = state_9560;
                                                                                            var statearr_9629_9699 = state_9560__$1;
                                                                                            statearr_9629_9699[2] = inst_9455;
                                                                                            statearr_9629_9699[1] = 24;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            if(state_val_9561 === 23) {
                                                                                              var inst_9444 = state_9560[39];
                                                                                              var state_9560__$1 = state_9560;
                                                                                              var statearr_9630_9700 = state_9560__$1;
                                                                                              statearr_9630_9700[2] = inst_9444;
                                                                                              statearr_9630_9700[1] = 24;
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                            }else {
                                                                                              if(state_val_9561 === 24) {
                                                                                                var inst_9423 = state_9560[35];
                                                                                                var inst_9426 = state_9560[36];
                                                                                                var inst_9444 = state_9560[39];
                                                                                                var inst_9445 = state_9560[40];
                                                                                                var inst_9408 = state_9560[25];
                                                                                                var inst_9418 = state_9560[31];
                                                                                                var inst_9409 = state_9560[8];
                                                                                                var inst_9413 = state_9560[27];
                                                                                                var inst_9411 = state_9560[9];
                                                                                                var inst_9384 = state_9560[5];
                                                                                                var inst_9412 = state_9560[28];
                                                                                                var inst_9407 = state_9560[29];
                                                                                                var inst_9406 = state_9560[26];
                                                                                                var inst_9410 = state_9560[10];
                                                                                                var inst_9458 = state_9560[2];
                                                                                                var inst_9459 = function() {
                                                                                                  var first_date = inst_9426;
                                                                                                  var map__9400 = inst_9406;
                                                                                                  var data = inst_9413;
                                                                                                  var context = inst_9409;
                                                                                                  var offset = inst_9410;
                                                                                                  var uniform_data_seq = inst_9458;
                                                                                                  var data_seq = inst_9444;
                                                                                                  var year = inst_9407;
                                                                                                  var preprocess_data = inst_9423;
                                                                                                  var preprocess = inst_9418;
                                                                                                  var errors = inst_9412;
                                                                                                  var parameters = inst_9384;
                                                                                                  var jan_and_feb = inst_9445;
                                                                                                  var attribute = inst_9411;
                                                                                                  var sorting = inst_9408;
                                                                                                  return function(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, state_val_9561) {
                                                                                                    return function(p1__9114_SHARP_) {
                                                                                                      return p1__9114_SHARP_.value
                                                                                                    }
                                                                                                  }(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, state_val_9561)
                                                                                                }();
                                                                                                var inst_9460 = cljs.core.map.call(null, inst_9459, inst_9458);
                                                                                                var inst_9461 = inst_9418.call(null, inst_9460);
                                                                                                var inst_9462 = function() {
                                                                                                  var first_date = inst_9426;
                                                                                                  var map__9400 = inst_9406;
                                                                                                  var data = inst_9413;
                                                                                                  var context = inst_9409;
                                                                                                  var offset = inst_9410;
                                                                                                  var uniform_data_seq = inst_9458;
                                                                                                  var data_seq = inst_9444;
                                                                                                  var year = inst_9407;
                                                                                                  var preprocess_data = inst_9423;
                                                                                                  var preprocess = inst_9418;
                                                                                                  var errors = inst_9412;
                                                                                                  var parameters = inst_9384;
                                                                                                  var jan_and_feb = inst_9445;
                                                                                                  var attribute = inst_9411;
                                                                                                  var uniform_days = inst_9461;
                                                                                                  var sorting = inst_9408;
                                                                                                  return function(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, uniform_days, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, inst_9459, inst_9460, inst_9461, state_val_9561) {
                                                                                                    return function(p1__9115_SHARP_) {
                                                                                                      return cljs.core.assoc.call(null, p1__9115_SHARP_, offset, cljs.core.apply.call(null, cljs.core.vector, preprocess_data.call(null, function() {
                                                                                                        var iter__3494__auto__ = function(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, uniform_days, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, inst_9459, inst_9460, 
                                                                                                        inst_9461, state_val_9561) {
                                                                                                          return function iter__9631(s__9632) {
                                                                                                            return new cljs.core.LazySeq(null, false, function(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, uniform_days, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, inst_9459, 
                                                                                                            inst_9460, inst_9461, state_val_9561) {
                                                                                                              return function() {
                                                                                                                var s__9632__$1 = s__9632;
                                                                                                                while(true) {
                                                                                                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__9632__$1);
                                                                                                                  if(temp__4092__auto__) {
                                                                                                                    var s__9632__$2 = temp__4092__auto__;
                                                                                                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__9632__$2)) {
                                                                                                                      var c__3492__auto__ = cljs.core.chunk_first.call(null, s__9632__$2);
                                                                                                                      var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                                                                                                                      var b__9634 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                                                                                                                      if(function() {
                                                                                                                        var i__9633 = 0;
                                                                                                                        while(true) {
                                                                                                                          if(i__9633 < size__3493__auto__) {
                                                                                                                            var el = cljs.core._nth.call(null, c__3492__auto__, i__9633);
                                                                                                                            cljs.core.chunk_append.call(null, b__9634, function() {
                                                                                                                              var date = new Date(el.time);
                                                                                                                              var value = cljs.core.truth_(isNaN(el.value)) ? new cljs.core.Keyword(null, "missing", "missing", 2083353816) : el.value;
                                                                                                                              return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "day", "day", 1014003470), date.getDate(), new cljs.core.Keyword(null, "weekday", "weekday", 2240766618), weather_canvas.weather.weekday.call(null, date.getDay()), new cljs.core.Keyword(null, "month", "month", 1117984242), 1 + date.getMonth(), new cljs.core.Keyword(null, "year", "year", 1017609135), 
                                                                                                                              date.getFullYear(), new cljs.core.Keyword(null, "unit", "unit", 1017498870), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), value) ? "" : weather_canvas.weather.scale.call(null, attribute), new cljs.core.Keyword(null, "description", "description", 3584325486), weather_canvas.weather.description.call(null, attribute), new cljs.core.Keyword(null, 
                                                                                                                              "value", "value", 1125876963), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), value) ? "mittaus puuttuu" : value], true)
                                                                                                                            }());
                                                                                                                            var G__9701 = i__9633 + 1;
                                                                                                                            i__9633 = G__9701;
                                                                                                                            continue
                                                                                                                          }else {
                                                                                                                            return true
                                                                                                                          }
                                                                                                                          break
                                                                                                                        }
                                                                                                                      }()) {
                                                                                                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9634), iter__9631.call(null, cljs.core.chunk_rest.call(null, s__9632__$2)))
                                                                                                                      }else {
                                                                                                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9634), null)
                                                                                                                      }
                                                                                                                    }else {
                                                                                                                      var el = cljs.core.first.call(null, s__9632__$2);
                                                                                                                      return cljs.core.cons.call(null, function() {
                                                                                                                        var date = new Date(el.time);
                                                                                                                        var value = cljs.core.truth_(isNaN(el.value)) ? new cljs.core.Keyword(null, "missing", "missing", 2083353816) : el.value;
                                                                                                                        return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "day", "day", 1014003470), date.getDate(), new cljs.core.Keyword(null, "weekday", "weekday", 2240766618), weather_canvas.weather.weekday.call(null, date.getDay()), new cljs.core.Keyword(null, "month", "month", 1117984242), 1 + date.getMonth(), new cljs.core.Keyword(null, "year", "year", 1017609135), date.getFullYear(), 
                                                                                                                        new cljs.core.Keyword(null, "unit", "unit", 1017498870), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), value) ? "" : weather_canvas.weather.scale.call(null, attribute), new cljs.core.Keyword(null, "description", "description", 3584325486), weather_canvas.weather.description.call(null, attribute), new cljs.core.Keyword(null, "value", "value", 
                                                                                                                        1125876963), cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), value) ? "mittaus puuttuu" : value], true)
                                                                                                                      }(), iter__9631.call(null, cljs.core.rest.call(null, s__9632__$2)))
                                                                                                                    }
                                                                                                                  }else {
                                                                                                                    return null
                                                                                                                  }
                                                                                                                  break
                                                                                                                }
                                                                                                              }
                                                                                                            }(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, uniform_days, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, inst_9459, inst_9460, inst_9461, state_val_9561), 
                                                                                                            null)
                                                                                                          }
                                                                                                        }(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, uniform_days, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, inst_9459, inst_9460, inst_9461, state_val_9561);
                                                                                                        return iter__3494__auto__.call(null, uniform_data_seq)
                                                                                                      }())))
                                                                                                    }
                                                                                                  }(first_date, map__9400, data, context, offset, uniform_data_seq, data_seq, year, preprocess_data, preprocess, errors, parameters, jan_and_feb, attribute, uniform_days, sorting, inst_9423, inst_9426, inst_9444, inst_9445, inst_9408, inst_9418, inst_9409, inst_9413, inst_9411, inst_9384, inst_9412, inst_9407, inst_9406, inst_9410, inst_9458, inst_9459, inst_9460, inst_9461, state_val_9561)
                                                                                                }();
                                                                                                var inst_9463 = cljs.core.swap_BANG_.call(null, weather_canvas.weather.year_data, inst_9462);
                                                                                                var inst_9468 = cljs.core.range.call(null);
                                                                                                var inst_9469 = cljs.core.map.call(null, cljs.core.list, inst_9468, inst_9461);
                                                                                                var inst_9470 = cljs.core.seq.call(null, inst_9469);
                                                                                                var inst_9471 = inst_9470;
                                                                                                var inst_9472 = null;
                                                                                                var inst_9473 = 0;
                                                                                                var inst_9474 = 0;
                                                                                                var state_9560__$1 = function() {
                                                                                                  var statearr_9635 = state_9560;
                                                                                                  statearr_9635[41] = inst_9463;
                                                                                                  statearr_9635[15] = inst_9474;
                                                                                                  statearr_9635[16] = inst_9473;
                                                                                                  statearr_9635[17] = inst_9471;
                                                                                                  statearr_9635[18] = inst_9472;
                                                                                                  return statearr_9635
                                                                                                }();
                                                                                                var statearr_9636_9702 = state_9560__$1;
                                                                                                statearr_9636_9702[2] = null;
                                                                                                statearr_9636_9702[1] = 25;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                              }else {
                                                                                                if(state_val_9561 === 25) {
                                                                                                  var inst_9474 = state_9560[15];
                                                                                                  var inst_9473 = state_9560[16];
                                                                                                  var inst_9476 = inst_9474 < inst_9473;
                                                                                                  var inst_9477 = inst_9476;
                                                                                                  var state_9560__$1 = state_9560;
                                                                                                  if(cljs.core.truth_(inst_9477)) {
                                                                                                    var statearr_9637_9703 = state_9560__$1;
                                                                                                    statearr_9637_9703[1] = 27
                                                                                                  }else {
                                                                                                    var statearr_9638_9704 = state_9560__$1;
                                                                                                    statearr_9638_9704[1] = 28
                                                                                                  }
                                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                }else {
                                                                                                  if(state_val_9561 === 26) {
                                                                                                    var inst_9543 = state_9560[2];
                                                                                                    var state_9560__$1 = state_9560;
                                                                                                    var statearr_9639_9705 = state_9560__$1;
                                                                                                    statearr_9639_9705[2] = inst_9543;
                                                                                                    statearr_9639_9705[1] = 9;
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                  }else {
                                                                                                    if(state_val_9561 === 27) {
                                                                                                      var inst_9482 = state_9560[7];
                                                                                                      var inst_9483 = state_9560[42];
                                                                                                      var inst_9474 = state_9560[15];
                                                                                                      var inst_9472 = state_9560[18];
                                                                                                      var inst_9480 = cljs.core._nth.call(null, inst_9472, inst_9474);
                                                                                                      var inst_9481 = cljs.core.nth.call(null, inst_9480, 0, null);
                                                                                                      var inst_9482__$1 = cljs.core.nth.call(null, inst_9480, 1, null);
                                                                                                      var inst_9483__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "missing", "missing", 2083353816), inst_9482__$1);
                                                                                                      var state_9560__$1 = function() {
                                                                                                        var statearr_9640 = state_9560;
                                                                                                        statearr_9640[6] = inst_9481;
                                                                                                        statearr_9640[7] = inst_9482__$1;
                                                                                                        statearr_9640[42] = inst_9483__$1;
                                                                                                        return statearr_9640
                                                                                                      }();
                                                                                                      if(inst_9483__$1) {
                                                                                                        var statearr_9641_9706 = state_9560__$1;
                                                                                                        statearr_9641_9706[1] = 30
                                                                                                      }else {
                                                                                                        var statearr_9642_9707 = state_9560__$1;
                                                                                                        statearr_9642_9707[1] = 31
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                    }else {
                                                                                                      if(state_val_9561 === 28) {
                                                                                                        var inst_9503 = state_9560[20];
                                                                                                        var inst_9471 = state_9560[17];
                                                                                                        var inst_9503__$1 = cljs.core.seq.call(null, inst_9471);
                                                                                                        var state_9560__$1 = function() {
                                                                                                          var statearr_9643 = state_9560;
                                                                                                          statearr_9643[20] = inst_9503__$1;
                                                                                                          return statearr_9643
                                                                                                        }();
                                                                                                        if(inst_9503__$1) {
                                                                                                          var statearr_9644_9708 = state_9560__$1;
                                                                                                          statearr_9644_9708[1] = 36
                                                                                                        }else {
                                                                                                          var statearr_9645_9709 = state_9560__$1;
                                                                                                          statearr_9645_9709[1] = 37
                                                                                                        }
                                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                      }else {
                                                                                                        if(state_val_9561 === 29) {
                                                                                                          var inst_9541 = state_9560[2];
                                                                                                          var state_9560__$1 = state_9560;
                                                                                                          var statearr_9646_9710 = state_9560__$1;
                                                                                                          statearr_9646_9710[2] = inst_9541;
                                                                                                          statearr_9646_9710[1] = 26;
                                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                        }else {
                                                                                                          if(state_val_9561 === 30) {
                                                                                                            var inst_9483 = state_9560[42];
                                                                                                            var state_9560__$1 = state_9560;
                                                                                                            var statearr_9647_9711 = state_9560__$1;
                                                                                                            statearr_9647_9711[2] = inst_9483;
                                                                                                            statearr_9647_9711[1] = 32;
                                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                          }else {
                                                                                                            if(state_val_9561 === 31) {
                                                                                                              var inst_9482 = state_9560[7];
                                                                                                              var inst_9486 = isNaN(inst_9482);
                                                                                                              var state_9560__$1 = state_9560;
                                                                                                              var statearr_9648_9712 = state_9560__$1;
                                                                                                              statearr_9648_9712[2] = inst_9486;
                                                                                                              statearr_9648_9712[1] = 32;
                                                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                                            }else {
                                                                                                              return null
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_9650 = new Array(43);
            statearr_9650[0] = state_machine__5156__auto__;
            statearr_9650[1] = 1;
            return statearr_9650
          };
          var state_machine__5156__auto____1 = function(state_9560) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_9560);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_9560) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_9560)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_9651 = f__5206__auto__.call(null);
      statearr_9651[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_9651
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.weather.listen_results_async_fake = function listen_results_async_fake() {
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_9811) {
        var state_val_9812 = state_9811[1];
        if(state_val_9812 === 1) {
          var inst_9775 = null;
          var state_9811__$1 = function() {
            var statearr_9813 = state_9811;
            statearr_9813[5] = inst_9775;
            return statearr_9813
          }();
          var statearr_9814_9837 = state_9811__$1;
          statearr_9814_9837[2] = null;
          statearr_9814_9837[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_9812 === 2) {
            var inst_9775 = state_9811[5];
            var inst_9777 = inst_9775 == null;
            var inst_9778 = cljs.core.not.call(null, inst_9777);
            var state_9811__$1 = state_9811;
            if(inst_9778) {
              var statearr_9815_9838 = state_9811__$1;
              statearr_9815_9838[1] = 4
            }else {
              var statearr_9816_9839 = state_9811__$1;
              statearr_9816_9839[1] = 5
            }
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_9812 === 3) {
              var inst_9809 = state_9811[2];
              var state_9811__$1 = state_9811;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9811__$1, inst_9809)
            }else {
              if(state_val_9812 === 4) {
                var inst_9775 = state_9811[5];
                var inst_9781 = cljs.core.seq_QMARK_.call(null, inst_9775);
                var state_9811__$1 = state_9811;
                if(inst_9781) {
                  var statearr_9817_9840 = state_9811__$1;
                  statearr_9817_9840[1] = 7
                }else {
                  var statearr_9818_9841 = state_9811__$1;
                  statearr_9818_9841[1] = 8
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_9812 === 5) {
                  var state_9811__$1 = state_9811;
                  var statearr_9819_9842 = state_9811__$1;
                  statearr_9819_9842[2] = null;
                  statearr_9819_9842[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_9812 === 6) {
                    var inst_9799 = state_9811[2];
                    var inst_9800 = cljs.core.async.timeout.call(null, 20);
                    var state_9811__$1 = function() {
                      var statearr_9820 = state_9811;
                      statearr_9820[6] = inst_9799;
                      return statearr_9820
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9811__$1, 13, inst_9800)
                  }else {
                    if(state_val_9812 === 7) {
                      var inst_9775 = state_9811[5];
                      var inst_9783 = cljs.core.apply.call(null, cljs.core.hash_map, inst_9775);
                      var state_9811__$1 = state_9811;
                      var statearr_9821_9843 = state_9811__$1;
                      statearr_9821_9843[2] = inst_9783;
                      statearr_9821_9843[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_9812 === 8) {
                        var inst_9775 = state_9811[5];
                        var state_9811__$1 = state_9811;
                        var statearr_9822_9844 = state_9811__$1;
                        statearr_9822_9844[2] = inst_9775;
                        statearr_9822_9844[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_9812 === 9) {
                          var inst_9786 = state_9811[2];
                          var inst_9787 = cljs.core.get.call(null, inst_9786, new cljs.core.Keyword(null, "sorting", "sorting", 3284289782));
                          var inst_9788 = cljs.core.get.call(null, inst_9786, new cljs.core.Keyword(null, "context", "context", 1965435169));
                          var inst_9789 = cljs.core.get.call(null, inst_9786, new cljs.core.Keyword(null, "offset", "offset", 4289091589));
                          var inst_9790 = cljs.core.get.call(null, inst_9786, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582));
                          var inst_9791 = cljs.core.get.call(null, inst_9786, new cljs.core.Keyword(null, "errors", "errors", 4014236381));
                          var inst_9792 = cljs.core.get.call(null, inst_9786, new cljs.core.Keyword(null, "data", "data", 1016980252));
                          var state_9811__$1 = function() {
                            var statearr_9823 = state_9811;
                            statearr_9823[7] = inst_9788;
                            statearr_9823[8] = inst_9792;
                            statearr_9823[9] = inst_9789;
                            statearr_9823[10] = inst_9790;
                            statearr_9823[11] = inst_9791;
                            return statearr_9823
                          }();
                          if(cljs.core.truth_(inst_9787)) {
                            var statearr_9824_9845 = state_9811__$1;
                            statearr_9824_9845[1] = 10
                          }else {
                            var statearr_9825_9846 = state_9811__$1;
                            statearr_9825_9846[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_9812 === 10) {
                            var state_9811__$1 = state_9811;
                            var statearr_9826_9847 = state_9811__$1;
                            statearr_9826_9847[2] = cljs.core.sort;
                            statearr_9826_9847[1] = 12;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_9812 === 11) {
                              var state_9811__$1 = state_9811;
                              var statearr_9827_9848 = state_9811__$1;
                              statearr_9827_9848[2] = cljs.core.identity;
                              statearr_9827_9848[1] = 12;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_9812 === 12) {
                                var inst_9796 = state_9811[2];
                                var state_9811__$1 = function() {
                                  var statearr_9828 = state_9811;
                                  statearr_9828[12] = inst_9796;
                                  return statearr_9828
                                }();
                                var statearr_9829_9849 = state_9811__$1;
                                statearr_9829_9849[2] = null;
                                statearr_9829_9849[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_9812 === 13) {
                                  var inst_9802 = state_9811[2];
                                  var state_9811__$1 = function() {
                                    var statearr_9830 = state_9811;
                                    statearr_9830[13] = inst_9802;
                                    return statearr_9830
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9811__$1, 14, weather_canvas.weather.c_msg, "done")
                                }else {
                                  if(state_val_9812 === 14) {
                                    var inst_9804 = state_9811[2];
                                    var state_9811__$1 = function() {
                                      var statearr_9831 = state_9811;
                                      statearr_9831[14] = inst_9804;
                                      return statearr_9831
                                    }();
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_9811__$1, 15, weather_canvas.weather.c)
                                  }else {
                                    if(state_val_9812 === 15) {
                                      var inst_9806 = state_9811[2];
                                      var inst_9775 = inst_9806;
                                      var state_9811__$1 = function() {
                                        var statearr_9832 = state_9811;
                                        statearr_9832[5] = inst_9775;
                                        return statearr_9832
                                      }();
                                      var statearr_9833_9850 = state_9811__$1;
                                      statearr_9833_9850[2] = null;
                                      statearr_9833_9850[1] = 2;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_9835 = new Array(15);
            statearr_9835[0] = state_machine__5156__auto__;
            statearr_9835[1] = 1;
            return statearr_9835
          };
          var state_machine__5156__auto____1 = function(state_9811) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_9811);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_9811) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_9811)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_9836 = f__5206__auto__.call(null);
      statearr_9836[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_9836
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.weather.in_range = function in_range(point, segment) {
  var range = (new cljs.core.Keyword(null, "range", "range", 1122184367)).call(null, segment);
  var and__3941__auto__ = point >= cljs.core.first.call(null, range);
  if(and__3941__auto__) {
    return point <= cljs.core.second.call(null, range)
  }else {
    return and__3941__auto__
  }
};
weather_canvas.weather.color_string = function color_string(rgb_seq) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.concat.call(null, "#", cljs.core.map.call(null, function(p1__9851_SHARP_) {
    return weather_canvas.weather.pad_with.call(null, (p1__9851_SHARP_ | 0).toString(16), "0", 2)
  }, rgb_seq)))
};
weather_canvas.weather.memo_color_string = cljs.core.memoize.call(null, weather_canvas.weather.color_string);
weather_canvas.weather.pad_with = function pad_with(string, char$, width) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.reverse.call(null, cljs.core.take.call(null, width, cljs.core.concat.call(null, cljs.core.reverse.call(null, string), cljs.core.repeat.call(null, char$)))))
};
weather_canvas.weather.temperature_to_color = function temperature_to_color(point, gradient) {
  var segment = cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.partial.call(null, weather_canvas.weather.in_range, point), (new cljs.core.Keyword(null, "colors", "colors", 3954028770)).call(null, gradient)));
  var color_from = (new cljs.core.Keyword(null, "from", "from", 1017056028)).call(null, segment);
  var color_to = (new cljs.core.Keyword(null, "to", "to", 1013907949)).call(null, segment);
  var range = (new cljs.core.Keyword(null, "range", "range", 1122184367)).call(null, segment);
  var range_start = cljs.core.first.call(null, range);
  var range_end = cljs.core.second.call(null, range);
  var point_in_range = (point - range_start) / (range_end - range_start);
  return weather_canvas.weather.memo_color_string.call(null, cljs.core.map.call(null, cljs.core._PLUS_, color_from, cljs.core.map.call(null, function(p1__9852_SHARP_) {
    return point_in_range * p1__9852_SHARP_
  }, cljs.core.map.call(null, cljs.core._, color_to, color_from))))
};
weather_canvas.weather.today_minus = function today_minus(days) {
  var d = new Date;
  d.setDate(d.getDate() - days);
  return d.getTime()
};
weather_canvas.weather.make_date = function make_date(year, month, day) {
  var date = new Date([cljs.core.str(year), cljs.core.str("-"), cljs.core.str(month), cljs.core.str("-"), cljs.core.str(day)].join(""));
  return new Date(date.valueOf())
};
weather_canvas.weather.draw_async = function draw_async(canvas, from, to, location_id, quantity, sorting) {
  cljs.core.reset_BANG_.call(null, weather_canvas.weather.years_to_fetch, 1 + (to - from));
  weather_canvas.canvas_buffer.init_canvas.call(null, canvas, cljs.core.deref.call(null, weather_canvas.weather.years_to_fetch));
  cljs.core.reset_BANG_.call(null, weather_canvas.weather.year_data, cljs.core.apply.call(null, cljs.core.vector, cljs.core.repeat.call(null, cljs.core.deref.call(null, weather_canvas.weather.years_to_fetch), cljs.core.PersistentVector.EMPTY)));
  weather_canvas.weather.listen_results_async.call(null);
  if(cljs.core.truth_(location_id)) {
    var context = canvas.getContext("2d");
    dommy.core.add_class_BANG_.call(null, document.getElementById("status-report"), "processing");
    var seq__9881 = cljs.core.seq.call(null, cljs.core.range.call(null, from, 1 + to));
    var chunk__9882 = null;
    var count__9883 = 0;
    var i__9884 = 0;
    while(true) {
      if(i__9884 < count__9883) {
        var year = cljs.core._nth.call(null, chunk__9882, i__9884);
        var connection_9909 = new fi.fmi.metoclient.metolib.WfsConnection;
        var stored_query_id_9910 = "fmi::observations::weather::daily::multipointcoverage";
        var url_9911 = cljs.core.format.call(null, "http://data.fmi.fi/fmi-apikey/%s/wfs", weather_canvas.weather.api_key);
        var parameters_9912 = {"fmisid":location_id, "requestParameter":"rrday,tday,snow,tmin,tmax", "begin":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "01", "01"), "end":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "12", "31"), "callback":function(seq__9881, chunk__9882, count__9883, i__9884, connection_9909, stored_query_id_9910, url_9911, year) {
          return function(data, errors) {
            if(cljs.core.truth_(data)) {
              var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
              cljs.core.async.impl.dispatch.run.call(null, function(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9909, stored_query_id_9910, url_9911, year) {
                return function() {
                  var f__5206__auto__ = function() {
                    var switch__5155__auto__ = function(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9909, stored_query_id_9910, url_9911, year) {
                      return function(state_9891) {
                        var state_val_9892 = state_9891[1];
                        if(state_val_9892 === 2) {
                          var inst_9888 = state_9891[2];
                          var inst_9889 = connection_9909.disconnect();
                          var state_9891__$1 = function() {
                            var statearr_9893 = state_9891;
                            statearr_9893[5] = inst_9888;
                            return statearr_9893
                          }();
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9891__$1, inst_9889)
                        }else {
                          if(state_val_9892 === 1) {
                            var inst_9885 = year - from;
                            var inst_9886 = cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), data, new cljs.core.Keyword(null, "errors", "errors", 4014236381), errors, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582), quantity, new cljs.core.Keyword(null, "offset", "offset", 4289091589), inst_9885, new cljs.core.Keyword(null, "year", "year", 1017609135), year, new cljs.core.Keyword(null, "context", "context", 1965435169), context, new cljs.core.Keyword(null, 
                            "sorting", "sorting", 3284289782), sorting);
                            var state_9891__$1 = state_9891;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9891__$1, 2, weather_canvas.weather.c, inst_9886)
                          }else {
                            return null
                          }
                        }
                      }
                    }(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9909, stored_query_id_9910, url_9911, year);
                    return function(seq__9881, chunk__9882, count__9883, i__9884, switch__5155__auto__, c__5205__auto__, connection_9909, stored_query_id_9910, url_9911, year) {
                      return function() {
                        var state_machine__5156__auto__ = null;
                        var state_machine__5156__auto____0 = function() {
                          var statearr_9895 = new Array(6);
                          statearr_9895[0] = state_machine__5156__auto__;
                          statearr_9895[1] = 1;
                          return statearr_9895
                        };
                        var state_machine__5156__auto____1 = function(state_9891) {
                          while(true) {
                            var result__5157__auto__ = switch__5155__auto__.call(null, state_9891);
                            if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                              continue
                            }else {
                              return result__5157__auto__
                            }
                            break
                          }
                        };
                        state_machine__5156__auto__ = function(state_9891) {
                          switch(arguments.length) {
                            case 0:
                              return state_machine__5156__auto____0.call(this);
                            case 1:
                              return state_machine__5156__auto____1.call(this, state_9891)
                          }
                          throw new Error("Invalid arity: " + arguments.length);
                        };
                        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
                        state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
                        return state_machine__5156__auto__
                      }()
                    }(seq__9881, chunk__9882, count__9883, i__9884, switch__5155__auto__, c__5205__auto__, connection_9909, stored_query_id_9910, url_9911, year)
                  }();
                  var state__5207__auto__ = function() {
                    var statearr_9896 = f__5206__auto__.call(null);
                    statearr_9896[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
                    return statearr_9896
                  }();
                  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
                }
              }(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9909, stored_query_id_9910, url_9911, year));
              return c__5205__auto__
            }else {
              return null
            }
          }
        }(seq__9881, chunk__9882, count__9883, i__9884, connection_9909, stored_query_id_9910, url_9911, year)};
        if(cljs.core.truth_(connection_9909.connect(url_9911, stored_query_id_9910))) {
          connection_9909.getData(parameters_9912)
        }else {
        }
        var G__9913 = seq__9881;
        var G__9914 = chunk__9882;
        var G__9915 = count__9883;
        var G__9916 = i__9884 + 1;
        seq__9881 = G__9913;
        chunk__9882 = G__9914;
        count__9883 = G__9915;
        i__9884 = G__9916;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__9881);
        if(temp__4092__auto__) {
          var seq__9881__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__9881__$1)) {
            var c__3525__auto__ = cljs.core.chunk_first.call(null, seq__9881__$1);
            var G__9917 = cljs.core.chunk_rest.call(null, seq__9881__$1);
            var G__9918 = c__3525__auto__;
            var G__9919 = cljs.core.count.call(null, c__3525__auto__);
            var G__9920 = 0;
            seq__9881 = G__9917;
            chunk__9882 = G__9918;
            count__9883 = G__9919;
            i__9884 = G__9920;
            continue
          }else {
            var year = cljs.core.first.call(null, seq__9881__$1);
            var connection_9921 = new fi.fmi.metoclient.metolib.WfsConnection;
            var stored_query_id_9922 = "fmi::observations::weather::daily::multipointcoverage";
            var url_9923 = cljs.core.format.call(null, "http://data.fmi.fi/fmi-apikey/%s/wfs", weather_canvas.weather.api_key);
            var parameters_9924 = {"fmisid":location_id, "requestParameter":"rrday,tday,snow,tmin,tmax", "begin":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "01", "01"), "end":weather_canvas.weather.make_date.call(null, [cljs.core.str(year)].join(""), "12", "31"), "callback":function(seq__9881, chunk__9882, count__9883, i__9884, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__) {
              return function(data, errors) {
                if(cljs.core.truth_(data)) {
                  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
                  cljs.core.async.impl.dispatch.run.call(null, function(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__) {
                    return function() {
                      var f__5206__auto__ = function() {
                        var switch__5155__auto__ = function(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__) {
                          return function(state_9903) {
                            var state_val_9904 = state_9903[1];
                            if(state_val_9904 === 2) {
                              var inst_9900 = state_9903[2];
                              var inst_9901 = connection_9921.disconnect();
                              var state_9903__$1 = function() {
                                var statearr_9905 = state_9903;
                                statearr_9905[5] = inst_9900;
                                return statearr_9905
                              }();
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_9903__$1, inst_9901)
                            }else {
                              if(state_val_9904 === 1) {
                                var inst_9897 = year - from;
                                var inst_9898 = cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "data", "data", 1016980252), data, new cljs.core.Keyword(null, "errors", "errors", 4014236381), errors, new cljs.core.Keyword(null, "attribute", "attribute", 1026989582), quantity, new cljs.core.Keyword(null, "offset", "offset", 4289091589), inst_9897, new cljs.core.Keyword(null, "year", "year", 1017609135), year, new cljs.core.Keyword(null, "context", "context", 1965435169), context, new cljs.core.Keyword(null, 
                                "sorting", "sorting", 3284289782), sorting);
                                var state_9903__$1 = state_9903;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_9903__$1, 2, weather_canvas.weather.c, inst_9898)
                              }else {
                                return null
                              }
                            }
                          }
                        }(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__);
                        return function(seq__9881, chunk__9882, count__9883, i__9884, switch__5155__auto__, c__5205__auto__, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__) {
                          return function() {
                            var state_machine__5156__auto__ = null;
                            var state_machine__5156__auto____0 = function() {
                              var statearr_9907 = new Array(6);
                              statearr_9907[0] = state_machine__5156__auto__;
                              statearr_9907[1] = 1;
                              return statearr_9907
                            };
                            var state_machine__5156__auto____1 = function(state_9903) {
                              while(true) {
                                var result__5157__auto__ = switch__5155__auto__.call(null, state_9903);
                                if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                                  continue
                                }else {
                                  return result__5157__auto__
                                }
                                break
                              }
                            };
                            state_machine__5156__auto__ = function(state_9903) {
                              switch(arguments.length) {
                                case 0:
                                  return state_machine__5156__auto____0.call(this);
                                case 1:
                                  return state_machine__5156__auto____1.call(this, state_9903)
                              }
                              throw new Error("Invalid arity: " + arguments.length);
                            };
                            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
                            state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
                            return state_machine__5156__auto__
                          }()
                        }(seq__9881, chunk__9882, count__9883, i__9884, switch__5155__auto__, c__5205__auto__, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__)
                      }();
                      var state__5207__auto__ = function() {
                        var statearr_9908 = f__5206__auto__.call(null);
                        statearr_9908[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
                        return statearr_9908
                      }();
                      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
                    }
                  }(seq__9881, chunk__9882, count__9883, i__9884, c__5205__auto__, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__));
                  return c__5205__auto__
                }else {
                  return null
                }
              }
            }(seq__9881, chunk__9882, count__9883, i__9884, connection_9921, stored_query_id_9922, url_9923, year, seq__9881__$1, temp__4092__auto__)};
            if(cljs.core.truth_(connection_9921.connect(url_9923, stored_query_id_9922))) {
              connection_9921.getData(parameters_9924)
            }else {
            }
            var G__9925 = cljs.core.next.call(null, seq__9881__$1);
            var G__9926 = null;
            var G__9927 = 0;
            var G__9928 = 0;
            seq__9881 = G__9925;
            chunk__9882 = G__9926;
            count__9883 = G__9927;
            i__9884 = G__9928;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
goog.provide("weather_canvas.templates");
goog.require("cljs.core");
goog.require("dommy.core");
weather_canvas.templates.years = cljs.core.reverse.call(null, cljs.core.range.call(null, 1959, 1 + (new Date).getFullYear()));
weather_canvas.templates.id_generator = function id_generator(prefix) {
  return function(suffix) {
    return cljs.core.format.call(null, "%s-%s", prefix, suffix)
  }
};
weather_canvas.templates.id_stripper = function id_stripper(prefix) {
  return function(id) {
    return cljs.core.second.call(null, clojure.string.split.call(null, id, [cljs.core.str(prefix), cljs.core.str("-")].join("")))
  }
};
weather_canvas.templates.query_form = function query_form(sequence_no) {
  var id_prefix = cljs.core.format.call(null, "query-form-%d", sequence_no);
  var mk_id = weather_canvas.templates.id_generator.call(null, id_prefix);
  var year_options_2 = function() {
    var iter__3494__auto__ = function(id_prefix, mk_id) {
      return function iter__8940(s__8941) {
        return new cljs.core.LazySeq(null, false, function(id_prefix, mk_id) {
          return function() {
            var s__8941__$1 = s__8941;
            while(true) {
              var temp__4092__auto__ = cljs.core.seq.call(null, s__8941__$1);
              if(temp__4092__auto__) {
                var s__8941__$2 = temp__4092__auto__;
                if(cljs.core.chunked_seq_QMARK_.call(null, s__8941__$2)) {
                  var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8941__$2);
                  var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                  var b__8943 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                  if(function() {
                    var i__8942 = 0;
                    while(true) {
                      if(i__8942 < size__3493__auto__) {
                        var year = cljs.core._nth.call(null, c__3492__auto__, i__8942);
                        cljs.core.chunk_append.call(null, b__8943, cljs.core._EQ_.call(null, 2010, year) ? cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year, new cljs.core.Keyword(null, "selected", "selected", 2205476365), "selected"], true), year], true) : cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), 
                        cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year], true), year], true));
                        var G__8959 = i__8942 + 1;
                        i__8942 = G__8959;
                        continue
                      }else {
                        return true
                      }
                      break
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8943), iter__8940.call(null, cljs.core.chunk_rest.call(null, s__8941__$2)))
                  }else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8943), null)
                  }
                }else {
                  var year = cljs.core.first.call(null, s__8941__$2);
                  return cljs.core.cons.call(null, cljs.core._EQ_.call(null, 2010, year) ? cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year, new cljs.core.Keyword(null, "selected", "selected", 2205476365), "selected"], true), year], true) : cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
                  "value", "value", 1125876963), year], true), year], true), iter__8940.call(null, cljs.core.rest.call(null, s__8941__$2)))
                }
              }else {
                return null
              }
              break
            }
          }
        }(id_prefix, mk_id), null)
      }
    }(id_prefix, mk_id);
    return iter__3494__auto__.call(null, weather_canvas.templates.years)
  }();
  var year_options_1 = function() {
    var iter__3494__auto__ = function(id_prefix, mk_id, year_options_2) {
      return function iter__8944(s__8945) {
        return new cljs.core.LazySeq(null, false, function(id_prefix, mk_id, year_options_2) {
          return function() {
            var s__8945__$1 = s__8945;
            while(true) {
              var temp__4092__auto__ = cljs.core.seq.call(null, s__8945__$1);
              if(temp__4092__auto__) {
                var s__8945__$2 = temp__4092__auto__;
                if(cljs.core.chunked_seq_QMARK_.call(null, s__8945__$2)) {
                  var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8945__$2);
                  var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                  var b__8947 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                  if(function() {
                    var i__8946 = 0;
                    while(true) {
                      if(i__8946 < size__3493__auto__) {
                        var year = cljs.core._nth.call(null, c__3492__auto__, i__8946);
                        cljs.core.chunk_append.call(null, b__8947, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year], true), year], true));
                        var G__8960 = i__8946 + 1;
                        i__8946 = G__8960;
                        continue
                      }else {
                        return true
                      }
                      break
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8947), iter__8944.call(null, cljs.core.chunk_rest.call(null, s__8945__$2)))
                  }else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8947), null)
                  }
                }else {
                  var year = cljs.core.first.call(null, s__8945__$2);
                  return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), year], true), year], true), iter__8944.call(null, cljs.core.rest.call(null, s__8945__$2)))
                }
              }else {
                return null
              }
              break
            }
          }
        }(id_prefix, mk_id, year_options_2), null)
      }
    }(id_prefix, mk_id, year_options_2);
    return iter__3494__auto__.call(null, weather_canvas.templates.years)
  }();
  var dom8948 = document.createElement("div");
  if("query-form-container") {
    dom8948.className = [cljs.core.str(dom8948.className), cljs.core.str(" "), cljs.core.str("query-form-container")].join("").trim()
  }else {
  }
  dom8948.appendChild(function() {
    var dom8949 = document.createElement("form");
    if(cljs.core.truth_(id_prefix)) {
      dom8949.setAttribute("id", id_prefix)
    }else {
    }
    if("off") {
      dom8949.setAttribute("autocomplete", "off")
    }else {
    }
    dom8949.appendChild(dommy.template.__GT_node_like.call(null, weather_canvas.templates.group.call(null, cljs.core.PersistentVector.fromArray([weather_canvas.templates.with_label.call(null, "vuodesta", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "year-start"), cljs.core.conj.call(null, year_options_1, function() {
      var dom8950 = document.createElement("option");
      if(-1) {
        dom8950.setAttribute("value", -1)
      }else {
      }
      if("selected") {
        dom8950.setAttribute("selected", "selected")
      }else {
      }
      dom8950.appendChild(document.createTextNode("valitse"));
      return dom8950
    }()), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "year", new cljs.core.Keyword(null, "data-bound", "data-bound", 1186285837), "start"], true)), weather_canvas.templates.with_label.call(null, "vuoteen", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "year-end"), year_options_2, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "year", new cljs.core.Keyword(null, 
    "data-bound", "data-bound", 1186285837), "end"], true)), weather_canvas.templates.with_label.call(null, "paikassa", new cljs.core.Keyword(null, "input", "input", 1114262332), mk_id.call(null, "location"), null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "autocomplete", "autocomplete", 4470924122), "off", new cljs.core.Keyword(null, "type", "type", 1017479852), "text", new cljs.core.Keyword(null, "disabled", "disabled", 1284845038), "disabled"], true))], true))));
    dom8949.appendChild(dommy.template.__GT_node_like.call(null, weather_canvas.templates.group.call(null, cljs.core.PersistentVector.fromArray([weather_canvas.templates.with_label.call(null, "piirr\u00e4", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "quantity"), function() {
      var iter__3494__auto__ = function iter__8951(s__8952) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__8952__$1 = s__8952;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__8952__$1);
            if(temp__4092__auto__) {
              var s__8952__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__8952__$2)) {
                var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8952__$2);
                var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                var b__8954 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                if(function() {
                  var i__8953 = 0;
                  while(true) {
                    if(i__8953 < size__3493__auto__) {
                      var c = cljs.core._nth.call(null, c__3492__auto__, i__8953);
                      cljs.core.chunk_append.call(null, b__8954, c);
                      var G__8961 = i__8953 + 1;
                      i__8953 = G__8961;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8954), iter__8951.call(null, cljs.core.chunk_rest.call(null, s__8952__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8954), null)
                }
              }else {
                var c = cljs.core.first.call(null, s__8952__$2);
                return cljs.core.cons.call(null, c, iter__8951.call(null, cljs.core.rest.call(null, s__8952__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3494__auto__.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "tday"], true), "keskil\u00e4mp\u00f6tila"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", 
      "value", 1125876963), "tmax"], true), "maksimil\u00e4mp\u00f6tila"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "tmin"], true), "minimil\u00e4mp\u00f6tila"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", 
      "value", 1125876963), "rrday"], true), "sadem\u00e4\u00e4r\u00e4"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "snow"], true), "lumensyvyys"], true)], true))
    }()), weather_canvas.templates.with_label.call(null, "j\u00e4rjest\u00e4", new cljs.core.Keyword(null, "select", "select", 4402849902), mk_id.call(null, "order"), function() {
      var iter__3494__auto__ = function iter__8955(s__8956) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__8956__$1 = s__8956;
          while(true) {
            var temp__4092__auto__ = cljs.core.seq.call(null, s__8956__$1);
            if(temp__4092__auto__) {
              var s__8956__$2 = temp__4092__auto__;
              if(cljs.core.chunked_seq_QMARK_.call(null, s__8956__$2)) {
                var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8956__$2);
                var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
                var b__8958 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
                if(function() {
                  var i__8957 = 0;
                  while(true) {
                    if(i__8957 < size__3493__auto__) {
                      var c = cljs.core._nth.call(null, c__3492__auto__, i__8957);
                      cljs.core.chunk_append.call(null, b__8958, c);
                      var G__8962 = i__8957 + 1;
                      i__8957 = G__8962;
                      continue
                    }else {
                      return true
                    }
                    break
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8958), iter__8955.call(null, cljs.core.chunk_rest.call(null, s__8956__$2)))
                }else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8958), null)
                }
              }else {
                var c = cljs.core.first.call(null, s__8956__$2);
                return cljs.core.cons.call(null, c, iter__8955.call(null, cljs.core.rest.call(null, s__8956__$2)))
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__3494__auto__.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 1125876963), "default"], true), "ajan mukaan"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "option", "option", 4298734567), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "value", "value", 
      1125876963), "value"], true), "mittausarvon mukaan"], true)], true))
    }()), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "input", "input", 1114262332), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "submit", new cljs.core.Keyword(null, "type", "type", 1017479852), "submit", new cljs.core.Keyword(null, "value", "value", 1125876963), "Toteuta!"], true)], true)], true))));
    return dom8949
  }());
  return dom8948
};
weather_canvas.templates.group = function group(contents) {
  return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "div", "div", 1014003715), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "form-grouping"], true), function() {
    var iter__3494__auto__ = function iter__8967(s__8968) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__8968__$1 = s__8968;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__8968__$1);
          if(temp__4092__auto__) {
            var s__8968__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__8968__$2)) {
              var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8968__$2);
              var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
              var b__8970 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
              if(function() {
                var i__8969 = 0;
                while(true) {
                  if(i__8969 < size__3493__auto__) {
                    var c = cljs.core._nth.call(null, c__3492__auto__, i__8969);
                    cljs.core.chunk_append.call(null, b__8970, c);
                    var G__8971 = i__8969 + 1;
                    i__8969 = G__8971;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8970), iter__8967.call(null, cljs.core.chunk_rest.call(null, s__8968__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8970), null)
              }
            }else {
              var c = cljs.core.first.call(null, s__8968__$2);
              return cljs.core.cons.call(null, c, iter__8967.call(null, cljs.core.rest.call(null, s__8968__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3494__auto__.call(null, contents)
  }()], true)
};
weather_canvas.templates.with_label = function() {
  var with_label__delegate = function(label, type, id, contents, attrs) {
    return cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "span", "span", 1017440956), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), "form-element"], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "label", "label", 1116631654), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "for", "for", 1014005819), id], true), label], true), cljs.core.PersistentVector.fromArray([type, cljs.core.merge.call(null, 
    cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "id", "id", 1013907597), id, new cljs.core.Keyword(null, "name", "name", 1017277949), id], true), cljs.core.first.call(null, attrs)), contents], true)], true)
  };
  var with_label = function(label, type, id, contents, var_args) {
    var attrs = null;
    if(arguments.length > 4) {
      attrs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
    }
    return with_label__delegate.call(this, label, type, id, contents, attrs)
  };
  with_label.cljs$lang$maxFixedArity = 4;
  with_label.cljs$lang$applyTo = function(arglist__8972) {
    var label = cljs.core.first(arglist__8972);
    arglist__8972 = cljs.core.next(arglist__8972);
    var type = cljs.core.first(arglist__8972);
    arglist__8972 = cljs.core.next(arglist__8972);
    var id = cljs.core.first(arglist__8972);
    arglist__8972 = cljs.core.next(arglist__8972);
    var contents = cljs.core.first(arglist__8972);
    var attrs = cljs.core.rest(arglist__8972);
    return with_label__delegate(label, type, id, contents, attrs)
  };
  with_label.cljs$core$IFn$_invoke$arity$variadic = with_label__delegate;
  return with_label
}();
goog.provide("weather_canvas.core");
goog.require("cljs.core");
goog.require("weather_canvas.events");
goog.require("weather_canvas.canvas_buffer");
goog.require("cljs.core.async");
goog.require("weather_canvas.events");
goog.require("weather_canvas.canvas_buffer");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("goog.ui.ac");
goog.require("dommy.utils");
goog.require("observation_data.observation_points");
goog.require("weather_canvas.weather");
goog.require("weather_canvas.templates");
weather_canvas.core.days_in_month = cljs.core.PersistentVector.fromArray([31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
weather_canvas.core.init_ui = function init_ui() {
  var submit_form = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.core.append_BANG_.call(null, document.querySelector(dommy.core.selector.call(null, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.Keyword(null, ".form-wrapper", ".form-wrapper", 1131515690)], true))), weather_canvas.templates.query_form.call(null, 1))).getElementsByTagName("form"))[0];
  var submit_channel = weather_canvas.events.listen.call(null, submit_form, new cljs.core.Keyword(null, "submit", "submit", 4417336202));
  var years_channel = weather_canvas.events.listen.call(null, cljs.core.PersistentVector.fromArray([submit_form, new cljs.core.Keyword(null, ".year", ".year", 1060091101)], true), new cljs.core.Keyword(null, "change", "change", 3947235106));
  var c__5205__auto___8841 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_8699) {
        var state_val_8700 = state_8699[1];
        if(state_val_8700 === 32) {
          var state_8699__$1 = state_8699;
          var statearr_8701_8842 = state_8699__$1;
          statearr_8701_8842[2] = null;
          statearr_8701_8842[1] = 33;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_8700 === 1) {
            var state_8699__$1 = state_8699;
            var statearr_8702_8843 = state_8699__$1;
            statearr_8702_8843[2] = null;
            statearr_8702_8843[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_8700 === 33) {
              var inst_8677 = state_8699[2];
              var state_8699__$1 = state_8699;
              var statearr_8703_8844 = state_8699__$1;
              statearr_8703_8844[2] = inst_8677;
              statearr_8703_8844[1] = 27;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_8700 === 2) {
                var state_8699__$1 = state_8699;
                if(true) {
                  var statearr_8704_8845 = state_8699__$1;
                  statearr_8704_8845[1] = 4
                }else {
                  var statearr_8705_8846 = state_8699__$1;
                  statearr_8705_8846[1] = 5
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_8700 === 34) {
                  var inst_8648 = state_8699[5];
                  var inst_8652 = cljs.core.chunk_first.call(null, inst_8648);
                  var inst_8653 = cljs.core.chunk_rest.call(null, inst_8648);
                  var inst_8654 = cljs.core.count.call(null, inst_8652);
                  var inst_8623 = inst_8653;
                  var inst_8624 = inst_8652;
                  var inst_8625 = inst_8654;
                  var inst_8626 = 0;
                  var state_8699__$1 = function() {
                    var statearr_8706 = state_8699;
                    statearr_8706[6] = inst_8626;
                    statearr_8706[7] = inst_8625;
                    statearr_8706[8] = inst_8624;
                    statearr_8706[9] = inst_8623;
                    return statearr_8706
                  }();
                  var statearr_8707_8847 = state_8699__$1;
                  statearr_8707_8847[2] = null;
                  statearr_8707_8847[1] = 23;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_8700 === 3) {
                    var inst_8697 = state_8699[2];
                    var state_8699__$1 = state_8699;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8699__$1, inst_8697)
                  }else {
                    if(state_val_8700 === 35) {
                      var inst_8648 = state_8699[5];
                      var inst_8657 = cljs.core.first.call(null, inst_8648);
                      var inst_8659 = document.createElement("div");
                      var state_8699__$1 = function() {
                        var statearr_8708 = state_8699;
                        statearr_8708[10] = inst_8659;
                        statearr_8708[11] = inst_8657;
                        return statearr_8708
                      }();
                      if("year") {
                        var statearr_8709_8848 = state_8699__$1;
                        statearr_8709_8848[1] = 37
                      }else {
                        var statearr_8710_8849 = state_8699__$1;
                        statearr_8710_8849[1] = 38
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_8700 === 4) {
                        var state_8699__$1 = state_8699;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8699__$1, 7, submit_channel)
                      }else {
                        if(state_val_8700 === 36) {
                          var inst_8674 = state_8699[2];
                          var state_8699__$1 = state_8699;
                          var statearr_8711_8850 = state_8699__$1;
                          statearr_8711_8850[2] = inst_8674;
                          statearr_8711_8850[1] = 33;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_8700 === 5) {
                            var state_8699__$1 = state_8699;
                            var statearr_8712_8851 = state_8699__$1;
                            statearr_8712_8851[2] = null;
                            statearr_8712_8851[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_8700 === 37) {
                              var inst_8659 = state_8699[10];
                              var inst_8661 = inst_8659.className;
                              var inst_8662 = [cljs.core.str(inst_8661), cljs.core.str(" "), cljs.core.str("year")].join("");
                              var inst_8663 = inst_8662.trim();
                              var inst_8664 = inst_8659.className = inst_8663;
                              var state_8699__$1 = state_8699;
                              var statearr_8713_8852 = state_8699__$1;
                              statearr_8713_8852[2] = inst_8664;
                              statearr_8713_8852[1] = 39;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_8700 === 6) {
                                var inst_8695 = state_8699[2];
                                var state_8699__$1 = state_8699;
                                var statearr_8714_8853 = state_8699__$1;
                                statearr_8714_8853[2] = inst_8695;
                                statearr_8714_8853[1] = 3;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_8700 === 38) {
                                  var state_8699__$1 = state_8699;
                                  var statearr_8715_8854 = state_8699__$1;
                                  statearr_8715_8854[2] = null;
                                  statearr_8715_8854[1] = 39;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_8700 === 7) {
                                    var inst_8529 = state_8699[12];
                                    var inst_8527 = state_8699[2];
                                    var inst_8528 = inst_8527.target;
                                    var inst_8529__$1 = weather_canvas.core.handle_form.call(null, inst_8528);
                                    var inst_8530 = inst_8529__$1.call(null, "year-start");
                                    var inst_8531 = inst_8530 | 0;
                                    var inst_8532 = inst_8529__$1.call(null, "year-end");
                                    var inst_8533 = inst_8532 | 0;
                                    var inst_8535 = document.createElement("canvas");
                                    var state_8699__$1 = function() {
                                      var statearr_8716 = state_8699;
                                      statearr_8716[13] = inst_8533;
                                      statearr_8716[14] = inst_8531;
                                      statearr_8716[12] = inst_8529__$1;
                                      statearr_8716[15] = inst_8535;
                                      return statearr_8716
                                    }();
                                    if("weather-canvas") {
                                      var statearr_8717_8855 = state_8699__$1;
                                      statearr_8717_8855[1] = 8
                                    }else {
                                      var statearr_8718_8856 = state_8699__$1;
                                      statearr_8718_8856[1] = 9
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_8700 === 39) {
                                      var inst_8659 = state_8699[10];
                                      var inst_8657 = state_8699[11];
                                      var inst_8612 = state_8699[16];
                                      var inst_8648 = state_8699[5];
                                      var inst_8667 = state_8699[2];
                                      var inst_8668 = dommy.template.__GT_node_like.call(null, inst_8657);
                                      var inst_8669 = inst_8659.appendChild(inst_8668);
                                      var inst_8670 = dommy.core.append_BANG_.call(null, inst_8612, inst_8659);
                                      var inst_8671 = cljs.core.next.call(null, inst_8648);
                                      var inst_8623 = inst_8671;
                                      var inst_8624 = null;
                                      var inst_8625 = 0;
                                      var inst_8626 = 0;
                                      var state_8699__$1 = function() {
                                        var statearr_8719 = state_8699;
                                        statearr_8719[6] = inst_8626;
                                        statearr_8719[7] = inst_8625;
                                        statearr_8719[17] = inst_8669;
                                        statearr_8719[8] = inst_8624;
                                        statearr_8719[18] = inst_8667;
                                        statearr_8719[9] = inst_8623;
                                        statearr_8719[19] = inst_8670;
                                        return statearr_8719
                                      }();
                                      var statearr_8720_8857 = state_8699__$1;
                                      statearr_8720_8857[2] = null;
                                      statearr_8720_8857[1] = 23;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_8700 === 8) {
                                        var inst_8535 = state_8699[15];
                                        var inst_8537 = inst_8535.setAttribute("id", "weather-canvas");
                                        var state_8699__$1 = state_8699;
                                        var statearr_8721_8858 = state_8699__$1;
                                        statearr_8721_8858[2] = inst_8537;
                                        statearr_8721_8858[1] = 10;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_8700 === 40) {
                                          var inst_8531 = state_8699[14];
                                          var state_8699__$1 = state_8699;
                                          var statearr_8722_8859 = state_8699__$1;
                                          statearr_8722_8859[2] = inst_8531;
                                          statearr_8722_8859[1] = 42;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_8700 === 9) {
                                            var state_8699__$1 = state_8699;
                                            var statearr_8723_8860 = state_8699__$1;
                                            statearr_8723_8860[2] = null;
                                            statearr_8723_8860[1] = 10;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_8700 === 41) {
                                              var inst_8533 = state_8699[13];
                                              var state_8699__$1 = state_8699;
                                              var statearr_8724_8861 = state_8699__$1;
                                              statearr_8724_8861[2] = inst_8533;
                                              statearr_8724_8861[1] = 42;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_8700 === 10) {
                                                var inst_8529 = state_8699[12];
                                                var inst_8540 = state_8699[2];
                                                var inst_8541 = inst_8529.call(null, "order");
                                                var inst_8542 = cljs.core.vector.call(null, new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.Keyword(null, ".headers-top", ".headers-top", 3857259794));
                                                var inst_8543 = dommy.core.selector.call(null, inst_8542);
                                                var inst_8544 = document.querySelector(inst_8543);
                                                var inst_8545 = cljs.core.async.timeout.call(null, 100);
                                                var state_8699__$1 = function() {
                                                  var statearr_8725 = state_8699;
                                                  statearr_8725[20] = inst_8544;
                                                  statearr_8725[21] = inst_8541;
                                                  statearr_8725[22] = inst_8540;
                                                  return statearr_8725
                                                }();
                                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8699__$1, 11, inst_8545)
                                              }else {
                                                if(state_val_8700 === 42) {
                                                  var inst_8531 = state_8699[14];
                                                  var inst_8529 = state_8699[12];
                                                  var inst_8541 = state_8699[21];
                                                  var inst_8535 = state_8699[15];
                                                  var inst_8686 = state_8699[2];
                                                  var inst_8687 = inst_8529.call(null, "location");
                                                  var inst_8688 = observation_data.observation_points.name_to_id.call(null, inst_8687);
                                                  var inst_8689 = inst_8529.call(null, "quantity");
                                                  var inst_8690 = cljs.core._EQ_.call(null, "value", inst_8541);
                                                  var inst_8691 = weather_canvas.weather.draw_async.call(null, inst_8535, inst_8531, inst_8686, inst_8688, inst_8689, inst_8690);
                                                  var state_8699__$1 = function() {
                                                    var statearr_8726 = state_8699;
                                                    statearr_8726[23] = inst_8691;
                                                    return statearr_8726
                                                  }();
                                                  var statearr_8727_8862 = state_8699__$1;
                                                  statearr_8727_8862[2] = null;
                                                  statearr_8727_8862[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_8700 === 11) {
                                                    var inst_8544 = state_8699[20];
                                                    var inst_8535 = state_8699[15];
                                                    var inst_8547 = state_8699[2];
                                                    var inst_8548 = cljs.core.vector.call(null, new cljs.core.Keyword(null, "body", "body", 1016933652), new cljs.core.Keyword(null, ".canvas-wrapper", ".canvas-wrapper", 3594915902));
                                                    var inst_8549 = dommy.core.selector.call(null, inst_8548);
                                                    var inst_8550 = document.querySelector(inst_8549);
                                                    var inst_8551 = dommy.core.replace_contents_BANG_.call(null, inst_8550, inst_8535);
                                                    var inst_8556 = dommy.template.__GT_node_like.call(null, inst_8544);
                                                    var inst_8557 = inst_8556.getElementsByClassName("month");
                                                    var inst_8558 = dommy.utils.__GT_Array.call(null, inst_8557);
                                                    var inst_8559 = cljs.core.map.call(null, cljs.core.list, inst_8558, weather_canvas.core.days_in_month);
                                                    var inst_8560 = cljs.core.seq.call(null, inst_8559);
                                                    var inst_8561 = inst_8560;
                                                    var inst_8562 = null;
                                                    var inst_8563 = 0;
                                                    var inst_8564 = 0;
                                                    var state_8699__$1 = function() {
                                                      var statearr_8728 = state_8699;
                                                      statearr_8728[24] = inst_8547;
                                                      statearr_8728[25] = inst_8551;
                                                      statearr_8728[26] = inst_8564;
                                                      statearr_8728[27] = inst_8561;
                                                      statearr_8728[28] = inst_8563;
                                                      statearr_8728[29] = inst_8562;
                                                      return statearr_8728
                                                    }();
                                                    var statearr_8729_8863 = state_8699__$1;
                                                    statearr_8729_8863[2] = null;
                                                    statearr_8729_8863[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_8700 === 12) {
                                                      var inst_8564 = state_8699[26];
                                                      var inst_8563 = state_8699[28];
                                                      var inst_8566 = inst_8564 < inst_8563;
                                                      var inst_8567 = inst_8566;
                                                      var state_8699__$1 = state_8699;
                                                      if(cljs.core.truth_(inst_8567)) {
                                                        var statearr_8733_8864 = state_8699__$1;
                                                        statearr_8733_8864[1] = 14
                                                      }else {
                                                        var statearr_8734_8865 = state_8699__$1;
                                                        statearr_8734_8865[1] = 15
                                                      }
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_8700 === 13) {
                                                        var inst_8533 = state_8699[13];
                                                        var inst_8531 = state_8699[14];
                                                        var inst_8544 = state_8699[20];
                                                        var inst_8541 = state_8699[21];
                                                        var inst_8612 = state_8699[16];
                                                        var inst_8607 = state_8699[2];
                                                        var inst_8608 = cljs.core._EQ_.call(null, inst_8541, "value");
                                                        var inst_8609 = dommy.core.toggle_class_BANG_.call(null, inst_8544, "hidden", inst_8608);
                                                        var inst_8610 = document.getElementsByClassName("headers-right");
                                                        var inst_8611 = dommy.utils.__GT_Array.call(null, inst_8610);
                                                        var inst_8612__$1 = inst_8611[0];
                                                        var inst_8614 = document.createElement("div");
                                                        var inst_8615 = dommy.core.replace_contents_BANG_.call(null, inst_8612__$1, inst_8614);
                                                        var inst_8620 = 1 + inst_8533;
                                                        var inst_8621 = cljs.core.range.call(null, inst_8531, inst_8620);
                                                        var inst_8622 = cljs.core.seq.call(null, inst_8621);
                                                        var inst_8623 = inst_8622;
                                                        var inst_8624 = null;
                                                        var inst_8625 = 0;
                                                        var inst_8626 = 0;
                                                        var state_8699__$1 = function() {
                                                          var statearr_8735 = state_8699;
                                                          statearr_8735[6] = inst_8626;
                                                          statearr_8735[7] = inst_8625;
                                                          statearr_8735[8] = inst_8624;
                                                          statearr_8735[9] = inst_8623;
                                                          statearr_8735[30] = inst_8615;
                                                          statearr_8735[31] = inst_8607;
                                                          statearr_8735[16] = inst_8612__$1;
                                                          statearr_8735[32] = inst_8609;
                                                          return statearr_8735
                                                        }();
                                                        var statearr_8736_8866 = state_8699__$1;
                                                        statearr_8736_8866[2] = null;
                                                        statearr_8736_8866[1] = 23;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_8700 === 14) {
                                                          var inst_8564 = state_8699[26];
                                                          var inst_8561 = state_8699[27];
                                                          var inst_8563 = state_8699[28];
                                                          var inst_8562 = state_8699[29];
                                                          var inst_8570 = cljs.core._nth.call(null, inst_8562, inst_8564);
                                                          var inst_8571 = cljs.core.nth.call(null, inst_8570, 0, null);
                                                          var inst_8572 = cljs.core.nth.call(null, inst_8570, 1, null);
                                                          var inst_8573 = weather_canvas.canvas_buffer.size_x * inst_8572;
                                                          var inst_8574 = inst_8573 - 21;
                                                          var inst_8575 = cljs.core.format.call(null, "width: %spx;", inst_8574);
                                                          var inst_8576 = dommy.core.set_attr_BANG_.call(null, inst_8571, new cljs.core.Keyword(null, "style", "style", 1123684643), inst_8575);
                                                          var inst_8577 = inst_8564 + 1;
                                                          var tmp8730 = inst_8561;
                                                          var tmp8731 = inst_8563;
                                                          var tmp8732 = inst_8562;
                                                          var inst_8561__$1 = tmp8730;
                                                          var inst_8562__$1 = tmp8732;
                                                          var inst_8563__$1 = tmp8731;
                                                          var inst_8564__$1 = inst_8577;
                                                          var state_8699__$1 = function() {
                                                            var statearr_8737 = state_8699;
                                                            statearr_8737[33] = inst_8576;
                                                            statearr_8737[26] = inst_8564__$1;
                                                            statearr_8737[27] = inst_8561__$1;
                                                            statearr_8737[28] = inst_8563__$1;
                                                            statearr_8737[29] = inst_8562__$1;
                                                            return statearr_8737
                                                          }();
                                                          var statearr_8738_8867 = state_8699__$1;
                                                          statearr_8738_8867[2] = null;
                                                          statearr_8738_8867[1] = 12;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_8700 === 15) {
                                                            var inst_8580 = state_8699[34];
                                                            var inst_8561 = state_8699[27];
                                                            var inst_8580__$1 = cljs.core.seq.call(null, inst_8561);
                                                            var state_8699__$1 = function() {
                                                              var statearr_8739 = state_8699;
                                                              statearr_8739[34] = inst_8580__$1;
                                                              return statearr_8739
                                                            }();
                                                            if(inst_8580__$1) {
                                                              var statearr_8740_8868 = state_8699__$1;
                                                              statearr_8740_8868[1] = 17
                                                            }else {
                                                              var statearr_8741_8869 = state_8699__$1;
                                                              statearr_8741_8869[1] = 18
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_8700 === 16) {
                                                              var inst_8605 = state_8699[2];
                                                              var state_8699__$1 = state_8699;
                                                              var statearr_8742_8870 = state_8699__$1;
                                                              statearr_8742_8870[2] = inst_8605;
                                                              statearr_8742_8870[1] = 13;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_8700 === 17) {
                                                                var inst_8580 = state_8699[34];
                                                                var inst_8582 = cljs.core.chunked_seq_QMARK_.call(null, inst_8580);
                                                                var state_8699__$1 = state_8699;
                                                                if(inst_8582) {
                                                                  var statearr_8743_8871 = state_8699__$1;
                                                                  statearr_8743_8871[1] = 20
                                                                }else {
                                                                  var statearr_8744_8872 = state_8699__$1;
                                                                  statearr_8744_8872[1] = 21
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_8700 === 18) {
                                                                  var state_8699__$1 = state_8699;
                                                                  var statearr_8745_8873 = state_8699__$1;
                                                                  statearr_8745_8873[2] = null;
                                                                  statearr_8745_8873[1] = 19;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_8700 === 19) {
                                                                    var inst_8603 = state_8699[2];
                                                                    var state_8699__$1 = state_8699;
                                                                    var statearr_8746_8874 = state_8699__$1;
                                                                    statearr_8746_8874[2] = inst_8603;
                                                                    statearr_8746_8874[1] = 16;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_8700 === 20) {
                                                                      var inst_8580 = state_8699[34];
                                                                      var inst_8584 = cljs.core.chunk_first.call(null, inst_8580);
                                                                      var inst_8585 = cljs.core.chunk_rest.call(null, inst_8580);
                                                                      var inst_8586 = cljs.core.count.call(null, inst_8584);
                                                                      var inst_8561 = inst_8585;
                                                                      var inst_8562 = inst_8584;
                                                                      var inst_8563 = inst_8586;
                                                                      var inst_8564 = 0;
                                                                      var state_8699__$1 = function() {
                                                                        var statearr_8747 = state_8699;
                                                                        statearr_8747[26] = inst_8564;
                                                                        statearr_8747[27] = inst_8561;
                                                                        statearr_8747[28] = inst_8563;
                                                                        statearr_8747[29] = inst_8562;
                                                                        return statearr_8747
                                                                      }();
                                                                      var statearr_8748_8875 = state_8699__$1;
                                                                      statearr_8748_8875[2] = null;
                                                                      statearr_8748_8875[1] = 12;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_8700 === 21) {
                                                                        var inst_8580 = state_8699[34];
                                                                        var inst_8590 = cljs.core.first.call(null, inst_8580);
                                                                        var inst_8591 = cljs.core.nth.call(null, inst_8590, 0, null);
                                                                        var inst_8592 = cljs.core.nth.call(null, inst_8590, 1, null);
                                                                        var inst_8593 = weather_canvas.canvas_buffer.size_x * inst_8592;
                                                                        var inst_8594 = inst_8593 - 21;
                                                                        var inst_8595 = cljs.core.format.call(null, "width: %spx;", inst_8594);
                                                                        var inst_8596 = dommy.core.set_attr_BANG_.call(null, inst_8591, new cljs.core.Keyword(null, "style", "style", 1123684643), inst_8595);
                                                                        var inst_8597 = cljs.core.next.call(null, inst_8580);
                                                                        var inst_8561 = inst_8597;
                                                                        var inst_8562 = null;
                                                                        var inst_8563 = 0;
                                                                        var inst_8564 = 0;
                                                                        var state_8699__$1 = function() {
                                                                          var statearr_8749 = state_8699;
                                                                          statearr_8749[35] = inst_8596;
                                                                          statearr_8749[26] = inst_8564;
                                                                          statearr_8749[27] = inst_8561;
                                                                          statearr_8749[28] = inst_8563;
                                                                          statearr_8749[29] = inst_8562;
                                                                          return statearr_8749
                                                                        }();
                                                                        var statearr_8750_8876 = state_8699__$1;
                                                                        statearr_8750_8876[2] = null;
                                                                        statearr_8750_8876[1] = 12;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_8700 === 22) {
                                                                          var inst_8600 = state_8699[2];
                                                                          var state_8699__$1 = state_8699;
                                                                          var statearr_8751_8877 = state_8699__$1;
                                                                          statearr_8751_8877[2] = inst_8600;
                                                                          statearr_8751_8877[1] = 19;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_8700 === 23) {
                                                                            var inst_8626 = state_8699[6];
                                                                            var inst_8625 = state_8699[7];
                                                                            var inst_8628 = inst_8626 < inst_8625;
                                                                            var inst_8629 = inst_8628;
                                                                            var state_8699__$1 = state_8699;
                                                                            if(cljs.core.truth_(inst_8629)) {
                                                                              var statearr_8752_8878 = state_8699__$1;
                                                                              statearr_8752_8878[1] = 25
                                                                            }else {
                                                                              var statearr_8753_8879 = state_8699__$1;
                                                                              statearr_8753_8879[1] = 26
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_8700 === 24) {
                                                                              var inst_8533 = state_8699[13];
                                                                              var inst_8531 = state_8699[14];
                                                                              var inst_8681 = state_8699[2];
                                                                              var inst_8682 = inst_8533 < inst_8531;
                                                                              var state_8699__$1 = function() {
                                                                                var statearr_8754 = state_8699;
                                                                                statearr_8754[36] = inst_8681;
                                                                                return statearr_8754
                                                                              }();
                                                                              if(cljs.core.truth_(inst_8682)) {
                                                                                var statearr_8755_8880 = state_8699__$1;
                                                                                statearr_8755_8880[1] = 40
                                                                              }else {
                                                                                var statearr_8756_8881 = state_8699__$1;
                                                                                statearr_8756_8881[1] = 41
                                                                              }
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_8700 === 25) {
                                                                                var inst_8626 = state_8699[6];
                                                                                var inst_8624 = state_8699[8];
                                                                                var inst_8631 = cljs.core._nth.call(null, inst_8624, inst_8626);
                                                                                var inst_8633 = document.createElement("div");
                                                                                var state_8699__$1 = function() {
                                                                                  var statearr_8757 = state_8699;
                                                                                  statearr_8757[37] = inst_8633;
                                                                                  statearr_8757[38] = inst_8631;
                                                                                  return statearr_8757
                                                                                }();
                                                                                if("year") {
                                                                                  var statearr_8758_8882 = state_8699__$1;
                                                                                  statearr_8758_8882[1] = 28
                                                                                }else {
                                                                                  var statearr_8759_8883 = state_8699__$1;
                                                                                  statearr_8759_8883[1] = 29
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_8700 === 26) {
                                                                                  var inst_8623 = state_8699[9];
                                                                                  var inst_8648 = state_8699[5];
                                                                                  var inst_8648__$1 = cljs.core.seq.call(null, inst_8623);
                                                                                  var state_8699__$1 = function() {
                                                                                    var statearr_8760 = state_8699;
                                                                                    statearr_8760[5] = inst_8648__$1;
                                                                                    return statearr_8760
                                                                                  }();
                                                                                  if(inst_8648__$1) {
                                                                                    var statearr_8761_8884 = state_8699__$1;
                                                                                    statearr_8761_8884[1] = 31
                                                                                  }else {
                                                                                    var statearr_8762_8885 = state_8699__$1;
                                                                                    statearr_8762_8885[1] = 32
                                                                                  }
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                }else {
                                                                                  if(state_val_8700 === 27) {
                                                                                    var inst_8679 = state_8699[2];
                                                                                    var state_8699__$1 = state_8699;
                                                                                    var statearr_8763_8886 = state_8699__$1;
                                                                                    statearr_8763_8886[2] = inst_8679;
                                                                                    statearr_8763_8886[1] = 24;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_8700 === 28) {
                                                                                      var inst_8633 = state_8699[37];
                                                                                      var inst_8635 = inst_8633.className;
                                                                                      var inst_8636 = [cljs.core.str(inst_8635), cljs.core.str(" "), cljs.core.str("year")].join("");
                                                                                      var inst_8637 = inst_8636.trim();
                                                                                      var inst_8638 = inst_8633.className = inst_8637;
                                                                                      var state_8699__$1 = state_8699;
                                                                                      var statearr_8767_8887 = state_8699__$1;
                                                                                      statearr_8767_8887[2] = inst_8638;
                                                                                      statearr_8767_8887[1] = 30;
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_8700 === 29) {
                                                                                        var state_8699__$1 = state_8699;
                                                                                        var statearr_8768_8888 = state_8699__$1;
                                                                                        statearr_8768_8888[2] = null;
                                                                                        statearr_8768_8888[1] = 30;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_8700 === 30) {
                                                                                          var inst_8626 = state_8699[6];
                                                                                          var inst_8625 = state_8699[7];
                                                                                          var inst_8624 = state_8699[8];
                                                                                          var inst_8623 = state_8699[9];
                                                                                          var inst_8612 = state_8699[16];
                                                                                          var inst_8633 = state_8699[37];
                                                                                          var inst_8631 = state_8699[38];
                                                                                          var inst_8641 = state_8699[2];
                                                                                          var inst_8642 = dommy.template.__GT_node_like.call(null, inst_8631);
                                                                                          var inst_8643 = inst_8633.appendChild(inst_8642);
                                                                                          var inst_8644 = dommy.core.append_BANG_.call(null, inst_8612, inst_8633);
                                                                                          var inst_8645 = inst_8626 + 1;
                                                                                          var tmp8764 = inst_8625;
                                                                                          var tmp8765 = inst_8624;
                                                                                          var tmp8766 = inst_8623;
                                                                                          var inst_8623__$1 = tmp8766;
                                                                                          var inst_8624__$1 = tmp8765;
                                                                                          var inst_8625__$1 = tmp8764;
                                                                                          var inst_8626__$1 = inst_8645;
                                                                                          var state_8699__$1 = function() {
                                                                                            var statearr_8769 = state_8699;
                                                                                            statearr_8769[6] = inst_8626__$1;
                                                                                            statearr_8769[7] = inst_8625__$1;
                                                                                            statearr_8769[8] = inst_8624__$1;
                                                                                            statearr_8769[9] = inst_8623__$1;
                                                                                            statearr_8769[39] = inst_8643;
                                                                                            statearr_8769[40] = inst_8644;
                                                                                            statearr_8769[41] = inst_8641;
                                                                                            return statearr_8769
                                                                                          }();
                                                                                          var statearr_8770_8889 = state_8699__$1;
                                                                                          statearr_8770_8889[2] = null;
                                                                                          statearr_8770_8889[1] = 23;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_8700 === 31) {
                                                                                            var inst_8648 = state_8699[5];
                                                                                            var inst_8650 = cljs.core.chunked_seq_QMARK_.call(null, inst_8648);
                                                                                            var state_8699__$1 = state_8699;
                                                                                            if(inst_8650) {
                                                                                              var statearr_8771_8890 = state_8699__$1;
                                                                                              statearr_8771_8890[1] = 34
                                                                                            }else {
                                                                                              var statearr_8772_8891 = state_8699__$1;
                                                                                              statearr_8772_8891[1] = 35
                                                                                            }
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_8774 = new Array(42);
            statearr_8774[0] = state_machine__5156__auto__;
            statearr_8774[1] = 1;
            return statearr_8774
          };
          var state_machine__5156__auto____1 = function(state_8699) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_8699);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_8699) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_8699)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_8775 = f__5206__auto__.call(null);
      statearr_8775[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto___8841;
      return statearr_8775
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  var c__5205__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5206__auto__ = function() {
      var switch__5155__auto__ = function(state_8819) {
        var state_val_8820 = state_8819[1];
        if(state_val_8820 === 1) {
          var state_8819__$1 = state_8819;
          var statearr_8821_8892 = state_8819__$1;
          statearr_8821_8892[2] = null;
          statearr_8821_8892[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_8820 === 2) {
            var state_8819__$1 = state_8819;
            if(true) {
              var statearr_8822_8893 = state_8819__$1;
              statearr_8822_8893[1] = 4
            }else {
              var statearr_8823_8894 = state_8819__$1;
              statearr_8823_8894[1] = 5
            }
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_8820 === 3) {
              var inst_8817 = state_8819[2];
              var state_8819__$1 = state_8819;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_8819__$1, inst_8817)
            }else {
              if(state_val_8820 === 4) {
                var state_8819__$1 = state_8819;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8819__$1, 7, years_channel)
              }else {
                if(state_val_8820 === 5) {
                  var state_8819__$1 = state_8819;
                  var statearr_8824_8895 = state_8819__$1;
                  statearr_8824_8895[2] = null;
                  statearr_8824_8895[1] = 6;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_8820 === 6) {
                    var inst_8815 = state_8819[2];
                    var state_8819__$1 = state_8819;
                    var statearr_8825_8896 = state_8819__$1;
                    statearr_8825_8896[2] = inst_8815;
                    statearr_8825_8896[1] = 3;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_8820 === 7) {
                      var inst_8786 = state_8819[5];
                      var inst_8797 = state_8819[6];
                      var inst_8795 = state_8819[7];
                      var inst_8794 = state_8819[8];
                      var inst_8779 = state_8819[2];
                      var inst_8780 = inst_8779.target;
                      var inst_8781 = weather_canvas.core.handle_form.call(null, submit_form);
                      var inst_8782 = dommy.core.attr.call(null, inst_8780, new cljs.core.Keyword(null, "data-bound", "data-bound", 1186285837));
                      var inst_8783 = inst_8781.call(null, "year-start");
                      var inst_8784 = inst_8783 | 0;
                      var inst_8785 = inst_8781.call(null, "year-end");
                      var inst_8786__$1 = inst_8785 | 0;
                      var inst_8787 = function() {
                        var end = inst_8786__$1;
                        var start = inst_8784;
                        var bound = inst_8782;
                        var form_contents = inst_8781;
                        var target = inst_8780;
                        var ev = inst_8779;
                        return function(end, start, bound, form_contents, target, ev, inst_8786, inst_8797, inst_8795, inst_8794, inst_8779, inst_8780, inst_8781, inst_8782, inst_8783, inst_8784, inst_8785, inst_8786__$1, state_val_8820) {
                          return function(p1__8205_SHARP_) {
                            return(new cljs.core.Keyword(null, "start", "start", 1123661780)).call(null, p1__8205_SHARP_) <= start
                          }
                        }(end, start, bound, form_contents, target, ev, inst_8786, inst_8797, inst_8795, inst_8794, inst_8779, inst_8780, inst_8781, inst_8782, inst_8783, inst_8784, inst_8785, inst_8786__$1, state_val_8820)
                      }();
                      var inst_8788 = cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "start", "start", 1123661780), observation_data.observation_points.metadata);
                      var inst_8789 = cljs.core.take_while.call(null, inst_8787, inst_8788);
                      var inst_8790 = function() {
                        var subseq = inst_8789;
                        var end = inst_8786__$1;
                        var start = inst_8784;
                        var bound = inst_8782;
                        var form_contents = inst_8781;
                        var target = inst_8780;
                        var ev = inst_8779;
                        return function(subseq, end, start, bound, form_contents, target, ev, inst_8786, inst_8797, inst_8795, inst_8794, inst_8779, inst_8780, inst_8781, inst_8782, inst_8783, inst_8784, inst_8785, inst_8786__$1, inst_8787, inst_8788, inst_8789, state_val_8820) {
                          return function(p1__8206_SHARP_) {
                            return(new cljs.core.Keyword(null, "end", "end", 1014004813)).call(null, p1__8206_SHARP_) < end
                          }
                        }(subseq, end, start, bound, form_contents, target, ev, inst_8786, inst_8797, inst_8795, inst_8794, inst_8779, inst_8780, inst_8781, inst_8782, inst_8783, inst_8784, inst_8785, inst_8786__$1, inst_8787, inst_8788, inst_8789, state_val_8820)
                      }();
                      var inst_8791 = cljs.core.sort_by.call(null, new cljs.core.Keyword(null, "end", "end", 1014004813), inst_8789);
                      var inst_8792 = cljs.core.drop_while.call(null, inst_8790, inst_8791);
                      var inst_8793 = document.getElementById("query-form-1-location");
                      var inst_8794__$1 = inst_8793.value;
                      var inst_8795__$1 = observation_data.observation_points.name_to_record.call(null, inst_8794__$1);
                      var inst_8796 = (new cljs.core.Keyword(null, "start", "start", 1123661780)).call(null, inst_8795__$1);
                      var inst_8797__$1 = inst_8796 <= inst_8784;
                      var state_8819__$1 = function() {
                        var statearr_8826 = state_8819;
                        statearr_8826[5] = inst_8786__$1;
                        statearr_8826[6] = inst_8797__$1;
                        statearr_8826[7] = inst_8795__$1;
                        statearr_8826[9] = inst_8792;
                        statearr_8826[8] = inst_8794__$1;
                        return statearr_8826
                      }();
                      if(cljs.core.truth_(inst_8797__$1)) {
                        var statearr_8827_8897 = state_8819__$1;
                        statearr_8827_8897[1] = 8
                      }else {
                        var statearr_8828_8898 = state_8819__$1;
                        statearr_8828_8898[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_8820 === 8) {
                        var inst_8786 = state_8819[5];
                        var inst_8795 = state_8819[7];
                        var inst_8799 = (new cljs.core.Keyword(null, "end", "end", 1014004813)).call(null, inst_8795);
                        var inst_8800 = inst_8799 >= inst_8786;
                        var state_8819__$1 = state_8819;
                        var statearr_8829_8899 = state_8819__$1;
                        statearr_8829_8899[2] = inst_8800;
                        statearr_8829_8899[1] = 10;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_8820 === 9) {
                          var inst_8797 = state_8819[6];
                          var state_8819__$1 = state_8819;
                          var statearr_8830_8900 = state_8819__$1;
                          statearr_8830_8900[2] = inst_8797;
                          statearr_8830_8900[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_8820 === 10) {
                            var inst_8803 = state_8819[2];
                            var state_8819__$1 = state_8819;
                            if(cljs.core.truth_(inst_8803)) {
                              var statearr_8831_8901 = state_8819__$1;
                              statearr_8831_8901[1] = 11
                            }else {
                              var statearr_8832_8902 = state_8819__$1;
                              statearr_8832_8902[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_8820 === 11) {
                              var inst_8794 = state_8819[8];
                              var state_8819__$1 = state_8819;
                              var statearr_8833_8903 = state_8819__$1;
                              statearr_8833_8903[2] = inst_8794;
                              statearr_8833_8903[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_8820 === 12) {
                                var state_8819__$1 = state_8819;
                                var statearr_8834_8904 = state_8819__$1;
                                statearr_8834_8904[2] = "";
                                statearr_8834_8904[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_8820 === 13) {
                                  var inst_8792 = state_8819[9];
                                  var inst_8807 = state_8819[2];
                                  var inst_8808 = weather_canvas.core.init_location_autocomplete.call(null, inst_8792, inst_8807);
                                  var inst_8809 = cljs.core.async.timeout.call(null, 100);
                                  var state_8819__$1 = function() {
                                    var statearr_8835 = state_8819;
                                    statearr_8835[10] = inst_8808;
                                    return statearr_8835
                                  }();
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_8819__$1, 14, inst_8809)
                                }else {
                                  if(state_val_8820 === 14) {
                                    var inst_8811 = state_8819[2];
                                    var state_8819__$1 = function() {
                                      var statearr_8836 = state_8819;
                                      statearr_8836[11] = inst_8811;
                                      return statearr_8836
                                    }();
                                    var statearr_8837_8905 = state_8819__$1;
                                    statearr_8837_8905[2] = null;
                                    statearr_8837_8905[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    return null
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5155__auto__) {
        return function() {
          var state_machine__5156__auto__ = null;
          var state_machine__5156__auto____0 = function() {
            var statearr_8839 = new Array(12);
            statearr_8839[0] = state_machine__5156__auto__;
            statearr_8839[1] = 1;
            return statearr_8839
          };
          var state_machine__5156__auto____1 = function(state_8819) {
            while(true) {
              var result__5157__auto__ = switch__5155__auto__.call(null, state_8819);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5157__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5157__auto__
              }
              break
            }
          };
          state_machine__5156__auto__ = function(state_8819) {
            switch(arguments.length) {
              case 0:
                return state_machine__5156__auto____0.call(this);
              case 1:
                return state_machine__5156__auto____1.call(this, state_8819)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5156__auto____0;
          state_machine__5156__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5156__auto____1;
          return state_machine__5156__auto__
        }()
      }(switch__5155__auto__)
    }();
    var state__5207__auto__ = function() {
      var statearr_8840 = f__5206__auto__.call(null);
      statearr_8840[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5205__auto__;
      return statearr_8840
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5207__auto__)
  });
  return c__5205__auto__
};
weather_canvas.core.indices = function indices(pred, coll) {
  return cljs.core.keep_indexed.call(null, function(p1__8907_SHARP_, p2__8906_SHARP_) {
    if(cljs.core.truth_(pred.call(null, p2__8906_SHARP_))) {
      return p1__8907_SHARP_
    }else {
      return null
    }
  }, coll)
};
weather_canvas.core.init_location_autocomplete = function init_location_autocomplete(points, default_value) {
  var a = cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, new cljs.core.Keyword(null, "title", "title", 1124275658), points));
  dommy.core.replace_BANG_.call(null, document.getElementById("query-form-1-location"), function() {
    var dom8909 = document.createElement("input");
    if("query-form-1-location") {
      dom8909.setAttribute("id", "query-form-1-location")
    }else {
    }
    if("query-form-1-location") {
      dom8909.setAttribute("name", "query-form-1-location")
    }else {
    }
    if("off") {
      dom8909.setAttribute("autocomplete", "off")
    }else {
    }
    if("text") {
      dom8909.setAttribute("type", "text")
    }else {
    }
    if(cljs.core.truth_(default_value)) {
      dom8909.setAttribute("value", default_value)
    }else {
    }
    return dom8909
  }());
  return goog.ui.ac.createSimpleAutoComplete(a, document.getElementById("query-form-1-location"), false)
};
weather_canvas.core.handle_form = function handle_form(form) {
  var id_prefix = dommy.core.attr.call(null, form, new cljs.core.Keyword(null, "id", "id", 1013907597));
  var strip_prefix = weather_canvas.templates.id_stripper.call(null, id_prefix);
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.flatten.call(null, function() {
    var iter__3494__auto__ = function iter__8914(s__8915) {
      return new cljs.core.LazySeq(null, false, function() {
        var s__8915__$1 = s__8915;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__8915__$1);
          if(temp__4092__auto__) {
            var s__8915__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__8915__$2)) {
              var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8915__$2);
              var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
              var b__8917 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
              if(function() {
                var i__8916 = 0;
                while(true) {
                  if(i__8916 < size__3493__auto__) {
                    var el = cljs.core._nth.call(null, c__3492__auto__, i__8916);
                    var id = dommy.core.attr.call(null, el, new cljs.core.Keyword(null, "id", "id", 1013907597));
                    if(!(id == null)) {
                      cljs.core.chunk_append.call(null, b__8917, cljs.core.PersistentVector.fromArray([strip_prefix.call(null, id), dommy.core.value.call(null, el)], true));
                      var G__8918 = i__8916 + 1;
                      i__8916 = G__8918;
                      continue
                    }else {
                      var G__8919 = i__8916 + 1;
                      i__8916 = G__8919;
                      continue
                    }
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8917), iter__8914.call(null, cljs.core.chunk_rest.call(null, s__8915__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8917), null)
              }
            }else {
              var el = cljs.core.first.call(null, s__8915__$2);
              var id = dommy.core.attr.call(null, el, new cljs.core.Keyword(null, "id", "id", 1013907597));
              if(!(id == null)) {
                return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([strip_prefix.call(null, id), dommy.core.value.call(null, el)], true), iter__8914.call(null, cljs.core.rest.call(null, s__8915__$2)))
              }else {
                var G__8920 = cljs.core.rest.call(null, s__8915__$2);
                s__8915__$1 = G__8920;
                continue
              }
            }
          }else {
            return null
          }
          break
        }
      }, null)
    };
    return iter__3494__auto__.call(null, dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, form).querySelectorAll("input,select")))
  }()))
};
weather_canvas.core.init_ui.call(null);
goog.provide("weather_canvas.sheet_test");
goog.require("cljs.core");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.weather");
goog.require("weather_canvas.sheet");
goog.require("weather_canvas.weather");
goog.require("weather_canvas.canvas_buffer");
goog.require("weather_canvas.sheet");
weather_canvas.sheet_test.group_1 = weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), weather_canvas.sheet.gap.call(null, 1), new cljs.core.Keyword(null, "content", "content", 1965434859), cljs.core.PersistentVector.fromArray([cljs.core.repeat.call(null, 31, weather_canvas.sheet.square.call(null, 2, "#ffffff")), cljs.core.repeat.call(null, 30, weather_canvas.sheet.square.call(null, 
2, "#ffffff"))], true));
weather_canvas.sheet_test.group_2 = weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), weather_canvas.sheet.gap.call(null, 1), new cljs.core.Keyword(null, "content", "content", 1965434859), cljs.core.PersistentVector.fromArray([cljs.core.repeat.call(null, 31, weather_canvas.sheet.square.call(null, 2, "#ff00ff")), cljs.core.repeat.call(null, 30, weather_canvas.sheet.square.call(null, 
4, "#ff00ff")), cljs.core.repeat.call(null, 29, weather_canvas.sheet.square.call(null, 2, "#ff00ff"))], true));
weather_canvas.sheet_test.container_group = weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "down", "down", 1016993812), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), weather_canvas.sheet.gap.call(null, 2), new cljs.core.Keyword(null, "content", "content", 1965434859), cljs.core.PersistentVector.fromArray([weather_canvas.sheet_test.group_1, weather_canvas.sheet_test.group_2, weather_canvas.sheet_test.group_2, weather_canvas.sheet_test.group_1], true));
weather_canvas.sheet_test.text_group = weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "right", "right", 1122416014), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), weather_canvas.sheet.gap.call(null, 5), new cljs.core.Keyword(null, "content", "content", 1965434859), function() {
  var iter__3494__auto__ = function iter__8122(s__8123) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8123__$1 = s__8123;
      while(true) {
        var temp__4092__auto__ = cljs.core.seq.call(null, s__8123__$1);
        if(temp__4092__auto__) {
          var s__8123__$2 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, s__8123__$2)) {
            var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8123__$2);
            var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
            var b__8125 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
            if(function() {
              var i__8124 = 0;
              while(true) {
                if(i__8124 < size__3493__auto__) {
                  var s = cljs.core._nth.call(null, c__3492__auto__, i__8124);
                  cljs.core.chunk_append.call(null, b__8125, weather_canvas.sheet.text.call(null, s, 10, "#ffffff"));
                  var G__8126 = i__8124 + 1;
                  i__8124 = G__8126;
                  continue
                }else {
                  return true
                }
                break
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8125), iter__8122.call(null, cljs.core.chunk_rest.call(null, s__8123__$2)))
            }else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8125), null)
            }
          }else {
            var s = cljs.core.first.call(null, s__8123__$2);
            return cljs.core.cons.call(null, weather_canvas.sheet.text.call(null, s, 10, "#ffffff"), iter__8122.call(null, cljs.core.rest.call(null, s__8123__$2)))
          }
        }else {
          return null
        }
        break
      }
    }, null)
  };
  return iter__3494__auto__.call(null, cljs.core.PersistentVector.fromArray(["tammi", "helmi", "maalis", "huhti", "touko", "kes\u00e4", "hein\u00e4", "elo", "syys", "loka", "marras", "joulu"], true))
}());
weather_canvas.sheet_test.text_group_2 = weather_canvas.sheet.group.call(null, new cljs.core.Keyword(null, "down", "down", 1016993812), new cljs.core.Keyword(null, "interleave", "interleave", 3715991245), weather_canvas.sheet.gap.call(null, 5), new cljs.core.Keyword(null, "content", "content", 1965434859), function() {
  var iter__3494__auto__ = function iter__8127(s__8128) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__8128__$1 = s__8128;
      while(true) {
        var temp__4092__auto__ = cljs.core.seq.call(null, s__8128__$1);
        if(temp__4092__auto__) {
          var s__8128__$2 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, s__8128__$2)) {
            var c__3492__auto__ = cljs.core.chunk_first.call(null, s__8128__$2);
            var size__3493__auto__ = cljs.core.count.call(null, c__3492__auto__);
            var b__8130 = cljs.core.chunk_buffer.call(null, size__3493__auto__);
            if(function() {
              var i__8129 = 0;
              while(true) {
                if(i__8129 < size__3493__auto__) {
                  var s = cljs.core._nth.call(null, c__3492__auto__, i__8129);
                  cljs.core.chunk_append.call(null, b__8130, weather_canvas.sheet.text.call(null, s, 10, "#ffffff"));
                  var G__8131 = i__8129 + 1;
                  i__8129 = G__8131;
                  continue
                }else {
                  return true
                }
                break
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8130), iter__8127.call(null, cljs.core.chunk_rest.call(null, s__8128__$2)))
            }else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8130), null)
            }
          }else {
            var s = cljs.core.first.call(null, s__8128__$2);
            return cljs.core.cons.call(null, weather_canvas.sheet.text.call(null, s, 10, "#ffffff"), iter__8127.call(null, cljs.core.rest.call(null, s__8128__$2)))
          }
        }else {
          return null
        }
        break
      }
    }, null)
  };
  return iter__3494__auto__.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.range.call(null, 1980, 2013)))
}());
weather_canvas.sheet_test.sheet_1 = weather_canvas.sheet.sheet.call(null, cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray(["front", cljs.core.PersistentVector.fromArray([5, 5], true), weather_canvas.sheet_test.container_group], true), cljs.core.PersistentVector.fromArray(["back", cljs.core.PersistentVector.fromArray([100, 10], true), weather_canvas.sheet.square.call(null, 40, "#008800")], true)], true));
weather_canvas.sheet_test.with_canvas = function with_canvas(f) {
  var canvas = weather_canvas.weather.init_canvas.call(null, new cljs.core.Keyword(null, "#test-weather-canvas", "#test-weather-canvas", 1477722715), 10);
  var context = canvas.getContext("2d");
  return f.call(null, context)
};
weather_canvas.sheet_test.with_buffer = function with_buffer(f) {
  var buffer = weather_canvas.canvas_buffer.canvas_buffer.call(null, new cljs.core.Keyword(null, "#test-weather-canvas", "#test-weather-canvas", 1477722715));
  return f.call(null, buffer)
};
weather_canvas.sheet_test.test_square = function test_square() {
  return weather_canvas.sheet_test.with_buffer.call(null, function(p1__8132_SHARP_) {
    return weather_canvas.sheet.draw_BANG_.call(null, weather_canvas.sheet.square.call(null, 8, "#ffffff"), p1__8132_SHARP_, cljs.core.PersistentVector.fromArray([5, 5], true))
  })
};
weather_canvas.sheet_test.test_group = function test_group() {
  return weather_canvas.sheet_test.with_buffer.call(null, function(p1__8133_SHARP_) {
    return weather_canvas.sheet.draw_BANG_.call(null, weather_canvas.sheet_test.group_2, p1__8133_SHARP_, cljs.core.PersistentVector.fromArray([0, 0], true))
  })
};
weather_canvas.sheet_test.test_group_1 = function test_group_1() {
  return weather_canvas.sheet_test.with_buffer.call(null, function(p1__8134_SHARP_) {
    return weather_canvas.sheet.draw_BANG_.call(null, weather_canvas.sheet_test.group_1, p1__8134_SHARP_, cljs.core.PersistentVector.fromArray([0, 0], true))
  })
};
weather_canvas.sheet_test.test_container_group = function test_container_group() {
  return weather_canvas.sheet_test.with_buffer.call(null, function(p1__8135_SHARP_) {
    return weather_canvas.sheet.draw_BANG_.call(null, weather_canvas.sheet_test.container_group, p1__8135_SHARP_, cljs.core.PersistentVector.fromArray([0, 0], true))
  })
};
weather_canvas.sheet_test.test_sheet = function test_sheet() {
  return weather_canvas.sheet_test.with_buffer.call(null, function(p1__8136_SHARP_) {
    return weather_canvas.sheet.draw_BANG_.call(null, weather_canvas.sheet_test.sheet_1, p1__8136_SHARP_, cljs.core.PersistentVector.fromArray([0, 0], true))
  })
};
weather_canvas.sheet_test.test_text = function test_text() {
  return weather_canvas.sheet_test.with_buffer.call(null, function(p1__8137_SHARP_) {
    return weather_canvas.sheet.draw_BANG_.call(null, weather_canvas.sheet_test.text_group_2, p1__8137_SHARP_, cljs.core.PersistentVector.fromArray([10, 10], true))
  })
};
